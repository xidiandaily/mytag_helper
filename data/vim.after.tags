!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	C:/Vim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/5abc603/
"	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap " _$/;"	m
#	./vim82/indent/dictconf.vim	/^inoremap <buffer> # X#$/;"	m
#	./vim82/indent/dictdconf.vim	/^inoremap <buffer> # X#$/;"	m
#	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> # <Plug>MarkSearchPrev$/;"	m
$TUTOR	./vim82/tutor/tutor.vim	/^  let $TUTOR = $VIMRUNTIME . s:tutorfile$/;"	v
$TUTOR	./vim82/tutor/tutor.vim	/^  let $TUTOR = s:tutorxx . ".utf-8"$/;"	v
$TUTOR	./vim82/tutor/tutor.vim	/^  let $TUTOR = s:tutorxx$/;"	v
%	./vim82/macros/less.vim	/^noremap <script> % %<SID>L$/;"	m
%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nmap <silent> %  <Plug>(MatchitNormalForward)$/;"	m
%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^omap <silent> %  <Plug>(MatchitOperationForward)$/;"	m
%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xmap <silent> %  <Plug>(MatchitVisualForward)$/;"	m
%	./vimfiles/after/plugin/snipMate.vim	/^snor % b<bs>%$/;"	m
&	./vim82/macros/life/life.vim	/^map & :%s\/^\\(-[ A-Z]*-\\)\\(-[ A-Z]*-\\)\\(-[.]*-\\)$\/\\2\\3\\3\/$/;"	m
'	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap ' -$/;"	m
'	./vimfiles/after/plugin/snipMate.vim	/^snor ' b<bs>'$/;"	m
(	./vim82/macros/life/life.vim	/^map ( ,s,i,X0i?^#A $/;"	m
)0	./vim82/macros/life/life.vim	/^map )0 o-                    --....................--....................-$/;"	m
)1	./vim82/macros/life/life.vim	/^map )1 o-    JOHN CONWAY     --....................--....................-$/;"	m
)2	./vim82/macros/life/life.vim	/^map )2 o-       LIVES        --....................--....................-$/;"	m
*	./vim82/macros/urm/urm.vim	/^map * 1G\/INIT$/;"	m
*	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> * <Plug>MarkSearchNext$/;"	m
*	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> *             <C-o>:silent! %foldopen!<CR>$/;"	m
*	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> * :silent! %foldopen!<CR>$/;"	m
+	./vim82/macros/life/life.vim	/^map + <1C<2$/;"	m
+	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap + }$/;"	m
+	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> +             <C-o>:silent! foldopen<CR>$/;"	m
+	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> + :silent! foldopen<CR>$/;"	m
,	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap , w$/;"	m
,!	./vim82/macros/life/life.vim	/^map ,! "byy$/;"	m
,#	./vim82/macros/life/life.vim	/^map ,# "bP$/;"	m
,$	./vim82/macros/life/life.vim	/^map ,$ dd$/;"	m
,%	./vim82/macros/life/life.vim	/^map ,% "cp$/;"	m
,&	./vim82/macros/life/life.vim	/^map ,& 0"gd\$$/;"	m
,*	./vim82/macros/life/life.vim	/^map ,* @g$/;"	m
,-	./vim82/macros/life/life.vim	/^map ,- :s\/.\/-\/g$/;"	m
,1	./vim82/macros/life/life.vim	/^map ,1 y G$p$/;"	m
,2	./vim82/macros/life/life.vim	/^map ,2 2y G$p$/;"	m
,3	./vim82/macros/life/life.vim	/^map ,3 3y G$p$/;"	m
,@	./vim82/macros/life/life.vim	/^map ,@ "cyy$/;"	m
,IIN	./vim82/macros/life/life.vim	/^map ,IIN G?^top$/;"	m
,Iaa	./vim82/macros/life/life.vim	/^map ,Iaa o=AB =BC =CD =DE =EF =FG =GH =HI =IJ =JK =KL =LM =MN =NO =OP =PQ =QR$/;"	m
,Iab	./vim82/macros/life/life.vim	/^map ,Iab o=RS =ST =TU =UV =VW =WX =XY =YZ =Z $/;"	m
,Id0	./vim82/macros/life/life.vim	/^map ,Id0 o#  .`a22lr $/;"	m
,Id1	./vim82/macros/life/life.vim	/^map ,Id1 o# X .`a22lr $/;"	m
,Id2	./vim82/macros/life/life.vim	/^map ,Id2 o# XX .`a22lr $/;"	m
,Id3	./vim82/macros/life/life.vim	/^map ,Id3 o# XXX .`a22lrA$/;"	m
,Id4	./vim82/macros/life/life.vim	/^map ,Id4 o# XXXX .`a22lr $/;"	m
,Id5	./vim82/macros/life/life.vim	/^map ,Id5 o# XXXXX .`a22lr $/;"	m
,Id6	./vim82/macros/life/life.vim	/^map ,Id6 o# XXXXXX .`a22lr $/;"	m
,Id7	./vim82/macros/life/life.vim	/^map ,Id7 o# XXXXXXX .`a22lr $/;"	m
,Id8	./vim82/macros/life/life.vim	/^map ,Id8 o# XXXXXXXX .`a22lr $/;"	m
,Il0	./vim82/macros/life/life.vim	/^map ,Il0 o#XX .`a22lr $/;"	m
,Il1	./vim82/macros/life/life.vim	/^map ,Il1 o#XXX .`a22lr $/;"	m
,Il2	./vim82/macros/life/life.vim	/^map ,Il2 o#XXXX .,a$/;"	m
,Il3	./vim82/macros/life/life.vim	/^map ,Il3 o#XXXXX .,a$/;"	m
,Il4	./vim82/macros/life/life.vim	/^map ,Il4 o#XXXXXX .`a22lr $/;"	m
,Il5	./vim82/macros/life/life.vim	/^map ,Il5 o#XXXXXXX .`a22lr $/;"	m
,Il6	./vim82/macros/life/life.vim	/^map ,Il6 o#XXXXXXXX .`a22lr $/;"	m
,Il7	./vim82/macros/life/life.vim	/^map ,Il7 o#XXXXXXXXX .`a22lr $/;"	m
,Il8	./vim82/macros/life/life.vim	/^map ,Il8 O#XXXXXXXXXX .`a22lr $/;"	m
,R	./vim82/macros/life/life.vim	/^map ,R 03stop$/;"	m
,X	./vim82/macros/life/life.vim	/^map ,X :.g\/[A-Z]\/s\/\/X\/g$/;"	m
,Y	./vim82/macros/life/life.vim	/^map ,Y "qy$@q$/;"	m
,^	./vim82/macros/life/life.vim	/^map ,^ AiC$/;"	m
,a	./vim82/macros/life/life.vim	/^map ,a `a,jGi?=,ma$/;"	m
,c	./vim82/macros/life/life.vim	/^map ,c c$$/;"	m
,d	./vim82/macros/life/life.vim	/^map ,d "qd$@q$/;"	m
,d	./vim82/pack/dist/opt/dvorak/plugin/dvorak.vim	/^map ,d :runtime dvorak\/enable.vim<CR>$/;"	m
,gq	./vim82/pack/dist/opt/justify/plugin/justify.vim	/^nmap ,gq :%s\/\\s\\+\/ \/g<CR>gq1G$/;"	m
,gq	./vim82/pack/dist/opt/justify/plugin/justify.vim	/^vmap ,gq :s\/\\s\\+\/ \/g<CR>gvgq$/;"	m
,i	./vim82/macros/life/life.vim	/^map ,i `ay GP$/;"	m
,j	./vim82/macros/life/life.vim	/^map ,j y $/;"	m
,m	./vim82/macros/life/life.vim	/^map ,m p$/;"	m
,n	./vim82/macros/life/life.vim	/^map ,n x$/;"	m
,o	./vim82/macros/life/life.vim	/^map ,o oPut 'X's in the left box, then hit 'C' or 'R'$/;"	m
,q	./vim82/pack/dist/opt/dvorak/plugin/dvorak.vim	/^map ,q :runtime dvorak\/disable.vim<CR>$/;"	m
,r	./vim82/macros/life/life.vim	/^map ,r makh,2`akF-l,1`ah,2`aF-l,1`ajh,2`ajF-l,1($/;"	m
,s	./vim82/macros/life/life.vim	/^map ,s :.g\/ \/s\/\/\/g$/;"	m
-	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap - [$/;"	m
-	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> -             <C-o>:silent! foldclose<CR>$/;"	m
-	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> - :silent! foldclose<CR>$/;"	m
.	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap . v$/;"	m
.	./vimfiles/autoload/omni/cpp/complete.vim	/^    inoremap <expr> . omni#cpp#maycomplete#Dot()$/;"	m
.	./vimfiles/bundle/jedi-vim/ftplugin/python/jedi.vim	/^        inoremap <silent> <buffer> . .<C-R>=jedi#complete_string(1)<CR>$/;"	m
.	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^        inoremap <silent> <buffer> . .<C-R>=pymode#rope#complete_on_dot()<CR>$/;"	m
.gsub!(/\\s*?[|]{0,2}=\\s*?/,	./vim82/autoload/rubycomplete.vim	/^                ln.gsub!(\/\\s*?[|]{0,2}=\\s*?\/, '||=')$/;"	m
/	./vim82/macros/less.vim	/^noremap <script> \/ H$:call <SID>Forward()<CR>\/$/;"	m
/	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap \/ z$/;"	m
:	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap : S$/;"	m
:	./vimfiles/autoload/omni/cpp/complete.vim	/^    inoremap <expr> : omni#cpp#maycomplete#Scope()$/;"	m
;	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap ; s$/;"	m
<	./vim82/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> < :set opfunc=<SID>DecreaseFunc<CR>g@$/;"	m
<	./vim82/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> < :call CobolIndentBlock(-v:count1)<CR>$/;"	m
<	./vim82/macros/less.vim	/^map < g$/;"	m
<	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap < W$/;"	m
<	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <          :set lz<CR>:silent! call <SID>DrawSpace('<',2)<CR>:set nolz<CR>$/;"	m
<1	./vim82/macros/life/life.vim	/^map <1 G?^top$/;"	m
<2	./vim82/macros/life/life.vim	/^map <2 G?^top$/;"	m
<2-LeftMouse>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <2-LeftMouse>$/;"	m
<2-LeftMouse>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <2-LeftMouse>$/;"	m
<2-LeftMouse>\t<2-RightMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <2-LeftMouse>	<2-RightMouse>$/;"	m
<2-RightMouse>\t<2-LeftMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <2-RightMouse>	<2-LeftMouse>$/;"	m
<2-leftmouse>	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> <2-leftmouse> :call <SID>BESelectBuffer()<cr>$/;"	m
<2-leftmouse>\t<Plug>NetrwReturn	./vim82/autoload/netrw.vim	/^     nmap <unique> <silent> <2-leftmouse>	<Plug>NetrwReturn$/;"	m
<2-leftmouse>\t\t<Plug>Netrw2Leftmouse	./vim82/autoload/netrw.vim	/^    nmap <buffer>			<2-leftmouse>		<Plug>Netrw2Leftmouse$/;"	m
<2-leftmouse>\t\t<Plug>Netrw2Leftmouse	./vim82/autoload/netrw.vim	/^    nmap <buffer> <2-leftmouse>		<Plug>Netrw2Leftmouse$/;"	m
<3-LeftMouse>\t<3-RightMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <3-LeftMouse>	<3-RightMouse>$/;"	m
<3-RightMouse>\t<3-LeftMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <3-RightMouse>	<3-LeftMouse>$/;"	m
<4-LeftMouse>\t<4-RightMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <4-LeftMouse>	<4-RightMouse>$/;"	m
<4-RightMouse>\t<4-LeftMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <4-RightMouse>	<4-LeftMouse>$/;"	m
<<	./vim82/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> << :call CobolIndentBlock(-1)<CR>$/;"	m
<<	./vim82/macros/life/life.vim	/^map << :r!date$/;"	m
<BS>	./vim82/mswin.vim	/^vnoremap <BS> d$/;"	m
<BS>	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <BS> <c-g>c$/;"	m
<BS>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <BS> <C-o>:call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
<BS>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <BS> :call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
<C-@><C-@>c	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>c :vert scs find c <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>d	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>d :vert scs find d <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>e	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>e :vert scs find e <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>f	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>f :vert scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@><C-@>g	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>g :vert scs find g <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>i	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>i :vert scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@><C-@>s	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>s :vert scs find s <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@><C-@>t	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@><C-@>t :vert scs find t <C-R>=expand("<cword>")<CR><CR>$/;"	m
<C-@>c	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>c :scs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>d	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>d :scs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>e	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>e :scs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>f	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>f :scs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-@>g	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>g :scs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>i	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>i :scs find i ^<C-R>=expand("<cfile>")<CR>$<CR>	$/;"	m
<C-@>s	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>s :scs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-@>t	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-@>t :scs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-A>	./VIMPROJ/vimrc/_vimrc	/^cnoremap <C-A> <Home>$/;"	m
<C-A>	./vim82/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-A> :<C-U><C-R>=v:count1<CR>Cycle<CR>$/;"	m
<C-A>	./vim82/mswin.vim	/^cnoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-A>	./vim82/mswin.vim	/^inoremap <C-A> <C-O>gg<C-O>gH<C-O>G$/;"	m
<C-A>	./vim82/mswin.vim	/^noremap <C-A> gggH<C-O>G$/;"	m
<C-A>	./vim82/mswin.vim	/^onoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-A>	./vim82/mswin.vim	/^snoremap <C-A> <C-C>gggH<C-O>G$/;"	m
<C-A>	./vim82/mswin.vim	/^xnoremap <C-A> <C-C>ggVG$/;"	m
<C-B>	./VIMPROJ/vimrc/_vimrc	/^cnoremap <C-B> <Left>$/;"	m
<C-B>	./vim82/macros/less.vim	/^map <C-B> b$/;"	m
<C-C>	./vim82/mswin.vim	/^    vnoremap <C-C> "+y$/;"	m
<C-D>	./vim82/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-D> <C-R>=<SID>DecreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-D>	./vim82/macros/less.vim	/^map <C-D> d$/;"	m
<C-E>	./vim82/macros/less.vim	/^map <C-E> <CR>$/;"	m
<C-F4>	./vim82/mswin.vim	/^cnoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F4>	./vim82/mswin.vim	/^inoremap <C-F4> <C-O><C-W>c$/;"	m
<C-F4>	./vim82/mswin.vim	/^noremap <C-F4> <C-W>c$/;"	m
<C-F4>	./vim82/mswin.vim	/^onoremap <C-F4> <C-C><C-W>c$/;"	m
<C-F8>	./VIMPROJ/vimrc/_vimrc	/^map <C-F8> :set encoding=cp936 \\| language message cp936 \\| set fenc=cp936<CR>$/;"	m
<C-F9>	./VIMPROJ/vimrc/_vimrc	/^map <C-F9> :set encoding=utf-8 \\| language message zh_CN.utf-8 \\| set fenc=utf-8<CR>$/;"	m
<C-F>	./VIMPROJ/vimrc/_vimrc	/^cnoremap <C-F> <Right>$/;"	m
<C-F>	./vim82/evim.vim	/^cnoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	./vim82/evim.vim	/^inoremap <silent> <C-F> <C-O>:promptfind<CR>$/;"	m
<C-F>	./vim82/evim.vim	/^noremap <silent> <C-F> :promptfind<CR>$/;"	m
<C-F>	./vim82/evim.vim	/^onoremap <silent> <C-F> <C-C>:promptfind<CR>$/;"	m
<C-F>	./vim82/evim.vim	/^vnoremap <silent> <C-F> y:promptfind <C-R>"<CR>$/;"	m
<C-F>	./vim82/macros/less.vim	/^map <C-F> <Space>$/;"	m
<C-F>	./vim82/mswin.vim	/^  cnoremap <expr> <C-F> has("gui_running") ? "\\<C-\\>\\<C-C>:promptfind\\<CR>" : "\\<C-\\>\\<C-/;"	m
<C-F>	./vim82/mswin.vim	/^  inoremap <expr> <C-F> has("gui_running") ? "\\<C-\\>\\<C-O>:promptfind\\<CR>" : "\\<C-\\>\\<C-/;"	m
<C-F>	./vim82/mswin.vim	/^  noremap  <expr> <C-F> has("gui_running") ? ":promptfind\\<CR>" : "\/"$/;"	m
<C-H>	./vim82/mswin.vim	/^  cnoremap <expr> <C-H> has("gui_running") ? "\\<C-\\>\\<C-C>:promptrepl\\<CR>" : "\\<C-H>"$/;"	m
<C-H>	./vim82/mswin.vim	/^  inoremap <expr> <C-H> has("gui_running") ? "\\<C-\\>\\<C-O>:promptrepl\\<CR>" : "\\<C-H>"$/;"	m
<C-H>	./vim82/mswin.vim	/^  nnoremap <expr> <C-H> has("gui_running") ? ":promptrepl\\<CR>" : "\\<C-H>"$/;"	m
<C-Insert>	./vim82/mswin.vim	/^    vnoremap <C-Insert> "+y$/;"	m
<C-J>	./vim82/macros/less.vim	/^map <C-J> <CR>$/;"	m
<C-K>	./vim82/macros/less.vim	/^map <C-K> k$/;"	m
<C-Left>	./VIMPROJ/vimrc/_vimrc	/^nnoremap <C-Left> :tabprevious<CR>$/;"	m
<C-N>	./vim82/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-N> <C-R>=ada#Completion("\\<lt>C-N>")<cr>$/;"	m
<C-N>	./vim82/macros/less.vim	/^map <C-N> <CR>$/;"	m
<C-P>	./vim82/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-P> <C-R>=ada#Completion("\\<lt>C-P>")<cr>$/;"	m
<C-P>	./vim82/macros/less.vim	/^map <C-P> k$/;"	m
<C-Q>\t\t<C-V>	./vim82/mswin.vim	/^noremap <C-Q>		<C-V>$/;"	m
<C-R>	./vim82/macros/less.vim	/^noremap <script> <C-R> <C-L><SID>L$/;"	m
<C-Right>	./VIMPROJ/vimrc/_vimrc	/^nnoremap <C-Right> :tabnext<CR>$/;"	m
<C-S>\t\t:update<CR>	./vim82/mswin.vim	/^noremap <C-S>		:update<CR>$/;"	m
<C-S>\t\t<C-C>:update<CR>	./vim82/mswin.vim	/^vnoremap <C-S>		<C-C>:update<CR>$/;"	m
<C-S>\t\t<Esc>:update<CR>gi	./vim82/mswin.vim	/^inoremap <C-S>		<Esc>:update<CR>gi$/;"	m
<C-T>	./vim82/ftplugin/cobol.vim	/^    inoremap <silent> <buffer> <C-T> <C-R>=<SID>IncreaseIndent()<CR><C-R>=<SID>RestoreShiftwidth/;"	m
<C-T>	./vim82/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-T> :if len(b:pdf_tagstack) > 0 <Bar> call setpos('.',remove(b:pdf_t/;"	m
<C-Tab>	./vim82/mswin.vim	/^cnoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-Tab>	./vim82/mswin.vim	/^inoremap <C-Tab> <C-O><C-W>w$/;"	m
<C-Tab>	./vim82/mswin.vim	/^noremap <C-Tab> <C-W>w$/;"	m
<C-Tab>	./vim82/mswin.vim	/^onoremap <C-Tab> <C-C><C-W>w$/;"	m
<C-U>	./vim82/defaults.vim	/^inoremap <C-U> <C-G>u<C-U>$/;"	m
<C-U>	./vim82/macros/less.vim	/^noremap <script> <C-U> <C-U><SID>L$/;"	m
<C-V>	./vim82/macros/less.vim	/^map <C-V> <Space>$/;"	m
<C-V>\t\t"+gP	./vim82/mswin.vim	/^    map <C-V>		"+gP$/;"	m
<C-V>\t\t<C-R>+	./vim82/mswin.vim	/^    cmap <C-V>		<C-R>+$/;"	m
<C-W><C-D>	./vim82/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-W>d	./vim82/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldo/;"	m
<C-X>	./vim82/ftplugin/gitrebase.vim	/^nnoremap <buffer> <silent> <C-X> :<C-U><C-R>=v:count1<CR>Cycle!<CR>$/;"	m
<C-X>	./vim82/mswin.vim	/^    vnoremap <C-X> "+x$/;"	m
<C-X><C-O>	./vimfiles/autoload/omni/cpp/complete.vim	/^    inoremap <expr> <C-X><C-O> omni#cpp#maycomplete#Complete()$/;"	m
<C-X><C-]>	./vim82/ftplugin/ada.vim	/^      inoremap <unique> <buffer> <C-X><C-]> <C-R>=<SID>ada#Completion("\\<lt>C-X>\\<lt>C-]>")<cr/;"	m
<C-Y>	./vim82/macros/less.vim	/^map <C-Y> k$/;"	m
<C-Y>	./vim82/mswin.vim	/^inoremap <C-Y> <C-O><C-R>$/;"	m
<C-Y>	./vim82/mswin.vim	/^noremap <C-Y> <C-R>$/;"	m
<C-Z>	./vim82/mswin.vim	/^inoremap <C-Z> <C-O>u$/;"	m
<C-Z>	./vim82/mswin.vim	/^noremap <C-Z> u$/;"	m
<C-\\>c	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>c :cs find c <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>d	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>d :cs find d <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>e	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>e :cs find e <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>f	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>f :cs find f <C-R>=expand("<cfile>")<CR><CR>	$/;"	m
<C-\\>g	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>g :cs find g <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>i	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>$/;"	m
<C-\\>s	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>s :cs find s <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-\\>t	./vimfiles/plugin/cscope_maps.vim	/^    nmap <C-\\>t :cs find t <C-R>=expand("<cword>")<CR><CR>	$/;"	m
<C-]>	./vim82/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#Jump_Tag ('', 'tjump')<cr>$/;"	m
<C-]>	./vim82/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> <C-]>    :call ada#List_Tag ()<cr>$/;"	m
<C-]>	./vim82/ftplugin/gprof.vim	/^map <buffer> <silent> <C-]> :call <SID>GprofJumpToFunctionIndex()<CR>$/;"	m
<C-]>	./vim82/ftplugin/pdf.vim	/^nnoremap <silent><buffer> <C-]> :call <SID>Tag()<CR>$/;"	m
<C-c>	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^        inoremap <C-c> <ESC>$/;"	m
<C-p>	./VIMPROJ/vimrc/_vimrc	/^nnoremap <buffer> <C-p> :call pdv#DocumentWithSnip()<CR>$/;"	m
<C-t>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <C-t>$/;"	m
<C-t>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <C-t>$/;"	m
<CR>	./vim82/macros/less.vim	/^  cnoremap <silent> <script> <CR> <CR>:cunmap <lt>CR><CR>zt<SID>L$/;"	m
<CR>	./vim82/macros/less.vim	/^noremap <script> <CR> <C-E><SID>L$/;"	m
<CR>	./vim82/optwin.vim	/^inoremap <silent> <buffer> <CR> <Esc>:call <SID>CR()<CR>$/;"	m
<CR>	./vim82/optwin.vim	/^noremap <silent> <buffer> <CR> <C-\\><C-N>:call <SID>CR()<CR>$/;"	m
<CR>	./vimfiles/autoload/fuf.vim	/^    cmap <silent> <expr> <CR> <SID>onCommandPre()$/;"	m
<CR>	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^        noremap <buffer> <CR> :call jedi#goto_window_on_enter()<CR>$/;"	m
<CR>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <CR>$/;"	m
<CR>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <CR>$/;"	m
<D-R>	./vim82/ftplugin/rust.vim	/^nnoremap <buffer> <D-R> :RustRun! <C-r>=join(b:rust_last_rustc_args)<CR><C-\\>erust#AppendCmdLin/;"	m
<D-S-s>	./vim82/macmap.vim	/^cmap <special> <D-S-s> <C-C><D-s>$/;"	m
<D-S-s>	./vim82/macmap.vim	/^imap <special> <D-S-s> <C-O><D-s>$/;"	m
<D-S-s>	./vim82/macmap.vim	/^nnoremap <special> <D-S-s> :browse confirm saveas<CR>$/;"	m
<D-S-s>	./vim82/macmap.vim	/^omap <special> <D-S-s> <Esc><D-s>$/;"	m
<D-S-s>	./vim82/macmap.vim	/^vmap <special> <D-S-s> <Esc><D-s>gv$/;"	m
<D-a>	./vim82/macmap.vim	/^cmap <special> <D-a> <C-C><D-a>$/;"	m
<D-a>	./vim82/macmap.vim	/^imap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	./vim82/macmap.vim	/^nnoremap <silent> <special> <D-a> :if &slm != ""<Bar>exe ":norm gggH<C-O>G"<Bar> else<Bar>exe ":/;"	m
<D-a>	./vim82/macmap.vim	/^omap <special> <D-a> <Esc><D-a>$/;"	m
<D-a>	./vim82/macmap.vim	/^vmap <special> <D-a> <Esc><D-a>$/;"	m
<D-c>	./vim82/macmap.vim	/^cnoremap <special> <D-c> <C-Y>$/;"	m
<D-c>	./vim82/macmap.vim	/^vnoremap <special> <D-c> "+y$/;"	m
<D-f>	./vim82/macmap.vim	/^cmap <special> <D-f> <C-C><D-f>$/;"	m
<D-f>	./vim82/macmap.vim	/^imap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	./vim82/macmap.vim	/^nnoremap <special> <D-f> \/$/;"	m
<D-f>	./vim82/macmap.vim	/^omap <special> <D-f> <Esc><D-f>$/;"	m
<D-f>	./vim82/macmap.vim	/^vmap <special> <D-f> <Esc><D-f>$/;"	m
<D-g>	./vim82/macmap.vim	/^cmap <special> <D-g> <C-C><D-g>$/;"	m
<D-g>	./vim82/macmap.vim	/^imap <special> <D-g> <C-O><D-g>$/;"	m
<D-g>	./vim82/macmap.vim	/^nnoremap <special> <D-g> n$/;"	m
<D-g>	./vim82/macmap.vim	/^omap <special> <D-g> <Esc><D-g>$/;"	m
<D-g>	./vim82/macmap.vim	/^vmap <special> <D-g> <Esc><D-g>$/;"	m
<D-n>	./vim82/macmap.vim	/^cmap <special> <D-n> <C-C><D-n>$/;"	m
<D-n>	./vim82/macmap.vim	/^imap <special> <D-n> <C-O><D-n>$/;"	m
<D-n>	./vim82/macmap.vim	/^nnoremap <special> <D-n> :confirm enew<CR>$/;"	m
<D-n>	./vim82/macmap.vim	/^omap <special> <D-n> <Esc><D-n>$/;"	m
<D-n>	./vim82/macmap.vim	/^vmap <special> <D-n> <Esc><D-n>gv$/;"	m
<D-o>	./vim82/macmap.vim	/^cmap <special> <D-o> <C-C><D-o>$/;"	m
<D-o>	./vim82/macmap.vim	/^imap <special> <D-o> <C-O><D-o>$/;"	m
<D-o>	./vim82/macmap.vim	/^nnoremap <special> <D-o> :browse confirm e<CR>$/;"	m
<D-o>	./vim82/macmap.vim	/^omap <special> <D-o> <Esc><D-o>$/;"	m
<D-o>	./vim82/macmap.vim	/^vmap <special> <D-o> <Esc><D-o>gv$/;"	m
<D-r>	./vim82/ftplugin/rust.vim	/^nnoremap <silent> <buffer> <D-r> :RustRun<CR>$/;"	m
<D-s>	./vim82/macmap.vim	/^cmap <special> <D-s> <C-C><D-s>$/;"	m
<D-s>	./vim82/macmap.vim	/^imap <special> <D-s> <C-O><D-s>$/;"	m
<D-s>	./vim82/macmap.vim	/^nnoremap <silent> <special> <D-s> :if expand("%") == ""<Bar>browse confirm w<Bar> else<Bar>confi/;"	m
<D-s>	./vim82/macmap.vim	/^omap <special> <D-s> <Esc><D-s>$/;"	m
<D-s>	./vim82/macmap.vim	/^vmap <special> <D-s> <Esc><D-s>gv$/;"	m
<D-v>	./vim82/macmap.vim	/^cnoremap <special> <D-v> <C-R>+$/;"	m
<D-v>	./vim82/macmap.vim	/^nnoremap <special> <D-v> "+gP$/;"	m
<D-w>	./vim82/macmap.vim	/^cmap <special> <D-w> <C-C><D-w>$/;"	m
<D-w>	./vim82/macmap.vim	/^imap <special> <D-w> <C-O><D-w>$/;"	m
<D-w>	./vim82/macmap.vim	/^nnoremap <silent> <special> <D-w> :if winheight(2) < 0 <Bar> confirm enew <Bar> else <Bar> confi/;"	m
<D-w>	./vim82/macmap.vim	/^omap <special> <D-w> <Esc><D-w>$/;"	m
<D-w>	./vim82/macmap.vim	/^vmap <special> <D-w> <Esc><D-w>gv$/;"	m
<D-x>	./vim82/macmap.vim	/^vnoremap <special> <D-x> "+x$/;"	m
<D-z>	./vim82/macmap.vim	/^cmap <special> <D-z> <C-C><D-z>$/;"	m
<D-z>	./vim82/macmap.vim	/^imap <special> <D-z> <C-O><D-z>$/;"	m
<D-z>	./vim82/macmap.vim	/^nnoremap <special> <D-z> u$/;"	m
<D-z>	./vim82/macmap.vim	/^omap <special> <D-z> <Esc><D-z>$/;"	m
<D-z>	./vim82/macmap.vim	/^vmap <special> <D-z> <Esc><D-z>gv$/;"	m
<DEL>	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <DEL> <c-g>c$/;"	m
<Down>	./vim82/evim.vim	/^inoremap <silent> <Down> <C-R>=pumvisible() ? "\\<lt>Down>" : "\\<lt>C-O>gj"<CR>$/;"	m
<Down>	./vim82/ftplugin/flexwiki.vim	/^      imap <buffer> <Down>   <C-o>gj$/;"	m
<Down>	./vim82/ftplugin/flexwiki.vim	/^  nmap <buffer> <Down> gj$/;"	m
<Down>	./vim82/ftplugin/flexwiki.vim	/^  vmap <buffer> <Down> gj$/;"	m
<Down>	./vim82/macros/less.vim	/^map <Down> <CR>$/;"	m
<End>	./vim82/macros/less.vim	/^map <End> G$/;"	m
<Esc><	./vim82/macros/less.vim	/^map <Esc>< g$/;"	m
<Esc><Space>	./vim82/macros/less.vim	/^map <Esc><Space> <Space>$/;"	m
<Esc>>	./vim82/macros/less.vim	/^map <Esc>> G$/;"	m
<Esc>v	./vim82/macros/less.vim	/^map <Esc>v b$/;"	m
<F11>	./VIMPROJ/vimrc/option.vim	/^map <F11> :call Init_F11()<CR>$/;"	m
<F12>	./VIMPROJ/vimrc/_vimrc	/^map <F12> ::echo call(function(g:chiylown_func_dict.getprojtypefunc("CSTAG")),[])<CR>$/;"	m
<F12>	./vimfiles/_vimrc	/^map <F12> :call Do_CsTag()<CR>$/;"	m
<F1>	./vim82/autoload/netrwSettings.vim	/^  nmap <buffer> <silent> <F1>                       :call NetrwSettingHelp()<cr>$/;"	m
<F1>	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> <F1>          :call <SID>BEToggleHelp()<cr>$/;"	m
<F1>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <F1>  <C-o>:call <SID>Tlist_Window_Toggle_Help_Text()<CR>$/;"	m
<F1>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <F1> :call <SID>Tlist_Window_Toggle_Help_Text()<CR>$/;"	m
<F1>\t\t\t:he	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <F1>			:he netrw-quickhelp<cr>$/;"	m
<F5>	./VIMPROJ/vimrc/_vimrc	/^map <F5> :call SetProjType() <CR>$/;"	m
<F7>	./VIMPROJ/vimrc/_vimrc	/^map <F7> :echo call(function(g:chiylown_func_dict.getprojtypefunc("UPFILE")),[])<CR>$/;"	m
<F8>	./vim82/keymap/oldturkic-orkhon_utf-8.vim	/^lnoremap <F8> <C-^>$/;"	m
<F8>	./vim82/keymap/oldturkic-orkhon_utf-8.vim	/^noremap  <F8> :let &iminsert = ! &iminsert<CR>$/;"	m
<F8>	./vim82/keymap/oldturkic-orkhon_utf-8.vim	/^noremap! <F8> <C-^>$/;"	m
<F8>	./vim82/keymap/oldturkic-yenisei_utf-8.vim	/^lnoremap <F8> <C-^>$/;"	m
<F8>	./vim82/keymap/oldturkic-yenisei_utf-8.vim	/^noremap  <F8> :let &iminsert = ! &iminsert<CR>$/;"	m
<F8>	./vim82/keymap/oldturkic-yenisei_utf-8.vim	/^noremap! <F8> <C-^>$/;"	m
<Home>	./vim82/macros/less.vim	/^map <Home> g$/;"	m
<Leader>#	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> <Leader># <Plug>MarkSearchCurrentPrev$/;"	m
<Leader>*	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> <Leader>* <Plug>MarkSearchCurrentNext$/;"	m
<Leader>/	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> <Leader>\/ <Plug>MarkSearchAnyNext$/;"	m
<Leader><\t:set	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <Leader><	:set lz<CR>:silent! call <SID>DrawFatLArrow()<CR>:set nolz<CR>$/;"	m
<Leader>>\t:set	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <Leader>>	:set lz<CR>:silent! call <SID>DrawFatRArrow()<CR>:set nolz<CR>$/;"	m
<Leader>?	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> <Leader>? <Plug>MarkSearchAnyPrev$/;"	m
<Leader>K	./vim82/ftplugin/man.vim	/^  nmap <Leader>K :call <SID>PreGetPage(0)<CR>$/;"	m
<Leader>^\t:set	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <Leader>^	:set lz<CR>:silent! call <SID>DrawFatUArrow()<CR>:set nolz<CR>$/;"	m
<Leader>a	./vimfiles/autoload/DrawIt.vim	/^  vmap     <buffer> <silent> <Leader>a  :<c-u>call <SID>CallBox('Arrow')<CR>$/;"	m
<Leader>b	./vimfiles/autoload/DrawIt.vim	/^  vmap     <buffer> <silent> <Leader>b  :<c-u>call <SID>CallBox('DrawBox')<cr>$/;"	m
<Leader>be	./vimfiles/plugin/bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>be :BufExplorer<CR>$/;"	m
<Leader>bs	./vimfiles/plugin/bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>bs :BufExplorerHorizontalSplit<CR>$/;"	m
<Leader>bv	./vimfiles/plugin/bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>bv :BufExplorerVerticalSplit<CR>$/;"	m
<Leader>c	./vimfiles/autoload/DrawIt.vim	/^  nmap     <buffer>          <Leader>c  :call <SID>Canvas()<cr>$/;"	m
<Leader>di	./vimfiles/plugin/DrawItPlugin.vim	/^  map <unique> <Leader>di <Plug>StartDrawIt$/;"	m
<Leader>ds	./vimfiles/plugin/DrawItPlugin.vim	/^  map <unique> <Leader>ds <Plug>StopDrawIt$/;"	m
<Leader>e	./vimfiles/autoload/DrawIt.vim	/^  vmap <buffer> <silent> <Leader>e   :<c-u>call <SID>CallBox('DrawEllipse')<CR>$/;"	m
<Leader>f	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <Leader>f  :call <SID>Flood()<cr>$/;"	m
<Leader>l	./vimfiles/autoload/DrawIt.vim	/^  vmap     <buffer> <silent> <Leader>l  :<c-u>call <SID>CallBox('DrawPlainLine')<CR>$/;"	m
<Leader>m	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> <Leader>m <Plug>MarkSet$/;"	m
<Leader>m	./vimfiles/plugin/mark.vim	/^	vmap <unique> <silent> <Leader>m <Plug>MarkSet$/;"	m
<Leader>n	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> <Leader>n <Plug>MarkClear$/;"	m
<Leader>o	./vim82/ftplugin/changelog.vim	/^    nnoremap <buffer> <silent> <Leader>o :<C-u>call <SID>new_changelog_entry('')<CR>$/;"	m
<Leader>o	./vim82/ftplugin/changelog.vim	/^    xnoremap <buffer> <silent> <Leader>o :<C-u>call <SID>new_changelog_entry('')<CR>$/;"	m
<Leader>o	./vim82/ftplugin/changelog.vim	/^  nnoremap <silent> <Leader>o :call <SID>open_changelog()<CR>$/;"	m
<Leader>r	./vimfiles/plugin/mark.vim	/^	nmap <unique> <silent> <Leader>r <Plug>MarkRegex$/;"	m
<Leader>r	./vimfiles/plugin/mark.vim	/^	vmap <unique> <silent> <Leader>r <Plug>MarkRegex$/;"	m
<Leader>rwp	./vimfiles/plugin/cecutil.vim	/^ map <unique> <Leader>rwp <Plug>RestoreWinPosn$/;"	m
<Leader>s	./vimfiles/autoload/DrawIt.vim	/^  vmap     <buffer> <silent> <Leader>s  :<c-u>call <SID>Spacer(line("'<"), line("'>"),0)<cr>$/;"	m
<Leader>swp	./vimfiles/plugin/cecutil.vim	/^ map <unique> <Leader>swp <Plug>SaveWinPosn$/;"	m
<Leader>v\t:set	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <Leader>v	:set lz<CR>:silent! call <SID>DrawFatDArrow()<CR>:set nolz<CR>$/;"	m
<LeftDrag>\t<RightDrag>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <LeftDrag>	<RightDrag>$/;"	m
<LeftDrag>\t<RightDrag>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap! <LeftDrag>	<RightDrag>$/;"	m
<LeftMouse>\t<RightMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <LeftMouse>	<RightMouse>$/;"	m
<LeftMouse>\t<RightMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap! <LeftMouse>	<RightMouse>$/;"	m
<LeftRelease>\t<RightRelease>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <LeftRelease>	<RightRelease>$/;"	m
<LeftRelease>\t<RightRelease>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap! <LeftRelease>	<RightRelease>$/;"	m
<LocalLeader><LocalLeader>	./vim82/ftplugin/abaqus.vim	/^noremap <silent><buffer> <LocalLeader><LocalLeader> $/;"	m
<LocalLeader>C	./vim82/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	./vim82/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>C	./vim82/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	./vim82/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	./vim82/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>S <Plug>OCamlSwitchNewWin$/;"	m
<LocalLeader>c	./vim82/ftplugin/lprolog.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	./vim82/ftplugin/lprolog.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	./vim82/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	./vim82/ftplugin/ocaml.vim	/^    xmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>c	./vim82/ftplugin/spec.vim	/^		map <buffer> <LocalLeader>c <Plug>SpecChangelog$/;"	m
<LocalLeader>h	./vim82/ftplugin/man.vim	/^      nmap <buffer> <LocalLeader>h <Plug>ManBS$/;"	m
<LocalLeader>ll	./vimfiles/after/ftplugin/dot.vim	/^nmap <silent> <buffer> <LocalLeader>ll :GraphvizCompile<CR>$/;"	m
<LocalLeader>ll	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^nmap <silent> <buffer> <LocalLeader>ll :GraphvizCompile<CR>$/;"	m
<LocalLeader>lt	./vimfiles/after/ftplugin/dot.vim	/^nmap <silent> <buffer> <LocalLeader>lt :GraphvizCompileToLaTeX<CR>$/;"	m
<LocalLeader>lt	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^nmap <silent> <buffer> <LocalLeader>lt :GraphvizCompileToLaTeX<CR>$/;"	m
<LocalLeader>lv	./vimfiles/after/ftplugin/dot.vim	/^nmap <silent> <buffer> <LocalLeader>lv :GraphvizShow<CR>$/;"	m
<LocalLeader>lv	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^nmap <silent> <buffer> <LocalLeader>lv :GraphvizShow<CR>$/;"	m
<LocalLeader>q	./vim82/ftplugin/mail.vim	/^    nmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>q	./vim82/ftplugin/mail.vim	/^    vmap <buffer> <LocalLeader>q <Plug>MailQuote$/;"	m
<LocalLeader>s	./vim82/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>s <Plug>OCamlSwitchEdit$/;"	m
<LocalLeader>t	./vim82/ftplugin/ocaml.vim	/^  nmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<LocalLeader>t	./vim82/ftplugin/ocaml.vim	/^  xmap <buffer> <LocalLeader>t <Plug>OCamlPrintType$/;"	m
<M-Space>	./vim82/mswin.vim	/^  cnoremap <M-Space> <C-C>:simalt ~<CR>$/;"	m
<M-Space>	./vim82/mswin.vim	/^  inoremap <M-Space> <C-O>:simalt ~<CR>$/;"	m
<M-Space>	./vim82/mswin.vim	/^  noremap <M-Space> :simalt ~<CR>$/;"	m
<Nul>	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^      imap <Nul> <C-Space>$/;"	m
<Nul>	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^        imap <buffer> <Nul> <C-Space>$/;"	m
<Nul>	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^        smap <buffer> <Nul> <C-Space>$/;"	m
<PageDown>	./vim82/macros/less.vim	/^map <PageDown> <Space>$/;"	m
<PageUp>	./vim82/macros/less.vim	/^map <PageUp> b$/;"	m
<Plug>(EasyAlign)	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(EasyAlign) :set opfunc=<SID>easy_align_op<Enter>g@$/;"	m
<Plug>(EasyAlign)	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^vnoremap <silent> <Plug>(EasyAlign) :<C-U>call <SID>easy_align_op(visualmode(), 1)<Enter>$/;"	m
<Plug>(EasyAlignOperator)	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(EasyAlignOperator) :set opfunc=<SID>easy_align_op<Enter>g@$/;"	m
<Plug>(EasyAlignRepeat)	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(EasyAlignRepeat) :call <SID>easy_align_repeat()<Enter>$/;"	m
<Plug>(EasyAlignRepeat)	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^vnoremap <silent> <Plug>(EasyAlignRepeat) :<C-U>call <SID>repeat_in_visual()<Enter>$/;"	m
<Plug>(LiveEasyAlign)	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^nnoremap <silent> <Plug>(LiveEasyAlign) :set opfunc=<SID>live_easy_align_op<Enter>g@$/;"	m
<Plug>(LiveEasyAlign)	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^vnoremap <silent> <Plug>(LiveEasyAlign) :<C-U>call <SID>live_easy_align_op(visualmode(), 1)<Ente/;"	m
<Plug>(MatchitNormalBackward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalBackward)    :<C-U>call matchit#Match_wrapper('',0,'n')<CR/;"	m
<Plug>(MatchitNormalForward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalForward)     :<C-U>call matchit#Match_wrapper('',1,'n')<CR/;"	m
<Plug>(MatchitNormalMultiBackward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")/;"	m
<Plug>(MatchitNormalMultiForward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")/;"	m
<Plug>(MatchitOperationBackward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationBackward) :<C-U>call matchit#Match_wrapper('',0,'o')<CR/;"	m
<Plug>(MatchitOperationForward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationForward)  :<C-U>call matchit#Match_wrapper('',1,'o')<CR/;"	m
<Plug>(MatchitOperationMultiBackward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiBackward) :<C-U>call matchit#MultiMatch("bW", "o")/;"	m
<Plug>(MatchitOperationMultiForward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiForward)  :<C-U>call matchit#MultiMatch("W",  "o")/;"	m
<Plug>(MatchitVisualBackward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xnoremap <silent> <Plug>(MatchitVisualBackward)    :<C-U>call matchit#Match_wrapper('',0,'v')<CR/;"	m
<Plug>(MatchitVisualForward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xnoremap <silent> <Plug>(MatchitVisualForward)     :<C-U>call matchit#Match_wrapper('',1,'v')<CR/;"	m
<Plug>(MatchitVisualMultiBackward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xnoremap <silent> <Plug>(MatchitVisualMultiBackward)    :<C-U>call matchit#MultiMatch("bW", "n")/;"	m
<Plug>(MatchitVisualMultiForward)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xnoremap <silent> <Plug>(MatchitVisualMultiForward)     :<C-U>call matchit#MultiMatch("W",  "n")/;"	m
<Plug>(MatchitVisualTextObject)	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xmap <silent> <Plug>(MatchitVisualTextObject) <Plug>(MatchitVisualMultiBackward)o<Plug>(MatchitV/;"	m
<Plug>(ctrlp#myp4#P4ReviewLink)	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^nnoremap <silent> <Plug>(ctrlp#myp4#P4ReviewLink) :<C-u>call ctrlp#myp4#P4ReviewLink()<CR>$/;"	m
<Plug>(openbrowser-open)	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^nnoremap <silent> <Plug>(openbrowser-open) :<C-u>call openbrowser#_keymap_open('n')<CR>$/;"	m
<Plug>(openbrowser-open)	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^xnoremap <silent> <Plug>(openbrowser-open) :<C-u>call openbrowser#_keymap_open('v')<CR>$/;"	m
<Plug>(openbrowser-search)	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^nnoremap <silent> <Plug>(openbrowser-search) :<C-u>call openbrowser#_keymap_search('n')<CR>$/;"	m
<Plug>(openbrowser-search)	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^xnoremap <silent> <Plug>(openbrowser-search) :<C-u>call openbrowser#_keymap_search('v')<CR>$/;"	m
<Plug>(openbrowser-smart-search)	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^nnoremap <silent> <Plug>(openbrowser-smart-search) :<C-u>call openbrowser#_keymap_smart_search('/;"	m
<Plug>(openbrowser-smart-search)	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^xnoremap <silent> <Plug>(openbrowser-smart-search) :<C-u>call openbrowser#_keymap_smart_search('/;"	m
<Plug><cfile>	./vim82/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><ctag>	./vim82/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><ctag> substitute(RubyCursorTag(),'^$',"\\022\\027",'')$/;"	m
<Plug>BUncomOff	./vim82/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOff	./vim82/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	./vim82/ftplugin/lprolog.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i\/*<ESC>`>o<ESC>0i*\/<ESC>`<$/;"	m
<Plug>BUncomOn	./vim82/ftplugin/ocaml.vim	/^  xnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>Comment	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Comment          :call <SID>Comment('c')<CR>$/;"	m
<Plug>DeComment	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>DeComment        :call <SID>Comment('u')<CR>$/;"	m
<Plug>LUncomOff	./vim82/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOff <ESC>:s\/^\\\/\\* \\(.*\\) \\*\\\/\/\\1\/<CR>$/;"	m
<Plug>LUncomOff	./vim82/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	./vim82/ftplugin/lprolog.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i\/* <ESC>$A *\/<ESC>`z$/;"	m
<Plug>LUncomOn	./vim82/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn gI(* <End> *)<ESC>$/;"	m
<Plug>MailQuote	./vim82/ftplugin/mail.vim	/^  nnoremap <buffer> <Plug>MailQuote :.,$s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>MailQuote	./vim82/ftplugin/mail.vim	/^  vnoremap <buffer> <Plug>MailQuote :s\/^\/> \/<CR>:noh<CR>``$/;"	m
<Plug>ManBS	./vim82/ftplugin/man.vim	/^    nnoremap <buffer> <Plug>ManBS :%s\/.\\b\/\/g<CR>:setl nomod<CR>''$/;"	m
<Plug>ManPreGetPage	./vim82/ftplugin/man.vim	/^  nmap <Plug>ManPreGetPage :call <SID>PreGetPage(0)<CR>$/;"	m
<Plug>MarkAllClear	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkAllClear :<C-u>call mark#ClearAll()<CR>$/;"	m
<Plug>MarkClear	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkClear :<C-u>call mark#DoMark(mark#CurrentMark()[0])<CR>$/;"	m
<Plug>MarkRegex	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkRegex :<C-u>call mark#MarkRegex('')<CR>$/;"	m
<Plug>MarkRegex	./vimfiles/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkRegex <C-\\><C-n>:call mark#MarkRegex(mark#GetVisualSelectionAsRegex/;"	m
<Plug>MarkSearchAnyNext	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchAnyNext     :<C-u>call mark#SearchAnyMark(0)<CR>$/;"	m
<Plug>MarkSearchAnyPrev	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchAnyPrev     :<C-u>call mark#SearchAnyMark(1)<CR>$/;"	m
<Plug>MarkSearchCurrentNext	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchCurrentNext :<C-u>call mark#SearchCurrentMark(0)<CR>$/;"	m
<Plug>MarkSearchCurrentPrev	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchCurrentPrev :<C-u>call mark#SearchCurrentMark(1)<CR>$/;"	m
<Plug>MarkSearchNext	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchNext        :<C-u>if !mark#SearchNext(0)<Bar>execute 'normal! /;"	m
<Plug>MarkSearchPrev	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSearchPrev        :<C-u>if !mark#SearchNext(1)<Bar>execute 'normal! /;"	m
<Plug>MarkSet	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkSet   :<C-u>call mark#MarkCurrentWord()<CR>$/;"	m
<Plug>MarkSet	./vimfiles/plugin/mark.vim	/^vnoremap <silent> <Plug>MarkSet   <C-\\><C-n>:call mark#DoMark(mark#GetVisualSelectionAsLiteralP/;"	m
<Plug>MarkToggle	./vimfiles/plugin/mark.vim	/^nnoremap <silent> <Plug>MarkToggle :<C-u>call mark#Toggle()<CR>$/;"	m
<Plug>Netrw2Leftmouse\t-	./vim82/autoload/netrw.vim	/^    nmap <buffer> <silent>		<Plug>Netrw2Leftmouse	-$/;"	m
<Plug>NetrwBadd_cB\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwBadd_cB		:<c-u>call <SID>NetrwBadd(0,1)<cr>$/;"	m
<Plug>NetrwBadd_cB\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwBadd_cB		:<c-u>call <SID>NetrwBadd(1,1)<cr>$/;"	m
<Plug>NetrwBadd_cb\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwBadd_cb		:<c-u>call <SID>NetrwBadd(0,0)<cr>$/;"	m
<Plug>NetrwBadd_cb\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwBadd_cb		:<c-u>call <SID>NetrwBadd(1,0)<cr>$/;"	m
<Plug>NetrwBookHistHandler_gb\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwBookHistHandler_gb	:<c-u>call <SID>NetrwBookHistHandler/;"	m
<Plug>NetrwBrowseUpDir\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwBrowseUpDir		:<c-u>call <SID>NetrwBrowseUpDir(0)<cr>$/;"	m
<Plug>NetrwBrowseUpDir\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwBrowseUpDir		:<c-u>call <SID>NetrwBrowseUpDir(1)<cr>$/;"	m
<Plug>NetrwBrowseX	./vim82/plugin/netrwPlugin.vim	/^  nno <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX())/;"	m
<Plug>NetrwBrowseXVis	./vim82/plugin/netrwPlugin.vim	/^  vno <silent> <Plug>NetrwBrowseXVis :<c-u>call netrw#BrowseXVis()<cr>$/;"	m
<Plug>NetrwCLeftmouse\t<leftmouse>:call	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwCLeftmouse	<leftmouse>:call <SID>NetrwCLeftmouse(0)<cr>$/;"	m
<Plug>NetrwCLeftmouse\t<leftmouse>:call	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwCLeftmouse	<leftmouse>:call <SID>NetrwCLeftmouse(1)<cr>$/;"	m
<Plug>NetrwHideEdit\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwHideEdit	:call <SID>NetrwHideEdit(0)<cr>$/;"	m
<Plug>NetrwHideEdit\t\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwHideEdit		:call <SID>NetrwHideEdit(1)<cr>$/;"	m
<Plug>NetrwHide_a\t\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwHide_a			:<c-u>call <SID>NetrwHide(0)<cr>$/;"	m
<Plug>NetrwHide_a\t\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwHide_a			:<c-u>call <SID>NetrwHide(1)<cr>$/;"	m
<Plug>NetrwLcd\t\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwLcd			:<c-u>call <SID>NetrwLcd(b:netrw_curdir)<cr>$/;"	m
<Plug>NetrwLeftmouse\t<leftmouse>:call	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwLeftmouse	<leftmouse>:call <SID>NetrwLeftmouse(0)<cr>$/;"	m
<Plug>NetrwLeftmouse\t<leftmouse>:call	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwLeftmouse	<leftmouse>:call <SID>NetrwLeftmouse(1)<cr>$/;"	m
<Plug>NetrwLocalBrowseCheck\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwLocalBrowseCheck	:<c-u>call <SID>NetrwBrowse(0,<SID>Net/;"	m
<Plug>NetrwLocalBrowseCheck\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwLocalBrowseCheck	:<c-u>call netrw#LocalBrowseCheck(<SID/;"	m
<Plug>NetrwMakeDir\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwMakeDir		:<c-u>call <SID>NetrwMakeDir("")<cr>$/;"	m
<Plug>NetrwMiddlemouse\t<leftmouse>:call	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwMiddlemouse	<leftmouse>:call <SID>NetrwPrevWinOpen(1)<cr>$/;"	m
<Plug>NetrwOpenFile\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwOpenFile		:<c-u>call <SID>NetrwOpenFile(0)<cr>$/;"	m
<Plug>NetrwOpenFile\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwOpenFile		:<c-u>call <SID>NetrwOpenFile(1)<cr>$/;"	m
<Plug>NetrwRefresh\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwRefresh	:call <SID>NetrwRefresh(0,<SID>NetrwBrowseChgDi/;"	m
<Plug>NetrwRefresh\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwRefresh		:<c-u>call <SID>NetrwRefresh(0,<SID>NetrwBrows/;"	m
<Plug>NetrwRefresh\t\t<c-l>:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwRefresh		<c-l>:call <SID>NetrwRefresh(1,<SID>NetrwBrows/;"	m
<Plug>NetrwReturn\t:Rexplore<cr>	./vim82/autoload/netrw.vim	/^   nno <silent> <Plug>NetrwReturn	:Rexplore<cr>$/;"	m
<Plug>NetrwSLeftdrag\t<leftmouse>:call	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwSLeftdrag	<leftmouse>:call <SID>NetrwSLeftdrag(0)<cr>$/;"	m
<Plug>NetrwSLeftdrag\t<leftmouse>:call	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwSLeftdrag	<leftmouse>:call <SID>NetrwSLeftdrag(1)<cr>$/;"	m
<Plug>NetrwSLeftmouse	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwSLeftmouse 	<leftmouse>:call <SID>NetrwSLeftmouse(0)<cr>$/;"	m
<Plug>NetrwSLeftmouse	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<Plug>NetrwSLeftmouse 	<leftmouse>:call <SID>NetrwSLeftmouse(1)<cr>$/;"	m
<Plug>NetrwServerEdit\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwServerEdit		:<c-u>call <SID>NetrwServerEdit(2,<SID>Netr/;"	m
<Plug>NetrwServerEdit\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwServerEdit		:<c-u>call <SID>NetrwServerEdit(3,<SID>Netr/;"	m
<Plug>NetrwSetChgwin\t\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwSetChgwin		:<c-u>call <SID>NetrwSetChgwin()<cr>$/;"	m
<Plug>NetrwShrink	./vim82/plugin/netrwPlugin.vim	/^ nno <silent> <Plug>NetrwShrink :call netrw#Shrink()<cr>$/;"	m
<Plug>NetrwTreeSqueeze\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwTreeSqueeze	:call <SID>TreeSqueezeDir(0)<cr>$/;"	m
<Plug>NetrwTreeSqueeze\t\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <Plug>NetrwTreeSqueeze		:call <SID>TreeSqueezeDir(1)<cr>$/;"	m
<Plug>OCamlPrintType	./vim82/ftplugin/ocaml.vim	/^  nnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("normal")<CR>$/;"	m
<Plug>OCamlPrintType	./vim82/ftplugin/ocaml.vim	/^  xnoremap <silent> <Plug>OCamlPrintType :<C-U>call Ocaml_print_type("visual")<CR>`<$/;"	m
<Plug>OCamlSwitchEdit	./vim82/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchEdit :<C-u>call OCaml_switch(0)<CR>$/;"	m
<Plug>OCamlSwitchNewWin	./vim82/ftplugin/ocaml.vim	/^  nnoremap <Plug>OCamlSwitchNewWin :<C-u>call OCaml_switch(1)<CR>$/;"	m
<Plug>RestoreWinPosn\t:call	./vimfiles/plugin/cecutil.vim	/^nmap <silent> <Plug>RestoreWinPosn	:call RestoreWinPosn()<CR>$/;"	m
<Plug>SaveWinPosn\t\t:call	./vimfiles/plugin/cecutil.vim	/^nmap <silent> <Plug>SaveWinPosn		:call SaveWinPosn()<CR>$/;"	m
<Plug>SpecChangelog	./vim82/ftplugin/spec.vim	/^       noremap <buffer> <unique> <script> <Plug>SpecChangelog :call <SID>SpecChangelog("")<CR>$/;"	m
<Plug>StartDrawIt	./vimfiles/plugin/DrawItPlugin.vim	/^map <silent> <Plug>StartDrawIt  :set lz<cr>:call DrawIt#StartDrawIt()<cr>:set nolz<cr>$/;"	m
<Plug>StopDrawIt	./vimfiles/plugin/DrawItPlugin.vim	/^map <silent> <Plug>StopDrawIt :set lz<cr>:call DrawIt#StopDrawIt()<cr>:set nolz<cr>$/;"	m
<Plug>SuperTabBackward	./vimfiles/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=<SID>SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	./vimfiles/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=<SID>SuperTab('n')<cr>$/;"	m
<Plug>Traditional	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>Traditional      :call <SID>Comment('t')<CR>$/;"	m
<Plug>VisualComment	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualComment     :'<,'>call <SID>Comment('c')<CR>$/;"	m
<Plug>VisualDeComment	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualDeComment   :'<,'>call <SID>Comment('u')<CR>$/;"	m
<Plug>VisualTraditional	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> <Plug>VisualTraditional :'<,'>call <SID>Comment('t')<CR>$/;"	m
<Return>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <Return>$/;"	m
<RightDrag>\t<LeftDrag>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <RightDrag>	<LeftDrag>$/;"	m
<RightDrag>\t<LeftDrag>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap! <RightDrag>	<LeftDrag>$/;"	m
<RightMouse>\t<LeftMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <RightMouse>	<LeftMouse>$/;"	m
<RightMouse>\t<LeftMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap! <RightMouse>	<LeftMouse>$/;"	m
<RightRelease>\t<LeftRelease>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 <RightRelease>	<LeftRelease>$/;"	m
<RightRelease>\t<LeftRelease>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap! <RightRelease>	<LeftRelease>$/;"	m
<S-Del>	./vim82/mswin.vim	/^    vnoremap <S-Del> "+x$/;"	m
<S-Down>	./vim82/ftplugin/flexwiki.vim	/^  imap <buffer> <S-Down>   <C-o>gj$/;"	m
<S-Down>	./vim82/macros/less.vim	/^map <S-Down> <Space>$/;"	m
<S-Insert>	./vim82/gvimrc_example.vim	/^map <S-Insert> <MiddleMouse>$/;"	m
<S-Insert>	./vim82/gvimrc_example.vim	/^map! <S-Insert> <MiddleMouse>$/;"	m
<S-Insert>\t\t"+gP	./vim82/mswin.vim	/^    map <S-Insert>		"+gP$/;"	m
<S-Insert>\t\t<C-R>+	./vim82/mswin.vim	/^    cmap <S-Insert>		<C-R>+$/;"	m
<S-Insert>\t\t<C-V>	./vim82/mswin.vim	/^imap <S-Insert>		<C-V>$/;"	m
<S-Insert>\t\t<C-V>	./vim82/mswin.vim	/^vmap <S-Insert>		<C-V>$/;"	m
<S-Up>	./vim82/ftplugin/flexwiki.vim	/^  imap <buffer> <S-Up>     <C-o>gk$/;"	m
<S-Up>	./vim82/macros/less.vim	/^map <S-Up> b$/;"	m
<SID>	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^nnoremap <SID>  <SID>$/;"	m
<SID>:	./vim82/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>L	./vim82/macros/less.vim	/^  noremap <SID>L L0:redraw<CR>:file<CR>$/;"	m
<SID>L	./vim82/macros/less.vim	/^  noremap <SID>L Lg0:redraw<CR>:file<CR>$/;"	m
<SID>c:	./vim82/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>foldopen	./vim82/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<SID>tagzv	./vim82/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<SID>xx	./vimfiles/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<Space>	./vim82/macros/less.vim	/^noremap <script> <Space> :call <SID>NextPage()<CR><SID>L$/;"	m
<Space>	./vim82/optwin.vim	/^noremap <silent> <buffer> <Space> :call <SID>Space()<CR>$/;"	m
<Space>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <Space>       <C-o>:call$/;"	m
<Space>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <Space> :call <SID>Tlist_Window_Show_Info()<CR>$/;"	m
<Tab>	./vim82/ftplugin/cobol.vim	/^        inoremap <silent> <buffer> <Tab> <C-R>=<SID>Tab()<CR><C-R>=<SID>RestoreShiftwidth()<CR>$/;"	m
<Tab>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <Tab> <C-o>:call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
<Tab>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <Tab> :call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
<Up>	./vim82/evim.vim	/^inoremap <silent> <Up> <C-R>=pumvisible() ? "\\<lt>Up>" : "\\<lt>C-O>gk"<CR>$/;"	m
<Up>	./vim82/ftplugin/flexwiki.vim	/^      imap <buffer> <Up>     <C-o>gk$/;"	m
<Up>	./vim82/ftplugin/flexwiki.vim	/^  nmap <buffer> <Up>   gk$/;"	m
<Up>	./vim82/ftplugin/flexwiki.vim	/^  vmap <buffer> <Up>   gk$/;"	m
<Up>	./vim82/macros/less.vim	/^map <Up> k$/;"	m
<bs>	./vim82/ftplugin/ada.vim	/^      inoremap <silent> <unique> <buffer> <bs> <C-R>=ada#Insert_Backspace ()<cr>$/;"	m
<bs>	./vimfiles/after/plugin/snipMate.vim	/^snor <bs> b<bs>$/;"	m
<bs>	./vimfiles/plugin/supertab.vim	/^    imap <buffer> <bs> <c-r>=<SID>CompletionReset("\\<lt>bs>")<cr>$/;"	m
<c-]>	./vim82/ftplugin/man.vim	/^    nnoremap <buffer> <c-]> :call <SID>PreGetPage(v:count)<CR>$/;"	m
<c-]>	./vimfiles/plugin/supertab.vim	/^    nmap <silent> <buffer> <c-]> :call <SID>SetCompletionType()<cr>$/;"	m
<c-h>	./vim82/autoload/netrw.vim	/^    nmap <buffer> <c-h> <Plug>NetrwHideEdit$/;"	m
<c-h>	./vim82/autoload/netrw.vim	/^    nmap <buffer> <unique> <c-h> <Plug>NetrwHideEdit$/;"	m
<c-h>	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <silent> <c-h> <c-g>c$/;"	m
<c-h>	./vimfiles/plugin/supertab.vim	/^    imap <buffer> <c-h> <c-r>=<SID>CompletionReset("\\<lt>c-h>")<cr>$/;"	m
<c-l>	./vim82/autoload/netrw.vim	/^    nmap <buffer> <c-l> <Plug>NetrwRefresh$/;"	m
<c-l>	./vim82/autoload/netrw.vim	/^    nmap <buffer> <unique> <c-l> <Plug>NetrwRefresh$/;"	m
<c-leftdrag>	./vimfiles/autoload/DrawIt.vim	/^  noremap <silent> <c-leftdrag>    :<c-u>call <SID>CLeftDrag()<cr>$/;"	m
<c-leftmouse>	./vimfiles/autoload/DrawIt.vim	/^  nnoremap <buffer> <silent> <c-leftmouse>  <leftmouse>:call <SID>CLeftStart()<CR><c-v>$/;"	m
<c-leftmouse>	./vimfiles/autoload/DrawIt.vim	/^  vnoremap <buffer> <silent> <c-leftmouse>  <leftmouse>:<c-u>call <SID>CLeftStart()<cr>$/;"	m
<c-leftmouse>\t<Plug>NetrwReturn	./vim82/autoload/netrw.vim	/^     nmap <unique> <silent> <c-leftmouse>	<Plug>NetrwReturn$/;"	m
<c-leftmouse>\t\t<Plug>NetrwCLeftmouse	./vim82/autoload/netrw.vim	/^    nmap <buffer>			<c-leftmouse>		<Plug>NetrwCLeftmouse$/;"	m
<c-leftmouse>\t\t<Plug>NetrwCLeftmouse	./vim82/autoload/netrw.vim	/^    nmap <buffer> <c-leftmouse>		<Plug>NetrwCLeftmouse$/;"	m
<c-leftrelease>	./vimfiles/autoload/DrawIt.vim	/^  noremap <silent> <c-leftrelease> <leftmouse>:<c-u>call <SID>CLeftRelease()<cr>$/;"	m
<c-n>	./vimfiles/plugin/supertab.vim	/^    imap <c-n> <Plug>SuperTabForward$/;"	m
<c-p>	./vimfiles/plugin/supertab.vim	/^    imap <c-p> <Plug>SuperTabBackward$/;"	m
<c-r>	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    snoremap <c-r> <c-g>"_c<c-r>$/;"	m
<c-r><tab>	./vimfiles/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-t>	./vim82/ftplugin/man.vim	/^    nnoremap <buffer> <c-t> :call <SID>PopPage()<CR>$/;"	m
<c-tab>	./vim82/plugin/netrwPlugin.vim	/^  nmap <unique> <c-tab> <Plug>NetrwShrink$/;"	m
<c-v>	./vimfiles/autoload/DrawIt.vim	/^  nnoremap <buffer> <silent> <c-v>      :call <SID>LeftStart()<CR><c-v>$/;"	m
<c-x>	./vimfiles/after/plugin/snipMate.vim	/^snor <c-x> b<bs><c-x>$/;"	m
<c-x>	./vimfiles/plugin/supertab.vim	/^  imap <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<char-166><char-201><char-161>	./vim82/keymap/tamil_tscii.vim	/^no     <char-166><char-201><char-161>$/;"	m
<cr>	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    nnoremap <silent> <buffer> <cr> :call nerdtree#ui_glue#invokeKeyMap(g:NERDTreeMapActivateNod/;"	m
<cr>	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> <cr>          :call <SID>BESelectBuffer()<cr>$/;"	m
<cr>	./vimfiles/plugin/supertab.vim	/^      inoremap <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<cr>	./vimfiles/plugin/supertab.vim	/^    nmap <silent> <buffer> <cr> :call <SID>SetCompletionType()<cr>$/;"	m
<cr>\t\t:call	./vim82/autoload/tar.vim	/^  noremap <silent> <buffer>	<cr>		:call <SID>TarBrowseSelect()<cr>$/;"	m
<cr>\t\t:call	./vim82/autoload/zip.vim	/^  noremap <silent> <buffer>	<cr>		:call <SID>ZipBrowseSelect()<cr>$/;"	m
<down>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <down>     <Esc><down>a$/;"	m
<down>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <down>     :set lz<CR>:silent! call <SID>DrawDown()<CR>:set nolz<CR>$/;"	m
<end>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <end>      <Esc><end>a$/;"	m
<end>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <end>      :set lz<CR>:silent! call <SID>DrawSlantDownLeft()<CR>:set nolz<CR>$/;"	m
<home>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <home>     <Esc><home>a$/;"	m
<home>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <home>     :set lz<CR>:silent! call <SID>DrawSlantUpLeft()<CR>:set nolz<CR>$/;"	m
<kEnd>	./vim82/macros/less.vim	/^map <kEnd> G$/;"	m
<kHome>	./vim82/macros/less.vim	/^map <kHome> g$/;"	m
<kMinus>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <kMinus>      <C-o>:silent! foldclose<CR>$/;"	m
<kMinus>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <kMinus> :silent! foldclose<CR>$/;"	m
<kMultiply>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <kMultiply>   <C-o>:silent! %foldopen!<CR>$/;"	m
<kMultiply>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <kMultiply> :silent! %foldopen!<CR>$/;"	m
<kPageDown>	./vim82/macros/less.vim	/^map <kPageDown> <Space>$/;"	m
<kPageUp>	./vim82/macros/less.vim	/^map <kPageUp> b$/;"	m
<kPlus>	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> <kPlus>       <C-o>:silent! foldopen<CR>$/;"	m
<kPlus>	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> <kPlus> :silent! foldopen<CR>$/;"	m
<left>	./vimfiles/after/plugin/snipMate.vim	/^snor <left> <esc>bi$/;"	m
<left>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <left>     <Esc><left>a$/;"	m
<left>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <left>   <Esc><left>a$/;"	m
<left>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <left>     :set lz<CR>:silent! call <SID>DrawLeft()<CR>:set nolz<CR>$/;"	m
<leftmouse>	./vim82/autoload/netrw.vim	/^    nmap <buffer>			<leftmouse>   		<Plug>NetrwLeftmouse$/;"	m
<leftmouse>	./vim82/autoload/netrwSettings.vim	/^  nnoremap <buffer> <silent> <leftmouse> <leftmouse>:call NetrwSettingHelp()<cr>$/;"	m
<leftmouse>	./vimfiles/autoload/DrawIt.vim	/^  nnoremap <buffer> <silent> <leftmouse>    <leftmouse>:call <SID>LeftStart()<CR><c-v>$/;"	m
<leftmouse>\t<leftmouse>:call	./vim82/autoload/tar.vim	/^   noremap <silent> <buffer>	<leftmouse>	<leftmouse>:call <SID>TarBrowseSelect()<cr>$/;"	m
<leftmouse>\t<leftmouse>:call	./vim82/autoload/zip.vim	/^   noremap <silent> <buffer>	<leftmouse>	<leftmouse>:call <SID>ZipBrowseSelect()<cr>$/;"	m
<leftmouse>\t\t<Plug>ILeftmouse	./vim82/autoload/netrw.vim	/^    imap <buffer>			<leftmouse>		<Plug>ILeftmouse$/;"	m
<leftmouse>\t\t<Plug>ILeftmouse	./vim82/autoload/netrw.vim	/^    imap <buffer> <leftmouse>		<Plug>ILeftmouse$/;"	m
<leftmouse>\t\t<Plug>NetrwLeftmouse	./vim82/autoload/netrw.vim	/^    nmap <buffer> <leftmouse>		<Plug>NetrwLeftmouse$/;"	m
<leftrelease>	./vimfiles/autoload/DrawIt.vim	/^  vnoremap <silent> <leftrelease> <leftrelease>:<c-u>call <SID>LeftRelease()<cr>gv$/;"	m
<middlemouse>	./vimfiles/autoload/DrawIt.vim	/^  vnoremap <buffer> <silent> <middlemouse>  <leftmouse>:<c-u>call <SID>RightStart(0)<cr>$/;"	m
<middlemouse>\t\t<Plug>IMiddlemouse	./vim82/autoload/netrw.vim	/^    imap <buffer>			<middlemouse>		<Plug>IMiddlemouse$/;"	m
<middlemouse>\t\t<Plug>IMiddlemouse	./vim82/autoload/netrw.vim	/^    imap <buffer> <middlemouse>		<Plug>IMiddlemouse$/;"	m
<middlemouse>\t\t<Plug>NetrwMiddlemouse	./vim82/autoload/netrw.vim	/^    nmap <buffer>			<middlemouse>		<Plug>NetrwMiddlemouse$/;"	m
<middlemouse>\t\t<Plug>NetrwMiddlemouse	./vim82/autoload/netrw.vim	/^    nno  <buffer> <silent>		<middlemouse>		<Plug>NetrwMiddlemouse <leftmouse>:call <SID>NetrwPre/;"	m
<middlemouse>\t\t\t<Plug>NetrwMiddlemouse	./vim82/autoload/netrw.vim	/^    nmap <middlemouse>			<Plug>NetrwMiddlemouse$/;"	m
<pagedown>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <pagedown> <Esc><pagedown>a$/;"	m
<pagedown>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <pagedown> :set lz<CR>:silent! call <SID>DrawSlantDownRight()<CR>:set nolz<CR>$/;"	m
<pageup>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <pageup>   <Esc><pageup>a$/;"	m
<pageup>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <pageup>   :set lz<CR>:silent! call <SID>DrawSlantUpRight()<CR>:set nolz<CR>$/;"	m
<right>	./vimfiles/after/plugin/snipMate.vim	/^snor <right> <esc>a$/;"	m
<right>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <right>    <Esc><right>a$/;"	m
<right>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <right>    :set lz<CR>:silent! call <SID>DrawRight()<CR>:set nolz<CR>$/;"	m
<rightmouse>	./vimfiles/autoload/DrawIt.vim	/^  vnoremap <buffer> <silent> <rightmouse>   <leftmouse>:<c-u>call <SID>RightStart(1)<cr>$/;"	m
<s-cr>	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> <s-cr>        :call <SID>BESelectBuffer("tab")<cr>$/;"	m
<s-cr>\t<Plug>NetrwTreeSqueeze	./vim82/autoload/netrw.vim	/^    nmap <buffer> <silent> <nowait> <s-cr>	<Plug>NetrwTreeSqueeze$/;"	m
<s-cr>\t\t\t<Plug>NetrwTreeSqueeze	./vim82/autoload/netrw.vim	/^    nmap <buffer> <silent> <nowait> <s-cr>			<Plug>NetrwTreeSqueeze$/;"	m
<s-down>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <s-down>   <Esc><s-down>a$/;"	m
<s-down>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <s-down>   :set lz<CR>:silent! call <SID>MoveDown()<CR>:set nolz<CR>$/;"	m
<s-down>\t:Nexplore<cr>	./vim82/autoload/netrw.vim	/^    nnoremap <buffer> <silent> <s-down>	:Nexplore<cr>$/;"	m
<s-left>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <s-left>   :set lz<CR>:silent! call <SID>MoveLeft()<CR>:set nolz<CR>$/;"	m
<s-leftdrag>	./vimfiles/autoload/DrawIt.vim	/^  noremap <silent> <s-leftdrag>    <leftmouse>:<c-u>call <SID>SLeftDrag()<cr>$/;"	m
<s-leftdrag>\t\t<Plug>NetrwSLeftdrag	./vim82/autoload/netrw.vim	/^    nmap <buffer>			<s-leftdrag>		<Plug>NetrwSLeftdrag$/;"	m
<s-leftdrag>\t\t<Plug>NetrwSLeftdrag	./vim82/autoload/netrw.vim	/^    nmap <buffer> <s-leftdrag>		<Plug>NetrwSLeftdrag$/;"	m
<s-leftmouse>	./vimfiles/autoload/DrawIt.vim	/^  nnoremap <buffer> <silent> <s-leftmouse>  <leftmouse>:call <SID>SLeftStart()<CR><c-v>$/;"	m
<s-leftmouse>\t\t<Plug>ISLeftmouse	./vim82/autoload/netrw.vim	/^    imap <buffer> <s-leftmouse>		<Plug>ISLeftmouse$/;"	m
<s-leftmouse>\t\t<Plug>NetrwSLeftmouse	./vim82/autoload/netrw.vim	/^    nmap <buffer>			<s-leftmouse>		<Plug>NetrwSLeftmouse$/;"	m
<s-leftmouse>\t\t<Plug>NetrwSLeftmouse	./vim82/autoload/netrw.vim	/^    nmap <buffer> <s-leftmouse>		<Plug>NetrwSLeftmouse$/;"	m
<s-leftrelease>	./vim82/autoload/netrw.vim	/^    nno <silent> <s-leftrelease> <leftmouse>:<c-u>call <SID>NetrwSLeftrelease(0)<cr>$/;"	m
<s-leftrelease>	./vim82/autoload/netrw.vim	/^    nno <silent> <s-leftrelease> <leftmouse>:<c-u>call <SID>NetrwSLeftrelease(1)<cr>$/;"	m
<s-leftrelease>	./vimfiles/autoload/DrawIt.vim	/^  noremap <silent> <s-leftrelease> <leftmouse>:<c-u>call <SID>SLeftRelease()<cr>$/;"	m
<s-right>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <s-right>  <Esc><s-right>a$/;"	m
<s-right>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <s-right>  :set lz<CR>:silent! call <SID>MoveRight()<CR>:set nolz<CR>$/;"	m
<s-tab>	./vimfiles/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<s-tab>	./vimfiles/after/plugin/snipMate.vim	/^snor <silent> <s-tab> <esc>i<right><c-r>=BackwardsSnippet()<cr>$/;"	m
<s-up>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <s-up>     <Esc><s-up>a$/;"	m
<s-up>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <s-up>     :set lz<CR>:silent! call <SID>MoveUp()<CR>:set nolz<CR>$/;"	m
<s-up>\t:Pexplore<cr>	./vim82/autoload/netrw.vim	/^    nnoremap <buffer> <silent> <s-up>	:Pexplore<cr>$/;"	m
<space>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <space>    :set lz<CR>:silent! call <SID>DrawErase()<CR>:set nolz<CR>$/;"	m
<space>	./vimfiles/bundle/jedi-vim/ftplugin/python/jedi.vim	/^        inoremap <silent> <buffer> <space> <C-R>=jedi#smart_auto_mappings()<CR>$/;"	m
<tab>	./vimfiles/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
<tab>	./vimfiles/after/plugin/snipMate.vim	/^snor <silent> <tab> <esc>i<right><c-r>=TriggerSnippet()<cr>$/;"	m
<tab>	./vimfiles/plugin/bufexplorer.vim	/^    nnoremap <buffer> <silent> <tab> :call <SID>BESelectBuffer("tab")<cr>$/;"	m
<up>	./vimfiles/autoload/DrawIt.vim	/^   imap <buffer> <silent> <up>       <Esc><up>a$/;"	m
<up>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> <up>       :set lz<CR>:silent! call <SID>DrawUp()<CR>:set nolz<CR>$/;"	m
=	./vim82/autoload/rubycomplete.vim	/^          ln = buf[x]$/;"	m
=	./vim82/autoload/rubycomplete.vim	/^      ln = buf[x]$/;"	m
=	./vim82/autoload/rubycomplete.vim	/^      nm = "%s(::.*)*\\", %s, \\"" % [ name, nums.last ]$/;"	m
=	./vim82/macros/urm/urm.vim	/^map = 'kf,$/;"	m
=	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap = ]$/;"	m
=	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> =             <C-o>:silent! %foldclose<CR>$/;"	m
=	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> = :silent! %foldclose<CR>$/;"	m
>	./vim82/ftplugin/cobol.vim	/^        nnoremap <silent> <buffer> > :set opfunc=<SID>IncreaseFunc<CR>g@$/;"	m
>	./vim82/ftplugin/cobol.vim	/^    vnoremap <silent> <buffer> > :call CobolIndentBlock(v:count1)<CR>$/;"	m
>	./vim82/macros/less.vim	/^map > G$/;"	m
>	./vim82/macros/life/life.vim	/^map > 0 LWWWWWWWWWWWWWWWWWW,rj$/;"	m
>	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap > V$/;"	m
>	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> >          :set lz<CR>:silent! call <SID>DrawSpace('>',1)<CR>:set nolz<CR>$/;"	m
>	./vimfiles/autoload/omni/cpp/complete.vim	/^    inoremap <expr> > omni#cpp#maycomplete#Arrow()$/;"	m
>>	./vim82/ftplugin/cobol.vim	/^    nnoremap <silent> <buffer> >> :call CobolIndentBlock(1)<CR>$/;"	m
?	./vim82/macros/less.vim	/^  noremap <script> ? H0:call <SID>Backward()<CR>?$/;"	m
?	./vim82/macros/less.vim	/^  noremap <script> ? Hg0:call <SID>Backward()<CR>?$/;"	m
?	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap ? Z$/;"	m
A	./vim82/macros/hanoi/hanoi.vim	/^map A "fyl$/;"	m
A	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap A A$/;"	m
ASTYLE_cpp	./VIMPROJ/Tool/InitCPP.vim	/^function ASTYLE_cpp()$/;"	f	signature:()
ASTYLE_default	./VIMPROJ/vimrc/_vimrc	/^function ASTYLE_default()$/;"	f	signature:()
ASTYLE_lgamesvr	./VIMPROJ/Tool/InitLGameSvr.vim	/^function ASTYLE_lgamesvr()$/;"	f	signature:()
ASTYLE_python	./VIMPROJ/Tool/InitPython.vim	/^function ASTYLE_python()$/;"	f	signature:()
ASTYLE_vim	./VIMPROJ/Tool/InitVim.vim	/^function ASTYLE_vim()$/;"	f	signature:()
Abaqus_ToggleComment	./vim82/ftplugin/abaqus.vim	/^function! <SID>Abaqus_ToggleComment() range$/;"	f	signature:()
AddEntry	./vim82/ftplugin/debchangelog.vim	/^function AddEntry()$/;"	f	signature:()
AntSyntaxScript	./vim82/syntax/ant.vim	/^    fun AntSyntaxScript(tagname, synfilename)$/;"	f	signature:(tagname,synfilename)
Arguments	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command -nargs=* Arguments call s:SendCommand('-exec-arguments ' . <q-args>)$/;"	c
AuNetrwEvent	./vim82/autoload/netrw.vim	/^   augroup AuNetrwEvent$/;"	a
B	./vim82/macros/hanoi/hanoi.vim	/^map B "hyl$/;"	m
B	./vim82/macros/life/life.vim	/^map B ,%k>,\$$/;"	m
B	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap B X$/;"	m
B	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> B             :call <SID>BEToggleOnlyOneTab()<cr>$/;"	m
BackwardsSnippet	./vimfiles/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f	signature:()
BalanceDirection	./vim82/indent/php.vim	/^function! BalanceDirection (str)$/;"	f	signature:(str)
BinOptionG	./vim82/optwin.vim	/^fun! <SID>BinOptionG(name, val)$/;"	f	signature:(name,val)
BinOptionL	./vim82/optwin.vim	/^fun! <SID>BinOptionL(name)$/;"	f	signature:(name)
Bookmark	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=? Bookmark :call nerdtree#ui_glue#bookmarkNode('<args>')$/;"	c
BookmarkToRoot	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=+ BookmarkToRoot cal/;"	c
Break	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command -nargs=? Break call s:SetBreakpoint(<q-args>)$/;"	c
BufExplorer	./vimfiles/plugin/bufexplorer.vim	/^  augroup BufExplorer$/;"	a
BufExplorer	./vimfiles/plugin/bufexplorer.vim	/^command! BufExplorer :call StartBufExplorer(has ("gui") ? "drop" : "hide edit")$/;"	c
BufExplorerHorizontalSplit	./vimfiles/plugin/bufexplorer.vim	/^command! BufExplorerHorizontalSplit :call BufExplorerHorizontalSplit()$/;"	c
BufExplorerHorizontalSplit	./vimfiles/plugin/bufexplorer.vim	/^function! BufExplorerHorizontalSplit()$/;"	f	signature:()
BufExplorerVerticalSplit	./vimfiles/plugin/bufexplorer.vim	/^command! BufExplorerVerticalSplit :call BufExplorerVerticalSplit()$/;"	c
BufExplorerVerticalSplit	./vimfiles/plugin/bufexplorer.vim	/^function! BufExplorerVerticalSplit()$/;"	f	signature:()
BufExplorerVimEnter	./vimfiles/plugin/bufexplorer.vim	/^augroup BufExplorerVimEnter$/;"	a
BufExplorer_IsValid	./vimfiles/plugin/bufexplorer.vim	/^function! BufExplorer_IsValid()$/;"	f	signature:()
BufExplorer_ReSize	./vimfiles/plugin/bufexplorer.vim	/^function! BufExplorer_ReSize()$/;"	f	signature:()
BufExplorer_Refresh	./vimfiles/plugin/bufexplorer.vim	/^function! BufExplorer_Refresh()$/;"	f	signature:()
BufExplorer_Start	./vimfiles/plugin/bufexplorer.vim	/^function! BufExplorer_Start()$/;"	f	signature:()
BuildCaseTable	./vim82/tools/unicode.vim	/^func! BuildCaseTable(name, index)$/;"	f	signature:(name,index)
BuildCombiningTable	./vim82/tools/unicode.vim	/^func! BuildCombiningTable()$/;"	f	signature:()
BuildEmojiTable	./vim82/tools/unicode.vim	/^func! BuildEmojiTable(pattern, tableName)$/;"	f	signature:(pattern,tableName)
BuildFoldTable	./vim82/tools/unicode.vim	/^func! BuildFoldTable()$/;"	f	signature:()
BuildWidthTable	./vim82/tools/unicode.vim	/^func! BuildWidthTable(pattern, tableName)$/;"	f	signature:(pattern,tableName)
Builtin	./vim82/syntax/8th.vim	/^com! -nargs=+ Builtin syn keyword eighthBuiltin <args>$/;"	c
Builtin	./vim82/syntax/reva.vim	/^com! -nargs=+ Builtin syn keyword revaBuiltin <args>$/;"	c
BzlFoldText	./vim82/ftplugin/bzl.vim	/^function BzlFoldText() abort$/;"	f	signature:()
C	./vim82/macros/hanoi/hanoi.vim	/^map C "fp$/;"	m
C	./vim82/macros/life/life.vim	/^map C T>>>>>>>>B&$/;"	m
C	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap C J$/;"	m
C	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> C  :<C-U>call pymode#motion#select('^<Bslash>s*class<Bslash>s', 0)<CR>$/;"	m
CIfDef	./vimfiles/after/syntax/ifdef.vim	/^function! CIfDef()$/;"	f	signature:()
CMakeGetIndent	./vim82/indent/cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f	signature:(lnum)
CR	./vim82/optwin.vim	/^fun! <SID>CR()$/;"	f	signature:()
CSTAG_cpp	./VIMPROJ/Tool/InitCPP.vim	/^function CSTAG_cpp()$/;"	f	signature:()
CSTAG_default	./VIMPROJ/vimrc/_vimrc	/^function CSTAG_default()$/;"	f	signature:()
CSTAG_lgamesvr	./VIMPROJ/Tool/InitLGameSvr.vim	/^function CSTAG_lgamesvr()$/;"	f	signature:()
CSTAG_php	./VIMPROJ/Tool/InitPHP.vim	/^function CSTAG_php()$/;"	f	signature:()
CSTAG_python	./VIMPROJ/Tool/InitPython.vim	/^function CSTAG_python()$/;"	f	signature:()
CSTAG_vim	./VIMPROJ/Tool/InitVim.vim	/^function CSTAG_vim()$/;"	f	signature:()
Canvas	./vimfiles/autoload/DrawIt.vim	/^  com! -count Canvas call s:Spacer(line("."),line(".") + <count> - 1,0)$/;"	c
CdlAsignment	./vim82/indent/cdl.vim	/^fun! CdlAsignment(lnum, line)$/;"	f	signature:(lnum,line)
CdlGetIndent	./vim82/indent/cdl.vim	/^fun! CdlGetIndent(lnum)$/;"	f	signature:(lnum)
Cfilter	./vim82/pack/dist/opt/cfilter/plugin/cfilter.vim	/^com! -nargs=+ -bang Cfilter call s:Qf_filter(1, <q-args>, <q-bang>)$/;"	c
Clear	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Clear call s:ClearBreakpoint()$/;"	c
ClearAllBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ClearAllBookmarks call g:NERDTreeBookmark.ClearAll() <bar> call b:/;"	c
ClearAllCtrlPCaches	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearAllCtrlPCaches cal ctrlp#clra()$/;"	c
ClearBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=* ClearBookmarks cal/;"	c
ClearCtrlPCache	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar ClearCtrlPCache     cal ctrlp#clr()$/;"	c
Close	./vimfiles/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f	signature:()
CloseBug	./vim82/ftplugin/debchangelog.vim	/^function CloseBug()$/;"	f	signature:()
CobolIndentBlock	./vim82/ftplugin/cobol.vim	/^function! CobolIndentBlock(shift)$/;"	f	signature:(shift)
CompilerSet	./vim82/compiler/ant.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/bcc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/cargo.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/checkstyle.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/context.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/cs.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/csslint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/decada.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/dot.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/fortran_F.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/fortran_cv.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/fortran_elf90.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/fortran_g77.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/fortran_lf95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/fpc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/g95.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/gfortran.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/gnat.vim	/^   command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/hp_acc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/icc.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/ifort.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/intel.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/irix5_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/irix5_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/javac.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/jikes.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/mips_c.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/mipspro_c89.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/mipspro_cpp.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/modelsim_vcom.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/msbuild.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/neato.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/onsgmls.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/pbx.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/perl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/php.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/pylint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/pyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/rst.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/rustc.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/se.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/splint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/tcl.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/tex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/tidy.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/xbuild.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/xmllint.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vim82/compiler/xmlwf.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	./vimfiles/compiler/javac_ex.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
ConTeXt	./vim82/ftplugin/context.vim	/^command! -buffer -nargs=? -complete=file ConTeXt          call context#typeset(<q-args>)$/;"	c
ConTeXtJobStatus	./vim82/ftplugin/context.vim	/^command!         -nargs=0                ConTeXtJobStatus call context#job_status()$/;"	c
ConTeXtStopJobs	./vim82/ftplugin/context.vim	/^command!         -nargs=0                ConTeXtStopJobs  call context#stop_jobs()$/;"	c
Continue	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^    command Continue call s:SendCommand('continue')$/;"	c
Continue	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^    command Continue call term_sendkeys(s:gdbbuf, "continue\\r")$/;"	c
CountWrapper	./vim82/ftplugin/vhdl.vim	/^function! <SID>CountWrapper(cmd)$/;"	f	signature:(cmd)
Create_SSHConfig	./VIMPROJ/vimrc/option.vim	/^function Create_SSHConfig()$/;"	f	signature:()
CtrlP	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlP         cal ctrlp#init(0, { 'dir': <q-args> })$/;"	c
CtrlPAug	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	aug CtrlPAug$/;"	a
CtrlPBookmarkDir	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBookmarkDir cal ctrlp#init(ctrlp#bookmarkdir#id())$/;"	c
CtrlPBookmarkDirAdd	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir -bang CtrlPBookmarkDirAdd$/;"	c
CtrlPBufTag	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPBufTag$/;"	c
CtrlPBufTagAll	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBufTagAll cal ctrlp#init(ctrlp#buffertag#cmd(1))$/;"	c
CtrlPBuffer	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPBuffer   cal ctrlp#init('buf')$/;"	c
CtrlPChange	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPChange$/;"	c
CtrlPChangeAll	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPChangeAll   cal ctrlp#init(ctrlp#changes#cmd(1))$/;"	c
CtrlPClearAllCaches	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearAllCaches cal ctrlp#clra()$/;"	c
CtrlPClearCache	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPClearCache     cal ctrlp#clr()$/;"	c
CtrlPCmdline	./vimfiles/bundle/ctrlp-extensions.vim/after/plugin/ctrlp.vim	/^command! CtrlPCmdline call ctrlp#init(ctrlp#cmdline#id())$/;"	c
CtrlPCurFile	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurFile cal ctrlp#init('fil', { 'mode': 'c' })$/;"	c
CtrlPCurWD	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPCurWD   cal ctrlp#init('fil', { 'mode': '' })$/;"	c
CtrlPDir	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPDir$/;"	c
CtrlPLastMode	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? CtrlPLastMode cal ctrlp#init(-1, { 'args': <q-args> })$/;"	c
CtrlPLazy	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		aug CtrlPLazy$/;"	a
CtrlPLine	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=buffer CtrlPLine$/;"	c
CtrlPMRUF	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^	aug CtrlPMRUF$/;"	a
CtrlPMRUFiles	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -n=? -com=dir CtrlPMRUFiles cal ctrlp#init('mru', { 'dir': <q-args> })$/;"	c
CtrlPMenu	./vimfiles/bundle/ctrlp-extensions.vim/after/plugin/ctrlp.vim	/^command! CtrlPMenu call ctrlp#init(ctrlp#menu#id())$/;"	c
CtrlPMixed	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPMixed       cal ctrlp#init(ctrlp#mixed#id())$/;"	c
CtrlPMyMenu	./vimfiles/bundle/ctrlp-mymenu.vim/after/plugin/ctrlp.vim	/^command! CtrlPMyMenu call ctrlp#init(ctrlp#mymenu#id())$/;"	c
CtrlPQuickfix	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPQuickfix cal ctrlp#init(ctrlp#quickfix#id())$/;"	c
CtrlPRTS	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRTS       cal ctrlp#init(ctrlp#rtscript#id())$/;"	c
CtrlPRoot	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPRoot    cal ctrlp#init('fil', { 'mode': 'r' })$/;"	c
CtrlPTag	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPTag      cal ctrlp#init(ctrlp#tag#id())$/;"	c
CtrlPUndo	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^com! -bar CtrlPUndo      cal ctrlp#init(ctrlp#undo#id())$/;"	c
CtrlPYankring	./vimfiles/bundle/ctrlp-extensions.vim/after/plugin/ctrlp.vim	/^  command! CtrlPYankring call ctrlp#init(ctrlp#yankring#id())$/;"	c
CucumberComplete	./vim82/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f	signature:(findstart,base)
CurrentBufferIsModule	./vimfiles/bundle/jedi-vim/test/_utils.vim	/^function! CurrentBufferIsModule(module_name)$/;"	f	signature:(module_name)
Cycle	./vim82/ftplugin/gitrebase.vim	/^command! -buffer -count=1 -bar -bang Cycle call s:cycle(<bang>0 ? -<count> : <count>)$/;"	c
D	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap D E$/;"	m
D	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> D             :call <SID>BERemoveBuffer("wipe", "n")<cr>$/;"	m
D	./vimfiles/plugin/bufexplorer.vim	/^  xnoremap <buffer> <silent> D             :call <SID>BERemoveBuffer("wipe", "v")<cr>$/;"	m
DIstart	./vimfiles/plugin/DrawItPlugin.vim	/^com! -nargs=0 DIstart set lz|call DrawIt#StartDrawIt()|set nolz$/;"	c
DIstop	./vimfiles/plugin/DrawItPlugin.vim	/^com! -nargs=0 DIstop set lz|call DrawIt#StopDrawIt()|set nolz$/;"	c
DM	./vimfiles/plugin/cecutil.vim	/^com! -bar -nargs=1 DM	call DestroyMark(<q-args>)$/;"	c
Date	./vim82/ftplugin/debchangelog.vim	/^function <SID>Date()$/;"	f	signature:()
DebChangelogFoldText	./vim82/ftplugin/debchangelog.vim	/^function! DebChangelogFoldText()$/;"	f	signature:()
DebCompleteBugs	./vim82/ftplugin/debchangelog.vim	/^fun! DebCompleteBugs(findstart, base)$/;"	f	signature:(findstart,base)
DebControlFold	./vim82/ftplugin/debcontrol.vim	/^function! DebControlFold(l)$/;"	f	signature:(l)
DebControlFoldText	./vim82/ftplugin/debcontrol.vim	/^function! DebControlFoldText()$/;"	f	signature:()
DebGetChangelogFold	./vim82/ftplugin/debchangelog.vim	/^function! DebGetChangelogFold(lnum)$/;"	f	signature:(lnum)
DebGetPkgSrcName	./vim82/ftplugin/debchangelog.vim	/^function! DebGetPkgSrcName(lineno)$/;"	f	signature:(lineno)
DebugPrintReturn	./vim82/indent/php.vim	/^function! DebugPrintReturn(scriptLine)$/;"	f	signature:(scriptLine)
DefFCShell	./vimfiles/autoload/genutils.vim	/^    aug DefFCShell$/;"	a
Define	./vimfiles/after/syntax/ifdef.vim	/^com! -complete=customlist,Find_defines -nargs=1 Define call Define(<q-args>)$/;"	c
Define	./vimfiles/after/syntax/ifdef.vim	/^fun! Define(define)$/;"	f	signature:(define)
DestroyMark	./vimfiles/plugin/cecutil.vim	/^fun! DestroyMark(markname)$/;"	f	signature:(markname)
DiffGitCached	./vim82/ftplugin/gitcommit.vim	/^  command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:git/;"	c
DiffGitCached	./vim82/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdi/;"	c
DiffOrig	./vim82/defaults.vim	/^  command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis$/;"	c
Distribution	./vim82/ftplugin/debchangelog.vim	/^function Distribution(dist)$/;"	f	signature:(dist)
DoMappings	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! DoMappings()$/;"	f	signature:()
DoMatchParen	./vim82/plugin/matchparen.vim	/^command DoMatchParen call s:DoMatchParen()$/;"	c
DoRemoteReply	./vim82/plugin/rrhelper.vim	/^function DoRemoteReply(id, cnt, group, file)$/;"	f	signature:(id,cnt,group,file)
DoTarModifyFile	./VIMPROJ/Tool/InitBase.vim	/^function! DoTarModifyFile(root,iswindows,path,choice)$/;"	f	signature:(root,iswindows,path,choice)
Do_CsTag	./vimfiles/_vimrc	/^function Do_CsTag()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_af_af.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_ca_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_chinese_gb.936.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_chinese_taiwan.950.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^   fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_cs_cz.utf-8.vim	/^   fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_czech_czech_republic.1250.vim	/^   fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^   fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_da.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_de_de.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_eo.utf-8.vim	/^fun! Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_es_es.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_fi_fi.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_fr_fr.latin1.vim	/^fun! Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_hu_hu.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_is_is.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_ja_jp.euc-jp.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_ja_jp.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_japanese_japan.932.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_ko_kr.euckr.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_ko_kr.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_nl_nl.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_no_no.latin1.vim	/^	function Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_pl_pl.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_polish_poland.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_pt_br.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_pt_pt.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_ru_ru.koi8-r.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_ru_ru.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sk_sk.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sl_si.cp1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sl_si.latin2.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sl_si.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_slovak_slovak_republic.1250.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sr_rs.ascii.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sr_rs.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_sv_se.latin1.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_tr_tr.cp1254.vim	/^	fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^	fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_tr_tr.utf-8.vim	/^	fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_uk_ua.cp1251.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_uk_ua.koi8-u.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_vi_vn.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_zh_cn.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
Do_toolbar_tmenu	./vim82/lang/menu_zh_tw.utf-8.vim	/^  fun Do_toolbar_tmenu()$/;"	f	signature:()
DocumentLines	./vimfiles/bundle/pdv/tests/helpers/functions.vim	/^func! DocumentLines(doclines)$/;"	f	signature:(doclines)
DocumentLinesWithSnip	./vimfiles/bundle/pdv/tests/helpers/functions.vim	/^func! DocumentLinesWithSnip(doclines)$/;"	f	signature:(doclines)
DrawIt#SetBrush	./vimfiles/autoload/DrawIt.vim	/^fun! DrawIt#SetBrush(brush) range$/;"	f	signature:(brush)
DrawIt#StartDrawIt	./vimfiles/autoload/DrawIt.vim	/^fun! DrawIt#StartDrawIt()$/;"	f	signature:()
DrawIt#StopDrawIt	./vimfiles/autoload/DrawIt.vim	/^fun! DrawIt#StopDrawIt()$/;"	f	signature:()
Drop	./vim82/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Drop   :<line1>,<line2>call s:choose('drop')$/;"	c
DylanGetIndent	./vim82/indent/dylan.vim	/^function DylanGetIndent()$/;"	f	signature:()
E	./vim82/macros/hanoi/hanoi.vim	/^map E "hp$/;"	m
E	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap E >$/;"	m
EasyAlign	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^command! -nargs=* -range -bang EasyAlign <line1>,<line2>call easy_align#align(<bang>0, 0, 'comma/;"	c
Edit	./vim82/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Edit   :<line1>,<line2>call s:choose('edit')$/;"	c
EditExisting	./vim82/pack/dist/opt/editexisting/plugin/editexisting.vim	/^func! EditExisting(fname, command)$/;"	f	signature:(fname,command)
Email	./vim82/ftplugin/debchangelog.vim	/^function <SID>Email()$/;"	f	signature:()
EndsWith	./vimfiles/bundle/jedi-vim/test/_utils.vim	/^function EndsWith(string, end)$/;"	f	signature:(string,end)
ErlangFoldText	./vim82/ftplugin/erlang.vim	/^function ErlangFoldText()$/;"	f	signature:()
ErlangIndent	./vim82/indent/erlang.vim	/^function! ErlangIndent()$/;"	f	signature:()
ErubyAtCursor	./vim82/ftplugin/eruby.vim	/^function! ErubyAtCursor() abort$/;"	f	signature:()
Evaluate	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command -range -nargs=* Evaluate call s:Evaluate(<range>, <q-args>)$/;"	c
Explore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Explore		call netrw#Explore(<count>,0,0+<bang>0,/;"	c
ExtractSnips	./vimfiles/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f	signature:(dir,ft)
ExtractSnipsFile	./vimfiles/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f	signature:(file,ft)
F	./vim82/macros/hanoi/hanoi.vim	/^map F "hy2l$/;"	m
F	./vim82/macros/less.vim	/^map F :e<CR>G<SID>L:sleep 1<CR>F$/;"	m
F	./vim82/macros/urm/urm.vim	/^map F yl$/;"	m
F	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap F U$/;"	m
FalconGetIndent	./vim82/indent/falcon.vim	/^function FalconGetIndent(...)$/;"	f	signature:(...)
FileExplorer	./vim82/plugin/netrwPlugin.vim	/^augroup FileExplorer$/;"	a
Filename	./vimfiles/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f	signature:(...)
Finalise	./vim82/ftplugin/debchangelog.vim	/^function Finalise()$/;"	f	signature:()
FinaliseMenu	./vim82/ftplugin/debchangelog.vim	/^function <SID>FinaliseMenu()$/;"	f	signature:()
Finalised	./vim82/ftplugin/debchangelog.vim	/^function <SID>Finalised()$/;"	f	signature:()
Find	./vim82/optwin.vim	/^fun! <SID>Find(lnum)$/;"	f	signature:(lnum)
FindArrowIndent	./vim82/indent/php.vim	/^function! FindArrowIndent (lnum)  " {{{$/;"	f	signature:(lnum)
FindOpenBracket	./vim82/indent/php.vim	/^function! FindOpenBracket(lnum, blockStarter) " {{{$/;"	f	signature:(lnum,blockStarter)
FindPage	./vim82/ftplugin/man.vim	/^func <SID>FindPage(sect, page)$/;"	f	signature:(sect,page)
FindTheIfOfAnElse	./vim82/indent/php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f	signature:(lnum,StopAfterFirstPrevElse)
FindTheSwitchIndent	./vim82/indent/php.vim	/^function! FindTheSwitchIndent (lnum) " {{{$/;"	f	signature:(lnum)
Find_defines	./vimfiles/after/syntax/ifdef.vim	/^fun! Find_defines(A, L, P)$/;"	f	signature:(A,L,P)
Finish	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Finish call s:SendCommand('-exec-finish')$/;"	c
FixBeginfigs	./vim82/ftplugin/mp.vim	/^  command -nargs=0 FixBeginfigs call s:fix_beginfigs()$/;"	c
Fixedgq	./vim82/indent/typescript.vim	/^function! Fixedgq(lnum, count)$/;"	f	signature:(lnum,count)
Fixup	./vim82/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Fixup  :<line1>,<line2>call s:choose('fixup')$/;"	c
Foo	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  function! Foo() abort$/;"	f	signature:()
Foo	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  function! Foo() abort$/;"	f	signature:()
Foo	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  function! Foo() abort$/;"	f	signature:()
FormatRmd	./vim82/ftplugin/rmd.vim	/^function! FormatRmd()$/;"	f	signature:()
FormatRrst	./vim82/ftplugin/rrst.vim	/^function! FormatRrst()$/;"	f	signature:()
FortranGetFixedIndent	./vim82/indent/fortran.vim	/^function FortranGetFixedIndent()$/;"	f	signature:()
FortranGetFreeIndent	./vim82/indent/fortran.vim	/^function FortranGetFreeIndent()$/;"	f	signature:()
FortranGetIndent	./vim82/indent/fortran.vim	/^function FortranGetIndent(lnum)$/;"	f	signature:(lnum)
FufBookmarkDirAdd	./vimfiles/autoload/fuf/bookmarkdir.vim	/^  command! -bang -narg=?        FufBookmarkDirAdd call s:bookmark(<q-args>)$/;"	c
FufBookmarkFileAdd	./vimfiles/autoload/fuf/bookmarkfile.vim	/^  command! -bang -narg=?        FufBookmarkFileAdd               call s:bookmarkHere(<q-args>)$/;"	c
FufBookmarkFileAddAsSelectedText	./vimfiles/autoload/fuf/bookmarkfile.vim	/^  command! -bang -narg=0 -range FufBookmarkFileAddAsSelectedText call s:bookmarkHere(l9#getSelec/;"	c
FufCoverageFileChange	./vimfiles/autoload/fuf/coveragefile.vim	/^  command! -bang -narg=?        FufCoverageFileChange call s:changeCoverage(<q-args>)$/;"	c
FufCoverageFileRegister	./vimfiles/autoload/fuf/coveragefile.vim	/^  command! -bang -narg=0        FufCoverageFileRegister call s:registerCoverage()$/;"	c
FufEditDataFile	./vimfiles/plugin/fuf.vim	/^  command! -bang -narg=0 FufEditDataFile call fuf#editDataFile()$/;"	c
FufGlobal	./vimfiles/autoload/fuf.vim	/^augroup FufGlobal$/;"	a
FufLocal	./vimfiles/autoload/fuf.vim	/^  augroup FufLocal$/;"	a
FufRenewCache	./vimfiles/plugin/fuf.vim	/^  command! -bang -narg=0 FufRenewCache   call s:renewCachesOfAllModes()$/;"	c
FullName	./vim82/ftplugin/debchangelog.vim	/^function <SID>FullName()$/;"	f	signature:()
G	./vim82/macros/less.vim	/^noremap <script> G G<SID>L$/;"	m
G	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap G I$/;"	m
GCUpper	./vim82/ftplugin/zimbu.vim	/^func! GCUpper(what)$/;"	f	signature:(what)
GCUpperCommon	./vim82/ftplugin/zimbu.vim	/^func! GCUpperCommon(what)$/;"	f	signature:(what)
GCUpperDot	./vim82/ftplugin/zimbu.vim	/^func! GCUpperDot(what)$/;"	f	signature:(what)
GCUpperSpace	./vim82/ftplugin/zimbu.vim	/^func! GCUpperSpace(what)$/;"	f	signature:(what)
GUDebugEcho	./vimfiles/autoload/genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
Gdb	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Gdb call win_gotoid(s:gdbwin)$/;"	c
GetAdaIndent	./vim82/indent/ada.vim	/^function GetAdaIndent()$/;"	f	signature:()
GetAwkIndent	./vim82/indent/awk.vim	/^function! GetAwkIndent()$/;"	f	signature:()
GetBstIndent	./vim82/indent/bst.vim	/^function! GetBstIndent(lnum) abort$/;"	f	signature:(lnum)
GetBzlIndent	./vim82/indent/bzl.vim	/^function GetBzlIndent(lnum) abort$/;"	f	signature:(lnum)
GetCSIndent	./vim82/indent/cs.vim	/^function! GetCSIndent(lnum) abort$/;"	f	signature:(lnum)
GetCSSIndent	./vim82/indent/css.vim	/^function GetCSSIndent()$/;"	f	signature:()
GetChaiScriptIndent	./vim82/indent/chaiscript.vim	/^function! GetChaiScriptIndent()$/;"	f	signature:()
GetClojureIndent	./vim82/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f	signature:()
GetCmdArg	./vim82/ftplugin/man.vim	/^func <SID>GetCmdArg(sect, page)$/;"	f	signature:(sect,page)
GetCobolIndent	./vim82/indent/cobol.vim	/^function! GetCobolIndent(lnum) abort$/;"	f	signature:(lnum)
GetConTeXtIndent	./vim82/indent/context.vim	/^function! GetConTeXtIndent()$/;"	f	signature:()
GetConfigIndent	./vim82/indent/config.vim	/^function GetConfigIndent()$/;"	f	signature:()
GetCorrectRHelpIndent	./vim82/indent/rhelp.vim	/^function GetCorrectRHelpIndent()$/;"	f	signature:()
GetCucumberIndent	./vim82/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f	signature:()
GetDTDIndent	./vim82/indent/dtd.vim	/^function GetDTDIndent()$/;"	f	signature:()
GetDosBatchIndent	./vim82/indent/dosbatch.vim	/^function! GetDosBatchIndent(lnum)$/;"	f	signature:(lnum)
GetEiffelIndent	./vim82/indent/eiffel.vim	/^function GetEiffelIndent()$/;"	f	signature:()
GetErlangFold	./vim82/ftplugin/erlang.vim	/^function GetErlangFold(lnum)$/;"	f	signature:(lnum)
GetErubyIndent	./vim82/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f	signature:(...)
GetEtermIndent	./vim82/indent/eterm.vim	/^function GetEtermIndent()$/;"	f	signature:()
GetFrameScriptIndent	./vim82/indent/framescript.vim	/^function GetFrameScriptIndent()$/;"	f	signature:()
GetGitconfigIndent	./vim82/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f	signature:()
GetGitoliteIndent	./vim82/indent/gitolite.vim	/^function! GetGitoliteIndent()$/;"	f	signature:()
GetHamlIndent	./vim82/indent/haml.vim	/^function! GetHamlIndent()$/;"	f	signature:()
GetHogIndent	./vim82/indent/hog.vim	/^function GetHogIndent()$/;"	f	signature:()
GetIdlangIndent	./vim82/indent/idlang.vim	/^function GetIdlangIndent(lnum)$/;"	f	signature:(lnum)
GetIshdIndent	./vim82/indent/ishd.vim	/^fun! GetIshdIndent(lnum)$/;"	f	signature:(lnum)
GetJIndent	./vim82/indent/j.vim	/^function GetJIndent() abort$/;"	f	signature:()
GetJSONIndent	./vim82/indent/json.vim	/^function GetJSONIndent()$/;"	f	signature:()
GetJavaIndent	./vim82/indent/java.vim	/^function GetJavaIndent()$/;"	f	signature:()
GetJavascriptIndent	./vim82/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f	signature:()
GetLDIndent	./vim82/indent/ld.vim	/^function GetLDIndent()$/;"	f	signature:()
GetLastRealCodeLNum	./vim82/indent/php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f	signature:(startline)
GetLatestVimScripts	./vim82/autoload/getscript.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLatestVimScripts	./vim82/plugin/getscriptPlugin.vim	/^com!        -nargs=0 GetLatestVimScripts call getscript#GetLatestVimScripts()$/;"	c
GetLiquidIndent	./vim82/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f	signature:(...)
GetLogtalkIndent	./vim82/indent/logtalk.vim	/^function! GetLogtalkIndent()$/;"	f	signature:()
GetLuaIndent	./vim82/indent/lua.vim	/^function! GetLuaIndent()$/;"	f	signature:()
GetMakeIndent	./vim82/indent/make.vim	/^function GetMakeIndent()$/;"	f	signature:()
GetMatlabIndent	./vim82/indent/matlab.vim	/^function! GetMatlabIndent()$/;"	f	signature:()
GetMesonIndent	./vim82/indent/meson.vim	/^function GetMesonIndent(lnum)$/;"	f	signature:(lnum)
GetMetaPostIndent	./vim82/indent/mp.vim	/^function GetMetaPostIndent()$/;"	f	signature:()
GetMetaPostIndentIntern	./vim82/indent/mp.vim	/^function! GetMetaPostIndentIntern()$/;"	f	signature:()
GetMmaIndent	./vim82/indent/mma.vim	/^function GetMmaIndent()$/;"	f	signature:()
GetNsisIndent	./vim82/indent/nsis.vim	/^function! GetNsisIndent(lnum)$/;"	f	signature:(lnum)
GetOCamlIndent	./vim82/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f	signature:()
GetObjCIndent	./vim82/indent/objc.vim	/^function GetObjCIndent()$/;"	f	signature:()
GetOccamIndent	./vim82/indent/occam.vim	/^function GetOccamIndent()$/;"	f	signature:()
GetPage	./vim82/ftplugin/man.vim	/^func <SID>GetPage(cmdmods, ...)$/;"	f	signature:(cmdmods,...)
GetPascalIndent	./vim82/indent/pascal.vim	/^function! GetPascalIndent( line_num )$/;"	f	signature:( line_num )
GetPerl6Indent	./vim82/indent/perl6.vim	/^function! GetPerl6Indent()$/;"	f	signature:()
GetPerlIndent	./vim82/indent/perl.vim	/^function! GetPerlIndent()$/;"	f	signature:()
GetPhpIndent	./vim82/indent/php.vim	/^function! GetPhpIndent()$/;"	f	signature:()
GetPhpIndentVersion	./vim82/indent/php.vim	/^function! GetPhpIndentVersion()$/;"	f	signature:()
GetPoVRayIndent	./vim82/indent/pov.vim	/^function GetPoVRayIndent()$/;"	f	signature:()
GetPrologIndent	./vim82/indent/prolog.vim	/^function! GetPrologIndent()$/;"	f	signature:()
GetPythonIndent	./vim82/indent/python.vim	/^function GetPythonIndent(lnum)$/;"	f	signature:(lnum)
GetRHelpIndent	./vim82/indent/rhelp.vim	/^function GetRHelpIndent()$/;"	f	signature:()
GetRIndent	./vim82/indent/r.vim	/^function GetRIndent()$/;"	f	signature:()
GetRSTIndent	./vim82/indent/rst.vim	/^function GetRSTIndent()$/;"	f	signature:()
GetReadlineIndent	./vim82/indent/readline.vim	/^function GetReadlineIndent()$/;"	f	signature:()
GetRmdIndent	./vim82/indent/rmd.vim	/^function GetRmdIndent()$/;"	f	signature:()
GetRnowebIndent	./vim82/indent/rnoweb.vim	/^function GetRnowebIndent()$/;"	f	signature:()
GetRrstIndent	./vim82/indent/rrst.vim	/^function GetRrstIndent()$/;"	f	signature:()
GetRstIndent	./vim82/indent/rrst.vim	/^function GetRstIndent()$/;"	f	signature:()
GetRubyIndent	./vim82/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f	signature:(...)
GetRustIndent	./vim82/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f	signature:(lnum)
GetSASIndent	./vim82/indent/sas.vim	/^function! GetSASIndent()$/;"	f	signature:()
GetSDLIndent	./vim82/indent/sdl.vim	/^function! GetSDLIndent()$/;"	f	signature:()
GetSMLIndent	./vim82/indent/sml.vim	/^function! GetSMLIndent()$/;"	f	signature:()
GetSQLIndent	./vim82/indent/sqlanywhere.vim	/^function! GetSQLIndent()$/;"	f	signature:()
GetSassIndent	./vim82/indent/sass.vim	/^function! GetSassIndent()$/;"	f	signature:()
GetScalaIndent	./vim82/indent/scala.vim	/^function! GetScalaIndent()$/;"	f	signature:()
GetScript	./vim82/autoload/getscript.vim	/^com!        -nargs=0 GetScript           call getscript#GetLatestVimScripts()$/;"	c
GetScripts	./vim82/plugin/getscriptPlugin.vim	/^com!        -nargs=0 GetScripts          call getscript#GetLatestVimScripts()$/;"	c
GetShIndent	./vim82/indent/sh.vim	/^function! GetShIndent()$/;"	f	signature:()
GetSnippets	./vimfiles/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f	signature:(dir,filetypes)
GetStandardLibraryIndexInSysPath	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^def GetStandardLibraryIndexInSysPath():$/;"	f	signature:()
GetTFIndent	./vim82/indent/tf.vim	/^function GetTFIndent()$/;"	f	signature:()
GetTclIndent	./vim82/indent/tcl.vim	/^function GetTclIndent()$/;"	f	signature:()
GetTeXIndent	./vim82/indent/tex.vim	/^function! GetTeXIndent() " {{{$/;"	f	signature:()
GetTeraTermIndent	./vim82/indent/teraterm.vim	/^function! GetTeraTermIndent(lnum)$/;"	f	signature:(lnum)
GetTestData	./vimfiles/bundle/vmustache/tests/helpers/complex_data.vim	/^func! GetTestData()$/;"	f	signature:()
GetTildeIndent	./vim82/indent/tilde.vim	/^function GetTildeIndent(lnum)$/;"	f	signature:(lnum)
GetTreetopIndent	./vim82/indent/treetop.vim	/^function GetTreetopIndent()$/;"	f	signature:()
GetTypescriptIndent	./vim82/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f	signature:()
GetVHDLindent	./vim82/indent/vhdl.vim	/^function GetVHDLindent()$/;"	f	signature:()
GetVerilogIndent	./vim82/indent/verilog.vim	/^function GetVerilogIndent()$/;"	f	signature:()
GetVimIndent	./vim82/indent/vim.vim	/^function GetVimIndent()$/;"	f	signature:()
GetVimIndentIntern	./vim82/indent/vim.vim	/^function GetVimIndentIntern()$/;"	f	signature:()
GetXF86ConfIndent	./vim82/indent/xf86conf.vim	/^function GetXF86ConfIndent()$/;"	f	signature:()
GetXinetdIndent	./vim82/indent/xinetd.vim	/^function GetXinetdIndent()$/;"	f	signature:()
GetYAMLIndent	./vim82/indent/yaml.vim	/^function GetYAMLIndent(lnum)$/;"	f	signature:(lnum)
GetYaccIndent	./vim82/indent/yacc.vim	/^function GetYaccIndent()$/;"	f	signature:()
GetZimbuIndent	./vim82/indent/zimbu.vim	/^func GetZimbuIndent(lnum)$/;"	f	signature:(lnum)
GoIndent	./vim82/indent/go.vim	/^function! GoIndent(lnum)$/;"	f	signature:(lnum)
GoWinbufnr	./vimfiles/plugin/cecutil.vim	/^fun! GoWinbufnr(bufnum)$/;"	f	signature:(bufnum)
GprofJumpToFunctionIndex	./vim82/ftplugin/gprof.vim	/^fun! <SID>GprofJumpToFunctionIndex()$/;"	f	signature:()
GraphvizCompile	./vimfiles/after/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompile :call GraphvizCompile()$/;"	c
GraphvizCompile	./vimfiles/after/ftplugin/dot.vim	/^fu! GraphvizCompile(...)$/;"	f	signature:(...)
GraphvizCompile	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompile :call GraphvizCompile()$/;"	c
GraphvizCompile	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^fu! GraphvizCompile(...)$/;"	f	signature:(...)
GraphvizCompilePDF	./vimfiles/after/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompilePDF :call GraphvizCompile('pdf')$/;"	c
GraphvizCompilePDF	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompilePDF :call GraphvizCompile('pdf')$/;"	c
GraphvizCompilePS	./vimfiles/after/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompilePS :call GraphvizCompile('ps')$/;"	c
GraphvizCompilePS	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompilePS :call GraphvizCompile('ps')$/;"	c
GraphvizCompileToLaTeX	./vimfiles/after/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompileToLaTeX :call GraphvizCompileToLaTeX()$/;"	c
GraphvizCompileToLaTeX	./vimfiles/after/ftplugin/dot.vim	/^fu! GraphvizCompileToLaTeX(...)$/;"	f	signature:(...)
GraphvizCompileToLaTeX	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^com! -nargs=0 GraphvizCompileToLaTeX :call GraphvizCompileToLaTeX()$/;"	c
GraphvizCompileToLaTeX	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^fu! GraphvizCompileToLaTeX(...)$/;"	f	signature:(...)
GraphvizComplete	./vimfiles/after/ftplugin/dot.vim	/^fu! GraphvizComplete(findstart, base)$/;"	f	signature:(findstart,base)
GraphvizComplete	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^fu! GraphvizComplete(findstart, base)$/;"	f	signature:(findstart,base)
GraphvizShow	./vimfiles/after/ftplugin/dot.vim	/^com! -nargs=0 GraphvizShow : call GraphvizShow()$/;"	c
GraphvizShow	./vimfiles/after/ftplugin/dot.vim	/^fu! GraphvizShow()$/;"	f	signature:()
GraphvizShow	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^com! -nargs=0 GraphvizShow : call GraphvizShow()$/;"	c
GraphvizShow	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^fu! GraphvizShow()$/;"	f	signature:()
H	./vim82/macros/less.vim	/^map H h$/;"	m
H	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap H D$/;"	m
HamGetFreeIndent	./vim82/indent/hamster.vim	/^function HamGetFreeIndent()$/;"	f	signature:()
HamGetIndent	./vim82/indent/hamster.vim	/^function HamGetIndent(lnum)$/;"	f	signature:(lnum)
HasNoTagEnd	./vim82/indent/xml.vim	/^func! <SID>HasNoTagEnd(line)$/;"	f	signature:(line)
Header	./vim82/optwin.vim	/^fun! <SID>Header(text)$/;"	f	signature:(text)
Helptags	./vimfiles/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
Hexplore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Hexplore	call netrw#Explore(<count>,1,2+<bang>0,/;"	c
Hi	./vim82/syntax/sdl.vim	/^command -nargs=+ Hi     hi def <args>$/;"	c
Hi	./vim82/syntax/xpm2.vim	/^command -nargs=+ Hi hi def <args>$/;"	c
HiLink	./vim82/syntax/meson.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vim82/syntax/meson.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/after/syntax/cpp/stl.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/after/syntax/cpp/stl.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/bundle/python-mode/syntax/pyrex.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/bundle/python-mode/syntax/pyrex.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/syntax/jquery.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/syntax/jquery.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	./vimfiles/syntax/stap.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	./vimfiles/syntax/stap.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HtmlIndent	./vim82/indent/html.vim	/^func! HtmlIndent()$/;"	f	signature:()
HtmlIndent	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! HtmlIndent()$/;"	f	signature:()
HtmlIndent_CheckUserSettings	./vim82/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f	signature:()
HtmlIndent_CheckUserSettings	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f	signature:()
HtmlIndent_CountBraces	./vim82/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f	signature:(lnum)
HtmlIndent_CountBraces	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f	signature:(lnum)
HtmlIndent_FindStartTag	./vim82/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f	signature:()
HtmlIndent_FindStartTag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f	signature:()
HtmlIndent_FindTagEnd	./vim82/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f	signature:()
HtmlIndent_FindTagEnd	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f	signature:()
HtmlIndent_FindTagStart	./vim82/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f	signature:(lnum)
HtmlIndent_FindTagStart	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f	signature:(lnum)
HtmlIndent_IsOpenTag	./vim82/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f	signature:(tagname)
HtmlIndent_IsOpenTag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f	signature:(tagname)
I	./vim82/macros/hanoi/hanoi.vim	/^map I KMYNOQNOSkRTV$/;"	m
I	./vim82/macros/life/life.vim	/^map I G)0)0)0)0)1)0)0)2)0)0)0)0,ok,-11k,-,R,IIN$/;"	m
I	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap I C$/;"	m
I	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? I     call visincr#VisBlockIncr(s:I     , <f-args>)$/;"	c
IA	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IA	  call visincr#VisBlockIncr(s:IA    , <f-args>)$/;"	c
IB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IB    call visincr#VisBlockIncr(s:IB    , <f-args>)$/;"	c
ID	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? ID    call visincr#VisBlockIncr(s:ID    , <f-args>)$/;"	c
IDMY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IDMY  call visincr#VisBlockIncr(s:IDMY  , <f-args>)$/;"	c
II	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* II    call visincr#VisBlockIncr(s:II    , <f-args>)$/;"	c
IIB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIB   call visincr#VisBlockIncr(s:IIB   , <f-args>)$/;"	c
IIO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIO   call visincr#VisBlockIncr(s:IIO   , <f-args>)$/;"	c
IIPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIPOW call visincr#VisBlockIncr(s:IIPOW , <f-args>)$/;"	c
IIR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIR   call visincr#VisBlockIncr(s:IIR   , <f-args>)$/;"	c
IIX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IIX   call visincr#VisBlockIncr(s:IIX   , <f-args>)$/;"	c
IM	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IM    call visincr#VisBlockIncr(s:IM    , <f-args>)$/;"	c
IMDY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IMDY  call visincr#VisBlockIncr(s:IMDY  , <f-args>)$/;"	c
IO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IO    call visincr#VisBlockIncr(s:IO    , <f-args>)$/;"	c
IPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IPOW  call visincr#VisBlockIncr(s:IPOW  , <f-args>)$/;"	c
IR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IR    call visincr#VisBlockIncr(s:IR    , <f-args>)$/;"	c
IX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? IX    call visincr#VisBlockIncr(s:IX    , <f-args>)$/;"	c
IYMD	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* IYMD  call visincr#VisBlockIncr(s:IYMD  , <f-args>)$/;"	c
I\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> I	:<c-u>call <SID>NetrwBannerCtrl(1)<cr>$/;"	m
IfdefLoad	./vimfiles/after/syntax/ifdef.vim	/^fun! IfdefLoad()$/;"	f	signature:()
IndentCodeXml	./VIMPROJ/vimrc/_vimrc	/^function IndentCodeXml()$/;"	f	signature:()
InitCPP	./VIMPROJ/Tool/InitCPP.vim	/^function! InitCPP()$/;"	f	signature:()
InitCPP	./VIMPROJ/Tool/InitLGameSvr.vim	/^function! InitCPP()$/;"	f	signature:()
InitLua	./VIMPROJ/Tool/InitLua.vim	/^function! InitLua()$/;"	f	signature:()
InitPHP	./VIMPROJ/Tool/InitPHP.vim	/^function! InitPHP()$/;"	f	signature:()
InitPkm	./VIMPROJ/Tool/InitPkm.vim	/^function! InitPkm()$/;"	f	signature:()
InitPython	./VIMPROJ/Tool/InitPython.vim	/^function! InitPython()$/;"	f	signature:()
InitVim	./VIMPROJ/Tool/InitVim.vim	/^function! InitVim()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/AlphaTaiBai.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/CN_2C_Release.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/CN_2D_Release.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/CN_2E_Release.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/GITBA_python-plugin-sdk.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/GOpen_Tcaplus.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/GovVersion_20200201.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/Lgame-server_group3_daily_task.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/Server_proj.release_0.3.0.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/Server_proj.trunk.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/VIMPROJ.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/chinese-poetry.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/main.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/myLGameTools.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/myp4helper.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/python-plugin-sdk.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/release_3.2.0.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/release_3.3.0.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/release_3.4.0.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/release_3.5.0.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/template.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/tplugin-sdk.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/trunkmain.Configure_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
InitWorkSpace	./VIMPROJ/trunkmain.Server_proj.vim	/^function! InitWorkSpace()$/;"	f	signature:()
Init_F11	./VIMPROJ/vimrc/option.vim	/^function Init_F11()$/;"	f	signature:()
Init_PyenvConfig	./VIMPROJ/vimrc/option.vim	/^function Init_PyenvConfig()$/;"	f	signature:()
Init_SSHConfig	./VIMPROJ/vimrc/option.vim	/^function Init_SSHConfig()$/;"	f	signature:()
IsStandardLibraryFolder	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^def IsStandardLibraryFolder( path ):$/;"	f	signature:( path )
IsVirtualEnvLibraryFolder	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^def IsVirtualEnvLibraryFolder( path ):$/;"	f	signature:( path )
IsXMLContinuation	./vim82/indent/xml.vim	/^func! <SID>IsXMLContinuation(line)$/;"	f	signature:(line)
IslinePHP	./vim82/indent/php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f	signature:(lnum,tofind)
J	./vim82/macros/hanoi/hanoi.vim	/^map J \/^0[^t]*\$$/;"	m
J	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap J H$/;"	m
J	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^  nmap <silent> J :call <SID>DoRangeJoin("")<CR>$/;"	m
J	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^  vmap <silent> J <ESC>:call <SID>DoJoinRange(line("'<"), line("'>"))<CR>$/;"	m
JediChooseEnvironment	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^command! -nargs=? -complete=file JediChooseEnvironment :call jedi#choose_environment(<q-args>)$/;"	c
JediClearCache	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^command! -nargs=0 -bang JediClearCache call jedi#clear_cache(<bang>0)$/;"	c
JediDebugInfo	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^command! -nargs=0 -bar JediDebugInfo call s:jedi_debug_info()$/;"	c
JediLoadProject	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^command! -nargs=? -complete=file JediLoadProject :call jedi#load_project(<q-args>)$/;"	c
Justify	./vim82/pack/dist/opt/justify/plugin/justify.vim	/^com! -range -nargs=* Justify <line1>,<line2>call Justify(<f-args>)$/;"	c
Justify	./vim82/pack/dist/opt/justify/plugin/justify.vim	/^function! Justify(...) range$/;"	f	signature:(...)
Justify_error	./vim82/pack/dist/opt/justify/plugin/justify.vim	/^function! Justify_error(message)$/;"	f	signature:(message)
K	./vim82/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\/;"	m
K	./vim82/macros/hanoi/hanoi.vim	/^map K 1Go$/;"	m
K	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap K T$/;"	m
K	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  nnoremap K :Evaluate<CR>$/;"	m
KeywordLookup_systemd	./vim82/ftplugin/systemd.vim	/^  function KeywordLookup_systemd(keyword) abort$/;"	f	signature:(keyword)
L	./vim82/macros/hanoi/hanoi.vim	/^map L 1G\/t$/;"	m
L	./vim82/macros/life/life.vim	/^map L makf-h,1`ak,2`af-h,1`a,2`ajf-h,1`aj,2($/;"	m
L	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap L N$/;"	m
L9Assert	./vimfiles/plugin/l9.vim	/^  command -nargs=* L9Assert :$/;"	c
L9Assert	./vimfiles/plugin/l9.vim	/^  command -nargs=* L9Assert call eval((<args>) ? 0 : s:handleFailedAssersion(<q-args>))$/;"	c
L9GrepBuffer	./vimfiles/plugin/l9.vim	/^command -nargs=? L9GrepBuffer    call l9#grepBuffers(<q-args>, [bufnr('%')])$/;"	c
L9GrepBufferAll	./vimfiles/plugin/l9.vim	/^command -nargs=? L9GrepBufferAll call l9#grepBuffers(<q-args>, range(1, bufnr('$')))$/;"	c
L9TempBuffer	./vimfiles/autoload/l9/tempbuffer.vim	/^  augroup L9TempBuffer$/;"	a
L9Timer	./vimfiles/plugin/l9.vim	/^  command -nargs=1 L9Timer :$/;"	c
L9Timer	./vimfiles/plugin/l9.vim	/^  command -nargs=1 L9Timer call s:timerBegin(<q-args>)$/;"	c
L9TimerDump	./vimfiles/plugin/l9.vim	/^  command -nargs=0 L9TimerDump :$/;"	c
L9TimerDump	./vimfiles/plugin/l9.vim	/^  command -nargs=0 L9TimerDump call s:timerDump()$/;"	c
L9TimerStop	./vimfiles/plugin/l9.vim	/^  command -nargs=0 L9TimerStop :$/;"	c
L9TimerStop	./vimfiles/plugin/l9.vim	/^  command -nargs=0 L9TimerStop call s:timerStop()$/;"	c
LPE	./vim82/plugin/logiPat.vim	/^com!     -nargs=+ LPE			echomsg LogiPat(<q-args>)$/;"	c
Lexplore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir Lexplore	call netrw#Lexplore(<count>,<bang>0,<q-/;"	c
Lfilter	./vim82/pack/dist/opt/cfilter/plugin/cfilter.vim	/^com! -nargs=+ -bang Lfilter call s:Qf_filter(0, <q-args>, <q-bang>)$/;"	c
LiveEasyAlign	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^command! -nargs=* -range -bang LiveEasyAlign <line1>,<line2>call easy_align#align(<bang>0, 1, 'c/;"	c
LoadBufferMenu	./vim82/menu.vim	/^  augroup LoadBufferMenu$/;"	a
LogiPat	./vim82/plugin/logiPat.vim	/^com!     -nargs=* LogiPat		call   LogiPat(<q-args>,1)$/;"	c
LogiPat	./vim82/plugin/logiPat.vim	/^fun! LogiPat(pat,...)$/;"	f	signature:(pat,...)
LogiPatFlags	./vim82/plugin/logiPat.vim	/^com!     -nargs=+ LogiPatFlags	let  s:LogiPatFlags="<args>"$/;"	c
M	./vim82/macros/hanoi/hanoi.vim	/^map M dG$/;"	m
M	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap M M$/;"	m
M	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> M  :<C-U>call pymode#motion#select('^<Bslash>s*def<Bslash>s', 0)<CR>$/;"	m
MANPAGER	./vim82/plugin/manpager.vim	/^command! -nargs=0 MANPAGER call s:ManPager() | delcommand MANPAGER$/;"	c
MF	./vim82/autoload/netrw.vim	/^   com! -buffer -nargs=+ -complete=file	MF	call s:NetrwMarkFiles(0,<f-args>)$/;"	c
MF	./vim82/autoload/netrw.vim	/^   com! -buffer -nargs=+ -complete=file	MF	call s:NetrwMarkFiles(1,<f-args>)$/;"	c
MT	./vim82/autoload/netrw.vim	/^  com! -buffer -nargs=? -complete=file	MT	call s:NetrwMarkTarget(<q-args>)$/;"	c
Main	./VIMPROJ/Tool/main.vim	/^function! Main(pa)$/;"	f	signature:(pa)
MakeMenu	./vim82/ftplugin/debchangelog.vim	/^function <SID>MakeMenu()$/;"	f	signature:()
MakeSnip	./vimfiles/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f	signature:(scope,trigger,content,...)
Man	./vim82/ftplugin/man.vim	/^  com -nargs=+ -complete=shellcmd Man call s:GetPage(<q-mods>, <f-args>)$/;"	c
Mark	./vimfiles/autoload/mark.vim	/^augroup Mark$/;"	a
Mark	./vimfiles/plugin/mark.vim	/^command! -nargs=? Mark call mark#DoMark(<f-args>)$/;"	c
MarkClear	./vimfiles/plugin/mark.vim	/^command! -bar MarkClear call mark#ClearAll()$/;"	c
MarkInitialization	./vimfiles/plugin/mark.vim	/^	augroup MarkInitialization$/;"	a
MarkLoad	./vimfiles/plugin/mark.vim	/^command! -bar MarkLoad call mark#LoadCommand(1)$/;"	c
MarkSave	./vimfiles/plugin/mark.vim	/^command! -bar MarkSave call mark#SaveCommand()$/;"	c
MarkdownFold	./vim82/ftplugin/markdown.vim	/^function! MarkdownFold() abort$/;"	f	signature:()
MarkdownFoldText	./vim82/ftplugin/markdown.vim	/^function! MarkdownFoldText() abort$/;"	f	signature:()
Marvim_completion	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_completion(ArgLead, CmdLine, CursorPos)$/;"	f	signature:(ArgLead,CmdLine,CursorPos)
Marvim_file_run	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_file_run(macro_file)$/;"	f	signature:(macro_file)
Marvim_file_save	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_file_save(macro_name, data, exttype)$/;"	f	signature:(macro_name,data,exttype)
Marvim_get_directory	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_get_directory(fullfilename)$/;"	f	signature:(fullfilename)
Marvim_get_filename	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_get_filename(fullfilename)$/;"	f	signature:(fullfilename)
Marvim_input	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_input(prompt)$/;"	f	signature:(prompt)
Marvim_macro_store	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_macro_store()$/;"	f	signature:()
Marvim_ns_to_filename	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_ns_to_filename(macro_name)$/;"	f	signature:(macro_name)
Marvim_search	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_search()$/;"	f	signature:()
Marvim_template_store	./vimfiles/bundle/marvim/marvim.vim	/^function! Marvim_template_store()$/;"	f	signature:()
MatchDebug	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call matchit#Match_debug()$/;"	c
Matrix	./vimfiles/plugin/matrix.vim	/^   command! Matrix call Matrix()$/;"	c
Matrix	./vimfiles/plugin/matrix.vim	/^function! Matrix()$/;"	f	signature:()
MaximizeWindow	./VIMPROJ/Tool/main.vim	/^function! MaximizeWindow()    $/;"	f	signature:()
MenuExplOpen	./vim82/menu.vim	/^  fun MenuExplOpen()$/;"	f	signature:()
MkVimball	./vim82/plugin/vimballPlugin.vim	/^com! -range   -complete=file -nargs=+ -bang MkVimball		call vimball#MkVimball(<line1>,<line2>,<b/;"	c
MyDiff	./_vimrc	/^function MyDiff()$/;"	f	signature:()
N	./vim82/macros/hanoi/hanoi.vim	/^map N yy$/;"	m
N	./vim82/macros/less.vim	/^    noremap <script> N H0Nzt<SID>L$/;"	m
N	./vim82/macros/less.vim	/^    noremap <script> N Hg0Nzt<SID>L$/;"	m
N	./vim82/macros/less.vim	/^  noremap <script> N H$Nzt<SID>L$/;"	m
N	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap N B$/;"	m
NERDChristmasTree	./vimfiles/_vimrc	/^let NERDChristmasTree=1						" more colorful$/;"	v
NERDTree	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreateTabTree('<args>')$/;"	c
NERDTree	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTreeAddKeyMap	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f	signature:(options)
NERDTreeAddMenuItem	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f	signature:(options)
NERDTreeAddMenuSeparator	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f	signature:(...)
NERDTreeAddNode	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f	signature:()
NERDTreeAddPathFilter	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f	signature:(callback)
NERDTreeAddSubmenu	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f	signature:(options)
NERDTreeCWD	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f	signature:()
NERDTreeClose	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeClose :call g:NERDTree.Close()$/;"	c
NERDTreeCopyNode	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f	signature:()
NERDTreeDeleteNode	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f	signature:()
NERDTreeExecFile	./vimfiles/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f	signature:()
NERDTreeExecFileActive	./vimfiles/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f	signature:()
NERDTreeExecuteFile	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f	signature:()
NERDTreeFind	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	c
NERDTreeFocus	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f	signature:()
NERDTreeFromBookmark	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call/;"	c
NERDTreeHijackNetrw	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f	signature:()
NERDTreeListNodeWin32	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f	signature:()
NERDTreeMirror	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f	signature:()
NERDTreeQuickLook	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f	signature:()
NERDTreeRender	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f	signature:()
NERDTreeRevealInFinder	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f	signature:()
NERDTreeShowLineNumbers	./vimfiles/_vimrc	/^let NERDTreeShowLineNumbers=0				" show line number$/;"	v
NERDTreeToggle	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^    command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.ToggleTabTree('<args/;"	c
NERDTreeWinPos	./vimfiles/_vimrc	/^let NERDTreeWinPos="right"					" put NERDTree at right$/;"	v
NERDTreeWinSize	./vimfiles/_vimrc	/^let NERDTreeWinSize=25						" set size$/;"	v
NT	./VIMPROJ/vimrc/_vimrc	/^map NT :NERDTree<CR>$/;"	m
NT	./vimfiles/_vimrc	/^map NT :NERDTree<CR>$/;"	m
NetReadFixup	./vim82/autoload/netrw.vim	/^ fun! NetReadFixup(method, line1, line2)$/;"	f	signature:(method,line1,line2)
NetUserPass	./vim82/autoload/netrw.vim	/^fun! NetUserPass(...)$/;"	f	signature:(...)
NetUserPass	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=*		NetUserPass	call NetUserPass(<f-args>)$/;"	c
NetUserPass	./vim82/plugin/netrwPlugin.vim	/^fun! NetUserPass(...)$/;"	f	signature:(...)
NetrwC	./vim82/autoload/netrw.vim	/^  com! -nargs=*			    	NetrwC	call s:NetrwSetChgwin(<q-args>)$/;"	c
NetrwClean	./vim82/plugin/netrwPlugin.vim	/^com! -bang	NetrwClean	call netrw#Clean(<bang>0)$/;"	c
NetrwKeepj	./vim82/autoload/netrw.vim	/^ com! -nargs=*	NetrwKeepj	<args>$/;"	c
NetrwKeepj	./vim82/autoload/netrw.vim	/^ com! -nargs=*	NetrwKeepj	keepj <args>$/;"	c
NetrwMB	./vim82/autoload/netrw.vim	/^  com! -nargs=* -complete=file -bang	NetrwMB	call s:NetrwBookmark(<bang>0,<f-args>)$/;"	c
NetrwSettingHelp	./vim82/autoload/netrwSettings.vim	/^fun! NetrwSettingHelp()$/;"	f	signature:()
NetrwSettings	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=0	NetrwSettings	call netrwSettings#NetrwSettings()$/;"	c
NetrwStatusLine	./vim82/autoload/netrw.vim	/^fun! NetrwStatusLine()$/;"	f	signature:()
NetrwStatusLine	./vim82/plugin/netrwPlugin.vim	/^fun! NetrwStatusLine()$/;"	f	signature:()
Network	./vim82/plugin/netrwPlugin.vim	/^augroup Network$/;"	a
NewChangelogEntry	./vim82/ftplugin/changelog.vim	/^    command! -nargs=0 NewChangelogEntry call s:new_changelog_entry('')$/;"	c
NewVersion	./vim82/ftplugin/debchangelog.vim	/^function NewVersion()$/;"	f	signature:()
Nexplore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang			Nexplore	call netrw#Explore(-1,0,0,<q-args>)$/;"	c
NoMatchParen	./vim82/plugin/matchparen.vim	/^command NoMatchParen call s:NoMatchParen()$/;"	c
NotifyWindowClose	./vimfiles/autoload/genutils.vim	/^      aug NotifyWindowClose$/;"	a
NotifyWindowClose	./vimfiles/autoload/genutils.vim	/^  aug NotifyWindowClose$/;"	a
Nread	./vim82/plugin/netrwPlugin.vim	/^com! -count=1 -nargs=*	Nread		let s:svpos= winsaveview()<bar>call netrw#NetRead(<count>,<f-args>/;"	c
Nsource	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=*	        Nsource		let s:svpos= winsaveview()<bar>call netrw#NetSource(<f-args>)<bar/;"	c
Ntree	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=?		Ntree		call netrw#SetTreetop(1,<q-args>)$/;"	c
Nwrite	./vim82/plugin/netrwPlugin.vim	/^com! -range=% -nargs=*	Nwrite		let s:svpos= winsaveview()<bar><line1>,<line2>call netrw#NetWrite/;"	c
O	./vim82/macros/hanoi/hanoi.vim	/^map O p$/;"	m
O	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap O R$/;"	m
OCaml_switch	./vim82/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f	signature:(newwin)
OMLetFoldLevel	./vim82/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f	signature:(l)
O\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> O	:<c-u>call <SID>NetrwObtain(0)<cr>$/;"	m
O\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> O	:<c-u>call <SID>NetrwObtain(1)<cr>$/;"	m
Ocaml_get_type	./vim82/ftplugin/ocaml.vim	/^      function Ocaml_get_type(mode)$/;"	f	signature:(mode)
Ocaml_get_type_or_not	./vim82/ftplugin/ocaml.vim	/^      function Ocaml_get_type_or_not(mode)$/;"	f	signature:(mode)
Ocaml_print_type	./vim82/ftplugin/ocaml.vim	/^      function Ocaml_print_type(mode)$/;"	f	signature:(mode)
Ocpgrep	./vim82/ftplugin/ocaml.vim	/^command! -bar -bang -complete=file -nargs=+ Ocpgrep exe s:OcpGrep(<q-bang>, <q-args>)$/;"	c
OmniSyntaxList	./vim82/autoload/syntaxcomplete.vim	/^function! OmniSyntaxList(...)$/;"	f	signature:(...)
OmniSyntaxList	./vimfiles/autoload/syntaxcomplete.vim	/^function! OmniSyntaxList(...)$/;"	f	signature:(...)
OmniSyntaxShowChars	./vim82/autoload/syntaxcomplete.vim	/^function! OmniSyntaxShowChars(spec)$/;"	f	signature:(spec)
OmniSyntaxShowChars	./vimfiles/autoload/syntaxcomplete.vim	/^function! OmniSyntaxShowChars(spec)$/;"	f	signature:(spec)
OpenBookmark	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 OpenBookmark :call/;"	c
OpenBrowser	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^function! OpenBrowser(...)$/;"	f	signature:(...)
OpenBrowserSearch	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^function! OpenBrowserSearch(...)$/;"	f	signature:(...)
OpenLatestModifyFile	./VIMPROJ/Tool/InitBase.vim	/^function! OpenLatestModifyFile(root,iswindows)$/;"	f	signature:(root,iswindows)
OptionG	./vim82/optwin.vim	/^fun! <SID>OptionG(name, val)$/;"	f	signature:(name,val)
OptionL	./vim82/optwin.vim	/^fun! <SID>OptionL(name)$/;"	f	signature:(name)
Over	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Over call s:SendCommand('-exec-next')$/;"	c
P	./vim82/macros/hanoi/hanoi.vim	/^map P p$/;"	m
P	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap P L$/;"	m
P	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> P$/;"	m
P	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> P$/;"	m
PTvalue	./vim82/optwin.vim	/^fun! <SID>PTvalue()$/;"	f	signature:()
P\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> P	:<c-u>call <SID>NetrwPrevWinOpen(0)<cr>$/;"	m
P\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> P	:<c-u>call <SID>NetrwPrevWinOpen(1)<cr>$/;"	m
ParseDataToProps	./vim82/tools/unicode.vim	/^func! ParseDataToProps()$/;"	f	signature:()
ParseFoldProps	./vim82/tools/unicode.vim	/^func! ParseFoldProps()$/;"	f	signature:()
ParseWidthProps	./vim82/tools/unicode.vim	/^func! ParseWidthProps()$/;"	f	signature:()
Pexplore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang			Pexplore	call netrw#Explore(-2,0,0,<q-args>)$/;"	c
Pick	./vim82/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Pick   :<line1>,<line2>call s:choose('pick')$/;"	c
PopPage	./vim82/ftplugin/man.vim	/^func <SID>PopPage()$/;"	f	signature:()
PostscrIndentGet	./vim82/indent/postscr.vim	/^function! PostscrIndentGet(lnum)$/;"	f	signature:(lnum)
PreGetPage	./vim82/ftplugin/man.vim	/^func <SID>PreGetPage(cnt)$/;"	f	signature:(cnt)
Previm	./vimfiles/bundle/previm/plugin/previm.vim	/^  augroup Previm$/;"	a
Previm	./vimfiles/bundle/previm/plugin/previm.vim	/^augroup Previm$/;"	a
PrevimOpen	./vimfiles/bundle/previm/plugin/previm.vim	/^  command! -buffer -nargs=0 PrevimOpen call previm#open(previm#make_preview_file_path('index.htm/;"	c
PrevimSettings	./VIMPROJ/vimrc/_vimrc	/^augroup PrevimSettings$/;"	a
Program	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Program call s:GotoProgram()$/;"	c
Pyimport	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^command! -nargs=1 -complete=custom,jedi#py_import_completions Pyimport :call jedi#py_import(<q-a/;"	c
PymodeDoc	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer -nargs=1 PymodeDoc call pymode#doc#show("<args>")$/;"	c
PymodeLint	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer -nargs=0 PymodeLint :call pymode#lint#check()$/;"	c
PymodeLintAuto	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer -nargs=0 PymodeLintAuto :call pymode#lint#auto()$/;"	c
PymodeLintToggle	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer -nargs=0 PymodeLintToggle :call pymode#lint#toggle()$/;"	c
PymodeLocList.clear	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! g:PymodeLocList.clear() "{{{$/;"	f	signature:()
PymodeLocList.current	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! g:PymodeLocList.current() "{{{$/;"	f	signature:()
PymodeLocList.extend	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! g:PymodeLocList.extend(raw_list) "{{{$/;"	f	signature:(raw_list)
PymodeLocList.filter	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! g:PymodeLocList.filter(filters) "{{{$/;"	f	signature:(filters)
PymodeLocList.init	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! g:PymodeLocList.init(raw_list) "{{{$/;"	f	signature:(raw_list)
PymodeLocList.is_empty	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! g:PymodeLocList.is_empty() "{{{$/;"	f	signature:()
PymodeLocList.show	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! g:PymodeLocList.show() "{{{$/;"	f	signature:()
PymodePython	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    command! -nargs=1 PymodePython echo <args>$/;"	c
PymodePython	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    command! -nargs=1 PymodePython python <args>$/;"	c
PymodePython	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    command! -nargs=1 PymodePython python3 <args>$/;"	c
PymodeRopeAutoImport	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^        command! -buffer PymodeRopeAutoImport call pymode#rope#autoimport(expand('<cword>'))$/;"	c
PymodeRopeModuleToPackage	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer PymodeRopeModuleToPackage call pymode#rope#module_to_package()$/;"	c
PymodeRopeNewProject	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer -nargs=? PymodeRopeNewProject call pymode#rope#new(<f-args>)$/;"	c
PymodeRopeRedo	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer PymodeRopeRedo call pymode#rope#redo()$/;"	c
PymodeRopeRegenerate	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer PymodeRopeRegenerate call pymode#rope#regenerate()$/;"	c
PymodeRopeRenameModule	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer PymodeRopeRenameModule call pymode#rope#rename_module()$/;"	c
PymodeRopeUndo	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer PymodeRopeUndo call pymode#rope#undo()$/;"	c
PymodeRun	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    command! -buffer -nargs=0 -range=% PymodeRun call pymode#run#code_run(<f-line1>, <f-line2>)$/;"	c
PymodeSigns.clear	./vimfiles/bundle/python-mode/autoload/pymode/tools/signs.vim	/^fun! g:PymodeSigns.clear() "{{{$/;"	f	signature:()
PymodeSigns.enabled	./vimfiles/bundle/python-mode/autoload/pymode/tools/signs.vim	/^fun! g:PymodeSigns.enabled() "{{{$/;"	f	signature:()
PymodeSigns.place	./vimfiles/bundle/python-mode/autoload/pymode/tools/signs.vim	/^fun! g:PymodeSigns.place(loclist) "{{{$/;"	f	signature:(loclist)
PymodeSigns.refresh	./vimfiles/bundle/python-mode/autoload/pymode/tools/signs.vim	/^fun! g:PymodeSigns.refresh(loclist) "{{{$/;"	f	signature:(loclist)
PymodeSigns.setup	./vimfiles/bundle/python-mode/autoload/pymode/tools/signs.vim	/^fun! g:PymodeSigns.setup() "{{{$/;"	f	signature:()
PymodeTroubleshooting	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^com! PymodeTroubleshooting call pymode#troubleshooting#test()$/;"	c
PymodeVersion	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^com! PymodeVersion echomsg "Current python-mode version: " . g:pymode_version$/;"	c
PymodeVersion	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^command! PymodeVersion echomsg "Pymode version: " . g:pymode_version . " interpreter: " . g:pymo/;"	c
PymodeVirtualenv	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^command! -buffer -nargs=1 PymodeVirtualenv call pymode#virtualenv#activate(<args>)$/;"	c
Python_jump	./vim82/ftplugin/python.vim	/^  fun! <SID>Python_jump(mode, motion, flags, count, ...) range$/;"	f	signature:(mode,motion,flags,count,...)
Q	./vim82/defaults.vim	/^map Q gq$/;"	m
Q	./vim82/evim.vim	/^map Q gq$/;"	m
Q	./vim82/macros/hanoi/hanoi.vim	/^map Q 0iT$/;"	m
Q	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap Q "$/;"	m
QArgSplitter	./vimfiles/plugin/cecutil.vim	/^fun! QArgSplitter(qarg)$/;"	f	signature:(qarg)
R	./vim82/macros/hanoi/hanoi.vim	/^map R $rn$/;"	m
R	./vim82/macros/less.vim	/^noremap <script> R <C-L><SID>L$/;"	m
R	./vim82/macros/life/life.vim	/^map R CV$/;"	m
R	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap R P$/;"	m
R	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> R             :call <SID>BEToggleShowRelativePath()<cr>$/;"	m
RI	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RI     call visincr#VisBlockIncr(s:RI     , <f-args>)$/;"	c
RIA	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIA    call visincr#VisBlockIncr(s:RIA    , <f-args>)$/;"	c
RIB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIB    call visincr#VisBlockIncr(s:RIB    , <f-args>)$/;"	c
RID	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RID    call visincr#VisBlockIncr(s:RID    , <f-args>)$/;"	c
RIDMY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIDMY  call visincr#VisBlockIncr(s:RIDMY  , <f-args>)$/;"	c
RII	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RII    call visincr#VisBlockIncr(s:RII    , <f-args>)$/;"	c
RIIB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIB   call visincr#VisBlockIncr(s:RIIB   , <f-args>)$/;"	c
RIIO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIO   call visincr#VisOlockIncr(s:RIIO   , <f-args>)$/;"	c
RIIPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIIPOW call visincr#VisBlockIncr(s:RIIPOW , <f-args>)$/;"	c
RIIR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIR   call visincr#VisRlockIncr(s:RIIR   , <f-args>)$/;"	c
RIIX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIIX   call visincr#VisBlockIncr(s:RIIX   , <f-args>)$/;"	c
RIM	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIM    call visincr#VisBlockIncr(s:RIM    , <f-args>)$/;"	c
RIMDY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIMDY  call visincr#VisBlockIncr(s:RIMDY  , <f-args>)$/;"	c
RIO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIO    call visincr#VisOlockIncr(s:RIO    , <f-args>)$/;"	c
RIPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIPOW  call visincr#VisBlockIncr(s:RIPOW  , <f-args>)$/;"	c
RIR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIR    call visincr#VisRlockIncr(s:RIR    , <f-args>)$/;"	c
RIX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? RIX    call visincr#VisBlockIncr(s:RIX    , <f-args>)$/;"	c
RIYMD	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* RIYMD  call visincr#VisBlockIncr(s:RIYMD  , <f-args>)$/;"	c
RM	./vimfiles/plugin/cecutil.vim	/^com! -bar -nargs=1 RM	call RestoreMark(<q-args>)$/;"	c
RWP	./vimfiles/plugin/cecutil.vim	/^com! -bar -nargs=0 RWP	call RestoreWinPosn()$/;"	c
Range	./vim82/tools/unicode.vim	/^func! Range(ranges, start, end, step, add)$/;"	f	signature:(ranges,start,end,step,add)
ReadBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 ReadBookmarks call g:NERDTreeBookmark.CacheBookmarks(0) <bar> call/;"	c
ResetPhpOptions	./vim82/indent/php.vim	/^function! ResetPhpOptions()$/;"	f	signature:()
ResetSnippets	./vimfiles/plugin/snipMate.vim	/^fun! ResetSnippets()$/;"	f	signature:()
RestoreMark	./vimfiles/plugin/cecutil.vim	/^fun! RestoreMark(markname)$/;"	f	signature:(markname)
RestoreUserMaps	./vimfiles/plugin/cecutil.vim	/^fun! RestoreUserMaps(suffix)$/;"	f	signature:(suffix)
RestoreWinPosn	./vimfiles/plugin/cecutil.vim	/^fun! RestoreWinPosn(...)$/;"	f	signature:(...)
RevealBookmark	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -complete=customlist,nerdtree#completeBookmarks -nargs=1 RevealBookmark :ca/;"	c
Reword	./vim82/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Reword :<line1>,<line2>call s:choose('reword')$/;"	c
Rexplore	./vim82/autoload/netrw.vim	/^  com! Rexplore if exists("w:netrw_rexlocal")|call s:NetrwRexplore(w:netrw_rexlocal,exists("w:ne/;"	c
RmVimball	./vim82/plugin/vimballPlugin.vim	/^com! -nargs=* -complete=dir  RmVimball						call vimball#SaveSettings()|call vimball#RmVimball(</;"	c
RplGetFreeIndent	./vim82/indent/rpl.vim	/^function RplGetFreeIndent()$/;"	f	signature:()
RplGetIndent	./vim82/indent/rpl.vim	/^function RplGetIndent(lnum)$/;"	f	signature:(lnum)
RstFold	./vim82/ftplugin/rst.vim	/^  augroup RstFold$/;"	a
RstFold#GetRstFold	./vim82/autoload/RstFold.vim	/^function RstFold#GetRstFold()$/;"	f	signature:()
RstFold#GetRstFoldText	./vim82/autoload/RstFold.vim	/^function RstFold#GetRstFoldText()$/;"	f	signature:()
RubyBalloonexpr	./vim82/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f	signature:()
RubyCursorFile	./vim82/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f	signature:()
RubyCursorIdentifier	./vim82/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f	signature:()
RubyCursorTag	./vim82/ftplugin/ruby.vim	/^function! RubyCursorTag() abort$/;"	f	signature:()
Run	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command -nargs=* Run call s:Run(<q-args>)$/;"	c
RunHelp	./vim82/ftplugin/zsh.vim	/^   command! -buffer -nargs=1 RunHelp echo system('zsh -ic "autoload -Uz run-help; run-help <args/;"	c
RunHelp	./vim82/ftplugin/zsh.vim	/^   command! -buffer -nargs=1 RunHelp silent exe '!zsh -ic "autoload -Uz run-help; run-help <args/;"	c
RunHelp	./vim82/ftplugin/zsh.vim	/^   command! -buffer -nargs=1 RunHelp silent exe ':term zsh -ic "autoload -Uz run-help; run-help /;"	c
RustEmitAsm	./vim82/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	./vim82/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	./vim82/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Ex/;"	c
RustFmt	./vim82/ftplugin/rust.vim	/^command! -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	./vim82/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustPlay	./vim82/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	./vim82/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
S	./vim82/macros/hanoi/hanoi.vim	/^map S $r\$$/;"	m
S	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap S O$/;"	m
S	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> S             :call <SID>BEReverseSortSelect()<cr>$/;"	m
SM	./vimfiles/plugin/cecutil.vim	/^com! -bar -nargs=1 SM	call SaveMark(<q-args>)$/;"	c
SQLGetType	./vim82/ftplugin/sql.vim	/^    command! -nargs=0 SQLGetType :call SQL_GetType()$/;"	c
SQLSetType	./vim82/ftplugin/sql.vim	/^    command! -nargs=* -complete=custom,SQL_GetList SQLSetType :call SQL_SetType(<q-args>)$/;"	c
SQL_GetList	./vim82/ftplugin/sql.vim	/^    function SQL_GetList(ArgLead, CmdLine, CursorPos)$/;"	f	signature:(ArgLead,CmdLine,CursorPos)
SQL_GetType	./vim82/ftplugin/sql.vim	/^    function SQL_GetType()$/;"	f	signature:()
SQL_SetType	./vim82/ftplugin/sql.vim	/^    function SQL_SetType(name)$/;"	f	signature:(name)
SWP	./vimfiles/plugin/cecutil.vim	/^com! -bar -nargs=0 SWP	call SaveWinPosn()$/;"	c
S\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> S	:<c-u>call <SID>NetSortSequence(0)<cr>$/;"	m
S\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> S	:<c-u>call <SID>NetSortSequence(1)<cr>$/;"	m
SanitizeRLine	./vim82/indent/r.vim	/^function SanitizeRLine(line)$/;"	f	signature:(line)
SassIncludeExpr	./vim82/ftplugin/sass.vim	/^function! SassIncludeExpr(file) abort$/;"	f	signature:(file)
SaveLatestModifyFileName	./VIMPROJ/Tool/InitBase.vim	/^function! SaveLatestModifyFileName(is_update)$/;"	f	signature:(is_update)
SaveMark	./vimfiles/plugin/cecutil.vim	/^fun! SaveMark(markname)$/;"	f	signature:(markname)
SaveUserMaps	./vimfiles/plugin/cecutil.vim	/^fun! SaveUserMaps(mapmode,maplead,mapchx,suffix)$/;"	f	signature:(mapmode,maplead,mapchx,suffix)
SaveWinPosn	./vimfiles/plugin/cecutil.vim	/^fun! SaveWinPosn(...)$/;"	f	signature:(...)
SelectBufVimEnter	./vimfiles/plugin/bufexplorer.vim	/^  augroup SelectBufVimEnter$/;"	a
SetBrush	./vimfiles/autoload/DrawIt.vim	/^  com! -nargs=1 -range SetBrush <line1>,<line2>call DrawIt#SetBrush(<q-args>)$/;"	c
SetDrawIt	./vimfiles/autoload/DrawIt.vim	/^fun! SetDrawIt(di_vert,di_horiz,di_plus,di_upleft,di_upright,di_cross,di_ellipse)$/;"	f	signature:(di_vert,di_horiz,di_plus,di_upleft,di_upright,di_cross,di_ellipse)
SetProjType	./VIMPROJ/vimrc/_vimrc	/^function SetProjType()$/;"	f	signature:()
SetSyn	./vim82/synmenu.vim	/^fun! SetSyn(name)$/;"	f	signature:(name)
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/ExpandClassName_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentNameSpace_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/GetDocBlock_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/GetFunctionLocation_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/LoadData_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetUp	./vimfiles/bundle/phpcomplete.vim/tests/ParseDocBlock_test.vim	/^fun! SetUp()$/;"	f	signature:()
SetupLazyloadMenus	./vim82/menu.vim	/^  augroup SetupLazyloadMenus$/;"	a
SetupRemoteReplies	./vim82/plugin/rrhelper.vim	/^function SetupRemoteReplies()$/;"	f	signature:()
Sexplore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Sexplore	call netrw#Explore(<count>,1,0+<bang>0,/;"	c
ShFoldFunctions	./vim82/syntax/sh.vim	/^ com! -nargs=* ShFoldFunctions <args> fold$/;"	c
ShFoldFunctions	./vim82/syntax/sh.vim	/^ com! -nargs=* ShFoldFunctions <args>$/;"	c
ShFoldHereDoc	./vim82/syntax/sh.vim	/^ com! -nargs=* ShFoldHereDoc <args> fold$/;"	c
ShFoldHereDoc	./vim82/syntax/sh.vim	/^ com! -nargs=* ShFoldHereDoc <args>$/;"	c
ShFoldIfDoFor	./vim82/syntax/sh.vim	/^ com! -nargs=* ShFoldIfDoFor <args> fold$/;"	c
ShFoldIfDoFor	./vim82/syntax/sh.vim	/^ com! -nargs=* ShFoldIfDoFor <args>$/;"	c
ShowAvailableSnips	./vimfiles/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f	signature:()
Signature	./vimfiles/bundle/jedi-vim/test/vspec/signatures.vim	/^        function! Signature()$/;"	f	signature:()
SkipJavaBlanksAndComments	./vim82/indent/java.vim	/^function! SkipJavaBlanksAndComments(startline)$/;"	f	signature:(startline)
Skippmatch	./vim82/indent/php.vim	/^function! Skippmatch()	" {{{$/;"	f	signature:()
Skippmatch2	./vim82/indent/php.vim	/^function! Skippmatch2()$/;"	f	signature:()
Sman	./vim82/ftplugin/systemd.vim	/^  command! -buffer -nargs=1 Sman silent exe '!' . KeywordLookup_systemd(<q-args>) | redraw!$/;"	c
Sman	./vim82/ftplugin/systemd.vim	/^  command! -buffer -nargs=1 Sman silent exe 'term ' . KeywordLookup_systemd(<q-args>)$/;"	c
Source	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Source call s:GotoSourcewinOrCreateIt()$/;"	c
Space	./vim82/optwin.vim	/^fun! <SID>Space()$/;"	f	signature:()
SpellPopupMenu	./vim82/menu.vim	/^  augroup SpellPopupMenu$/;"	a
Squash	./vim82/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Squash :<line1>,<line2>call s:choose('squash')$/;"	c
StartBufExplorer	./vimfiles/plugin/bufexplorer.vim	/^function! StartBufExplorer(open)$/;"	f	signature:(open)
Step	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Step call s:SendCommand('-exec-step')$/;"	c
Stop	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Stop call s:SendCommand('-exec-interrupt')$/;"	c
StripEndlineComments	./vim82/indent/php.vim	/^function! StripEndlineComments (line)$/;"	f	signature:(line)
SuperTabAlternateCompletion	./vimfiles/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type)$/;"	f	signature:(type)
SuperTabChain	./vimfiles/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys) " {{{$/;"	f	signature:(completefunc,completekeys)
SuperTabCodeComplete	./vimfiles/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f	signature:(findstart,base)
SuperTabHelp	./vimfiles/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabLongestHighlight	./vimfiles/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir)$/;"	f	signature:(dir)
SuperTabSetCompletionType	./vimfiles/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type)$/;"	f	signature:(type)
SuperTabSetDefaultCompletionType	./vimfiles/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type)$/;"	f	signature:(type)
SwitchDir	./VIMPROJ/Tool/SwitchDir.vim	/^function! SwitchDir(filename)$/;"	f	signature:(filename)
Syn	./vim82/makemenu.vim	/^fun! <SID>Syn(arg)$/;"	f	signature:(arg)
SynColor	./vim82/syntax/doxygen.vim	/^    command -nargs=+ SynColor hi def <args>$/;"	c
SynColor	./vim82/syntax/syncolor.vim	/^    command -nargs=* SynColor hi <args>$/;"	c
SynColor	./vim82/syntax/syncolor.vim	/^    command -nargs=* SynColor hi def <args>$/;"	c
SynColor	./vim82/syntax/syncolor.vim	/^  command -nargs=* SynColor hi <args>$/;"	c
SynDisplay	./vim82/syntax/inform.vim	/^command -nargs=+ SynDisplay syntax <args> display$/;"	c
SynFold	./vim82/syntax/ruby.vim	/^com! -nargs=* SynFold call s:run_syntax_fold(<q-args>)$/;"	c
SynFold	./vim82/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args> fold$/;"	c
SynFold	./vim82/syntax/yacc.vim	/^ com! -nargs=+ SynFold	<args>$/;"	c
SynLink	./vim82/syntax/doxygen.vim	/^    command -nargs=+ SynLink hi def link <args>$/;"	c
SynLink	./vim82/syntax/syncolor.vim	/^    command -nargs=* SynLink hi def link <args>$/;"	c
SynLink	./vim82/syntax/syncolor.vim	/^    command -nargs=* SynLink hi! link <args>$/;"	c
SynLink	./vim82/syntax/syncolor.vim	/^  command -nargs=* SynLink hi link <args>$/;"	c
SynMenu	./vim82/makemenu.vim	/^command! -nargs=* SynMenu call <SID>Syn(<q-args>)$/;"	c
SystemVerilogIndent	./vim82/indent/systemverilog.vim	/^function SystemVerilogIndent()$/;"	f	signature:()
T	./vim82/macros/hanoi/hanoi.vim	/^map T ko0$/;"	m
T	./vim82/macros/life/life.vim	/^map T G,c2k,!9k,@,#j>2k,$j$/;"	m
T	./vim82/macros/urm/urm.vim	/^map T y\$$/;"	m
T	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap T Y$/;"	m
T	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> T             :call <SID>BEToggleShowTabBuffer()<cr>$/;"	m
TAPTestLine_foldtext	./vim82/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f	signature:()
TOhtml	./vim82/plugin/tohtml.vim	/^  command -range=% -bar TOhtml :call tohtml#Convert2HTML(<line1>, <line2>)$/;"	c
TP	./VIMPROJ/vimrc/_vimrc	/^nmap TP :call IndentCodeXml()<CR>$/;"	m
TagListAutoCmds	./vimfiles/plugin/taglist.vim	/^    augroup TagListAutoCmds$/;"	a
TagListMenuCmds	./vimfiles/plugin/taglist.vim	/^    augroup TagListMenuCmds$/;"	a
TagList_IsValid	./vimfiles/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f	signature:()
TagList_Start	./vimfiles/plugin/taglist.vim	/^function! TagList_Start()$/;"	f	signature:()
TagList_WrapUp	./vimfiles/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f	signature:()
TagList_title	./vimfiles/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TarModifyFile	./VIMPROJ/Tool/InitBase.vim	/^function! TarModifyFile()$/;"	f	signature:()
Tb\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> Tb	:<c-u>call <SID>NetrwSetTgt(0,'b',v:count1)<cr>$/;"	m
Tb\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> Tb	:<c-u>call <SID>NetrwSetTgt(1,'b',v:count1)<cr>$/;"	m
TcshGetIndent	./vim82/indent/tcsh.vim	/^function TcshGetIndent()$/;"	f	signature:()
TermDebug	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  augroup TermDebug$/;"	a
TermDebugBalloonExpr	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func TermDebugBalloonExpr()$/;"	f	signature:()
TermDebugSendCommand	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func TermDebugSendCommand(cmd)$/;"	f	signature:(cmd)
Termdebug	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command -nargs=* -complete=file -bang Termdebug echoerr s:err$/;"	c
Termdebug	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^command -nargs=* -complete=file -bang Termdebug call s:StartDebug(<bang>0, <f-args>)$/;"	c
TermdebugCommand	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command -nargs=+ -complete=file -bang TermdebugCommand echoerr s:err$/;"	c
TermdebugCommand	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^command -nargs=+ -complete=file -bang TermdebugCommand call s:StartDebugCommand(<bang>0, <f-args/;"	c
Test	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^  function! Test() abort$/;"	f	signature:()
Test	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^  function! Test() abort$/;"	f	signature:()
Test	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^  function! Test() abort$/;"	f	signature:()
TestCase_adds_arguments_of_constructors_for_built_in_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_adds_arguments_of_constructors_for_built_in_classes()$/;"	f	signature:()
TestCase_appends_relative_namespace_parts_from_classname_to_current_namespace	./vimfiles/bundle/phpcomplete.vim/tests/ExpandClassName_test.vim	/^fun! TestCase_appends_relative_namespace_parts_from_classname_to_current_namespace()$/;"	f	signature:()
TestCase_builtin_function_return_type	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_builtin_function_return_type()$/;"	f	signature:()
TestCase_can_generates_class_from_class_info	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^fun! TestCase_can_generates_class_from_class_info() " {{{$/;"	f	signature:()
TestCase_can_generates_empty_class	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^fun! TestCase_can_generates_empty_class() " {{{$/;"	f	signature:()
TestCase_catch_clause	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_catch_clause()$/;"	f	signature:()
TestCase_collects_lines_up_until_the_first_param_var_or_return_as_description_whitespace_trimmed_down_from_the_ends	./vimfiles/bundle/phpcomplete.vim/tests/ParseDocBlock_test.vim	/^fun! TestCase_collects_lines_up_until_the_first_param_var_or_return_as_description_whitespace_tr/;"	f	signature:()
TestCase_complete_classes_from_built_in_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_complete_classes_from_built_in_classes()$/;"	f	signature:()
TestCase_complete_classes_from_current_file	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_complete_classes_from_current_file()$/;"	f	signature:()
TestCase_complete_classes_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_complete_classes_from_tags()$/;"	f	signature:()
TestCase_complete_variables_built_in_global_variable	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^fun! TestCase_complete_variables_built_in_global_variable()$/;"	f	signature:()
TestCase_complete_variables_from_current_file	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^fun! TestCase_complete_variables_from_current_file()$/;"	f	signature:()
TestCase_complete_variables_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^fun! TestCase_complete_variables_from_tags()$/;"	f	signature:()
TestCase_completes_builtin_class_names	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_class_names() " {{{$/;"	f	signature:()
TestCase_completes_builtin_class_names_when_in_namespace_and_base_starts_with_slash	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_class_names_when_in_namespace_and_base_starts_with_slash() " {{{$/;"	f	signature:()
TestCase_completes_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^fun! TestCase_completes_builtin_classes()$/;"	f	signature:()
TestCase_completes_builtin_constants	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_constants() " {{{$/;"	f	signature:()
TestCase_completes_builtin_constants_when_in_namespace	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_constants_when_in_namespace() " {{{$/;"	f	signature:()
TestCase_completes_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_functions() " {{{$/;"	f	signature:()
TestCase_completes_builtin_functions_when_in_namespace	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_functions_when_in_namespace() " {{{$/;"	f	signature:()
TestCase_completes_builtin_interface_names	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_interface_names() " {{{$/;"	f	signature:()
TestCase_completes_builtin_keywords	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_builtin_keywords() " {{{$/;"	f	signature:()
TestCase_completes_class_names_from_imported_names	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_completes_class_names_from_imported_names()$/;"	f	signature:()
TestCase_completes_class_names_from_imported_namespaces_via_tags	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_completes_class_names_from_imported_namespaces_via_tags()$/;"	f	signature:()
TestCase_completes_class_names_from_tags_matching_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_class_names_from_tags_matching_namespaces() " {{{$/;"	f	signature:()
TestCase_completes_constants_from_local_file	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_constants_from_local_file() " {{{$/;"	f	signature:()
TestCase_completes_constants_from_tags_in_matching_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_constants_from_tags_in_matching_namespaces() " {{{$/;"	f	signature:()
TestCase_completes_function_signature_from_tags_if_field_available	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_function_signature_from_tags_if_field_available() " {{{$/;"	f	signature:()
TestCase_completes_function_signature_from_tags_if_field_available	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^fun! TestCase_completes_function_signature_from_tags_if_field_available()$/;"	f	signature:()
TestCase_completes_functions_classes_constants_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_functions_classes_constants_from_tags() " {{{$/;"	f	signature:()
TestCase_completes_functions_from_local_file	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_functions_from_local_file() " {{{$/;"	f	signature:()
TestCase_completes_namespace_names_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_namespace_names_from_tags() " {{{$/;"	f	signature:()
TestCase_completes_namespaces_and_classes_from_tags_when_a_leading_namespace_is_already_typed_in	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^fun! TestCase_completes_namespaces_and_classes_from_tags_when_a_leading_namespace_is_already_typ/;"	f	signature:()
TestCase_completes_namespaces_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^fun! TestCase_completes_namespaces_from_tags()$/;"	f	signature:()
TestCase_completes_top_level_functions_from_tags_in_matching_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_completes_top_level_functions_from_tags_in_matching_namespaces() " {{{$/;"	f	signature:()
TestCase_creates_various_global_hashes	./vimfiles/bundle/phpcomplete.vim/tests/LoadData_test.vim	/^fun! TestCase_creates_various_global_hashes()$/;"	f	signature:()
TestCase_doesnt_complete_keywords_when_theres_a_leading_slash	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_doesnt_complete_keywords_when_theres_a_leading_slash() " {{{$/;"	f	signature:()
TestCase_extract_class_from_the_same_file_when_line_referes_to_this	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_extract_class_from_the_same_file_when_line_referes_to_this()$/;"	f	signature:()
TestCase_extract_parameter_type_from_docblock	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_extract_parameter_type_from_docblock()$/;"	f	signature:()
TestCase_extract_typehint_from_function_calls	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_extract_typehint_from_function_calls()$/;"	f	signature:()
TestCase_extracts_namespace_from_classname_when_its_prefixed_with_absolute_namespace	./vimfiles/bundle/phpcomplete.vim/tests/ExpandClassName_test.vim	/^fun! TestCase_extracts_namespace_from_classname_when_its_prefixed_with_absolute_namespace()$/;"	f	signature:()
TestCase_extracts_parameters_with_types_and_descriptions	./vimfiles/bundle/phpcomplete.vim/tests/ParseDocBlock_test.vim	/^fun! TestCase_extracts_parameters_with_types_and_descriptions()$/;"	f	signature:()
TestCase_extracts_return_type_and_description	./vimfiles/bundle/phpcomplete.vim/tests/ParseDocBlock_test.vim	/^fun! TestCase_extracts_return_type_and_description()$/;"	f	signature:()
TestCase_extracts_throws_and_exception_lines_with_type_and_description	./vimfiles/bundle/phpcomplete.vim/tests/ParseDocBlock_test.vim	/^fun! TestCase_extracts_throws_and_exception_lines_with_type_and_description()$/;"	f	signature:()
TestCase_extracts_var_lines_with_type_and_description	./vimfiles/bundle/phpcomplete.vim/tests/ParseDocBlock_test.vim	/^fun! TestCase_extracts_var_lines_with_type_and_description()$/;"	f	signature:()
TestCase_filters_class_names_with_the_current_namespace_but_doesnt_add_the_current_namespace_to_the_completion_word	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_filters_class_names_with_the_current_namespace_but_doesnt_add_the_current_namespac/;"	f	signature:()
TestCase_filters_class_names_with_the_namespaces_typed_in_base	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^fun! TestCase_filters_class_names_with_the_namespaces_typed_in_base()$/;"	f	signature:()
TestCase_filters_for_instane_level_prefix	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_filters_for_instane_level_prefix()$/;"	f	signature:()
TestCase_filters_for_static_property_names	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_filters_for_static_property_names()$/;"	f	signature:()
TestCase_finds_abstract_classes	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_finds_abstract_classes()$/;"	f	signature:()
TestCase_finds_classes_from_variable_equals_new_class_lines	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_finds_classes_from_variable_equals_new_class_lines()$/;"	f	signature:()
TestCase_finds_common_singleton_getInstance_calls	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_finds_common_singleton_getInstance_calls()$/;"	f	signature:()
TestCase_finds_new_keyword_instantiations_in_parentheses_from_php5_4	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_finds_new_keyword_instantiations_in_parentheses_from_php5_4()$/;"	f	signature:()
TestCase_finds_variables_marked_with_AT_VAR_comments	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_finds_variables_marked_with_AT_VAR_comments()$/;"	f	signature:()
TestCase_function_invocation_return_type	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_function_invocation_return_type()$/;"	f	signature:()
TestCase_function_return_type	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_function_return_type()$/;"	f	signature:()
TestCase_handles_array_completion	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_handles_array_completion()$/;"	f	signature:()
TestCase_handles_matching_class_name_extends_with_different_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_handles_matching_class_name_extends_with_different_namespaces()$/;"	f	signature:()
TestCase_handles_parent_keyword	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_handles_parent_keyword()$/;"	f	signature:()
TestCase_have_no_empty_element_on_the_end_if_the_context_ended_with_an_arrow_or_double_colon	./vimfiles/bundle/phpcomplete.vim/tests/GetMethodStack_test.vim	/^fun! TestCase_have_no_empty_element_on_the_end_if_the_context_ended_with_an_arrow_or_double_colo/;"	f	signature:()
TestCase_honors_the_min_num_of_chars_for_namespace_completion_setting_for_classnames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^fun! TestCase_honors_the_min_num_of_chars_for_namespace_completion_setting_for_classnames()$/;"	f	signature:()
TestCase_honors_the_min_num_of_chars_for_namespace_completion_setting_for_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^fun! TestCase_honors_the_min_num_of_chars_for_namespace_completion_setting_for_namespaces()$/;"	f	signature:()
TestCase_ignores_arrows_and_double_colons_and_parents_inside_strings	./vimfiles/bundle/phpcomplete.vim/tests/GetMethodStack_test.vim	/^fun! TestCase_ignores_arrows_and_double_colons_and_parents_inside_strings()$/;"	f	signature:()
TestCase_ignores_arrows_and_double_colons_inside_paretns	./vimfiles/bundle/phpcomplete.vim/tests/GetMethodStack_test.vim	/^fun! TestCase_ignores_arrows_and_double_colons_inside_paretns()$/;"	f	signature:()
TestCase_matches_classname_from_imported_names	./vimfiles/bundle/phpcomplete.vim/tests/ExpandClassName_test.vim	/^fun! TestCase_matches_classname_from_imported_names()$/;"	f	signature:()
TestCase_matches_namespace_from_imported_names	./vimfiles/bundle/phpcomplete.vim/tests/ExpandClassName_test.vim	/^fun! TestCase_matches_namespace_from_imported_names()$/;"	f	signature:()
TestCase_only_reads_in_the_class_content	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_only_reads_in_the_class_content()$/;"	f	signature:()
TestCase_php_built_classnames_and_builtin_classes_are_indexed_lowercase	./vimfiles/bundle/phpcomplete.vim/tests/LoadData_test.vim	/^fun! TestCase_php_built_classnames_and_builtin_classes_are_indexed_lowercase()$/;"	f	signature:()
TestCase_reads_in_the_class_from_the_list_of_lines	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_reads_in_the_class_from_the_list_of_lines()$/;"	f	signature:()
TestCase_reads_in_the_extended_class_content	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_reads_in_the_extended_class_content()$/;"	f	signature:()
TestCase_reads_in_the_extended_classes_recursive	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_reads_in_the_extended_classes_recursive()$/;"	f	signature:()
TestCase_reads_in_the_extended_classes_recursive_with_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_reads_in_the_extended_classes_recursive_with_namespaces()$/;"	f	signature:()
TestCase_reads_in_the_extended_classes_with_imports	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_reads_in_the_extended_classes_with_imports()$/;"	f	signature:()
TestCase_removes_leading_slash	./vimfiles/bundle/phpcomplete.vim/tests/ExpandClassName_test.vim	/^fun! TestCase_removes_leading_slash()$/;"	f	signature:()
TestCase_resolves_call_chains_return_type_with_php5_4_new	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_call_chains_return_type_with_php5_4_new()$/;"	f	signature:()
TestCase_resolves_call_chains_return_type_with_tags	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_call_chains_return_type_with_tags()$/;"	f	signature:()
TestCase_resolves_call_chains_return_type_with_this	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_call_chains_return_type_with_this()$/;"	f	signature:()
TestCase_resolves_call_chains_return_type_with_when_chain_head_class_detectable	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_call_chains_return_type_with_when_chain_head_class_detectable()$/;"	f	signature:()
TestCase_resolves_call_chains_return_type_with_when_chain_head_class_detectable_with_builtin_types	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_call_chains_return_type_with_when_chain_head_class_detectable_with_builti/;"	f	signature:()
TestCase_resolves_classnames_with_multiple_methods_recursively	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_classnames_with_multiple_methods_recursively()$/;"	f	signature:()
TestCase_resolves_classnames_with_multiple_methods_recursively_even_with_extra_whitespace	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_classnames_with_multiple_methods_recursively_even_with_extra_whitespace()$/;"	f	signature:()
TestCase_resolves_self_this_static_in_return_docblock	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_self_this_static_in_return_docblock()$/;"	f	signature:()
TestCase_resolves_self_this_static_in_return_docblock_in_array_situation	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_resolves_self_this_static_in_return_docblock_in_array_situation()$/;"	f	signature:()
TestCase_return_VIMPHP_BUILTINFUNCTION_when_function_name_is_builtin	./vimfiles/bundle/phpcomplete.vim/tests/GetFunctionLocation_test.vim	/^fun! TestCase_return_VIMPHP_BUILTINFUNCTION_when_function_name_is_builtin()$/;"	f	signature:()
TestCase_return_VIMPHP_BUILTINOBJECT_when_classname_in_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^fun! TestCase_return_VIMPHP_BUILTINOBJECT_when_classname_in_builtin_classes()$/;"	f	signature:()
TestCase_return_class_location_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^fun! TestCase_return_class_location_from_tags()$/;"	f	signature:()
TestCase_return_current_file_path_when_classname_found_in_previous_lines_of_current_buffer	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^fun! TestCase_return_current_file_path_when_classname_found_in_previous_lines_of_current_buffer(/;"	f	signature:()
TestCase_return_current_file_path_when_function_declaration_is_found_in_the_file	./vimfiles/bundle/phpcomplete.vim/tests/GetFunctionLocation_test.vim	/^fun! TestCase_return_current_file_path_when_function_declaration_is_found_in_the_file()$/;"	f	signature:()
TestCase_return_function_location_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/GetFunctionLocation_test.vim	/^fun! TestCase_return_function_location_from_tags()$/;"	f	signature:()
TestCase_returns_built_in_object_functions	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^fun! TestCase_returns_built_in_object_functions()$/;"	f	signature:()
TestCase_returns_class_from_static_method_call	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_returns_class_from_static_method_call()$/;"	f	signature:()
TestCase_returns_class_from_tags_with_tag_of_v_kind_and_a_new_equals_class_cmd	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_returns_class_from_tags_with_tag_of_v_kind_and_a_new_equals_class_cmd()$/;"	f	signature:()
TestCase_returns_class_properties_from_current_file	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^fun! TestCase_returns_class_properties_from_current_file()$/;"	f	signature:()
TestCase_returns_closest_namespace_from_the_current_line	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentNameSpace_test.vim	/^fun! TestCase_returns_closest_namespace_from_the_current_line()$/;"	f	signature:()
TestCase_returns_completions_from_imported_names	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_returns_completions_from_imported_names() " {{{$/;"	f	signature:()
TestCase_returns_constants	./vimfiles/bundle/phpcomplete.vim/tests/CompleteBuiltInClass_test.vim	/^fun! TestCase_returns_constants()$/;"	f	signature:()
TestCase_returns_contents_of_a_class_regardless_of_comments_or_strings	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^fun! TestCase_returns_contents_of_a_class_regardless_of_comments_or_strings()$/;"	f	signature:()
TestCase_returns_current_symbol_under_cursor	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^fun! TestCase_returns_current_symbol_under_cursor()$/;"	f	signature:()
TestCase_returns_current_symbol_with_the_current_namespace_and_imports	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^fun! TestCase_returns_current_symbol_with_the_current_namespace_and_imports()$/;"	f	signature:()
TestCase_returns_empty_list_when_unknown_class_completion_disabled	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^fun! TestCase_returns_empty_list_when_unknown_class_completion_disabled()$/;"	f	signature:()
TestCase_returns_empty_string_when_no_comment_block_found	./vimfiles/bundle/phpcomplete.vim/tests/GetDocBlock_test.vim	/^fun! TestCase_returns_empty_string_when_no_comment_block_found()$/;"	f	signature:()
TestCase_returns_empty_strings_when_outside_php_block	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^fun! TestCase_returns_empty_strings_when_outside_php_block()$/;"	f	signature:()
TestCase_returns_empty_strings_when_symbol_not_found	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^fun! TestCase_returns_empty_strings_when_symbol_not_found()$/;"	f	signature:()
TestCase_returns_empty_when_sees_curlyclose_on_line_start	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_returns_empty_when_sees_curlyclose_on_line_start()$/;"	f	signature:()
TestCase_returns_everyting_instance_related_when_scope_is_in_class	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_returns_everyting_instance_related_when_scope_is_in_class()$/;"	f	signature:()
TestCase_returns_everyting_instance_related_when_scope_is_out_of_class	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_returns_everyting_instance_related_when_scope_is_out_of_class()$/;"	f	signature:()
TestCase_returns_everyting_static_when_scope_is_in_class	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_returns_everyting_static_when_scope_is_in_class()$/;"	f	signature:()
TestCase_returns_everyting_static_when_scope_is_out_of_class	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_returns_everyting_static_when_scope_is_out_of_class()$/;"	f	signature:()
TestCase_returns_first_non_primitive_type	./vimfiles/bundle/phpcomplete.vim/tests/GetTypeFromDocBlockParam_test.vim	/^fun! TestCase_returns_first_non_primitive_type()$/;"	f	signature:()
TestCase_returns_functions_from_current_file	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^fun! TestCase_returns_functions_from_current_file()$/;"	f	signature:()
TestCase_returns_functions_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^fun! TestCase_returns_functions_from_tags()$/;"	f	signature:()
TestCase_returns_imported_namespaces_and_classes_with_their_info_from_tags	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentNameSpace_test.vim	/^fun! TestCase_returns_imported_namespaces_and_classes_with_their_info_from_tags()$/;"	f	signature:()
TestCase_returns_input_if_no_pipe_detected	./vimfiles/bundle/phpcomplete.vim/tests/GetTypeFromDocBlockParam_test.vim	/^fun! TestCase_returns_input_if_no_pipe_detected()$/;"	f	signature:()
TestCase_returns_instuction_string	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentInstruction_test.vim	/^fun! TestCase_returns_instuction_string()$/;"	f	signature:()
TestCase_returns_location_for_inherited_methods	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^fun! TestCase_returns_location_for_inherited_methods()$/;"	f	signature:()
TestCase_returns_locations_for_reference_returning_functions	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^fun! TestCase_returns_locations_for_reference_returning_functions()$/;"	f	signature:()
TestCase_returns_methods	./vimfiles/bundle/phpcomplete.vim/tests/CompleteBuiltInClass_test.vim	/^fun! TestCase_returns_methods()$/;"	f	signature:()
TestCase_returns_namespace_from_file_lines	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentNameSpace_test.vim	/^fun! TestCase_returns_namespace_from_file_lines()$/;"	f	signature:()
TestCase_returns_non_explicit_static_methods_when_phpcomplete_relax_static_constraint_enabled	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_returns_non_explicit_static_methods_when_phpcomplete_relax_static_constraint_enabl/;"	f	signature:()
TestCase_returns_properties	./vimfiles/bundle/phpcomplete.vim/tests/CompleteBuiltInClass_test.vim	/^fun! TestCase_returns_properties()$/;"	f	signature:()
TestCase_returns_return_type_of_built_in_objects_static_methods	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_returns_return_type_of_built_in_objects_static_methods()$/;"	f	signature:()
TestCase_returns_slash_when_no_namespace_found	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentNameSpace_test.vim	/^fun! TestCase_returns_slash_when_no_namespace_found()$/;"	f	signature:()
TestCase_returns_static_function_calls_retun_type_with_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_returns_static_function_calls_retun_type_with_namespaces()$/;"	f	signature:()
TestCase_returns_static_function_calls_return_type	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^fun! TestCase_returns_static_function_calls_return_type()$/;"	f	signature:()
TestCase_returns_static_methods	./vimfiles/bundle/phpcomplete.vim/tests/CompleteBuiltInClass_test.vim	/^fun! TestCase_returns_static_methods()$/;"	f	signature:()
TestCase_returns_static_properties	./vimfiles/bundle/phpcomplete.vim/tests/CompleteBuiltInClass_test.vim	/^fun! TestCase_returns_static_properties()$/;"	f	signature:()
TestCase_returns_static_properties_with_only_a_dollarsign_base	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_returns_static_properties_with_only_a_dollarsign_base()$/;"	f	signature:()
TestCase_returns_symbol_locations	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^fun! TestCase_returns_symbol_locations()$/;"	f	signature:()
TestCase_returns_symbol_locations_with_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^fun! TestCase_returns_symbol_locations_with_namespaces()$/;"	f	signature:()
TestCase_returns_tags_from_imported_namespaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^fun! TestCase_returns_tags_from_imported_namespaces() " {{{$/;"	f	signature:()
TestCase_returns_the_comment_block_without_last_and_first_line_and_without_leading_stars	./vimfiles/bundle/phpcomplete.vim/tests/GetDocBlock_test.vim	/^fun! TestCase_returns_the_comment_block_without_last_and_first_line_and_without_leading_stars()$/;"	f	signature:()
TestCase_returns_the_first_type_if_only_primitives_found	./vimfiles/bundle/phpcomplete.vim/tests/GetTypeFromDocBlockParam_test.vim	/^fun! TestCase_returns_the_first_type_if_only_primitives_found()$/;"	f	signature:()
TestCase_returns_the_line_splited_on_arrows_and_double_colons	./vimfiles/bundle/phpcomplete.vim/tests/GetMethodStack_test.vim	/^fun! TestCase_returns_the_line_splited_on_arrows_and_double_colons()$/;"	f	signature:()
TestCase_returns_types_for_properties_and_return_types_from_docblock_comments	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^fun! TestCase_returns_types_for_properties_and_return_types_from_docblock_comments()$/;"	f	signature:()
TestCase_returns_zero_when_no_function_found_above	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentFunctionBoundaries_test.vim	/^fun! TestCase_returns_zero_when_no_function_found_above()$/;"	f	signature:()
TestFiletypeFuncs	./vim82/filetype.vim	/^func! TestFiletypeFuncs(testlist)$/;"	f	signature:(testlist)
TestSuperTabCodeComplete	./vimfiles/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f	signature:(findstart,base)
TexFold	./vim82/syntax/tex.vim	/^ com! -nargs=* TexFold <args> $/;"	c
TexFold	./vim82/syntax/tex.vim	/^ com! -nargs=* TexFold <args> fold $/;"	c
TexNewMathZone	./vim82/syntax/tex.vim	/^ fun! TexNewMathZone(sfx,mathzone,starform)$/;"	f	signature:(sfx,mathzone,starform)
Texplore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar       -count=0 -complete=dir	Texplore	call netrw#Explore(<count>,0,6        ,/;"	c
Th\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> Th	:<c-u>call <SID>NetrwSetTgt(0,'h',v:count)<cr>$/;"	m
Th\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> Th	:<c-u>call <SID>NetrwSetTgt(1,'h',v:count)<cr>$/;"	m
Tl	./VIMPROJ/vimrc/_vimrc	/^map Tl :silent! Tlist<CR> "按下F3就可以呼出了$/;"	m
Tl	./vimfiles/_vimrc	/^map Tl :silent! Tlist<CR> ".*F3.*Ϳ.*Ժ.*$/;"	m
Tlist	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	./vimfiles/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	./vimfiles/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	./vimfiles/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	./vimfiles/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	./vimfiles/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	./vimfiles/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	./vimfiles/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	./vimfiles/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	./vimfiles/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	./vimfiles/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Auto_Highlight_Tag	./vimfiles/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	./vimfiles/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	./vimfiles/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	./vimfiles/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f	signature:()
Tlist_Close_On_Select	./vimfiles/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	./vimfiles/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	./VIMPROJ/vimrc/_vimrc	/^let Tlist_Ctags_Cmd='ctags' "因为我们放在环境变量里，所以可以直接执行$/;"	v
Tlist_Ctags_Cmd	./vimfiles/_vimrc	/^let Tlist_Ctags_Cmd='ctags' ".*ڻ.*.*$/;"	v
Tlist_Ctags_Cmd	./vimfiles/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	./vimfiles/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	./vimfiles/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	./vimfiles/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	./vimfiles/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Display_Prototype	./vimfiles/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	./vimfiles/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	./vimfiles/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exit_OnlyWindow	./VIMPROJ/vimrc/_vimrc	/^let Tlist_Exit_OnlyWindow=1 "当taglist是最后一个分割窗口时，自动推出vim$/;"	v
Tlist_Exit_OnlyWindow	./vimfiles/_vimrc	/^let Tlist_Exit_OnlyWindow=1 ".*taglist.*һ.*.*Զ.*Ƴ.*vim$/;"	v
Tlist_Exit_OnlyWindow	./vimfiles/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_File_Fold_Auto_Close	./VIMPROJ/vimrc/_vimrc	/^let Tlist_File_Fold_Auto_Close=1 "非当前文件，函数列表折叠隐藏$/;"	v
Tlist_File_Fold_Auto_Close	./vimfiles/_vimrc	/^let Tlist_File_Fold_Auto_Close=1 ".*ǵ.*ǰ.*ļ.*۵.*$/;"	v
Tlist_File_Fold_Auto_Close	./vimfiles/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_GainFocus_On_ToggleOpen	./vimfiles/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Tag_Prototype_By_Line	./vimfiles/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f	signature:(...)
Tlist_Get_Tagname_By_Line	./vimfiles/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f	signature:(...)
Tlist_Highlight_Tag_On_BufEnter	./vimfiles/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	./VIMPROJ/vimrc/_vimrc	/^let Tlist_Inc_Winwidth=0$/;"	v
Tlist_Inc_Winwidth	./vimfiles/_vimrc	/^let Tlist_Inc_Winwidth=0$/;"	v
Tlist_Inc_Winwidth	./vimfiles/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	./vimfiles/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Max_Submenu_Items	./vimfiles/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	./vimfiles/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Process_File_Always	./VIMPROJ/vimrc/_vimrc	/^let Tlist_Process_File_Always=0 "不是一直实时更新tags，因为没有必要$/;"	v
Tlist_Process_File_Always	./vimfiles/_vimrc	/^let Tlist_Process_File_Always=0 ".*tags.*$/;"	v
Tlist_Process_File_Always	./vimfiles/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Set_App	./vimfiles/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f	signature:(name)
Tlist_Show_Menu	./vimfiles/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	./VIMPROJ/vimrc/_vimrc	/^let Tlist_Show_One_File=0 "让taglist可以同时展示多个文件的函数列表，如果想只/;"	v
Tlist_Show_One_File	./vimfiles/_vimrc	/^let Tlist_Show_One_File=0 ".*taglist.*չ.*ļ.*ĺ.*1.*1$/;"	v
Tlist_Show_One_File	./vimfiles/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Sort_Type	./vimfiles/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_File	./vimfiles/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f	signature:(filename,ftype)
Tlist_Use_Horiz_Window	./vimfiles/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	./VIMPROJ/vimrc/_vimrc	/^let Tlist_Use_Right_Window=0 "让窗口显示在右边，0的话就是显示在左边$/;"	v
Tlist_Use_Right_Window	./vimfiles/_vimrc	/^let Tlist_Use_Right_Window=0 ".*ô.*ұ.*0.*Ļ.*$/;"	v
Tlist_Use_Right_Window	./vimfiles/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	./vimfiles/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_WinHeight	./vimfiles/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	./vimfiles/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
TriggerSnippet	./vimfiles/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f	signature:()
U	./vim82/macros/hanoi/hanoi.vim	/^map U L$/;"	m
U	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap U G$/;"	m
U	./vimfiles/after/plugin/snipMate.vim	/^snor U b<bs>U$/;"	m
UPFILE_cpp	./VIMPROJ/Tool/InitCPP.vim	/^function UPFILE_cpp()$/;"	f	signature:()
UPFILE_default	./VIMPROJ/vimrc/_vimrc	/^function UPFILE_default()$/;"	f	signature:()
UPFILE_lgamesvr	./VIMPROJ/Tool/InitLGameSvr.vim	/^function UPFILE_lgamesvr()$/;"	f	signature:()
UPFILE_lua	./VIMPROJ/Tool/InitLua.vim	/^function! UPFILE_lua()$/;"	f	signature:()
UPFILE_php	./VIMPROJ/Tool/InitPHP.vim	/^function UPFILE_php()$/;"	f	signature:()
UPFILE_pkm	./VIMPROJ/Tool/InitPkm.vim	/^function UPFILE_pkm()$/;"	f	signature:()
UPFILE_python	./VIMPROJ/Tool/InitPython.vim	/^function UPFILE_python()$/;"	f	signature:()
UPFILE_vim	./VIMPROJ/Tool/InitVim.vim	/^function UPFILE_vim()$/;"	f	signature:()
U\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> U	:<c-u>call <SID>NetrwBookHistHandler(5,b:netrw_curdir)</;"	m
U\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> U	:<c-u>call <SID>NetrwBookHistHandler(5,expand("%"))<cr>$/;"	m
UltiSnips#AddFiletypes	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes)$/;"	f	signature:(filetypes)
UltiSnips#AddSnippetWithPriority	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, prior/;"	f	signature:(trigger,value,description,options,filetype,priority)
UltiSnips#Anon	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...)$/;"	f	signature:(value,...)
UltiSnips#CursorMoved	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved()$/;"	f	signature:()
UltiSnips#Edit	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...)$/;"	f	signature:(bang,...)
UltiSnips#ExpandSnippet	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet()$/;"	f	signature:()
UltiSnips#ExpandSnippetOrJump	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump()$/;"	f	signature:()
UltiSnips#FileTypeComplete	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos)$/;"	f	signature:(arglead,cmdline,cursorpos)
UltiSnips#JumpBackwards	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards()$/;"	f	signature:()
UltiSnips#JumpForwards	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards()$/;"	f	signature:()
UltiSnips#LeavingBuffer	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer()$/;"	f	signature:()
UltiSnips#LeavingInsertMode	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode()$/;"	f	signature:()
UltiSnips#ListSnippets	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets()$/;"	f	signature:()
UltiSnips#RefreshSnippets	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets()$/;"	f	signature:()
UltiSnips#SaveLastVisualSelection	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range$/;"	f	signature:()
UltiSnips#SnippetsInCurrentScope	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...)$/;"	f	signature:(...)
UltiSnips#TrackChange	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange()$/;"	f	signature:()
UltiSnips#map_keys#MapKeys	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys()$/;"	f	signature:()
UltiSnipsAddFiletypes	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnips_AutoTrigger	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
Undefine	./vimfiles/after/syntax/ifdef.vim	/^com! -complete=customlist,Find_defines -nargs=1 Undefine call Undefine(<q-args>)$/;"	c
Undefine	./vimfiles/after/syntax/ifdef.vim	/^fun! Undefine(define)$/;"	f	signature:(define)
Unfinalise	./vim82/ftplugin/debchangelog.vim	/^function Unfinalise()$/;"	f	signature:()
UnfinaliseMenu	./vim82/ftplugin/debchangelog.vim	/^function <SID>UnfinaliseMenu()$/;"	f	signature:()
Update	./vim82/optwin.vim	/^fun! <SID>Update(lnum, line, local, thiswin)$/;"	f	signature:(lnum,line,local,thiswin)
UpdatePath	./VIMPROJ/Tool/SwitchDir.vim	/^function! UpdatePath(root)$/;"	f	signature:(root)
Urgency	./vim82/ftplugin/debchangelog.vim	/^function Urgency(urg)$/;"	f	signature:(urg)
UseVimball	./vim82/plugin/vimballPlugin.vim	/^com! -nargs=? -complete=dir  UseVimball						call vimball#Vimball(1,<f-args>)$/;"	c
V	./vim82/macros/hanoi/hanoi.vim	/^map V Go\/$/;"	m
V	./vim82/macros/life/life.vim	/^map V R$/;"	m
V	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap V K$/;"	m
VI_I	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_I     call visincr#VisBlockIncr(s:I     , <f-args>)$/;"	c
VI_IA	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IA	  call visincr#VisBlockIncr(s:IA    , <f-args>)$/;"	c
VI_IB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IB    call visincr#VisBlockIncr(s:IB    , <f-args>)$/;"	c
VI_ID	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_ID    call visincr#VisBlockIncr(s:ID    , <f-args>)$/;"	c
VI_IDMY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IDMY  call visincr#VisBlockIncr(s:IDMY  , <f-args>)$/;"	c
VI_II	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_II    call visincr#VisBlockIncr(s:II    , <f-args>)$/;"	c
VI_IIB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIB   call visincr#VisBlockIncr(s:IIB   , <f-args>)$/;"	c
VI_IIO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIO   call visincr#VisBlockIncr(s:IIO   , <f-args>)$/;"	c
VI_IIPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIPOW call visincr#VisBlockIncr(s:IIPOW , <f-args>)$/;"	c
VI_IIR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIR   call visincr#VisBlockIncr(s:IIR   , <f-args>)$/;"	c
VI_IIX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IIX   call visincr#VisBlockIncr(s:IIX   , <f-args>)$/;"	c
VI_IM	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IM    call visincr#VisBlockIncr(s:IM    , <f-args>)$/;"	c
VI_IMDY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IMDY  call visincr#VisBlockIncr(s:IMDY  , <f-args>)$/;"	c
VI_IO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IO    call visincr#VisBlockIncr(s:IO    , <f-args>)$/;"	c
VI_IPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IPOW  call visincr#VisBlockIncr(s:IPOW  , <f-args>)$/;"	c
VI_IR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IR    call visincr#VisBlockIncr(s:IR    , <f-args>)$/;"	c
VI_IX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_IX    call visincr#VisBlockIncr(s:IX    , <f-args>)$/;"	c
VI_IYMD	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_IYMD  call visincr#VisBlockIncr(s:IYMD  , <f-args>)$/;"	c
VI_RI	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RI     call visincr#VisBlockIncr(s:RI     , <f-args>)$/;"	c
VI_RIA	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIA    call visincr#VisBlockIncr(s:RIA    , <f-args>)$/;"	c
VI_RIB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIB    call visincr#VisBlockIncr(s:RIB    , <f-args>)$/;"	c
VI_RID	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RID    call visincr#VisBlockIncr(s:RID    , <f-args>)$/;"	c
VI_RIDMY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIDMY  call visincr#VisBlockIncr(s:RIDMY  , <f-args>)$/;"	c
VI_RII	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RII    call visincr#VisBlockIncr(s:RII    , <f-args>)$/;"	c
VI_RIIB	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIB   call visincr#VisBlockIncr(s:RIIB   , <f-args>)$/;"	c
VI_RIIO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIO   call visincr#VisOlockIncr(s:RIIO   , <f-args>)$/;"	c
VI_RIIPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIIPOW call visincr#VisBlockIncr(s:RIIPOW , <f-args>)$/;"	c
VI_RIIR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIR   call visincr#VisRlockIncr(s:RIIR   , <f-args>)$/;"	c
VI_RIIX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIIX   call visincr#VisBlockIncr(s:RIIX   , <f-args>)$/;"	c
VI_RIM	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIM    call visincr#VisBlockIncr(s:RIM    , <f-args>)$/;"	c
VI_RIMDY	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIMDY  call visincr#VisBlockIncr(s:RIMDY  , <f-args>)$/;"	c
VI_RIO	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIO    call visincr#VisOlockIncr(s:RIO    , <f-args>)$/;"	c
VI_RIPOW	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIPOW  call visincr#VisBlockIncr(s:RIPOW  , <f-args>)$/;"	c
VI_RIR	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIR    call visincr#VisRlockIncr(s:RIR    , <f-args>)$/;"	c
VI_RIX	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=? VI_RIX    call visincr#VisBlockIncr(s:RIX    , <f-args>)$/;"	c
VI_RIYMD	./vimfiles/plugin/visincrPlugin.vim	/^  com! -ra -complete=expression -na=* VI_RIYMD  call visincr#VisBlockIncr(s:RIYMD  , <f-args>)$/;"	c
VbGetIndent	./vim82/indent/vb.vim	/^fun! VbGetIndent(lnum)$/;"	f	signature:(lnum)
VbSearch	./vim82/ftplugin/vb.vim	/^fun! <SID>VbSearch(pattern, flags)$/;"	f	signature:(pattern,flags)
Ve	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:fi/;"	c
Vedit	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:fi/;"	c
Vexplore	./vim82/plugin/netrwPlugin.vim	/^com! -nargs=* -bar -bang -count=0 -complete=dir	Vexplore	call netrw#Explore(<count>,1,4+<bang>0,/;"	c
VimFoldP	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldP <args> fold$/;"	c
VimFoldP	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldP <args>$/;"	c
VimFoldP	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldP	<args>$/;"	c
VimFolda	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFolda <args> fold$/;"	c
VimFolda	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFolda <args>$/;"	c
VimFolda	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFolda	<args>$/;"	c
VimFoldf	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldf <args> fold$/;"	c
VimFoldf	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldf <args>$/;"	c
VimFoldf	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldf	<args>$/;"	c
VimFoldh	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldh <args> fold$/;"	c
VimFoldh	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldh <args>$/;"	c
VimFoldh	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldh	<args>$/;"	c
VimFoldl	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldl <args> fold$/;"	c
VimFoldl	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldl <args>$/;"	c
VimFoldl	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldl	<args>$/;"	c
VimFoldm	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldm <args> fold$/;"	c
VimFoldm	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldm <args>$/;"	c
VimFoldm	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldm	<args>$/;"	c
VimFoldp	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldp <args> fold$/;"	c
VimFoldp	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldp <args>$/;"	c
VimFoldp	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldp	<args>$/;"	c
VimFoldr	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldr <args> fold$/;"	c
VimFoldr	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldr <args>$/;"	c
VimFoldr	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldr	<args>$/;"	c
VimFoldt	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldt <args> fold$/;"	c
VimFoldt	./vim82/syntax/vim.vim	/^  com! -nargs=* VimFoldt <args>$/;"	c
VimFoldt	./vim82/syntax/vim.vim	/^ com! -nargs=*	VimFoldt	<args>$/;"	c
VimFtpluginUndo	./vim82/ftplugin/vim.vim	/^  func VimFtpluginUndo()$/;"	f	signature:()
Vimball	./vim82/plugin/vimballPlugin.vim	/^augroup Vimball$/;"	a
VimballList	./vim82/plugin/vimballPlugin.vim	/^com! -nargs=0                VimballList					call vimball#Vimball(0)$/;"	c
Vimuntar	./vim82/plugin/tarPlugin.vim	/^com! -nargs=? -complete=file Vimuntar call tar#Vimuntar(<q-args>)$/;"	c
Vopen	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:fi/;"	c
Vpedit	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:fi/;"	c
Vread	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:fi/;"	c
Vsplit	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:fi/;"	c
Vtabedit	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:fi/;"	c
Vvsplit	./vimfiles/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:fi/;"	c
W	./vim82/macros/life/life.vim	/^map W makh,3`ah,3`ajh,3($/;"	m
W	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap W <$/;"	m
WarnIfNotUnfinalised	./vim82/ftplugin/debchangelog.vim	/^function <SID>WarnIfNotUnfinalised()$/;"	f	signature:()
Winbar	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  command Winbar call s:InstallWinbar()$/;"	c
WriteBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^    command! -buffer -nargs=0 WriteBookmarks call g:NERDTreeBookmark.Write()$/;"	c
X	./vim82/macros/hanoi/hanoi.vim	/^map X x$/;"	m
X	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap X Q$/;"	m
XMLent	./vim82/ftplugin/xml.vim	/^command! -nargs=? XMLent call xmlcomplete#CreateEntConnection(<f-args>)$/;"	c
XMLns	./vim82/ftplugin/xml.vim	/^command! -nargs=+ XMLns call xmlcomplete#CreateConnection(<f-args>)$/;"	c
X\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> X	:<c-u>call <SID>NetrwLocalExecute(expand("<cword>"))"<c/;"	m
Xf86confdeclopt	./vim82/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained nextgroup=xf86/;"	c
Xf86confdeclopt	./vim82/syntax/xf86conf.vim	/^	command -nargs=+ Xf86confdeclopt syn keyword xf86confOptionName <args> contained$/;"	c
XmlIndentComment	./vim82/indent/xml.vim	/^func! <SID>XmlIndentComment(lnum)$/;"	f	signature:(lnum)
XmlIndentGet	./vim82/indent/xml.vim	/^fun! XmlIndentGet(lnum, use_syntax_check)$/;"	f	signature:(lnum,use_syntax_check)
XmlIndentSum	./vim82/indent/xml.vim	/^fun! <SID>XmlIndentSum(line, style, add)$/;"	f	signature:(line,style,add)
XmlIndentSynCheck	./vim82/indent/xml.vim	/^fun! <SID>XmlIndentSynCheck(lnum)$/;"	f	signature:(lnum)
XmlIndentWithPattern	./vim82/indent/xml.vim	/^fun! <SID>XmlIndentWithPattern(line, pat)$/;"	f	signature:(line,pat)
Y	./vim82/macros/hanoi/hanoi.vim	/^map Y o0123456789Z0q$/;"	m
Y	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap Y F$/;"	m
YcmCompleter	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^          \\ YcmCompleter call s:CompleterCommand('',$/;"	c
YcmCompleter	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^          \\ YcmCompleter call s:CompleterCommand(<q-mods>,$/;"	c
YcmDebugInfo	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  command! YcmDebugInfo call s:DebugInfo()$/;"	c
YcmDiags	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  command! YcmDiags call s:ShowDiagnostics()$/;"	c
YcmForceCompileAndDiagnostics	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  command! YcmForceCompileAndDiagnostics call s:ForceCompileAndDiagnostics()$/;"	c
YcmRestartServer	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  command! YcmRestartServer call s:RestartServer()$/;"	c
YcmShowDetailedDiagnostic	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  command! YcmShowDetailedDiagnostic call s:ShowDetailedDiagnostic()$/;"	c
YcmToggleLogs	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^        \\ YcmToggleLogs call s:ToggleLogs(<f-args>)$/;"	c
Z	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap Z :$/;"	m
ZimbuGoEndBlock	./vim82/ftplugin/zimbu.vim	/^func! ZimbuGoEndBlock()$/;"	f	signature:()
ZimbuGoStartBlock	./vim82/ftplugin/zimbu.vim	/^func! ZimbuGoStartBlock()$/;"	f	signature:()
[	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap [ \/$/;"	m
["	./vim82/ftplugin/vim.vim	/^  nnoremap <silent><buffer> [" :call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
["	./vim82/ftplugin/vim.vim	/^  vnoremap <silent><buffer> [" :<C-U>exe "normal! gv"<Bar>call search('\\%(^\\s*".*\\n\\)\\%(^\\/;"	m
[#	./vim82/ftplugin/hamster.vim	/^noremap <silent><buffer> [# :call search('^\\s*#\\@!', "bW")<CR>$/;"	m
[%	./vim82/ftplugin/eiffel.vim	/^  noremap  [% <Nop>$/;"	m
[%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nmap <silent> [% <Plug>(MatchitNormalMultiBackward)$/;"	m
[%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^omap <silent> [% <Plug>(MatchitOperationMultiBackward)$/;"	m
[%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xmap <silent> [% <Plug>(MatchitVisualMultiBackward)$/;"	m
[-	./vim82/ftplugin/eiffel.vim	/^  nnoremap <silent> <buffer> [- :<C-U>call <SID>DoMotion(comment_block_end, 1, 'Wb')<CR>$/;"	m
[-	./vim82/ftplugin/eiffel.vim	/^  xnoremap <silent> <buffer> [- :<C-U>exe "normal! gv"<Bar>call <SID>DoMotion(comment_block_end,/;"	m
[<C-D>	./vim82/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
[C	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    nnoremap <buffer> [C  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', 'b/;"	m
[C	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> [C  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', 'b/;"	m
[M	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR/;"	m
[M	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','v')<CR/;"	m
[M	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    nnoremap <buffer> [M  :<C-U>call pymode#motion#move('^<Bslash>s*def<Bslash>s', 'b')<CR>$/;"	m
[M	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> [M  :<C-U>call pymode#motion#move('^<Bslash>s*def<Bslash>s', 'b')<CR>$/;"	m
[M	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> [M  :call pymode#motion#vmove('^<Bslash>s*def<Bslash>s', 'b')<CR>$/;"	m
[[	./vim82/autoload/netrw.vim	/^    nnoremap <silent> <buffer> [[       :sil call <SID>TreeListMove('[[')<cr>$/;"	m
[[	./vim82/ftplugin/abaqus.vim	/^noremap <silent><buffer> [[ ?^\\*\\a<CR>:nohlsearch<CR>$/;"	m
[[	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [[ m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
[[	./vim82/ftplugin/context.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	./vim82/ftplugin/context.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	./vim82/ftplugin/eiffel.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>DoMotion(sections, v:count1, 'Wb')<CR>$/;"	m
[[	./vim82/ftplugin/eiffel.vim	/^  xnoremap <silent> <buffer> [[ :<C-U>exe "normal! gv"<Bar>call <SID>DoMotion(sections, v:count1/;"	m
[[	./vim82/ftplugin/hamster.vim	/^noremap <silent><buffer> [[ :call search('^\\s*sub\\>', "bW")<CR>$/;"	m
[[	./vim82/ftplugin/j.vim	/^noremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, '')<CR>$/;"	m
[[	./vim82/ftplugin/j.vim	/^xnoremap <buffer> <silent> [[ :<C-U>call <SID>SearchSection(0, 1, visualmode())<CR>$/;"	m
[[	./vim82/ftplugin/mf.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	./vim82/ftplugin/mf.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	./vim82/ftplugin/mp.vim	/^nnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:false/;"	m
[[	./vim82/ftplugin/mp.vim	/^vnoremap <silent><buffer> [[ :<C-U>call <SID>move_around(v:count1, "beginsection", "bW", v:true)/;"	m
[[	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
[[	./vim82/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	./vim82/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	./vim82/ftplugin/rust.vim	/^xnoremap <silent> <buffer> [[ :call rust#Jump('v', 'Back')<CR>$/;"	m
[[	./vim82/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [[ :call search('\\c^\\s*begin\\>', 'bW' )<CR>$/;"	m
[[	./vim82/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [[ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'bW' )/;"	m
[[	./vim82/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [[ :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(/;"	m
[[	./vim82/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[[ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[[	./vim82/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[[ :<C-u>cal <SID>CountWrapper('[[')<CR>$/;"	m
[[	./vim82/ftplugin/vim.vim	/^  nnoremap <silent><buffer> [[ m':call search('^\\s*fu\\%[nction]\\>', "bW")<CR>$/;"	m
[[	./vim82/ftplugin/vim.vim	/^  vnoremap <silent><buffer> [[ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>',/;"	m
[[	./vim82/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> [[ m`:call ZimbuGoStartBlock()<CR>$/;"	m
[[	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    nnoremap <buffer> [[  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', 'b/;"	m
[[	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> [[  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', 'b/;"	m
[[	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> [[  :call pymode#motion#vmove('<Bslash>v^(class<bar>def)<Bslash>s', 'b')<C/;"	m
[[	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> [[   <C-o>:call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
[[	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> [[ :call <SID>Tlist_Window_Move_To_File(-1)<CR>$/;"	m
[\t:sil	./vim82/autoload/netrw.vim	/^     nno <silent> <buffer> [	:sil call <SID>TreeListMove('[')<cr>$/;"	m
[]	./vim82/autoload/netrw.vim	/^    nnoremap <silent> <buffer> []       :sil call <SID>TreeListMove('[]')<cr>$/;"	m
[]	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> [] m':call <SID>toend('b')<CR>$/;"	m
[]	./vim82/ftplugin/context.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	./vim82/ftplugin/context.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	./vim82/ftplugin/hamster.vim	/^noremap <silent><buffer> [] :call search('^\\s*endsub\\>', "bW")<CR>$/;"	m
[]	./vim82/ftplugin/j.vim	/^noremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, '')<CR>$/;"	m
[]	./vim82/ftplugin/j.vim	/^xnoremap <buffer> <silent> [] :<C-U>call <SID>SearchSection(1, 1, visualmode())<CR>$/;"	m
[]	./vim82/ftplugin/mf.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	./vim82/ftplugin/mf.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	./vim82/ftplugin/mp.vim	/^nnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:false/;"	m
[]	./vim82/ftplugin/mp.vim	/^vnoremap <silent><buffer> [] :<C-U>call <SID>move_around(v:count1, "endsection",   "bW", v:true)/;"	m
[]	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
[]	./vim82/ftplugin/sql.vim	/^nnoremap <buffer> <silent> [] :call search('\\c^\\s*end\\W*$', 'bW' )<CR>$/;"	m
[]	./vim82/ftplugin/sql.vim	/^xnoremap <buffer> <silent> [] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'bW' )/;"	m
[]	./vim82/ftplugin/vb.vim	/^nnoremap <buffer> <silent> [] :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', /;"	m
[]	./vim82/ftplugin/vhdl.vim	/^noremap  <buffer><silent>[] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
[]	./vim82/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>[] :<C-u>cal <SID>CountWrapper('[]')<CR>$/;"	m
[]	./vim82/ftplugin/vim.vim	/^  nnoremap <silent><buffer> [] m':call search('^\\s*endf\\%[unction]\\>', "bW")<CR>$/;"	m
[]	./vim82/ftplugin/vim.vim	/^  vnoremap <silent><buffer> [] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf\\%[unction]\\/;"	m
[d	./vim82/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[m	./vim82/ftplugin/eiffel.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>DoFeatureMotion(v:count1, 'Wb')<CR>$/;"	m
[m	./vim82/ftplugin/eiffel.vim	/^  xnoremap <silent> <buffer> [m :<C-U>exe "normal! gv"<Bar>call <SID>DoFeatureMotion(v:count1, '/;"	m
[m	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR/;"	m
[m	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','v')<CR/;"	m
[{	./vim82/ftplugin/context.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	./vim82/ftplugin/context.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
[{	./vim82/ftplugin/mf.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	./vim82/ftplugin/mf.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
[{	./vim82/ftplugin/mp.vim	/^nnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:false/;"	m
[{	./vim82/ftplugin/mp.vim	/^vnoremap <silent><buffer> [{ :<C-U>call <SID>move_around(v:count1, "beginblock",   "bW", v:true)/;"	m
\\	./vimfiles/after/plugin/snipMate.vim	/^snor \\ b<bs>\\$/;"	m
]	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap ] =$/;"	m
]"	./vim82/ftplugin/vim.vim	/^  nnoremap <silent><buffer> ]" :call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]"	./vim82/ftplugin/vim.vim	/^  vnoremap <silent><buffer> ]" :<C-U>exe "normal! gv"<Bar>call search('^\\(\\s*".*\\n\\)\\@<!\\(/;"	m
]#	./vim82/ftplugin/hamster.vim	/^noremap <silent><buffer> ]# :call search('^\\s*#\\@!', "W")<CR>$/;"	m
]%	./vim82/ftplugin/eiffel.vim	/^  noremap  ]% <Nop>$/;"	m
]%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nmap <silent> ]% <Plug>(MatchitNormalMultiForward)$/;"	m
]%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^omap <silent> ]% <Plug>(MatchitOperationMultiForward)$/;"	m
]%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xmap <silent> ]% <Plug>(MatchitVisualMultiForward)$/;"	m
]-	./vim82/ftplugin/eiffel.vim	/^  nnoremap <silent> <buffer> ]- :<C-U>call <SID>DoMotion(comment_block_start, 1, 'W')<CR>$/;"	m
]-	./vim82/ftplugin/eiffel.vim	/^  xnoremap <silent> <buffer> ]- :<C-U>exe "normal! gv"<Bar>call <SID>DoMotion(comment_block_star/;"	m
]<C-D>	./vim82/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldop/;"	m
]C	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    nnoremap <buffer> ]C  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', ''/;"	m
]C	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> ]C  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', ''/;"	m
]M	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
]M	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','v')<CR>$/;"	m
]M	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    nnoremap <buffer> ]M  :<C-U>call pymode#motion#move('^<Bslash>s*def<Bslash>s', '')<CR>$/;"	m
]M	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> ]M  :<C-U>call pymode#motion#move('^<Bslash>s*def<Bslash>s', '')<CR>$/;"	m
]M	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> ]M  :call pymode#motion#vmove('^<Bslash>s*def<Bslash>s', '')<CR>$/;"	m
][	./vim82/autoload/netrw.vim	/^    nnoremap <silent> <buffer> ][       :sil call <SID>TreeListMove('][')<cr>$/;"	m
][	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ][ m':call <SID>toend('')<CR>$/;"	m
][	./vim82/ftplugin/context.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	./vim82/ftplugin/context.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	./vim82/ftplugin/hamster.vim	/^noremap <silent><buffer> ][ :call search('^\\s*endsub\\>', "W")<CR>$/;"	m
][	./vim82/ftplugin/j.vim	/^noremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, '')<CR>$/;"	m
][	./vim82/ftplugin/j.vim	/^xnoremap <buffer> <silent> ][ :<C-U>call <SID>SearchSection(1, 0, visualmode())<CR>$/;"	m
][	./vim82/ftplugin/mf.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	./vim82/ftplugin/mf.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	./vim82/ftplugin/mp.vim	/^nnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:false/;"	m
][	./vim82/ftplugin/mp.vim	/^vnoremap <silent><buffer> ][ :<C-U>call <SID>move_around(v:count1, "endsection",   "W",  v:true)/;"	m
][	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass']/;"	m
][	./vim82/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ][ :call search('\\c^\\s*end\\W*$', 'W' )<CR>$/;"	m
][	./vim82/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ][ :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*end\\W*$', 'W' )</;"	m
][	./vim82/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ][ :call <SID>VbSearch('^\\s*\\<end\\>\\s\\+\\(function\\\\|sub\\)', /;"	m
][	./vim82/ftplugin/vhdl.vim	/^noremap  <buffer><silent>][ :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
][	./vim82/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>][ :<C-u>cal <SID>CountWrapper('][')<CR>$/;"	m
][	./vim82/ftplugin/vim.vim	/^  nnoremap <silent><buffer> ][ m':call search('^\\s*endf\\%[unction]\\>', "W")<CR>$/;"	m
][	./vim82/ftplugin/vim.vim	/^  vnoremap <silent><buffer> ][ m':<C-U>exe "normal! gv"<Bar>call search('^\\s*endf\\%[unction]\\/;"	m
]\t:sil	./vim82/autoload/netrw.vim	/^     nno <silent> <buffer> ]	:sil call <SID>TreeListMove(']')<cr>$/;"	m
]]	./vim82/autoload/netrw.vim	/^    nnoremap <silent> <buffer> ]]       :sil call <SID>TreeListMove(']]')<cr>$/;"	m
]]	./vim82/ftplugin/abaqus.vim	/^noremap <silent><buffer> ]] \/^\\*\\a<CR>:nohlsearch<CR>$/;"	m
]]	./vim82/ftplugin/cobol.vim	/^    noremap <silent> <buffer> ]] m':call search('\\c^\\%(\\s*\\<Bar>.\\{6\\}\\s\\+\\)\\zs[A-Za-z/;"	m
]]	./vim82/ftplugin/context.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	./vim82/ftplugin/context.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	./vim82/ftplugin/eiffel.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>DoMotion(sections, v:count1, 'W')<CR>$/;"	m
]]	./vim82/ftplugin/eiffel.vim	/^  xnoremap <silent> <buffer> ]] :<C-U>exe "normal! gv"<Bar>call <SID>DoMotion(sections, v:count1/;"	m
]]	./vim82/ftplugin/hamster.vim	/^noremap <silent><buffer> ]] :call search('^\\s*sub\\>', "W")<CR>$/;"	m
]]	./vim82/ftplugin/j.vim	/^noremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, '')<CR>$/;"	m
]]	./vim82/ftplugin/j.vim	/^xnoremap <buffer> <silent> ]] :<C-U>call <SID>SearchSection(0, 0, visualmode())<CR>$/;"	m
]]	./vim82/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	./vim82/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	./vim82/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:false/;"	m
]]	./vim82/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]] :<C-U>call <SID>move_around(v:count1, "beginsection", "W",  v:true)/;"	m
]]	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['ru/;"	m
]]	./vim82/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	./vim82/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	./vim82/ftplugin/rust.vim	/^xnoremap <silent> <buffer> ]] :call rust#Jump('v', 'Forward')<CR>$/;"	m
]]	./vim82/ftplugin/sql.vim	/^nnoremap <buffer> <silent> ]] :call search('\\c^\\s*begin\\>', 'W' )<CR>$/;"	m
]]	./vim82/ftplugin/sql.vim	/^xnoremap <buffer> <silent> ]] :<C-U>exec "normal! gv"<Bar>call search('\\c^\\s*begin\\>', 'W' )</;"	m
]]	./vim82/ftplugin/vb.vim	/^nnoremap <buffer> <silent> ]] :call <SID>VbSearch('^\\s*\\(\\(private\\|public\\)\\s\\+\\)\\=\\(/;"	m
]]	./vim82/ftplugin/vhdl.vim	/^noremap  <buffer><silent>]] :<C-u>cal <SID>CountWrapper(':cal search("\\\\%(--.*\\\\)\\\\@<!\\\\/;"	m
]]	./vim82/ftplugin/vhdl.vim	/^vnoremap <buffer><silent>]] :<C-u>cal <SID>CountWrapper(']]')<CR>$/;"	m
]]	./vim82/ftplugin/vim.vim	/^  nnoremap <silent><buffer> ]] m':call search('^\\s*fu\\%[nction]\\>', "W")<CR>$/;"	m
]]	./vim82/ftplugin/vim.vim	/^  vnoremap <silent><buffer> ]] m':<C-U>exe "normal! gv"<Bar>call search('^\\s*fu\\%[nction]\\>',/;"	m
]]	./vim82/ftplugin/zimbu.vim	/^  nnoremap <silent> <buffer> ]] m`:call ZimbuGoEndBlock()<CR>$/;"	m
]]	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    nnoremap <buffer> ]]  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', ''/;"	m
]]	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> ]]  :<C-U>call pymode#motion#move('<Bslash>v^(class<bar>def)<Bslash>s', ''/;"	m
]]	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> ]]  :call pymode#motion#vmove('<Bslash>v^(class<bar>def)<Bslash>s', '')<CR/;"	m
]]	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> ]]   <C-o>:call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
]]	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> ]] :call <SID>Tlist_Window_Move_To_File(1)<CR>$/;"	m
]d	./vim82/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]m	./vim82/ftplugin/eiffel.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>DoFeatureMotion(v:count1, 'W')<CR>$/;"	m
]m	./vim82/ftplugin/eiffel.vim	/^  xnoremap <silent> <buffer> ]m :<C-U>exe "normal! gv"<Bar>call <SID>DoFeatureMotion(v:count1, '/;"	m
]m	./vim82/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
]m	./vim82/ftplugin/ruby.vim	/^  xnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','v')<CR>$/;"	m
]}	./vim82/ftplugin/context.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	./vim82/ftplugin/context.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
]}	./vim82/ftplugin/mf.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	./vim82/ftplugin/mf.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
]}	./vim82/ftplugin/mp.vim	/^nnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:false/;"	m
]}	./vim82/ftplugin/mp.vim	/^vnoremap <silent><buffer> ]} :<C-U>call <SID>move_around(v:count1, "endblock",     "W",  v:true)/;"	m
^	./vimfiles/after/plugin/snipMate.vim	/^snor ^ b<bs>^$/;"	m
^	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> ^          :set lz<CR>:silent! call <SID>DrawSpace('^',3)<CR>:set nolz<CR>$/;"	m
_	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap _ {$/;"	m
_j	./vim82/pack/dist/opt/justify/plugin/justify.vim	/^nmap _j :%call Justify('tw',4)<CR>$/;"	m
_j	./vim82/pack/dist/opt/justify/plugin/justify.vim	/^vmap _j :call Justify('tw',4)<CR>$/;"	m
`	./vimfiles/after/plugin/snipMate.vim	/^snor ` b<bs>`$/;"	m
a	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap a a$/;"	m
a$	./vim82/ftplugin/context.vim	/^  onoremap <silent><buffer> a$ :<c-u>normal! F$vf$<cr>$/;"	m
a$	./vim82/ftplugin/context.vim	/^  vnoremap <buffer> a$ F$of\$$/;"	m
a%	./vim82/ftplugin/eiffel.vim	/^  vnoremap a% <Nop>$/;"	m
a%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xmap a% <Plug>(MatchitVisualTextObject)$/;"	m
aC	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> aC :<C-U>call pymode#motion#select('^<Bslash>s*class<Bslash>s', 0)<CR>$/;"	m
aC	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> aC :<C-U>call pymode#motion#select('^<Bslash>s*class<Bslash>s', 0)<CR>$/;"	m
aM	./vim82/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aM	./vim82/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aM	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> aM :<C-U>call pymode#motion#select('^<Bslash>s*def<Bslash>s', 0)<CR>$/;"	m
aM	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> aM :<C-U>call pymode#motion#select('^<Bslash>s*def<Bslash>s', 0)<CR>$/;"	m
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-v/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby'/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_r/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|tex/;"	v
ada#Completion	./vim82/autoload/ada.vim	/^function ada#Completion (cmd)$/;"	f	signature:(cmd)
ada#Completion_End	./vim82/autoload/ada.vim	/^function ada#Completion_End ()$/;"	f	signature:()
ada#Create_Tags	./vim82/autoload/ada.vim	/^function ada#Create_Tags (option)$/;"	f	signature:(option)
ada#Insert_Backspace	./vim82/autoload/ada.vim	/^function ada#Insert_Backspace ()$/;"	f	signature:()
ada#Jump_Tag	./vim82/autoload/ada.vim	/^function ada#Jump_Tag (Word, Mode)$/;"	f	signature:(Word,Mode)
ada#List_Tag	./vim82/autoload/ada.vim	/^function ada#List_Tag (...)$/;"	f	signature:(...)
ada#Map_Menu	./vim82/autoload/ada.vim	/^function ada#Map_Menu (Text, Keys, Command)$/;"	f	signature:(Text,Keys,Command)
ada#Map_Popup	./vim82/autoload/ada.vim	/^function ada#Map_Popup (Text, Keys, Command)$/;"	f	signature:(Text,Keys,Command)
ada#Pretty_Print_Folding	./vim82/autoload/ada.vim	/^   function ada#Pretty_Print_Folding (Line)			     " {{{2$/;"	f	signature:(Line)
ada#Switch_Session	./vim82/autoload/ada.vim	/^function ada#Switch_Session (New_Session)$/;"	f	signature:(New_Session)
ada#Switch_Syntax_Option	./vim82/autoload/ada.vim	/^function ada#Switch_Syntax_Option (option)$/;"	f	signature:(option)
ada#User_Complete	./vim82/autoload/ada.vim	/^function! ada#User_Complete(findstart, base)$/;"	f	signature:(findstart,base)
ada#Word	./vim82/autoload/ada.vim	/^function ada#Word (...)$/;"	f	signature:(...)
ada_session	./vim82/autoload/ada.vim	/^	 augroup ada_session$/;"	a
adacomplete#Complete	./vim82/autoload/adacomplete.vim	/^function! adacomplete#Complete (findstart, base)$/;"	f	signature:(findstart,base)
afold	./vim82/syntax/2html.vim	/^	  let afold.firstline = g:html_start_line$/;"	v
afold	./vim82/syntax/2html.vim	/^	let afold.firstline = g:html_start_line$/;"	v
afold	./vim82/syntax/2html.vim	/^      let afold.level -= leveladjust$/;"	v
am	./vim82/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
am	./vim82/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
aria_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, widget_attributes)$/;"	v
aria_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = global_states_and_properties$/;"	v
aria_attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
at	./vim82/syntax/sed.vim	/^let __at = char2nr("@")$/;"	v
attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
autofill_tokens	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let autofill_tokens = ['on', 'off', 'name', 'honorific-prefix', 'given-name', 'additional-name',/;"	v
b	./vim82/macros/less.vim	/^noremap <script> b <C-B><SID>L$/;"	m
b	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap b x$/;"	m
b:	./vim82/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:	./vim82/syntax/markdown.vim	/^    let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:InPHPcode	./vim82/indent/php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode_and_script	./vim82/indent/php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_checked	./vim82/indent/php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_tofind	./vim82/indent/php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:MATLAB_bracketlevel	./vim82/indent/matlab.vim	/^let b:MATLAB_bracketlevel = 0$/;"	v
b:MATLAB_function_indent	./vim82/indent/matlab.vim	/^let b:MATLAB_function_indent = get(g:, 'MATLAB_function_indent', 2)$/;"	v
b:MATLAB_lastline	./vim82/indent/matlab.vim	/^let b:MATLAB_lastline = -1$/;"	v
b:MATLAB_lasttick	./vim82/indent/matlab.vim	/^let b:MATLAB_lasttick = -1$/;"	v
b:MATLAB_waslc	./vim82/indent/matlab.vim	/^let b:MATLAB_waslc = 0$/;"	v
b:PHP_BracesAtCodeLevel	./vim82/indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	./vim82/indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_CurrentIndentLevel	./vim82/indent/php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_IndentFunctionCallParameters	./vim82/indent/php.vim	/^    let b:PHP_IndentFunctionCallParameters = 0$/;"	v
b:PHP_IndentFunctionCallParameters	./vim82/indent/php.vim	/^    let b:PHP_IndentFunctionCallParameters = PHP_IndentFunctionCallParameters$/;"	v
b:PHP_IndentFunctionDeclarationParameters	./vim82/indent/php.vim	/^    let b:PHP_IndentFunctionDeclarationParameters = 0$/;"	v
b:PHP_IndentFunctionDeclarationParameters	./vim82/indent/php.vim	/^    let b:PHP_IndentFunctionDeclarationParameters = PHP_IndentFunctionDeclarationParameters$/;"	v
b:PHP_InsideMultilineComment	./vim82/indent/php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_LastIndentedWasComment	./vim82/indent/php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_autoformatcomment	./vim82/indent/php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	./vim82/indent/php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_default_indenting	./vim82/indent/php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	./vim82/indent/php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * shiftwidth()$/;"	v
b:PHP_indentbeforelast	./vim82/indent/php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentinghuge	./vim82/indent/php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_lastindented	./vim82/indent/php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_noArrowMatching	./vim82/indent/php.vim	/^    let b:PHP_noArrowMatching = 0$/;"	v
b:PHP_noArrowMatching	./vim82/indent/php.vim	/^    let b:PHP_noArrowMatching = PHP_noArrowMatching$/;"	v
b:PHP_oldchangetick	./vim82/indent/php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_outdentSLComments	./vim82/indent/php.vim	/^    let b:PHP_outdentSLComments = 0$/;"	v
b:PHP_outdentSLComments	./vim82/indent/php.vim	/^    let b:PHP_outdentSLComments = PHP_outdentSLComments * shiftwidth()$/;"	v
b:PHP_outdentphpescape	./vim82/indent/php.vim	/^    let b:PHP_outdentphpescape = 1$/;"	v
b:PHP_outdentphpescape	./vim82/indent/php.vim	/^    let b:PHP_outdentphpescape = PHP_outdentphpescape$/;"	v
b:PHP_vintage_case_default_indent	./vim82/indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	./vim82/indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 1$/;"	v
b:UserIsTypingComment	./vim82/indent/php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:autohotkey_syntax_sync_minlines	./vim82/syntax/autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = 50$/;"	v
b:autohotkey_syntax_sync_minlines	./vim82/syntax/autohotkey.vim	/^  let b:autohotkey_syntax_sync_minlines = g:autohotkey_syntax_sync_minlines$/;"	v
b:bdf_minlines	./vim82/syntax/bdf.vim	/^  let b:bdf_minlines = 30$/;"	v
b:bdf_minlines	./vim82/syntax/bdf.vim	/^  let b:bdf_minlines = bdf_minlines$/;"	v
b:browsefilter	./vim82/ftplugin/abap.vim	/^  let b:browsefilter = "ABAP Source Files (*.abap)\\t*.abap\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/abaqus.vim	/^    let b:browsefilter = "Abaqus Input Files (*.inp *.inc)\\t*.inp;*.inc\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/ant.vim	/^    let b:browsefilter = "Build Files (build.xml)\\tbuild.xml\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/aspvbs.vim	/^    let  b:browsefilter="ASP Files (*.asp)\\t*.asp\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/c.vim	/^    let b:browsefilter = "C Source Files (*.c)\\t*.c\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/c.vim	/^    let b:browsefilter = "C++ Source Files (*.cpp *.c++)\\t*.cpp;*.c++\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/c.vim	/^    let b:browsefilter = "Ch Source Files (*.ch *.chf)\\t*.ch;*.chf\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/cobol.vim	/^  let b:browsefilter = "COBOL Source Files (*.cbl, *.cob)\\t*.cbl;*.cob;*.lib\\n".$/;"	v
b:browsefilter	./vim82/ftplugin/config.vim	/^    let  b:browsefilter="Configure Scripts (configure.*, config.*)\\tconfigure*;config.*\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/cs.vim	/^    let b:browsefilter = "C# Source Files (*.cs)\\t*.cs\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/csh.vim	/^    let  b:browsefilter="csh Scripts (*.csh)\\t*.csh\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/dosbatch.vim	/^  let b:browsefilter = "DOS Batch Files (*.bat, *.cmd)\\t*.bat;*.cmd\\nAll Files (*.*)\\t*.*\\n"$/;"	v
b:browsefilter	./vim82/ftplugin/dtd.vim	/^    let  b:browsefilter="DTD Files (*.dtd)\\t*.dtd\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/eiffel.vim	/^  let b:browsefilter = "Eiffel Source Files (*.e)\\t*.e\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/falcon.vim	/^  let b:browsefilter = "Falcon Source Files (*.fal *.ftd)\\t*.fal;*.ftd\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/fortran.vim	/^  let b:browsefilter = "Fortran Files (*.f;*.for;*.f77;*.f90;*.f95;*.f03;*.f08;*.fpp;*.ftn)\\t*./;"	v
b:browsefilter	./vim82/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browse/;"	v
b:browsefilter	./vim82/ftplugin/html.vim	/^    let  b:browsefilter="HTML Files (*.html,*.htm)\\t*.htm;*.html\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/ishd.vim	/^    let b:browsefilter = "InstallShield Files (*.rul)\\t*.rul\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/j.vim	/^  let b:browsefilter = "J Script Files (*.ijs)\\t*.ijs\\n"$/;"	v
b:browsefilter	./vim82/ftplugin/java.vim	/^    let  b:browsefilter="Java Files (*.java)\\t*.java\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/javascript.vim	/^    let  b:browsefilter="Javascript Files (*.js)\\t*.js\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/jsp.vim	/^    let  b:browsefilter="JSP Files (*.jsp)\\t*.jsp\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/kwt.vim	/^    let b:browsefilter = "Kimwitu\/Kimwitu++ Files (*.k)\\t*.k\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	./vim82/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/msmessages.vim	/^  let b:browsefilter = "MS Message Files (*.mc)\\t*.mc\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/occam.vim	/^  let b:browsefilter = "All Occam Files (*.occ *.inc)\\t*.occ;*.inc\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/perl6.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/php.vim	/^    let  b:browsefilter="PHP Files (*.php)\\t*.php\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/postscr.vim	/^  let b:browsefilter = "PostScript Files (*.ps)\\t*.ps\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/pyrex.vim	/^    let  b:browsefilter = "Pyrex files (*.pyx,*.pxd)\\t*.pyx;*.pxd\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/python.vim	/^    let b:browsefilter = "Python Files (*.py)\\t*.py\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/r.vim	/^  let b:browsefilter = "R Source Files (*.R)\\t*.R\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/registry.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	./vim82/ftplugin/rhelp.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	./vim82/ftplugin/rmd.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	./vim82/ftplugin/rnoweb.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	./vim82/ftplugin/rrst.vim	/^  let b:browsefilter = "R Source Files (*.R *.Rnw *.Rd *.Rmd *.Rrst)\\t*.R;*.Rnw;*.Rd;*.Rmd;*.Rr/;"	v
b:browsefilter	./vim82/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/sgml.vim	/^    let  b:browsefilter="SGML Files (*.sgml,*.sgm)\\t*.sgm*\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/sh.vim	/^    let  b:browsefilter="Bourne Shell Scripts (*.sh)\\t*.sh\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/sql.vim	/^    let b:browsefilter = "SQL Files (*.sql)\\t*.sql\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/svg.vim	/^    let  b:browsefilter="SVG Files (*.svg)\\t*.svg\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/tcl.vim	/^    let b:browsefilter = "Tcl Source Files (.tcl)\\t*.tcl\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/tcsh.vim	/^    let  b:browsefilter="tcsh Scripts (*.tcsh)\\t*.tcsh\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/verilog.vim	/^  let b:browsefilter = "Verilog Source Files (*.v)\\t*.v\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/xhtml.vim	/^    let  b:browsefilter="XHTML files (*.xhtml, *.xhtm)\\t*.xhtml;*.xhtm\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/xml.vim	/^    let  b:browsefilter="XML Files (*.xml)\\t*.xml\\n" .$/;"	v
b:browsefilter	./vim82/ftplugin/xsd.vim	/^    let  b:browsefilter="XSD Files (*.xsd)\\t*.xsd\\n" . s:browsefilter$/;"	v
b:browsefilter	./vim82/ftplugin/xslt.vim	/^    let  b:browsefilter="XSLT Files (*.xsl,*.xslt)\\t*.xsl;*.xslt\\n" . b:browsefilter$/;"	v
b:browsefilter	./vim82/syntax/lpc.vim	/^    let b:browsefilter = "LPC Source Files (*.c *.d *.h)\\t*.c;*.d;*.h\\n" .$/;"	v
b:c_minlines	./vim82/syntax/autodoc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	./vim82/syntax/autodoc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	./vim82/syntax/autodoc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	./vim82/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	./vim82/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	./vim82/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	./vim82/syntax/calendar.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	./vim82/syntax/calendar.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	./vim82/syntax/calendar.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	./vim82/syntax/indent.vim	/^    let b:c_minlines = 15       " mostly for () constructs$/;"	v
b:c_minlines	./vim82/syntax/indent.vim	/^    let b:c_minlines = 50       " #if 0 constructs can be long$/;"	v
b:c_minlines	./vim82/syntax/indent.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	./vim82/syntax/lpc.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	./vim82/syntax/lpc.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	./vim82/syntax/lpc.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:c_minlines	./vim82/syntax/pike.vim	/^    let b:c_minlines = 200	" mostly for multiline strings$/;"	v
b:c_minlines	./vim82/syntax/pike.vim	/^    let b:c_minlines = 400	" #if 0 constructs can be long$/;"	v
b:c_minlines	./vim82/syntax/pike.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:child_match	./vim82/ftplugin/python.vim	/^let b:child_match = '\\(\\w\\)\\.\\(\\w\\)'$/;"	v
b:child_sub	./vim82/ftplugin/python.vim	/^let b:child_sub = '\\1\/\\2'$/;"	v
b:comment_end	./vim82/ftplugin/sql.vim	/^let b:comment_end = '\\(^\\s*'.b:comment_leader.'.*\\n\\)'.$/;"	v
b:comment_jump_over	./vim82/ftplugin/sql.vim	/^let b:comment_jump_over  = "call search('".$/;"	v
b:comment_leader	./vim82/ftplugin/sql.vim	/^let b:comment_leader = '\\(--\\\\|\\\/\\\/\\\\|\\*\\\\|\\\/\\*\\\\|\\*\\\/\\)'$/;"	v
b:comment_skip_back	./vim82/ftplugin/sql.vim	/^let b:comment_skip_back  = "call search('".$/;"	v
b:comment_start	./vim82/ftplugin/sql.vim	/^let b:comment_start  = '^\\(\\s*'.b:comment_leader.'.*\\n\\)\\@<!'.$/;"	v
b:completingLangExtension	./vim82/autoload/haskellcomplete.vim	/^let b:completingLangExtension = 0$/;"	v
b:completingModule	./vim82/autoload/haskellcomplete.vim	/^let b:completingModule        = 0$/;"	v
b:completingOptionsGHC	./vim82/autoload/haskellcomplete.vim	/^let b:completingOptionsGHC    = 0$/;"	v
b:context_errorformat	./vim82/compiler/context.vim	/^let b:context_errorformat = ''$/;"	v
b:cucumber_root	./vim82/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	./vim82/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
b:current_ftplugin	./vim82/ftplugin/sql.vim	/^let b:current_ftplugin = 'sql'$/;"	v
b:current_indent	./vim82/indent/sqlanywhere.vim	/^let b:current_indent = "sqlanywhere"$/;"	v
b:current_syntax	./vim82/syntax/8th.vim	/^let b:current_syntax = "8th"$/;"	v
b:current_syntax	./vim82/syntax/a2ps.vim	/^let b:current_syntax = "a2ps"$/;"	v
b:current_syntax	./vim82/syntax/a65.vim	/^let b:current_syntax = "a65"$/;"	v
b:current_syntax	./vim82/syntax/aap.vim	/^let b:current_syntax = "aap"$/;"	v
b:current_syntax	./vim82/syntax/abap.vim	/^let b:current_syntax = "abap"$/;"	v
b:current_syntax	./vim82/syntax/abaqus.vim	/^let b:current_syntax = "abaqus"$/;"	v
b:current_syntax	./vim82/syntax/abc.vim	/^let b:current_syntax = "abc"$/;"	v
b:current_syntax	./vim82/syntax/abel.vim	/^let b:current_syntax = "abel"$/;"	v
b:current_syntax	./vim82/syntax/acedb.vim	/^let b:current_syntax = "acedb"$/;"	v
b:current_syntax	./vim82/syntax/ada.vim	/^let b:current_syntax = "ada"$/;"	v
b:current_syntax	./vim82/syntax/aflex.vim	/^let b:current_syntax = "aflex"$/;"	v
b:current_syntax	./vim82/syntax/ahdl.vim	/^let b:current_syntax = "ahdl"$/;"	v
b:current_syntax	./vim82/syntax/alsaconf.vim	/^let b:current_syntax = "alsaconf"$/;"	v
b:current_syntax	./vim82/syntax/amiga.vim	/^let b:current_syntax = "amiga"$/;"	v
b:current_syntax	./vim82/syntax/aml.vim	/^let b:current_syntax = "aml"$/;"	v
b:current_syntax	./vim82/syntax/ampl.vim	/^let b:current_syntax = "ampl"$/;"	v
b:current_syntax	./vim82/syntax/ant.vim	/^let b:current_syntax = "ant"$/;"	v
b:current_syntax	./vim82/syntax/antlr.vim	/^let b:current_syntax = "antlr"$/;"	v
b:current_syntax	./vim82/syntax/apache.vim	/^let b:current_syntax = "apache"$/;"	v
b:current_syntax	./vim82/syntax/apachestyle.vim	/^let b:current_syntax = "apachestyle"$/;"	v
b:current_syntax	./vim82/syntax/aptconf.vim	/^let b:current_syntax = "aptconf"$/;"	v
b:current_syntax	./vim82/syntax/arch.vim	/^let b:current_syntax = "arch"$/;"	v
b:current_syntax	./vim82/syntax/art.vim	/^let b:current_syntax = "art"$/;"	v
b:current_syntax	./vim82/syntax/asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	./vim82/syntax/asm.vim	/^let b:current_syntax = "asm"$/;"	v
b:current_syntax	./vim82/syntax/asm68k.vim	/^let b:current_syntax = "asm68k"$/;"	v
b:current_syntax	./vim82/syntax/asmh8300.vim	/^let b:current_syntax = "asmh8300"$/;"	v
b:current_syntax	./vim82/syntax/asn.vim	/^let b:current_syntax = "asn"$/;"	v
b:current_syntax	./vim82/syntax/aspperl.vim	/^let b:current_syntax = "aspperl"$/;"	v
b:current_syntax	./vim82/syntax/aspvbs.vim	/^let b:current_syntax = "aspvbs"$/;"	v
b:current_syntax	./vim82/syntax/asterisk.vim	/^let b:current_syntax = "asterisk" $/;"	v
b:current_syntax	./vim82/syntax/asteriskvm.vim	/^let b:current_syntax = "asteriskvm"$/;"	v
b:current_syntax	./vim82/syntax/atlas.vim	/^let b:current_syntax = "atlas"$/;"	v
b:current_syntax	./vim82/syntax/autodoc.vim	/^let b:current_syntax = "autodoc"$/;"	v
b:current_syntax	./vim82/syntax/autohotkey.vim	/^let b:current_syntax = "autohotkey"$/;"	v
b:current_syntax	./vim82/syntax/autoit.vim	/^let b:current_syntax = "autoit"$/;"	v
b:current_syntax	./vim82/syntax/automake.vim	/^let b:current_syntax = 'automake'$/;"	v
b:current_syntax	./vim82/syntax/ave.vim	/^let b:current_syntax = "ave"$/;"	v
b:current_syntax	./vim82/syntax/avra.vim	/^let b:current_syntax = "avra"$/;"	v
b:current_syntax	./vim82/syntax/awk.vim	/^let b:current_syntax = "awk"$/;"	v
b:current_syntax	./vim82/syntax/ayacc.vim	/^let b:current_syntax = "ayacc"$/;"	v
b:current_syntax	./vim82/syntax/b.vim	/^let b:current_syntax = "b"$/;"	v
b:current_syntax	./vim82/syntax/baan.vim	/^let b:current_syntax = "baan"$/;"	v
b:current_syntax	./vim82/syntax/bash.vim	/^let b:current_syntax = 'bash'$/;"	v
b:current_syntax	./vim82/syntax/basic.vim	/^let b:current_syntax = "basic"$/;"	v
b:current_syntax	./vim82/syntax/bc.vim	/^let b:current_syntax = "bc"$/;"	v
b:current_syntax	./vim82/syntax/bdf.vim	/^let b:current_syntax = "bdf"$/;"	v
b:current_syntax	./vim82/syntax/bib.vim	/^let b:current_syntax = "bib"$/;"	v
b:current_syntax	./vim82/syntax/bindzone.vim	/^let b:current_syntax = "bindzone"$/;"	v
b:current_syntax	./vim82/syntax/blank.vim	/^let b:current_syntax = "blank"$/;"	v
b:current_syntax	./vim82/syntax/bsdl.vim	/^let b:current_syntax = "bsdl"$/;"	v
b:current_syntax	./vim82/syntax/bst.vim	/^let b:current_syntax = "bst"$/;"	v
b:current_syntax	./vim82/syntax/btm.vim	/^let b:current_syntax = "btm"$/;"	v
b:current_syntax	./vim82/syntax/bzl.vim	/^let b:current_syntax = 'bzl'$/;"	v
b:current_syntax	./vim82/syntax/bzr.vim	/^let b:current_syntax = "bzr"$/;"	v
b:current_syntax	./vim82/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	./vim82/syntax/cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	./vim82/syntax/calendar.vim	/^let b:current_syntax = "calendar"$/;"	v
b:current_syntax	./vim82/syntax/catalog.vim	/^let b:current_syntax = "catalog"$/;"	v
b:current_syntax	./vim82/syntax/cdl.vim	/^let b:current_syntax = "cdl"$/;"	v
b:current_syntax	./vim82/syntax/cdrdaoconf.vim	/^let b:current_syntax = "cdrdaoconf"$/;"	v
b:current_syntax	./vim82/syntax/cdrtoc.vim	/^let b:current_syntax = "cdrtoc"$/;"	v
b:current_syntax	./vim82/syntax/cf.vim	/^let b:current_syntax = "cfml"$/;"	v
b:current_syntax	./vim82/syntax/cfg.vim	/^let b:current_syntax = "cfg"$/;"	v
b:current_syntax	./vim82/syntax/ch.vim	/^let b:current_syntax = "ch"$/;"	v
b:current_syntax	./vim82/syntax/chaiscript.vim	/^let b:current_syntax = "chaiscript"$/;"	v
b:current_syntax	./vim82/syntax/change.vim	/^let b:current_syntax = "change"$/;"	v
b:current_syntax	./vim82/syntax/changelog.vim	/^let b:current_syntax = "changelog"$/;"	v
b:current_syntax	./vim82/syntax/cheetah.vim	/^let b:current_syntax = "cheetah"$/;"	v
b:current_syntax	./vim82/syntax/chill.vim	/^let b:current_syntax = "chill"$/;"	v
b:current_syntax	./vim82/syntax/chordpro.vim	/^let b:current_syntax = "chordpro"$/;"	v
b:current_syntax	./vim82/syntax/cl.vim	/^let b:current_syntax = "cl"$/;"	v
b:current_syntax	./vim82/syntax/clean.vim	/^let b:current_syntax = "clean"$/;"	v
b:current_syntax	./vim82/syntax/clipper.vim	/^let b:current_syntax = "clipper"$/;"	v
b:current_syntax	./vim82/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	./vim82/syntax/cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	./vim82/syntax/cmod.vim	/^let b:current_syntax = "cmod"$/;"	v
b:current_syntax	./vim82/syntax/cmusrc.vim	/^let b:current_syntax = "cmusrc"$/;"	v
b:current_syntax	./vim82/syntax/cobol.vim	/^let b:current_syntax = "cobol"$/;"	v
b:current_syntax	./vim82/syntax/conaryrecipe.vim	/^let b:current_syntax = "conaryrecipe"$/;"	v
b:current_syntax	./vim82/syntax/conf.vim	/^let b:current_syntax = "conf"$/;"	v
b:current_syntax	./vim82/syntax/config.vim	/^let b:current_syntax = "config"$/;"	v
b:current_syntax	./vim82/syntax/context.vim	/^let b:current_syntax = "context"$/;"	v
b:current_syntax	./vim82/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	./vim82/syntax/crm.vim	/^let b:current_syntax = "crm"$/;"	v
b:current_syntax	./vim82/syntax/crontab.vim	/^let b:current_syntax = "crontab"$/;"	v
b:current_syntax	./vim82/syntax/cs.vim	/^let b:current_syntax = 'cs'$/;"	v
b:current_syntax	./vim82/syntax/csc.vim	/^let b:current_syntax = "csc"$/;"	v
b:current_syntax	./vim82/syntax/csdl.vim	/^let b:current_syntax = "csdl"$/;"	v
b:current_syntax	./vim82/syntax/csh.vim	/^let b:current_syntax = "csh"$/;"	v
b:current_syntax	./vim82/syntax/csp.vim	/^let b:current_syntax = "csp"$/;"	v
b:current_syntax	./vim82/syntax/css.vim	/^let b:current_syntax = "css"$/;"	v
b:current_syntax	./vim82/syntax/cterm.vim	/^let b:current_syntax = "cterm"$/;"	v
b:current_syntax	./vim82/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	./vim82/syntax/cuda.vim	/^let b:current_syntax = "cuda"$/;"	v
b:current_syntax	./vim82/syntax/cupl.vim	/^let b:current_syntax = "cupl"$/;"	v
b:current_syntax	./vim82/syntax/cuplsim.vim	/^let b:current_syntax = "cuplsim"$/;"	v
b:current_syntax	./vim82/syntax/cvs.vim	/^let b:current_syntax = "cvs"$/;"	v
b:current_syntax	./vim82/syntax/cvsrc.vim	/^let b:current_syntax = "cvsrc"$/;"	v
b:current_syntax	./vim82/syntax/cweb.vim	/^let b:current_syntax = "cweb"$/;"	v
b:current_syntax	./vim82/syntax/cynlib.vim	/^let b:current_syntax = "cynlib"$/;"	v
b:current_syntax	./vim82/syntax/cynpp.vim	/^let b:current_syntax = "cynpp"$/;"	v
b:current_syntax	./vim82/syntax/d.vim	/^let b:current_syntax = "d"$/;"	v
b:current_syntax	./vim82/syntax/dart.vim	/^let b:current_syntax = "dart"$/;"	v
b:current_syntax	./vim82/syntax/datascript.vim	/^let b:current_syntax = "datascript"$/;"	v
b:current_syntax	./vim82/syntax/dcd.vim	/^let b:current_syntax = "dcd"$/;"	v
b:current_syntax	./vim82/syntax/dcl.vim	/^let b:current_syntax = "dcl"$/;"	v
b:current_syntax	./vim82/syntax/debchangelog.vim	/^let b:current_syntax = 'debchangelog'$/;"	v
b:current_syntax	./vim82/syntax/debcontrol.vim	/^let b:current_syntax = 'debcontrol'$/;"	v
b:current_syntax	./vim82/syntax/debcopyright.vim	/^let b:current_syntax = 'debcopyright'$/;"	v
b:current_syntax	./vim82/syntax/debsources.vim	/^let b:current_syntax = 'debsources'$/;"	v
b:current_syntax	./vim82/syntax/def.vim	/^let b:current_syntax = "def"$/;"	v
b:current_syntax	./vim82/syntax/denyhosts.vim	/^let b:current_syntax = "denyhosts"$/;"	v
b:current_syntax	./vim82/syntax/desc.vim	/^let b:current_syntax = "desc"$/;"	v
b:current_syntax	./vim82/syntax/desktop.vim	/^let b:current_syntax = "desktop"$/;"	v
b:current_syntax	./vim82/syntax/dictconf.vim	/^let b:current_syntax = "dictconf"$/;"	v
b:current_syntax	./vim82/syntax/dictdconf.vim	/^let b:current_syntax = "dictdconf"$/;"	v
b:current_syntax	./vim82/syntax/diff.vim	/^let b:current_syntax = "diff"$/;"	v
b:current_syntax	./vim82/syntax/dircolors.vim	/^let b:current_syntax = "dircolors"$/;"	v
b:current_syntax	./vim82/syntax/dirpager.vim	/^let b:current_syntax = "dirpager"$/;"	v
b:current_syntax	./vim82/syntax/diva.vim	/^let b:current_syntax = "diva"$/;"	v
b:current_syntax	./vim82/syntax/django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	./vim82/syntax/dnsmasq.vim	/^let b:current_syntax = "dnsmasq"$/;"	v
b:current_syntax	./vim82/syntax/docbk.vim	/^let b:current_syntax = "docbk"$/;"	v
b:current_syntax	./vim82/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	./vim82/syntax/dosbatch.vim	/^let b:current_syntax = "dosbatch"$/;"	v
b:current_syntax	./vim82/syntax/dosini.vim	/^let b:current_syntax = "dosini"$/;"	v
b:current_syntax	./vim82/syntax/dot.vim	/^let b:current_syntax = "dot"$/;"	v
b:current_syntax	./vim82/syntax/doxygen.vim	/^    let b:current_syntax = "doxygen"$/;"	v
b:current_syntax	./vim82/syntax/doxygen.vim	/^    let b:current_syntax = b:current_syntax.'.doxygen'$/;"	v
b:current_syntax	./vim82/syntax/doxygen.vim	/^    let b:current_syntax=b:doxygen_syntax_save$/;"	v
b:current_syntax	./vim82/syntax/dracula.vim	/^let b:current_syntax = "dracula"$/;"	v
b:current_syntax	./vim82/syntax/dsl.vim	/^let b:current_syntax = "dsl"$/;"	v
b:current_syntax	./vim82/syntax/dtd.vim	/^let b:current_syntax = "dtd"$/;"	v
b:current_syntax	./vim82/syntax/dtml.vim	/^let b:current_syntax = "dtml"$/;"	v
b:current_syntax	./vim82/syntax/dtrace.vim	/^let b:current_syntax = "dtrace"$/;"	v
b:current_syntax	./vim82/syntax/dune.vim	/^let b:current_syntax = "dune"$/;"	v
b:current_syntax	./vim82/syntax/dylan.vim	/^let b:current_syntax = "dylan"$/;"	v
b:current_syntax	./vim82/syntax/dylanintr.vim	/^let b:current_syntax = "dylanintr"$/;"	v
b:current_syntax	./vim82/syntax/dylanlid.vim	/^let b:current_syntax = "dylanlid"$/;"	v
b:current_syntax	./vim82/syntax/ecd.vim	/^let b:current_syntax = "ecd"$/;"	v
b:current_syntax	./vim82/syntax/edif.vim	/^let b:current_syntax = "edif"$/;"	v
b:current_syntax	./vim82/syntax/eiffel.vim	/^let b:current_syntax = "eiffel"$/;"	v
b:current_syntax	./vim82/syntax/elf.vim	/^let b:current_syntax = "elf"$/;"	v
b:current_syntax	./vim82/syntax/elinks.vim	/^let b:current_syntax = "elinks"$/;"	v
b:current_syntax	./vim82/syntax/elmfilt.vim	/^let b:current_syntax = "elmfilt"$/;"	v
b:current_syntax	./vim82/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	./vim82/syntax/eruby.vim	/^let b:current_syntax = matchstr(&syntax, '^.*\\<eruby\\>')$/;"	v
b:current_syntax	./vim82/syntax/esmtprc.vim	/^let b:current_syntax = "esmtprc"$/;"	v
b:current_syntax	./vim82/syntax/esqlc.vim	/^let b:current_syntax = "esqlc"$/;"	v
b:current_syntax	./vim82/syntax/esterel.vim	/^let b:current_syntax = "esterel"$/;"	v
b:current_syntax	./vim82/syntax/eterm.vim	/^let b:current_syntax = "eterm"$/;"	v
b:current_syntax	./vim82/syntax/euphoria3.vim	/^let b:current_syntax = "euphoria3"$/;"	v
b:current_syntax	./vim82/syntax/euphoria4.vim	/^let b:current_syntax = "euphoria4"$/;"	v
b:current_syntax	./vim82/syntax/eviews.vim	/^let b:current_syntax="eviews"$/;"	v
b:current_syntax	./vim82/syntax/exim.vim	/^let b:current_syntax = "exim"$/;"	v
b:current_syntax	./vim82/syntax/expect.vim	/^let b:current_syntax = "expect"$/;"	v
b:current_syntax	./vim82/syntax/exports.vim	/^let b:current_syntax = "exports"$/;"	v
b:current_syntax	./vim82/syntax/falcon.vim	/^let b:current_syntax = "falcon"$/;"	v
b:current_syntax	./vim82/syntax/fan.vim	/^let b:current_syntax = "fan"$/;"	v
b:current_syntax	./vim82/syntax/fasm.vim	/^let b:current_syntax = "fasm"$/;"	v
b:current_syntax	./vim82/syntax/fdcc.vim	/^let b:current_syntax = "fdcc"$/;"	v
b:current_syntax	./vim82/syntax/fetchmail.vim	/^let b:current_syntax = "fetchmail"$/;"	v
b:current_syntax	./vim82/syntax/fgl.vim	/^let b:current_syntax = "fgl"$/;"	v
b:current_syntax	./vim82/syntax/flexwiki.vim	/^let b:current_syntax="FlexWiki"$/;"	v
b:current_syntax	./vim82/syntax/focexec.vim	/^let b:current_syntax = "focexec"$/;"	v
b:current_syntax	./vim82/syntax/form.vim	/^  let b:current_syntax = "form"$/;"	v
b:current_syntax	./vim82/syntax/forth.vim	/^let b:current_syntax = "forth"$/;"	v
b:current_syntax	./vim82/syntax/fortran.vim	/^let b:current_syntax = "fortran"$/;"	v
b:current_syntax	./vim82/syntax/foxpro.vim	/^let b:current_syntax = "foxpro"$/;"	v
b:current_syntax	./vim82/syntax/framescript.vim	/^let b:current_syntax = "framescript"$/;"	v
b:current_syntax	./vim82/syntax/freebasic.vim	/^let b:current_syntax = "freebasic"$/;"	v
b:current_syntax	./vim82/syntax/fstab.vim	/^let b:current_syntax = "fstab"$/;"	v
b:current_syntax	./vim82/syntax/fvwm.vim	/^let b:current_syntax = "fvwm"$/;"	v
b:current_syntax	./vim82/syntax/fvwm2m4.vim	/^let b:current_syntax = 'fvwm2m4'$/;"	v
b:current_syntax	./vim82/syntax/gdb.vim	/^let b:current_syntax = "gdb"$/;"	v
b:current_syntax	./vim82/syntax/gdmo.vim	/^let b:current_syntax = "gdmo"$/;"	v
b:current_syntax	./vim82/syntax/gedcom.vim	/^let b:current_syntax = "gedcom"$/;"	v
b:current_syntax	./vim82/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	./vim82/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	./vim82/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	./vim82/syntax/gitolite.vim	/^let b:current_syntax = "gitolite"$/;"	v
b:current_syntax	./vim82/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	./vim82/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	./vim82/syntax/gkrellmrc.vim	/^let b:current_syntax = "gkrellmrc"$/;"	v
b:current_syntax	./vim82/syntax/gnash.vim	/^let b:current_syntax = "gnash"$/;"	v
b:current_syntax	./vim82/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	./vim82/syntax/go.vim	/^let b:current_syntax = 'go'$/;"	v
b:current_syntax	./vim82/syntax/godoc.vim	/^let b:current_syntax = 'godoc'$/;"	v
b:current_syntax	./vim82/syntax/gp.vim	/^let b:current_syntax = "gp"$/;"	v
b:current_syntax	./vim82/syntax/gpg.vim	/^let b:current_syntax = "gpg"$/;"	v
b:current_syntax	./vim82/syntax/gprof.vim	/^let b:current_syntax = "gprof"$/;"	v
b:current_syntax	./vim82/syntax/grads.vim	/^let b:current_syntax = "grads"$/;"	v
b:current_syntax	./vim82/syntax/gretl.vim	/^let b:current_syntax="gretl"$/;"	v
b:current_syntax	./vim82/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	./vim82/syntax/group.vim	/^let b:current_syntax = "group"$/;"	v
b:current_syntax	./vim82/syntax/grub.vim	/^let b:current_syntax = "grub"$/;"	v
b:current_syntax	./vim82/syntax/gsp.vim	/^let b:current_syntax = "gsp"$/;"	v
b:current_syntax	./vim82/syntax/gtkrc.vim	/^let b:current_syntax = "gtkrc"$/;"	v
b:current_syntax	./vim82/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	./vim82/syntax/hamster.vim	/^let b:current_syntax = "hamster"$/;"	v
b:current_syntax	./vim82/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	./vim82/syntax/haste.vim	/^let b:current_syntax = "haste"$/;"	v
b:current_syntax	./vim82/syntax/hastepreproc.vim	/^let b:current_syntax = "hastepreproc"$/;"	v
b:current_syntax	./vim82/syntax/hb.vim	/^let b:current_syntax = "hb"$/;"	v
b:current_syntax	./vim82/syntax/help.vim	/^let b:current_syntax = "help"$/;"	v
b:current_syntax	./vim82/syntax/hercules.vim	/^let b:current_syntax = "hercules"$/;"	v
b:current_syntax	./vim82/syntax/hex.vim	/^let b:current_syntax = "hex"$/;"	v
b:current_syntax	./vim82/syntax/hgcommit.vim	/^let b:current_syntax = "hgcommit"$/;"	v
b:current_syntax	./vim82/syntax/hog.vim	/^let b:current_syntax = "hog"$/;"	v
b:current_syntax	./vim82/syntax/hollywood.vim	/^let b:current_syntax = "hollywood"$/;"	v
b:current_syntax	./vim82/syntax/hostconf.vim	/^let b:current_syntax = "hostconf"$/;"	v
b:current_syntax	./vim82/syntax/hostsaccess.vim	/^let b:current_syntax = "hostsaccess"$/;"	v
b:current_syntax	./vim82/syntax/html.vim	/^let b:current_syntax = "html"$/;"	v
b:current_syntax	./vim82/syntax/htmlcheetah.vim	/^let b:current_syntax = "htmlcheetah"$/;"	v
b:current_syntax	./vim82/syntax/htmldjango.vim	/^let b:current_syntax = "htmldjango"$/;"	v
b:current_syntax	./vim82/syntax/htmlm4.vim	/^let b:current_syntax = "htmlm4"$/;"	v
b:current_syntax	./vim82/syntax/htmlos.vim	/^let b:current_syntax = "htmlos"$/;"	v
b:current_syntax	./vim82/syntax/ia64.vim	/^let b:current_syntax = "ia64"$/;"	v
b:current_syntax	./vim82/syntax/ibasic.vim	/^let b:current_syntax = "ibasic"$/;"	v
b:current_syntax	./vim82/syntax/icemenu.vim	/^let b:current_syntax = "IceMenu"$/;"	v
b:current_syntax	./vim82/syntax/icon.vim	/^let b:current_syntax = "icon"$/;"	v
b:current_syntax	./vim82/syntax/idl.vim	/^  let b:current_syntax = "idl"$/;"	v
b:current_syntax	./vim82/syntax/idlang.vim	/^let b:current_syntax = "idlang"$/;"	v
b:current_syntax	./vim82/syntax/indent.vim	/^let b:current_syntax = "indent"$/;"	v
b:current_syntax	./vim82/syntax/inform.vim	/^let b:current_syntax = "inform"$/;"	v
b:current_syntax	./vim82/syntax/initex.vim	/^let b:current_syntax = "initex"$/;"	v
b:current_syntax	./vim82/syntax/initng.vim	/^let b:current_syntax = "initng"$/;"	v
b:current_syntax	./vim82/syntax/inittab.vim	/^let b:current_syntax = "inittab"$/;"	v
b:current_syntax	./vim82/syntax/ishd.vim	/^let b:current_syntax = "ishd"$/;"	v
b:current_syntax	./vim82/syntax/iss.vim	/^let b:current_syntax = "iss"$/;"	v
b:current_syntax	./vim82/syntax/ist.vim	/^let b:current_syntax = "ist"$/;"	v
b:current_syntax	./vim82/syntax/j.vim	/^let b:current_syntax = 'j'$/;"	v
b:current_syntax	./vim82/syntax/jal.vim	/^let b:current_syntax = "jal"$/;"	v
b:current_syntax	./vim82/syntax/jam.vim	/^let b:current_syntax = "jam"$/;"	v
b:current_syntax	./vim82/syntax/jargon.vim	/^let b:current_syntax = "jargon"$/;"	v
b:current_syntax	./vim82/syntax/java.vim	/^let b:current_syntax = "java"$/;"	v
b:current_syntax	./vim82/syntax/javacc.vim	/^let b:current_syntax = "javacc"$/;"	v
b:current_syntax	./vim82/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	./vim82/syntax/jess.vim	/^let b:current_syntax = "jess"$/;"	v
b:current_syntax	./vim82/syntax/jgraph.vim	/^let b:current_syntax = "jgraph"$/;"	v
b:current_syntax	./vim82/syntax/jovial.vim	/^let b:current_syntax = "jovial"$/;"	v
b:current_syntax	./vim82/syntax/jproperties.vim	/^let b:current_syntax = "jproperties"$/;"	v
b:current_syntax	./vim82/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	./vim82/syntax/jsp.vim	/^let b:current_syntax = "jsp"$/;"	v
b:current_syntax	./vim82/syntax/kconfig.vim	/^let b:current_syntax = "kconfig"$/;"	v
b:current_syntax	./vim82/syntax/kivy.vim	/^let b:current_syntax = "kivy"$/;"	v
b:current_syntax	./vim82/syntax/kix.vim	/^let b:current_syntax = "kix"$/;"	v
b:current_syntax	./vim82/syntax/kscript.vim	/^let b:current_syntax = "kscript"$/;"	v
b:current_syntax	./vim82/syntax/kwt.vim	/^let b:current_syntax = "kwt"$/;"	v
b:current_syntax	./vim82/syntax/lace.vim	/^let b:current_syntax = "lace"$/;"	v
b:current_syntax	./vim82/syntax/latte.vim	/^let b:current_syntax = "latte"$/;"	v
b:current_syntax	./vim82/syntax/ld.vim	/^let b:current_syntax = "ld"$/;"	v
b:current_syntax	./vim82/syntax/ldapconf.vim	/^let b:current_syntax = "ldapconf"$/;"	v
b:current_syntax	./vim82/syntax/ldif.vim	/^let b:current_syntax = "ldif"$/;"	v
b:current_syntax	./vim82/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	./vim82/syntax/lex.vim	/^let b:current_syntax = "lex"$/;"	v
b:current_syntax	./vim82/syntax/lftp.vim	/^let b:current_syntax = "lftp"$/;"	v
b:current_syntax	./vim82/syntax/lhaskell.vim	/^let b:current_syntax = "lhaskell"$/;"	v
b:current_syntax	./vim82/syntax/libao.vim	/^let b:current_syntax = "libao"$/;"	v
b:current_syntax	./vim82/syntax/lifelines.vim	/^let b:current_syntax = "lifelines"$/;"	v
b:current_syntax	./vim82/syntax/lilo.vim	/^let b:current_syntax = "lilo"$/;"	v
b:current_syntax	./vim82/syntax/limits.vim	/^let b:current_syntax = "limits"$/;"	v
b:current_syntax	./vim82/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	./vim82/syntax/lisp.vim	/^let b:current_syntax = "lisp"$/;"	v
b:current_syntax	./vim82/syntax/lite.vim	/^let b:current_syntax = "lite"$/;"	v
b:current_syntax	./vim82/syntax/litestep.vim	/^let b:current_syntax = "litestep"$/;"	v
b:current_syntax	./vim82/syntax/loginaccess.vim	/^let b:current_syntax = "loginaccess"$/;"	v
b:current_syntax	./vim82/syntax/logindefs.vim	/^let b:current_syntax = "logindefs"$/;"	v
b:current_syntax	./vim82/syntax/logtalk.vim	/^let b:current_syntax = "logtalk"$/;"	v
b:current_syntax	./vim82/syntax/lotos.vim	/^let b:current_syntax = "lotos"$/;"	v
b:current_syntax	./vim82/syntax/lout.vim	/^let b:current_syntax = "lout"$/;"	v
b:current_syntax	./vim82/syntax/lpc.vim	/^let b:current_syntax = "lpc"$/;"	v
b:current_syntax	./vim82/syntax/lprolog.vim	/^let b:current_syntax = "lprolog"$/;"	v
b:current_syntax	./vim82/syntax/lscript.vim	/^let b:current_syntax = "lscript"$/;"	v
b:current_syntax	./vim82/syntax/lsl.vim	/^let b:current_syntax = "lsl"$/;"	v
b:current_syntax	./vim82/syntax/lss.vim	/^let b:current_syntax = "lss"$/;"	v
b:current_syntax	./vim82/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	./vim82/syntax/lynx.vim	/^let b:current_syntax = "lynx"$/;"	v
b:current_syntax	./vim82/syntax/m4.vim	/^let b:current_syntax = "m4"$/;"	v
b:current_syntax	./vim82/syntax/mail.vim	/^let b:current_syntax = "mail"$/;"	v
b:current_syntax	./vim82/syntax/mailaliases.vim	/^let b:current_syntax = "mailaliases"$/;"	v
b:current_syntax	./vim82/syntax/mailcap.vim	/^let b:current_syntax = "mailcap"$/;"	v
b:current_syntax	./vim82/syntax/make.vim	/^let b:current_syntax = "make"$/;"	v
b:current_syntax	./vim82/syntax/mallard.vim	/^let b:current_syntax = "mallard"$/;"	v
b:current_syntax	./vim82/syntax/man.vim	/^let b:current_syntax = "man"$/;"	v
b:current_syntax	./vim82/syntax/manconf.vim	/^let b:current_syntax = "manconf"$/;"	v
b:current_syntax	./vim82/syntax/maple.vim	/^let b:current_syntax = "maple"$/;"	v
b:current_syntax	./vim82/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	./vim82/syntax/masm.vim	/^let b:current_syntax = "masm"$/;"	v
b:current_syntax	./vim82/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	./vim82/syntax/master.vim	/^let b:current_syntax = "master"$/;"	v
b:current_syntax	./vim82/syntax/matlab.vim	/^let b:current_syntax = "matlab"$/;"	v
b:current_syntax	./vim82/syntax/maxima.vim	/^let b:current_syntax = "maxima"$/;"	v
b:current_syntax	./vim82/syntax/mel.vim	/^let b:current_syntax = "mel"$/;"	v
b:current_syntax	./vim82/syntax/meson.vim	/^let b:current_syntax = "meson"$/;"	v
b:current_syntax	./vim82/syntax/messages.vim	/^let b:current_syntax = "messages"$/;"	v
b:current_syntax	./vim82/syntax/mf.vim	/^let b:current_syntax = "mf"$/;"	v
b:current_syntax	./vim82/syntax/mgl.vim	/^let b:current_syntax = "mgl"$/;"	v
b:current_syntax	./vim82/syntax/mgp.vim	/^let b:current_syntax = "mgp"$/;"	v
b:current_syntax	./vim82/syntax/mib.vim	/^let b:current_syntax = "mib"$/;"	v
b:current_syntax	./vim82/syntax/mix.vim	/^let b:current_syntax = "mix"$/;"	v
b:current_syntax	./vim82/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	./vim82/syntax/mmix.vim	/^let b:current_syntax = "mmix"$/;"	v
b:current_syntax	./vim82/syntax/mmp.vim	/^let b:current_syntax = "mmp"$/;"	v
b:current_syntax	./vim82/syntax/modconf.vim	/^let b:current_syntax = "modconf"$/;"	v
b:current_syntax	./vim82/syntax/model.vim	/^let b:current_syntax = "model"$/;"	v
b:current_syntax	./vim82/syntax/modsim3.vim	/^let b:current_syntax = "modsim3"$/;"	v
b:current_syntax	./vim82/syntax/modula2.vim	/^let b:current_syntax = "modula2"$/;"	v
b:current_syntax	./vim82/syntax/modula3.vim	/^let b:current_syntax = "modula3"$/;"	v
b:current_syntax	./vim82/syntax/monk.vim	/^let b:current_syntax = "monk"$/;"	v
b:current_syntax	./vim82/syntax/moo.vim	/^let b:current_syntax = "moo"$/;"	v
b:current_syntax	./vim82/syntax/mp.vim	/^let b:current_syntax = "mp"$/;"	v
b:current_syntax	./vim82/syntax/mplayerconf.vim	/^let b:current_syntax = "mplayerconf"$/;"	v
b:current_syntax	./vim82/syntax/mrxvtrc.vim	/^let b:current_syntax = "mrxvtrc"$/;"	v
b:current_syntax	./vim82/syntax/msidl.vim	/^let b:current_syntax = "msidl"$/;"	v
b:current_syntax	./vim82/syntax/msmessages.vim	/^let b:current_syntax = "msmessages"$/;"	v
b:current_syntax	./vim82/syntax/msql.vim	/^let b:current_syntax = "msql"$/;"	v
b:current_syntax	./vim82/syntax/murphi.vim	/^let b:current_syntax = "murphi"$/;"	v
b:current_syntax	./vim82/syntax/mush.vim	/^let b:current_syntax = "mush"$/;"	v
b:current_syntax	./vim82/syntax/muttrc.vim	/^let b:current_syntax = "muttrc"$/;"	v
b:current_syntax	./vim82/syntax/mysql.vim	/^let b:current_syntax = "mysql"$/;"	v
b:current_syntax	./vim82/syntax/n1ql.vim	/^let b:current_syntax = "n1ql"$/;"	v
b:current_syntax	./vim82/syntax/named.vim	/^let b:current_syntax = "named"$/;"	v
b:current_syntax	./vim82/syntax/nanorc.vim	/^let b:current_syntax = "nanorc"$/;"	v
b:current_syntax	./vim82/syntax/nasm.vim	/^let b:current_syntax = "nasm"$/;"	v
b:current_syntax	./vim82/syntax/nastran.vim	/^let b:current_syntax = "nastran"$/;"	v
b:current_syntax	./vim82/syntax/natural.vim	/^let b:current_syntax = "natural"$/;"	v
b:current_syntax	./vim82/syntax/ncf.vim	/^let b:current_syntax = "ncf"$/;"	v
b:current_syntax	./vim82/syntax/neomuttrc.vim	/^let b:current_syntax = "neomuttrc"$/;"	v
b:current_syntax	./vim82/syntax/netrc.vim	/^let b:current_syntax = "netrc"$/;"	v
b:current_syntax	./vim82/syntax/netrw.vim	/^let   b:current_syntax = "netrwlist"$/;"	v
b:current_syntax	./vim82/syntax/ninja.vim	/^let b:current_syntax = "ninja"$/;"	v
b:current_syntax	./vim82/syntax/nqc.vim	/^let b:current_syntax = "nqc"$/;"	v
b:current_syntax	./vim82/syntax/nroff.vim	/^let b:current_syntax = "nroff"$/;"	v
b:current_syntax	./vim82/syntax/nsis.vim	/^let b:current_syntax = "nsis"$/;"	v
b:current_syntax	./vim82/syntax/obj.vim	/^let b:current_syntax = "obj"$/;"	v
b:current_syntax	./vim82/syntax/objc.vim	/^let b:current_syntax = "objc"$/;"	v
b:current_syntax	./vim82/syntax/objcpp.vim	/^let b:current_syntax = "objcpp"$/;"	v
b:current_syntax	./vim82/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	./vim82/syntax/occam.vim	/^let b:current_syntax = "occam"$/;"	v
b:current_syntax	./vim82/syntax/omnimark.vim	/^let b:current_syntax = "omnimark"$/;"	v
b:current_syntax	./vim82/syntax/openroad.vim	/^let b:current_syntax = "openroad"$/;"	v
b:current_syntax	./vim82/syntax/opl.vim	/^let b:current_syntax = "opl"$/;"	v
b:current_syntax	./vim82/syntax/ora.vim	/^let b:current_syntax = "ora"$/;"	v
b:current_syntax	./vim82/syntax/pamconf.vim	/^let b:current_syntax = "pamconf"$/;"	v
b:current_syntax	./vim82/syntax/pamenv.vim	/^let b:current_syntax = "pamenv"$/;"	v
b:current_syntax	./vim82/syntax/papp.vim	/^let b:current_syntax = "papp"$/;"	v
b:current_syntax	./vim82/syntax/pascal.vim	/^let b:current_syntax = "pascal"$/;"	v
b:current_syntax	./vim82/syntax/passwd.vim	/^let b:current_syntax = "passwd"$/;"	v
b:current_syntax	./vim82/syntax/pcap.vim	/^let b:current_syntax = "pcap"$/;"	v
b:current_syntax	./vim82/syntax/pccts.vim	/^let b:current_syntax = "pccts"$/;"	v
b:current_syntax	./vim82/syntax/pdf.vim	/^let b:current_syntax = "pdf"$/;"	v
b:current_syntax	./vim82/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	./vim82/syntax/perl6.vim	/^let b:current_syntax = "perl6"$/;"	v
b:current_syntax	./vim82/syntax/pf.vim	/^let b:current_syntax = "pf"$/;"	v
b:current_syntax	./vim82/syntax/pfmain.vim	/^let b:current_syntax = "pfmain"$/;"	v
b:current_syntax	./vim82/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	./vim82/syntax/pic.vim	/^let b:current_syntax = "pic"$/;"	v
b:current_syntax	./vim82/syntax/pike.vim	/^let b:current_syntax = "pike"$/;"	v
b:current_syntax	./vim82/syntax/pilrc.vim	/^let b:current_syntax = "pilrc"$/;"	v
b:current_syntax	./vim82/syntax/pine.vim	/^let b:current_syntax = "pine"$/;"	v
b:current_syntax	./vim82/syntax/pinfo.vim	/^let b:current_syntax = "pinfo"$/;"	v
b:current_syntax	./vim82/syntax/plaintex.vim	/^let b:current_syntax = "plaintex"$/;"	v
b:current_syntax	./vim82/syntax/pli.vim	/^let b:current_syntax = "pl1"$/;"	v
b:current_syntax	./vim82/syntax/plm.vim	/^let b:current_syntax = "plm"$/;"	v
b:current_syntax	./vim82/syntax/plp.vim	/^let b:current_syntax = "plp"$/;"	v
b:current_syntax	./vim82/syntax/plsql.vim	/^let b:current_syntax = "plsql"$/;"	v
b:current_syntax	./vim82/syntax/po.vim	/^let b:current_syntax = "po"$/;"	v
b:current_syntax	./vim82/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	./vim82/syntax/postscr.vim	/^let b:current_syntax = "postscr"$/;"	v
b:current_syntax	./vim82/syntax/pov.vim	/^let b:current_syntax = "pov"$/;"	v
b:current_syntax	./vim82/syntax/povini.vim	/^let b:current_syntax = "povini"$/;"	v
b:current_syntax	./vim82/syntax/ppd.vim	/^let b:current_syntax = "ppd"$/;"	v
b:current_syntax	./vim82/syntax/ppwiz.vim	/^let b:current_syntax = "ppwiz"$/;"	v
b:current_syntax	./vim82/syntax/prescribe.vim	/^let b:current_syntax = "prescribe"$/;"	v
b:current_syntax	./vim82/syntax/privoxy.vim	/^let b:current_syntax = "privoxy"$/;"	v
b:current_syntax	./vim82/syntax/procmail.vim	/^let b:current_syntax = "procmail"$/;"	v
b:current_syntax	./vim82/syntax/progress.vim	/^let b:current_syntax = "progress"$/;"	v
b:current_syntax	./vim82/syntax/prolog.vim	/^let b:current_syntax = "prolog"$/;"	v
b:current_syntax	./vim82/syntax/promela.vim	/^let b:current_syntax = "promela"$/;"	v
b:current_syntax	./vim82/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	./vim82/syntax/protocols.vim	/^let b:current_syntax = "protocols"$/;"	v
b:current_syntax	./vim82/syntax/psf.vim	/^let b:current_syntax = "psf"$/;"	v
b:current_syntax	./vim82/syntax/ptcap.vim	/^let b:current_syntax = "ptcap"$/;"	v
b:current_syntax	./vim82/syntax/purifylog.vim	/^let b:current_syntax = "purifylog"$/;"	v
b:current_syntax	./vim82/syntax/pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	./vim82/syntax/python.vim	/^let b:current_syntax = "python"$/;"	v
b:current_syntax	./vim82/syntax/qf.vim	/^let b:current_syntax = "qf"$/;"	v
b:current_syntax	./vim82/syntax/quake.vim	/^let b:current_syntax = "quake"$/;"	v
b:current_syntax	./vim82/syntax/r.vim	/^let b:current_syntax="r"$/;"	v
b:current_syntax	./vim82/syntax/racc.vim	/^let b:current_syntax = "racc"$/;"	v
b:current_syntax	./vim82/syntax/radiance.vim	/^let b:current_syntax = "radiance"$/;"	v
b:current_syntax	./vim82/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
b:current_syntax	./vim82/syntax/ratpoison.vim	/^let b:current_syntax = "ratpoison"$/;"	v
b:current_syntax	./vim82/syntax/rc.vim	/^let b:current_syntax = "rc"$/;"	v
b:current_syntax	./vim82/syntax/rcs.vim	/^let b:current_syntax = "rcs"$/;"	v
b:current_syntax	./vim82/syntax/rcslog.vim	/^let b:current_syntax = "rcslog"$/;"	v
b:current_syntax	./vim82/syntax/readline.vim	/^let b:current_syntax = 'readline'$/;"	v
b:current_syntax	./vim82/syntax/rebol.vim	/^let b:current_syntax = "rebol"$/;"	v
b:current_syntax	./vim82/syntax/redif.vim	/^let b:current_syntax="redif"$/;"	v
b:current_syntax	./vim82/syntax/registry.vim	/^let b:current_syntax = "registry"$/;"	v
b:current_syntax	./vim82/syntax/rego.vim	/^let b:current_syntax = 'rego'$/;"	v
b:current_syntax	./vim82/syntax/remind.vim	/^let b:current_syntax = "remind"$/;"	v
b:current_syntax	./vim82/syntax/resolv.vim	/^let b:current_syntax = "resolv"$/;"	v
b:current_syntax	./vim82/syntax/reva.vim	/^let b:current_syntax = "reva"$/;"	v
b:current_syntax	./vim82/syntax/rexx.vim	/^let b:current_syntax = "rexx"$/;"	v
b:current_syntax	./vim82/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	./vim82/syntax/rib.vim	/^let b:current_syntax = "rib"$/;"	v
b:current_syntax	./vim82/syntax/rmd.vim	/^  let b:current_syntax = "rmd"$/;"	v
b:current_syntax	./vim82/syntax/rmd.vim	/^let b:current_syntax = "rmd"$/;"	v
b:current_syntax	./vim82/syntax/rnc.vim	/^let b:current_syntax = "rnc"$/;"	v
b:current_syntax	./vim82/syntax/rng.vim	/^let b:current_syntax = 'rng'$/;"	v
b:current_syntax	./vim82/syntax/rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	./vim82/syntax/robots.vim	/^let b:current_syntax = "robots"$/;"	v
b:current_syntax	./vim82/syntax/rpcgen.vim	/^let b:current_syntax = "rpcgen"$/;"	v
b:current_syntax	./vim82/syntax/rpl.vim	/^let b:current_syntax = "rpl"$/;"	v
b:current_syntax	./vim82/syntax/rrst.vim	/^let b:current_syntax = "rrst"$/;"	v
b:current_syntax	./vim82/syntax/rst.vim	/^let b:current_syntax = "rst"$/;"	v
b:current_syntax	./vim82/syntax/rtf.vim	/^let b:current_syntax = "rtf"$/;"	v
b:current_syntax	./vim82/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	./vim82/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	./vim82/syntax/samba.vim	/^let b:current_syntax = "samba"$/;"	v
b:current_syntax	./vim82/syntax/sas.vim	/^let b:current_syntax = "sas"$/;"	v
b:current_syntax	./vim82/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	./vim82/syntax/sather.vim	/^let b:current_syntax = "sather"$/;"	v
b:current_syntax	./vim82/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	./vim82/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:current_syntax	./vim82/syntax/scheme.vim	/^let b:current_syntax = 'scheme'$/;"	v
b:current_syntax	./vim82/syntax/scilab.vim	/^let b:current_syntax = "scilab"$/;"	v
b:current_syntax	./vim82/syntax/screen.vim	/^let b:current_syntax = "screen"$/;"	v
b:current_syntax	./vim82/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	./vim82/syntax/sd.vim	/^let b:current_syntax = "sd"$/;"	v
b:current_syntax	./vim82/syntax/sdc.vim	/^let b:current_syntax = "sdc"$/;"	v
b:current_syntax	./vim82/syntax/sdl.vim	/^let b:current_syntax = "sdl"$/;"	v
b:current_syntax	./vim82/syntax/sed.vim	/^let b:current_syntax = "sed"$/;"	v
b:current_syntax	./vim82/syntax/sensors.vim	/^let b:current_syntax = "sensors"$/;"	v
b:current_syntax	./vim82/syntax/services.vim	/^let b:current_syntax = "services"$/;"	v
b:current_syntax	./vim82/syntax/setserial.vim	/^let b:current_syntax = "setserial"$/;"	v
b:current_syntax	./vim82/syntax/sgml.vim	/^let b:current_syntax = "sgml"$/;"	v
b:current_syntax	./vim82/syntax/sgmldecl.vim	/^let b:current_syntax = "sgmldecl"$/;"	v
b:current_syntax	./vim82/syntax/sgmllnx.vim	/^let b:current_syntax = "sgmllnx"$/;"	v
b:current_syntax	./vim82/syntax/sh.vim	/^ let b:current_syntax = "bash"$/;"	v
b:current_syntax	./vim82/syntax/sh.vim	/^ let b:current_syntax = "ksh"$/;"	v
b:current_syntax	./vim82/syntax/sh.vim	/^ let b:current_syntax = "posix"$/;"	v
b:current_syntax	./vim82/syntax/sh.vim	/^ let b:current_syntax = "sh"$/;"	v
b:current_syntax	./vim82/syntax/sicad.vim	/^let b:current_syntax = "sicad"$/;"	v
b:current_syntax	./vim82/syntax/sieve.vim	/^let b:current_syntax = "sieve"$/;"	v
b:current_syntax	./vim82/syntax/sil.vim	/^let b:current_syntax = "sil"$/;"	v
b:current_syntax	./vim82/syntax/simula.vim	/^let b:current_syntax = "simula"$/;"	v
b:current_syntax	./vim82/syntax/sinda.vim	/^let b:current_syntax = "sinda"$/;"	v
b:current_syntax	./vim82/syntax/sindacmp.vim	/^let b:current_syntax = "sindacmp"$/;"	v
b:current_syntax	./vim82/syntax/sindaout.vim	/^let b:current_syntax = "sindaout"$/;"	v
b:current_syntax	./vim82/syntax/sisu.vim	/^let b:current_syntax = "sisu"$/;"	v
b:current_syntax	./vim82/syntax/skill.vim	/^let b:current_syntax = "skill"$/;"	v
b:current_syntax	./vim82/syntax/sl.vim	/^let b:current_syntax = "sl"$/;"	v
b:current_syntax	./vim82/syntax/slang.vim	/^let b:current_syntax = "slang"$/;"	v
b:current_syntax	./vim82/syntax/slice.vim	/^let b:current_syntax = "slice"$/;"	v
b:current_syntax	./vim82/syntax/slpconf.vim	/^let b:current_syntax = "slpconf"$/;"	v
b:current_syntax	./vim82/syntax/slpreg.vim	/^let b:current_syntax = "slpreg"$/;"	v
b:current_syntax	./vim82/syntax/slpspi.vim	/^let b:current_syntax = "slpspi"$/;"	v
b:current_syntax	./vim82/syntax/slrnrc.vim	/^let b:current_syntax = "slrnrc"$/;"	v
b:current_syntax	./vim82/syntax/slrnsc.vim	/^let b:current_syntax = "slrnsc"$/;"	v
b:current_syntax	./vim82/syntax/sm.vim	/^let b:current_syntax = "sm"$/;"	v
b:current_syntax	./vim82/syntax/smarty.vim	/^let b:current_syntax = "smarty"$/;"	v
b:current_syntax	./vim82/syntax/smcl.vim	/^let b:current_syntax = "smcl"$/;"	v
b:current_syntax	./vim82/syntax/smil.vim	/^let b:current_syntax = "smil"$/;"	v
b:current_syntax	./vim82/syntax/smith.vim	/^let b:current_syntax = "smith"$/;"	v
b:current_syntax	./vim82/syntax/sml.vim	/^let b:current_syntax = "sml"$/;"	v
b:current_syntax	./vim82/syntax/snnsnet.vim	/^let b:current_syntax = "snnsnet"$/;"	v
b:current_syntax	./vim82/syntax/snnspat.vim	/^let b:current_syntax = "snnspat"$/;"	v
b:current_syntax	./vim82/syntax/snnsres.vim	/^let b:current_syntax = "snnsres"$/;"	v
b:current_syntax	./vim82/syntax/snobol4.vim	/^let b:current_syntax = "snobol4"$/;"	v
b:current_syntax	./vim82/syntax/spec.vim	/^let b:current_syntax = "spec"$/;"	v
b:current_syntax	./vim82/syntax/specman.vim	/^let b:current_syntax = "specman"$/;"	v
b:current_syntax	./vim82/syntax/spice.vim	/^let b:current_syntax = "spice"$/;"	v
b:current_syntax	./vim82/syntax/splint.vim	/^let b:current_syntax = "splint"$/;"	v
b:current_syntax	./vim82/syntax/spup.vim	/^let b:current_syntax = "spup"$/;"	v
b:current_syntax	./vim82/syntax/spyce.vim	/^let b:current_syntax = "spyce"$/;"	v
b:current_syntax	./vim82/syntax/sqlanywhere.vim	/^let b:current_syntax = "sqlanywhere"$/;"	v
b:current_syntax	./vim82/syntax/sqlforms.vim	/^let b:current_syntax = "sqlforms"$/;"	v
b:current_syntax	./vim82/syntax/sqlhana.vim	/^let b:current_syntax = "sqlhana"$/;"	v
b:current_syntax	./vim82/syntax/sqlinformix.vim	/^let b:current_syntax = "sqlinformix"$/;"	v
b:current_syntax	./vim82/syntax/sqlj.vim	/^let b:current_syntax = "sqlj"$/;"	v
b:current_syntax	./vim82/syntax/sqloracle.vim	/^let b:current_syntax = "sql"$/;"	v
b:current_syntax	./vim82/syntax/sqr.vim	/^let b:current_syntax = "sqr"$/;"	v
b:current_syntax	./vim82/syntax/squid.vim	/^let b:current_syntax = "squid"$/;"	v
b:current_syntax	./vim82/syntax/srec.vim	/^let b:current_syntax = "srec"$/;"	v
b:current_syntax	./vim82/syntax/sshconfig.vim	/^let b:current_syntax = "sshconfig"$/;"	v
b:current_syntax	./vim82/syntax/sshdconfig.vim	/^let b:current_syntax = "sshdconfig"$/;"	v
b:current_syntax	./vim82/syntax/st.vim	/^let b:current_syntax = "st"$/;"	v
b:current_syntax	./vim82/syntax/stata.vim	/^let b:current_syntax = "stata"$/;"	v
b:current_syntax	./vim82/syntax/stp.vim	/^let b:current_syntax = "stp"$/;"	v
b:current_syntax	./vim82/syntax/strace.vim	/^let b:current_syntax = "strace"$/;"	v
b:current_syntax	./vim82/syntax/sudoers.vim	/^let b:current_syntax = "sudoers"$/;"	v
b:current_syntax	./vim82/syntax/svg.vim	/^let b:current_syntax = "svg"$/;"	v
b:current_syntax	./vim82/syntax/svn.vim	/^let b:current_syntax = "svn"$/;"	v
b:current_syntax	./vim82/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	./vim82/syntax/swiftgyb.vim	/^let b:current_syntax = "swiftgyb"$/;"	v
b:current_syntax	./vim82/syntax/sysctl.vim	/^let b:current_syntax = "sysctl"$/;"	v
b:current_syntax	./vim82/syntax/systemd.vim	/^  let b:current_syntax = 'systemd'$/;"	v
b:current_syntax	./vim82/syntax/systemverilog.vim	/^let b:current_syntax = "systemverilog"$/;"	v
b:current_syntax	./vim82/syntax/tads.vim	/^let b:current_syntax = "tads"$/;"	v
b:current_syntax	./vim82/syntax/tags.vim	/^let b:current_syntax = "tags"$/;"	v
b:current_syntax	./vim82/syntax/tak.vim	/^let b:current_syntax = "tak"$/;"	v
b:current_syntax	./vim82/syntax/takcmp.vim	/^let b:current_syntax = "takcmp"$/;"	v
b:current_syntax	./vim82/syntax/takout.vim	/^let b:current_syntax = "takout"$/;"	v
b:current_syntax	./vim82/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	./vim82/syntax/taskdata.vim	/^let b:current_syntax = "taskdata"$/;"	v
b:current_syntax	./vim82/syntax/taskedit.vim	/^let b:current_syntax = "taskedit"$/;"	v
b:current_syntax	./vim82/syntax/tasm.vim	/^let b:current_syntax = "tasm"$/;"	v
b:current_syntax	./vim82/syntax/tcl.vim	/^let b:current_syntax = "tcl"$/;"	v
b:current_syntax	./vim82/syntax/tcsh.vim	/^let b:current_syntax = 'tcsh'$/;"	v
b:current_syntax	./vim82/syntax/teraterm.vim	/^let b:current_syntax = "teraterm"$/;"	v
b:current_syntax	./vim82/syntax/terminfo.vim	/^let b:current_syntax = "terminfo"$/;"	v
b:current_syntax	./vim82/syntax/tex.vim	/^let   b:current_syntax = "tex"$/;"	v
b:current_syntax	./vim82/syntax/texinfo.vim	/^let b:current_syntax = "texinfo"$/;"	v
b:current_syntax	./vim82/syntax/texmf.vim	/^let b:current_syntax = "texmf"$/;"	v
b:current_syntax	./vim82/syntax/tf.vim	/^let b:current_syntax = "tf"$/;"	v
b:current_syntax	./vim82/syntax/tidy.vim	/^let b:current_syntax = "tidy"$/;"	v
b:current_syntax	./vim82/syntax/tilde.vim	/^let b:current_syntax = "tilde"$/;"	v
b:current_syntax	./vim82/syntax/tli.vim	/^let b:current_syntax = "tli"$/;"	v
b:current_syntax	./vim82/syntax/tmux.vim	/^let b:current_syntax = "tmux"$/;"	v
b:current_syntax	./vim82/syntax/tpp.vim	/^let b:current_syntax = 'tpp'$/;"	v
b:current_syntax	./vim82/syntax/trasys.vim	/^let b:current_syntax = "trasys"$/;"	v
b:current_syntax	./vim82/syntax/treetop.vim	/^let b:current_syntax = 'treetop'$/;"	v
b:current_syntax	./vim82/syntax/tsalt.vim	/^let b:current_syntax = "tsalt"$/;"	v
b:current_syntax	./vim82/syntax/tsscl.vim	/^let b:current_syntax = "tsscl"$/;"	v
b:current_syntax	./vim82/syntax/tssgm.vim	/^let b:current_syntax = "tssgm"$/;"	v
b:current_syntax	./vim82/syntax/tssop.vim	/^let b:current_syntax = "tssop"$/;"	v
b:current_syntax	./vim82/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	./vim82/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	./vim82/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	./vim82/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	./vim82/syntax/typescriptreact.vim	/^let b:current_syntax = "typescriptreact"$/;"	v
b:current_syntax	./vim82/syntax/uc.vim	/^let b:current_syntax = "uc"$/;"	v
b:current_syntax	./vim82/syntax/udevconf.vim	/^let b:current_syntax = "udevconf"$/;"	v
b:current_syntax	./vim82/syntax/udevperm.vim	/^let b:current_syntax = "udevperm"$/;"	v
b:current_syntax	./vim82/syntax/udevrules.vim	/^let b:current_syntax = "udevrules"$/;"	v
b:current_syntax	./vim82/syntax/uil.vim	/^let b:current_syntax = "uil"$/;"	v
b:current_syntax	./vim82/syntax/updatedb.vim	/^let b:current_syntax = "updatedb"$/;"	v
b:current_syntax	./vim82/syntax/upstart.vim	/^let b:current_syntax = "upstart"$/;"	v
b:current_syntax	./vim82/syntax/upstreamdat.vim	/^let b:current_syntax = "upstreamdat"$/;"	v
b:current_syntax	./vim82/syntax/upstreaminstalllog.vim	/^let b:current_syntax = "upstreaminstalllog"$/;"	v
b:current_syntax	./vim82/syntax/upstreamlog.vim	/^let b:current_syntax = "upstreamlog"$/;"	v
b:current_syntax	./vim82/syntax/upstreamrpt.vim	/^let b:current_syntax = "upstreamrpt"$/;"	v
b:current_syntax	./vim82/syntax/usserverlog.vim	/^let b:current_syntax = "usserverlog"$/;"	v
b:current_syntax	./vim82/syntax/usw2kagtlog.vim	/^let b:current_syntax = "usw2kagentlog"$/;"	v
b:current_syntax	./vim82/syntax/valgrind.vim	/^let b:current_syntax = "valgrind"$/;"	v
b:current_syntax	./vim82/syntax/vb.vim	/^let b:current_syntax = "vb"$/;"	v
b:current_syntax	./vim82/syntax/vera.vim	/^let b:current_syntax = "vera"$/;"	v
b:current_syntax	./vim82/syntax/verilog.vim	/^let b:current_syntax = "verilog"$/;"	v
b:current_syntax	./vim82/syntax/verilogams.vim	/^let b:current_syntax = "verilogams"$/;"	v
b:current_syntax	./vim82/syntax/vgrindefs.vim	/^let b:current_syntax = "vgrindefs"$/;"	v
b:current_syntax	./vim82/syntax/vhdl.vim	/^let b:current_syntax = "vhdl"$/;"	v
b:current_syntax	./vim82/syntax/vim.vim	/^let b:current_syntax = "vim"$/;"	v
b:current_syntax	./vim82/syntax/viminfo.vim	/^let b:current_syntax = "viminfo"$/;"	v
b:current_syntax	./vim82/syntax/virata.vim	/^let b:current_syntax = "virata"$/;"	v
b:current_syntax	./vim82/syntax/vmasm.vim	/^let b:current_syntax = "vmasm"$/;"	v
b:current_syntax	./vim82/syntax/voscm.vim	/^let b:current_syntax = "voscm"$/;"	v
b:current_syntax	./vim82/syntax/vrml.vim	/^let b:current_syntax = "vrml"$/;"	v
b:current_syntax	./vim82/syntax/vroom.vim	/^let b:current_syntax = 'vroom'$/;"	v
b:current_syntax	./vim82/syntax/vsejcl.vim	/^let b:current_syntax = "vsejcl"$/;"	v
b:current_syntax	./vim82/syntax/wast.vim	/^let b:current_syntax = "wast"$/;"	v
b:current_syntax	./vim82/syntax/wdiff.vim	/^let b:current_syntax = "wdiff"$/;"	v
b:current_syntax	./vim82/syntax/web.vim	/^let b:current_syntax = "web"$/;"	v
b:current_syntax	./vim82/syntax/webmacro.vim	/^let b:current_syntax = "webmacro"$/;"	v
b:current_syntax	./vim82/syntax/wget.vim	/^let b:current_syntax = "wget"$/;"	v
b:current_syntax	./vim82/syntax/winbatch.vim	/^let b:current_syntax = "winbatch"$/;"	v
b:current_syntax	./vim82/syntax/wml.vim	/^let b:current_syntax = "wml"$/;"	v
b:current_syntax	./vim82/syntax/wsh.vim	/^let b:current_syntax = "wsh"$/;"	v
b:current_syntax	./vim82/syntax/wsml.vim	/^let b:current_syntax = "wsml"$/;"	v
b:current_syntax	./vim82/syntax/wvdial.vim	/^let b:current_syntax = "wvdial"$/;"	v
b:current_syntax	./vim82/syntax/xbl.vim	/^let b:current_syntax = "xbl"$/;"	v
b:current_syntax	./vim82/syntax/xdefaults.vim	/^let b:current_syntax = "xdefaults"$/;"	v
b:current_syntax	./vim82/syntax/xf86conf.vim	/^let b:current_syntax = "xf86conf"$/;"	v
b:current_syntax	./vim82/syntax/xhtml.vim	/^let b:current_syntax = "xhtml"$/;"	v
b:current_syntax	./vim82/syntax/xinetd.vim	/^let b:current_syntax = "xinetd"$/;"	v
b:current_syntax	./vim82/syntax/xkb.vim	/^let b:current_syntax = "xkb"$/;"	v
b:current_syntax	./vim82/syntax/xmath.vim	/^let b:current_syntax = "xmath"$/;"	v
b:current_syntax	./vim82/syntax/xml.vim	/^let b:current_syntax = "xml"$/;"	v
b:current_syntax	./vim82/syntax/xmodmap.vim	/^let b:current_syntax = "xmodmap"$/;"	v
b:current_syntax	./vim82/syntax/xpm.vim	/^let b:current_syntax = "xpm"$/;"	v
b:current_syntax	./vim82/syntax/xpm2.vim	/^let b:current_syntax = "xpm2"$/;"	v
b:current_syntax	./vim82/syntax/xquery.vim	/^let b:current_syntax = "xquery"$/;"	v
b:current_syntax	./vim82/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	./vim82/syntax/xxd.vim	/^let b:current_syntax = "xxd"$/;"	v
b:current_syntax	./vim82/syntax/yacc.vim	/^let b:current_syntax = "yacc"$/;"	v
b:current_syntax	./vim82/syntax/yaml.vim	/^let b:current_syntax = "yaml"$/;"	v
b:current_syntax	./vim82/syntax/z8a.vim	/^let b:current_syntax = "z8a"$/;"	v
b:current_syntax	./vim82/syntax/zimbu.vim	/^let b:current_syntax = "zimbu"$/;"	v
b:current_syntax	./vim82/syntax/zsh.vim	/^let b:current_syntax = "zsh"$/;"	v
b:current_syntax	./vimfiles/after/syntax/ifdef.vim	/^  let b:current_syntax = "ifdef"$/;"	v
b:current_syntax	./vimfiles/after/syntax/ifdef.vim	/^  let b:current_syntax = b:current_syntax.'+ifdef'$/;"	v
b:current_syntax	./vimfiles/bundle/phpcomplete.vim/syntax/phpcompletetempbuffer.vim	/^let b:current_syntax = "phpcompletetempbuffer"$/;"	v
b:current_syntax	./vimfiles/bundle/python-mode/syntax/pyrex.vim	/^let b:current_syntax = "pyrex"$/;"	v
b:current_syntax	./vimfiles/bundle/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	./vimfiles/bundle/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	./vimfiles/syntax/jquery.vim	/^let b:current_syntax = 'jquery'$/;"	v
b:current_syntax	./vimfiles/syntax/stap.vim	/^let b:current_syntax = "stap"$/;"	v
b:current_syntax	./vimfiles/syntax/txt2tags.vim	/^let b:current_syntax = 'txt2tags'$/;"	v
b:dc_next_index	./vim82/syntax/dircolors.vim	/^let b:dc_next_index = 0$/;"	v
b:did_8thplugin	./vim82/ftplugin/8th.vim	/^let b:did_8thplugin = 1$/;"	v
b:did_add_maps	./vim82/ftplugin/vim.vim	/^  let b:did_add_maps = 1$/;"	v
b:did_after_plugin_ultisnips_after	./vimfiles/bundle/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/a2ps.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/aap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/abap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/abaqus.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/ada.vim	/^let b:did_ftplugin = 45$/;"	v
b:did_ftplugin	./vim82/ftplugin/alsaconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/ant.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/arch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/aspvbs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/awk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/bdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/bst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/c.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/calendar.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/cdrdaoconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/cfg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/changelog.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/cmake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/cobol.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/config.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/context.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/crm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/cs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/csc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/csh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/css.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/cvsrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/debchangelog.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	./vim82/ftplugin/debcontrol.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	./vim82/ftplugin/denyhosts.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dictconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dictdconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/diff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dircolors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dockerfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dosbatch.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dosini.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dtd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dtrace.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/dune.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	./vim82/ftplugin/eiffel.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/elinks.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/erlang.vim	/^	let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/eterm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/falcon.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/fetchmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/flexwiki.vim	/^let b:did_ftplugin = 1  " Don't load another plugin for this buffer$/;"	v
b:did_ftplugin	./vim82/ftplugin/fortran.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/framescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/fvwm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/gdb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/gpg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/gprof.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	./vim82/ftplugin/groovy.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/group.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/grub.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/hamster.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/haskell.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/help.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/hgcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/hog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/hostconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/hostsaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/html.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/indent.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/initex.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/ishd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/j.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/java.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/javascript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/jproperties.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/json.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/jsp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/kconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/ld.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/lftp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/libao.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/limits.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/lisp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/logcheck.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/loginaccess.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/logindefs.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/logtalk.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/lprolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/lua.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/m4.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mailaliases.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mailcap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/make.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/man.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/manconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/masm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/matlab.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/meson.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mma.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/modconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mplayerconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/mrxvtrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/msmessages.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/muttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/nanorc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/neomuttrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/netrc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/nroff.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/nsis.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	./vim82/ftplugin/occam.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/pamconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/pascal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/passwd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/pdf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/perl6.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/php.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/pinfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/postscr.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/procmail.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/prolog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/protocols.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/python.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/qf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/quake.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/r.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/racc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/readline.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/registry.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/reva.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rhelp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rmd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rnc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rpl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rrst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rst.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sbt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/scheme.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/screen.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sensors.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/services.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/setserial.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sgml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sieve.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/slpconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/slpreg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/slpspi.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/spec.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sql.vim	/^let b:did_ftplugin     = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sshconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sudoers.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/svg.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/sysctl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/tcl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/tcsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/terminfo.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/text.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/tmux.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/treetop.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/udevconf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/udevperm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/udevrules.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/updatedb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/vb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/verilog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/vhdl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/vim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/vroom.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/wast.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xdefaults.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xf86conf.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xhtml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xinetd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xmodmap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xsd.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/xslt.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/yaml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/zimbu.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vim82/ftplugin/zsh.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	./vimfiles/ftplugin/stap.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	./vim82/indent/ada.vim	/^let b:did_indent = 45$/;"	v
b:did_indent	./vim82/indent/awk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/bst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/bzl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/c.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/cdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/ch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/chaiscript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/changelog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/cobol.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/cpp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/cs.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/css.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/cuda.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/d.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/dictconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/dictdconf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/dosbatch.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/dtrace.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/dylan.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/eiffel.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/eterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/falcon.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/fortran.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/framescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/gitolite.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/hamster.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/hog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/idlang.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/ishd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/j.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/java.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/ld.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/lifelines.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/lisp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/logtalk.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/mail.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/make.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/matlab.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/meson.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/mma.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/mp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/nsis.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/objc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/occam.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/pascal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/perl6.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/php.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/postscr.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/pov.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/prolog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/r.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/readline.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/rhelp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/rmd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/rnoweb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/rpl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/rrst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/rst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/sas.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/sdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/sh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/sml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/sqlanywhere.vim	/^let b:did_indent     = 1$/;"	v
b:did_indent	./vim82/indent/systemverilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/tcl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/tcsh.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/teraterm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/tf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/tilde.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/treetop.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/vb.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/verilog.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/vhdl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/vim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/vroom.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/wast.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/xf86conf.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/xinetd.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/xml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/yacc.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/yaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/indent/zimbu.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vim82/syntax/spyce.vim	/^let b:did_indent = 1	     " don't perform HTML indentation!$/;"	v
b:did_indent	./vimfiles/bundle/html5.vim/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	./vimfiles/indent/stap.vim	/^let b:did_indent = 1$/;"	v
b:did_scheme_ftplugin	./vim82/ftplugin/scheme.vim	/^let b:did_scheme_ftplugin = 1$/;"	v
b:did_scheme_syntax	./vim82/syntax/scheme.vim	/^let b:did_scheme_syntax = 1$/;"	v
b:dnsmasq_backrgound_light	./vim82/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = 0$/;"	v
b:dnsmasq_backrgound_light	./vim82/syntax/dnsmasq.vim	/^	let b:dnsmasq_backrgound_light = dnsmasq_backrgound_light$/;"	v
b:docbk_type	./vim82/ftplugin/docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	./vim82/ftplugin/docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	./vim82/syntax/docbk.vim	/^    let b:docbk_type = 'sgml'$/;"	v
b:docbk_type	./vim82/syntax/docbk.vim	/^    let b:docbk_type = 'xml'$/;"	v
b:docbk_type	./vim82/syntax/docbksgml.vim	/^let b:docbk_type="sgml"$/;"	v
b:docbk_type	./vim82/syntax/docbkxml.vim	/^let b:docbk_type="xml"$/;"	v
b:docbk_ver	./vim82/syntax/docbk.vim	/^    let b:docbk_ver = 4$/;"	v
b:docbk_ver	./vim82/syntax/docbk.vim	/^    let b:docbk_ver = docbk_ver$/;"	v
b:doxygen_syntax_save	./vim82/syntax/doxygen.vim	/^    let b:doxygen_syntax_save=b:current_syntax$/;"	v
b:enforce_freedesktop_standard	./vim82/syntax/desktop.vim	/^	let b:enforce_freedesktop_standard = 0$/;"	v
b:enforce_freedesktop_standard	./vim82/syntax/desktop.vim	/^	let b:enforce_freedesktop_standard = 1$/;"	v
b:erlang_syntax_synced	./vim82/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	./vim82/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(&filetype,'\\C\\<eruby\\>','@','g'),'[/;"	v
b:eruby_nest_level	./vim82/syntax/eruby.vim	/^    let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'/;"	v
b:eruby_nest_level	./vim82/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	./vim82/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubi/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^.\\{-\\}\\ze\\.eruby\\>')$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	./vim82/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	./vim82/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eterm_minlines	./vim82/syntax/eterm.vim	/^  let b:eterm_minlines = 50$/;"	v
b:eterm_minlines	./vim82/syntax/eterm.vim	/^  let b:eterm_minlines = eterm_minlines$/;"	v
b:fortran_dialect	./vim82/syntax/fortran.vim	/^    let b:fortran_dialect = "f08"$/;"	v
b:fortran_dialect	./vim82/syntax/fortran.vim	/^    let b:fortran_dialect = g:fortran_dialect$/;"	v
b:fortran_dialect	./vim82/syntax/fortran.vim	/^  let b:fortran_dialect = "F"$/;"	v
b:fortran_dialect	./vim82/syntax/fortran.vim	/^  let b:fortran_dialect = "f08"$/;"	v
b:fortran_fixed_source	./vim82/ftplugin/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	./vim82/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	./vim82/ftplugin/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	./vim82/indent/fortran.vim	/^	let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	./vim82/indent/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	./vim82/indent/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_fixed_source	./vim82/syntax/fortran.vim	/^        let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	./vim82/syntax/fortran.vim	/^    let b:fortran_fixed_source = 0$/;"	v
b:fortran_fixed_source	./vim82/syntax/fortran.vim	/^    let b:fortran_fixed_source = 1$/;"	v
b:fortran_retype	./vim82/syntax/fortran.vim	/^let b:fortran_retype = getline(1)." ".getline(2)." ".getline(3)$/;"	v
b:framescript_minlines	./vim82/syntax/framescript.vim	/^let b:framescript_minlines = exists("framescript_minlines")$/;"	v
b:git_dir	./vim82/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	./vim82/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git[\\\/]worktrees[\\\/][^\\\/]\\+\\>')$/;"	v
b:git_dir	./vim82/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	./vim82/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	./vim82/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:grandparent_match	./vim82/ftplugin/python.vim	/^let b:grandparent_match = '^\\(.\\.\\)\\(\\.*\\)'$/;"	v
b:grandparent_sub	./vim82/ftplugin/python.vim	/^let b:grandparent_sub = '\\=submatch(1)."\/".repeat("..\/",strlen(submatch(2)))'$/;"	v
b:hi_indent	./vim82/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_indent	./vimfiles/bundle/html5.vim/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_lasttick	./vim82/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_lasttick	./vimfiles/bundle/html5.vim/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	./vim82/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:hi_newstate	./vimfiles/bundle/html5.vim/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:hs_chs	./vim82/syntax/chaskell.vim	/^let b:hs_chs=1$/;"	v
b:html_indent_usestate	./vim82/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:i	./vim82/syntax/hitest.vim	/^   let b:i = b:i + 1$/;"	v
b:i	./vim82/syntax/hitest.vim	/^let b:i = 1$/;"	v
b:indent_use_syntax	./vim82/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:indent_use_syntax	./vim82/indent/perl6.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:is_bash	./vim82/ftplugin/bash.vim	/^let b:is_bash = 1$/;"	v
b:is_bash	./vim82/indent/bash.vim	/^let b:is_bash = 1$/;"	v
b:is_bash	./vim82/syntax/bash.vim	/^let b:is_bash = 1$/;"	v
b:is_bash	./vim82/syntax/sh.vim	/^    let b:is_bash= 1$/;"	v
b:is_bash	./vim82/syntax/sh.vim	/^  let b:is_bash = 1$/;"	v
b:is_bash	./vim82/syntax/sh.vim	/^ let b:is_bash      = 1$/;"	v
b:is_kornshell	./vim82/syntax/sh.vim	/^    let b:is_kornshell= 1$/;"	v
b:is_kornshell	./vim82/syntax/sh.vim	/^  let b:is_kornshell= 1$/;"	v
b:is_kornshell	./vim82/syntax/sh.vim	/^ let b:is_kornshell = 1$/;"	v
b:is_posix	./vim82/syntax/sh.vim	/^  let b:is_posix = 1$/;"	v
b:is_posix	./vim82/syntax/sh.vim	/^ let b:is_posix     = 1$/;"	v
b:is_sh	./vim82/syntax/sh.vim	/^    let b:is_sh= 1$/;"	v
b:keymap	./vim82/keymap/magyar_utf-8.vim	/^let b:keymap = "magyar"$/;"	v
b:keymap_name	./vim82/keymap/accents.vim	/^let b:keymap_name = "acc"$/;"	v
b:keymap_name	./vim82/keymap/arabic_utf-8.vim	/^let b:keymap_name = "arab"$/;"	v
b:keymap_name	./vim82/keymap/armenian-eastern_utf-8.vim	/^let b:keymap_name = "hy"$/;"	v
b:keymap_name	./vim82/keymap/armenian-western_utf-8.vim	/^let b:keymap_name = "hy"$/;"	v
b:keymap_name	./vim82/keymap/belarusian-jcuken.vim	/^let b:keymap_name = "by"$/;"	v
b:keymap_name	./vim82/keymap/bulgarian-bds.vim	/^let b:keymap_name = "bds"$/;"	v
b:keymap_name	./vim82/keymap/bulgarian-phonetic.vim	/^let b:keymap_name = "pho"$/;"	v
b:keymap_name	./vim82/keymap/canfr-win.vim	/^let b:keymap_name = "canfr"$/;"	v
b:keymap_name	./vim82/keymap/croatian_cp1250.vim	/^let b:keymap_name = "croatian-cp1250"$/;"	v
b:keymap_name	./vim82/keymap/croatian_iso-8859-2.vim	/^let b:keymap_name = "croatian-iso-8859-2"$/;"	v
b:keymap_name	./vim82/keymap/croatian_utf-8.vim	/^let b:keymap_name = "croatian-UTF-8"$/;"	v
b:keymap_name	./vim82/keymap/czech_utf-8.vim	/^let b:keymap_name = "czech"$/;"	v
b:keymap_name	./vim82/keymap/dvorak.vim	/^let b:keymap_name = "en-dv"$/;"	v
b:keymap_name	./vim82/keymap/esperanto_utf-8.vim	/^let b:keymap_name = "Eo"$/;"	v
b:keymap_name	./vim82/keymap/greek_cp1253.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	./vim82/keymap/greek_cp737.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	./vim82/keymap/greek_iso-8859-7.vim	/^let b:keymap_name = "greek"$/;"	v
b:keymap_name	./vim82/keymap/greek_utf-8.vim	/^let b:keymap_name = "grk"$/;"	v
b:keymap_name	./vim82/keymap/hebrew_cp1255.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	./vim82/keymap/hebrew_iso-8859-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	./vim82/keymap/hebrew_utf-8.vim	/^let b:keymap_name = "heb"$/;"	v
b:keymap_name	./vim82/keymap/hebrewp_cp1255.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	./vim82/keymap/hebrewp_iso-8859-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	./vim82/keymap/hebrewp_utf-8.vim	/^let b:keymap_name = "hebp"$/;"	v
b:keymap_name	./vim82/keymap/kana.vim	/^let b:keymap_name = "kana"$/;"	v
b:keymap_name	./vim82/keymap/kazakh-jcuken.vim	/^let b:keymap_name = "kk"$/;"	v
b:keymap_name	./vim82/keymap/lithuanian-baltic.vim	/^let b:keymap_name = "lt"$/;"	v
b:keymap_name	./vim82/keymap/mongolian_utf-8.vim	/^let b:keymap_name = "mn"$/;"	v
b:keymap_name	./vim82/keymap/oldturkic-orkhon_utf-8.vim	/^let b:keymap_name = "oto"$/;"	v
b:keymap_name	./vim82/keymap/oldturkic-yenisei_utf-8.vim	/^let b:keymap_name = "oty"$/;"	v
b:keymap_name	./vim82/keymap/persian-iranian_utf-8.vim	/^let b:keymap_name = "per"$/;"	v
b:keymap_name	./vim82/keymap/pinyin.vim	/^let b:keymap_name = "py"$/;"	v
b:keymap_name	./vim82/keymap/polish-slash_cp1250.vim	/^let b:keymap_name = "PL-slash-WIN"$/;"	v
b:keymap_name	./vim82/keymap/polish-slash_cp852.vim	/^let b:keymap_name = "PL-slash-DOS"$/;"	v
b:keymap_name	./vim82/keymap/polish-slash_iso-8859-2.vim	/^let b:keymap_name = "PL-slash-ISO"$/;"	v
b:keymap_name	./vim82/keymap/polish-slash_utf-8.vim	/^let b:keymap_name = "PL-slash-UTF"$/;"	v
b:keymap_name	./vim82/keymap/russian-dvorak.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	./vim82/keymap/russian-jcuken.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	./vim82/keymap/russian-jcukenmac.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	./vim82/keymap/russian-jcukenwin.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	./vim82/keymap/russian-jcukenwintype.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	./vim82/keymap/russian-yawerty.vim	/^let b:keymap_name = "ru"$/;"	v
b:keymap_name	./vim82/keymap/serbian-latin_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	./vim82/keymap/serbian_cp1250.vim	/^let b:keymap_name = "serbian-cp1250"$/;"	v
b:keymap_name	./vim82/keymap/serbian_cp1251.vim	/^let b:keymap_name = "serbian-cp1251"$/;"	v
b:keymap_name	./vim82/keymap/serbian_iso-8859-2.vim	/^let b:keymap_name = "serbian-iso-8859-2"$/;"	v
b:keymap_name	./vim82/keymap/serbian_iso-8859-5.vim	/^let b:keymap_name = "serbian-iso-8859-5"$/;"	v
b:keymap_name	./vim82/keymap/serbian_utf-8.vim	/^let b:keymap_name = "serbian-UTF-8"$/;"	v
b:keymap_name	./vim82/keymap/sinhala-phonetic_utf-8.vim	/^let b:keymap_name = "sinhala"$/;"	v
b:keymap_name	./vim82/keymap/slovak_cp1250.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	./vim82/keymap/slovak_iso-8859-2.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	./vim82/keymap/slovak_utf-8.vim	/^let b:keymap_name = "sk"$/;"	v
b:keymap_name	./vim82/keymap/tamil_tscii.vim	/^let b:keymap_name = "tamil_tscii"$/;"	v
b:keymap_name	./vim82/keymap/thaana-phonetic_utf-8.vim	/^let b:keymap_name= "thaana"$/;"	v
b:keymap_name	./vim82/keymap/ukrainian-dvorak.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	./vim82/keymap/ukrainian-jcuken.vim	/^let b:keymap_name = "uk"$/;"	v
b:keymap_name	./vim82/keymap/vietnamese-telex_utf-8.vim	/^let b:keymap_name = "vi"$/;"	v
b:keymap_name	./vim82/keymap/vietnamese-viqr_utf-8.vim	/^let b:keymap_name = "vietnamese"$/;"	v
b:keymap_name	./vim82/keymap/vietnamese-vni_utf-8.vim	/^let b:keymap_name = "vi"$/;"	v
b:lhs_markup	./vim82/syntax/lhaskell.vim	/^	    let b:lhs_markup = "unknown"$/;"	v
b:lhs_markup	./vim82/syntax/lhaskell.vim	/^	    let b:lhs_markup = matchstr(lhs_markup,'\\<\\%(tex\\|none\\)\\>')$/;"	v
b:lhs_markup	./vim82/syntax/lhaskell.vim	/^	let b:lhs_markup = "plain"$/;"	v
b:lhs_markup	./vim82/syntax/lhaskell.vim	/^	let b:lhs_markup = "tex"$/;"	v
b:lhs_markup	./vim82/syntax/lhaskell.vim	/^	let b:lhs_markup = "unknown"$/;"	v
b:liquid_subtype	./vim82/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	./vim82/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	./vim82/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	./vim82/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	./vim82/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	./vim82/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	./vim82/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\/;"	v
b:liquid_subtype	./vim82/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	./vim82/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	./vim82/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:main_syntax	./vim82/syntax/groff.vim	/^let b:main_syntax = "nroff"$/;"	v
b:match_ignorecase	./vim82/ftplugin/abaqus.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	./vim82/ftplugin/aspvbs.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	./vim82/ftplugin/cmake.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	./vim82/ftplugin/cobol.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	./vim82/ftplugin/context.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/eiffel.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/falcon.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/fortran.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	./vim82/ftplugin/hamster.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/html.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	./vim82/ftplugin/ishd.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	./vim82/ftplugin/j.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/lua.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/mf.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/mp.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/nsis.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	./vim82/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	./vim82/ftplugin/pascal.vim	/^    let b:match_ignorecase = 1 " (pascal is case-insensitive)$/;"	v
b:match_ignorecase	./vim82/ftplugin/plaintex.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/postscr.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/spec.vim	/^let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/sql.vim	/^    let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	./vim82/ftplugin/vb.vim	/^    let b:match_ignorecase=1$/;"	v
b:match_ignorecase	./vim82/ftplugin/verilog.vim	/^  let b:match_ignorecase=0$/;"	v
b:match_ignorecase	./vim82/ftplugin/vhdl.vim	/^  let b:match_ignorecase=1$/;"	v
b:match_ignorecase	./vim82/ftplugin/vim.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	./vim82/ftplugin/xml.vim	/^    let b:match_ignorecase=0$/;"	v
b:match_ignorecase	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	./vim82/ftplugin/c.vim	/^let b:match_skip = 's:comment\\|string\\|character\\|special'$/;"	v
b:match_skip	./vim82/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	./vim82/ftplugin/context.vim	/^  let b:match_skip = 'r:\\\\\\@<!\\%(\\\\\\\\\\)*%'$/;"	v
b:match_skip	./vim82/ftplugin/dtrace.vim	/^let b:match_skip = 's:comment\\|string\\|character'$/;"	v
b:match_skip	./vim82/ftplugin/eiffel.vim	/^  let b:match_skip = 's:\\<eiffel\\%(Comment\\|String\\|Operator\\)\\>'$/;"	v
b:match_skip	./vim82/ftplugin/hog.vim	/^    let b:match_skip = 'r:\\\\.\\{-}$\\|^\\s*#.\\{-}$\\|^\\s*$'$/;"	v
b:match_skip	./vim82/ftplugin/mf.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	./vim82/ftplugin/mp.vim	/^  let b:match_skip = 'synIDattr(synID(line("."), col("."), 1), "name")$/;"	v
b:match_skip	./vim82/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitut/;"	v
b:match_skip	./vim82/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	./vim82/ftplugin/vim.vim	/^  let b:match_skip = 'synIDattr(synID(line("."),col("."),1),"name")$/;"	v
b:match_skip	./vim82/ftplugin/zimbu.vim	/^let b:match_skip = 's:comment\\|string\\|zimbuchar'$/;"	v
b:match_skip	./vim82/ftplugin/zsh.vim	/^let b:match_skip = 's:comment\\|string\\|heredoc\\|subst'$/;"	v
b:match_words	./vim82/ftplugin/abaqus.vim	/^    let b:match_words = $/;"	v
b:match_words	./vim82/ftplugin/ada.vim	/^   let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/aspvbs.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/c.vim	/^let b:match_words = '^\\s*#\\s*if\\(\\|def\\|ndef\\)\\>:^\\s*#\\s*elif\\>:^\\s*#\\s*else\\>:^\\s/;"	v
b:match_words	./vim82/ftplugin/chicken.vim	/^  let b:match_words = '#>:<#'$/;"	v
b:match_words	./vim82/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	./vim82/ftplugin/cmake.vim	/^  let b:match_words = '\\<if\\>:\\<elseif\\>\\|\\<else\\>:\\<endif\\>'$/;"	v
b:match_words	./vim82/ftplugin/cobol.vim	/^    let b:match_words=$/;"	v
b:match_words	./vim82/ftplugin/context.vim	/^  let b:match_words = '(:),\\[:],{:},\\\\(:\\\\),\\\\\\[:\\\\],' .$/;"	v
b:match_words	./vim82/ftplugin/csc.vim	/^    let b:match_words=$/;"	v
b:match_words	./vim82/ftplugin/csh.vim	/^    let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/dtd.vim	/^    let b:match_words = '<!--:-->,<!:>'$/;"	v
b:match_words	./vim82/ftplugin/dtrace.vim	/^let b:match_words = &matchpairs$/;"	v
b:match_words	./vim82/ftplugin/eiffel.vim	/^  let b:match_words = '\\%^:' .$/;"	v
b:match_words	./vim82/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	./vim82/ftplugin/falcon.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/fortran.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/framescript.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	./vim82/ftplugin/hamster.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/hog.vim	/^    let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/html.vim	/^    let b:match_words = '<:>,' .$/;"	v
b:match_words	./vim82/ftplugin/ishd.vim	/^    let b:match_words=$/;"	v
b:match_words	./vim82/ftplugin/j.vim	/^  let b:match_words = '^\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|v/;"	v
b:match_words	./vim82/ftplugin/jsp.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	./vim82/ftplugin/kconfig.vim	/^  let b:match_words = '^\\<menu\\>:\\<endmenu\\>,^\\<if\\>:\\<endif\\>,^\\<choice\\>:\\<endchoic/;"	v
b:match_words	./vim82/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	./vim82/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\</;"	v
b:match_words	./vim82/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	./vim82/ftplugin/lua.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/make.vim	/^  let b:match_words = '^ *ifn\\=\\(eq\\|def\\)\\>:^ *else\\(\\s\\+ifn\\=\\(eq\\|def\\)\\)\\=\\>:/;"	v
b:match_words	./vim82/ftplugin/matlab.vim	/^ let b:match_words=$/;"	v
b:match_words	./vim82/ftplugin/mf.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/mp.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/nsis.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	./vim82/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<if\\>:\\<else\\>'$/;"	v
b:match_words	./vim82/ftplugin/pascal.vim	/^    let b:match_words .= ',\\<repeat\\>:\\<until\\>'$/;"	v
b:match_words	./vim82/ftplugin/pascal.vim	/^    let b:match_words .= ':\\<^\\s*\\%(except\\|finally\\)\\>:\\<end\\>'$/;"	v
b:match_words	./vim82/ftplugin/pascal.vim	/^    let b:match_words = '\\<\\%(begin\\|case\\|record\\|object\\|try\\)\\>'$/;"	v
b:match_words	./vim82/ftplugin/pdf.vim	/^    let b:match_words = '\\<\\%(\\d\\+\\s\\+\\d\\+\\s\\+\\)obj\\>:\\<endobj\\>,\\<stream$:\\<end/;"	v
b:match_words	./vim82/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:match_words	./vim82/ftplugin/php.vim	/^    let b:match_words = '<?php:?>,\\<switch\\>:\\<endswitch\\>,' .$/;"	v
b:match_words	./vim82/ftplugin/postscr.vim	/^  let b:match_words = '<<:>>,\\<begin\\>:\\<end\\>,\\<save\\>:\\<restore\\>,\\<gsave\\>:\\<grest/;"	v
b:match_words	./vim82/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/sh.vim	/^    let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/spec.vim	/^let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/sql.vim	/^    let b:match_words = &matchpairs .$/;"	v
b:match_words	./vim82/ftplugin/tex.vim	/^  let b:match_words .= ',\\\\begin\\s*\\({\\a\\+\\*\\=}\\):\\\\end\\s*\\1'$/;"	v
b:match_words	./vim82/ftplugin/vb.vim	/^    let b:match_words=$/;"	v
b:match_words	./vim82/ftplugin/verilog.vim	/^  let b:match_words=$/;"	v
b:match_words	./vim82/ftplugin/vhdl.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/vim.vim	/^  let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/xhtml.vim	/^    let b:match_words = s:match_words$/;"	v
b:match_words	./vim82/ftplugin/xml.vim	/^    let b:match_words =$/;"	v
b:match_words	./vim82/ftplugin/zimbu.vim	/^let b:match_words = '\\(^\\s*\\)\\@<=\\(MODULE\\|CLASS\\|INTERFACE\\|BITS\\|ENUM\\|SHARED\\|FUNC/;"	v
b:match_words	./vim82/ftplugin/zsh.vim	/^let b:match_words = ',\\<if\\>:\\<elif\\>:\\<else\\>:\\<fi\\>'$/;"	v
b:match_words	./vim82/syntax/cdl.vim	/^let b:match_words='\\<if\\>:\\<then\\>:\\<elseif\\>:\\<else\\>:\\<endif\\>'$/;"	v
b:match_words	./vim82/syntax/cmod.vim	/^let b:match_words = "({:}\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\)\\|else\\|el\\%(se\\)\\?if\\|en/;"	v
b:match_words	./vim82/syntax/pike.vim	/^let b:match_words = "({:}\\\\@1<=),(\\\\[:]\\\\@1<=),(<:>\\\\@1<=),^\\s*#\\s*\\%(if\\%(n\\?def\\/;"	v
b:match_words	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
b:mp_metafun_macros	./vim82/syntax/context.vim	/^  let b:mp_metafun_macros = 1 " Highlight MetaFun keywords$/;"	v
b:mw	./vim82/ftplugin/ocaml.vim	/^let b:mw =         '\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:mw	./vim82/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>'$/;"	v
b:mw	./vim82/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	./vim82/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	./vim82/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:next	./vim82/ftplugin/python.vim	/^let b:next='\\v%$\\|^\\s*(class\\|def\\|async def)>'$/;"	v
b:next_end	./vim82/ftplugin/python.vim	/^let b:next_end='\\v\\S\\n*(%$\\|^(\\s*\\n*)*(class\\|def\\|async def)\\|^\\S)'$/;"	v
b:next_endtoplevel	./vim82/ftplugin/python.vim	/^let b:next_endtoplevel='\\v%$\\|\\S.*\\n+(def\\|class)'$/;"	v
b:next_toplevel	./vim82/ftplugin/python.vim	/^let b:next_toplevel='\\v%$\\|^(class\\|def\\|async def)>'$/;"	v
b:nroff_is_groff	./vim82/syntax/groff.vim	/^let b:nroff_is_groff = 1$/;"	v
b:optionsset	./vim82/indent/php.vim	/^let b:optionsset = 0$/;"	v
b:parent_match	./vim82/ftplugin/python.vim	/^let b:parent_match = '^\\.\\(\\.\\)\\@!'$/;"	v
b:parent_sub	./vim82/ftplugin/python.vim	/^let b:parent_sub = '.\/'$/;"	v
b:pdf_tagstack	./vim82/ftplugin/pdf.vim	/^    let b:pdf_tagstack = []$/;"	v
b:prev	./vim82/ftplugin/python.vim	/^let b:prev='\\v^\\s*(class\\|def\\|async def)>'$/;"	v
b:prev_end	./vim82/ftplugin/python.vim	/^let b:prev_end='\\v\\S\\n*(^(\\s*\\n*)*(class\\|def\\|async def)\\|^\\S)'$/;"	v
b:prev_endtoplevel	./vim82/ftplugin/python.vim	/^let b:prev_endtoplevel='\\v\\S.*\\n+(def\\|class)'$/;"	v
b:prev_toplevel	./vim82/ftplugin/python.vim	/^let b:prev_toplevel='\\v^(class\\|def\\|async def)>'$/;"	v
b:pymode_error_line	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^    let b:pymode_error_line = -1$/;"	v
b:pymode_modified	./vimfiles/bundle/python-mode/ftplugin/python/pymode.vim	/^let b:pymode_modified = &modified$/;"	v
b:ruby_no_expensive	./vim82/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	./vim82/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	./vim82/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	./vim82/ftplugin/rust.vim	/^	let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	./vim82/ftplugin/rust.vim	/^	let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	./vim82/ftplugin/rust.vim	/^		let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	./vim82/ftplugin/rust.vim	/^	let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	./vim82/ftplugin/rust.vim	/^	let b:rust_set_foldmethod=1$/;"	v
b:spell_options	./vim82/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	./vim82/syntax/java.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	./vim82/syntax/wsml.vim	/^let b:spell_options="contained"$/;"	v
b:sql_compl_savefunc	./vim82/ftplugin/sql.vim	/^    let b:sql_compl_savefunc = &omnifunc$/;"	v
b:sql_vis	./vim82/ftplugin/sql.vim	/^    let b:sql_vis = 1$/;"	v
b:synhead	./vim82/syntax/hitest.vim	/^	    let b:synhead = b:synhead."s"$/;"	v
b:synhead	./vim82/syntax/hitest.vim	/^	 let b:synhead = b:synhead." - filetype"$/;"	v
b:synhead	./vim82/syntax/hitest.vim	/^	 let b:synhead = b:synhead.":".@a$/;"	v
b:synhead	./vim82/syntax/hitest.vim	/^   let b:synhead = "Syntax highlighting groups"$/;"	v
b:tex_isk	./vim82/syntax/tex.vim	/^  let b:tex_isk= '@,'.g:tex_isk$/;"	v
b:tex_isk	./vim82/syntax/tex.vim	/^  let b:tex_isk= g:tex_isk$/;"	v
b:tex_isk	./vim82/syntax/tex.vim	/^ let b:tex_isk="48-57,a-z,A-Z,192-255"$/;"	v
b:tex_isk	./vim82/syntax/tex.vim	/^ let b:tex_isk="@,48-57,a-z,A-Z,192-255"$/;"	v
b:tex_stylish	./vim82/syntax/tex.vim	/^  let b:tex_stylish= 0$/;"	v
b:tex_stylish	./vim82/syntax/tex.vim	/^  let b:tex_stylish= 1$/;"	v
b:tex_stylish	./vim82/syntax/tex.vim	/^ let b:tex_stylish= g:tex_stylish$/;"	v
b:tt2_syn_inc_perl	./vim82/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	./vim82/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:ultisnips_override_snipmate	./vimfiles/bundle/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	./vim82/ftplugin/a2ps.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/aap.vim	/^let b:undo_ftplugin = "setl fo< com< et<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= " foldexpr< foldmethod<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/abaqus.vim	/^    let b:undo_ftplugin .= "|unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/abaqus.vim	/^let b:undo_ftplugin .= "|unmap <buffer> [[|unmap <buffer> ]]"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "let s:cpo_save = &cpoptions|"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/abaqus.vim	/^let b:undo_ftplugin = "setlocal include< includeexpr< isfname<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/alsaconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ant.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/arch.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/aspvbs.vim	/^let b:undo_ftplugin = "unlet! b:match_words b:match_ignorecase b:browsefilter | " . s:undo_ftplu/;"	v
b:undo_ftplugin	./vim82/ftplugin/awk.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/bdf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/bst.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/c.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< cms< def< inc< | if has('vms') | setl isk< | endif"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/calendar.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cdrdaoconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cfg.vim	/^let b:undo_ftplugin = "setl cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/changelog.vim	/^    let b:undo_ftplugin .= " tw<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/changelog.vim	/^  let b:undo_ftplugin = "setl com< fo< et< ai<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/chicken.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . ' | unlet! b:match_words'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/chicken.vim	/^let b:undo_ftplugin = b:undo_ftplugin . ' keywordprg<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | setlocal path<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispw/;"	v
b:undo_ftplugin	./vim82/ftplugin/cmake.vim	/^  let b:undo_ftplugin .= "| unlet b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cmake.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cobol.vim	/^    let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cobol.vim	/^let b:undo_ftplugin = "setlocal com< cms< fo< et< tw<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/config.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . b:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/context.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< sua< fo< ofu<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/crm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/csc.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/csh.vim	/^let b:undo_ftplugin = "setlocal commentstring< formatoptions<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/css.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo< ofu<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/cvsrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/debchangelog.vim	/^let b:undo_ftplugin = 'setlocal tw< comments< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/debcontrol.vim	/^let b:undo_ftplugin = 'setlocal tw< foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/denyhosts.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dictconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dictdconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/diff.vim	/^let b:undo_ftplugin = "setl modeline<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dircolors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/docbk.vim	/^let b:undo_ftplugin = "unlet! b:docbk_type"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dockerfile.vim	/^let b:undo_ftplugin = "setl commentstring<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dosbatch.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions< keywordprg<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dosini.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dtd.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/dtrace.vim	/^let b:undo_ftplugin = "setl fo< com< cms< isk<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/eiffel.vim	/^  let b:undo_ftplugin = b:undo_ftplugin .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/eiffel.vim	/^let b:undo_ftplugin = "setl fo< com< cms<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/elinks.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/erlang.vim	/^let b:undo_ftplugin = "setlocal foldmethod< foldexpr< foldtext<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	./vim82/ftplugin/eterm.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/falcon.vim	/^let b:undo_ftplugin = "setlocal tabstop< shiftwidth< expandtab< fileencoding<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/fetchmail.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/flexwiki.vim	/^let b:undo_ftplugin = "setl tw< wrap< lbr< et< ts< fenc< bomb< ff<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/fortran.vim	/^let b:undo_ftplugin = "setl fo< com< tw< cms< et< inc< sua<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/framescript.vim	/^let b:undo_ftplugin = "setl com< cms< fo< inc< | unlet! b:matchwords"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/fvwm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/gdb.vim	/^let b:undo_ftplugin = "setlocal cms<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms< formatlistpat<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	./vim82/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|exe 'nunmap <buffer> K'|exe 'nunmap <buffer> <C-A>'|ex/;"	v
b:undo_ftplugin	./vim82/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo< ml<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/go.vim	/^let b:undo_ftplugin = 'setl fo< com< cms<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/gpg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/groovy.vim	/^let b:undo_ftplugin = 'setlocal commentstring<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/group.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/grub.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl def< cms< com< "$/;"	v
b:undo_ftplugin	./vim82/ftplugin/hamster.vim	/^let b:undo_ftplugin = "setl fo< com< tw< commentstring<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/haskell.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/help.vim	/^let b:undo_ftplugin = "setl fo< tw< cole< cocu< keywordprg<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/hgcommit.vim	/^let b:undo_ftplugin = 'setl modeline<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/hostconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/hostsaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/html.vim	/^let b:undo_ftplugin = "setlocal commentstring< matchpairs< omnifunc< comments< formatoptions<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/indent.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/initex.vim	/^let b:undo_ftplugin = "setl com< cms< define< include< sua<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/j.vim	/^  let b:undo_ftplugin .= ' | unlet! b:match_ignorecase b:match_words'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/j.vim	/^let b:undo_ftplugin .= ' | silent! execute "unmap <buffer> ]]"'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/j.vim	/^let b:undo_ftplugin = 'setlocal suffixesadd< includeexpr< include< path< matchpairs< formatoptio/;"	v
b:undo_ftplugin	./vim82/ftplugin/java.vim	/^let b:undo_ftplugin = "setlocal suffixes< suffixesadd<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/javascript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<" $/;"	v
b:undo_ftplugin	./vim82/ftplugin/jproperties.vim	/^let b:undo_ftplugin = "setl cms< com< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/json.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< comments< commentstring<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/jsp.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/kconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/kwt.vim	/^    let b:undo_ftplugin = "setlocal efm<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/kwt.vim	/^    let b:undo_ftplugin = b:undo_ftplugin . " | setlocal efm<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ld.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/lftp.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/libao.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/limits.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	./vim82/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/lisp.vim	/^let b:undo_ftplugin = "setlocal comments< define< formatoptions< iskeyword< lisp< commentstring</;"	v
b:undo_ftplugin	./vim82/ftplugin/logcheck.vim	/^let b:undo_ftplugin = 'setl fo<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/loginaccess.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/logindefs.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/logtalk.vim	/^let b:undo_ftplugin = "setl ts< sw< fdm< fdc< ai< dict<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/lua.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< suffixesadd<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/m4.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mail.vim	/^let b:undo_ftplugin = "setl modeline< tw< fo< comments<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mailaliases.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mailcap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/make.vim	/^let b:undo_ftplugin = "setl et< sts< fo< com< cms< inc<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/man.vim	/^      let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/man.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/man.vim	/^  let b:undo_ftplugin = "setlocal iskeyword<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/manconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/markdown.vim	/^  let b:undo_ftplugin .= " foldexpr< foldmethod< foldtext<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/markdown.vim	/^  let b:undo_ftplugin .= "|setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/markdown.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/masm.vim	/^let b:undo_ftplugin = "setl iskeyword<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/matlab.vim	/^let b:undo_ftplugin = "setlocal suffixesadd< suffixes< commentstring< "$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mf.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mma.vim	/^let b:undo_ftplugin = "setlocal commentstring<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/modconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mp.vim	/^let b:undo_ftplugin = "setl com< cms< fo< sua< inc< def< ofu<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mplayerconf.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/mrxvtrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/msmessages.vim	/^let b:undo_ftplugin = "setl fo< com< cms< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/muttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/nanorc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/neomuttrc.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/netrc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/nsis.vim	/^let b:undo_ftplugin = "setl com< cms< fo< def< inc<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ocaml.vim	/^let b:undo_ftplugin = "setlocal efm< foldmethod< foldexpr<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/occam.vim	/^let b:undo_ftplugin = "setlocal shiftwidth< softtabstop< expandtab<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/pamconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/pascal.vim	/^let b:undo_ftplugin = "unlet! b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/passwd.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/pdf.vim	/^let b:undo_ftplugin .= " | silent! nunmap <buffer> <C-]> | silent! nunmap <buffer> <C-T>"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/pdf.vim	/^let b:undo_ftplugin = "setlocal cms< com< | unlet! b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/perl6.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/php.vim	/^let b:undo_ftplugin = "setlocal commentstring< include< omnifunc<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/pinfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/plaintex.vim	/^let b:undo_ftplugin .= "| unlet! b:match_ignorecase b:match_skip b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/postscr.vim	/^let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/procmail.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/prolog.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/protocols.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/python.vim	/^let b:undo_ftplugin = 'setlocal cinkeys<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/qf.vim	/^  let b:undo_ftplugin = "set stl<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/quake.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/r.vim	/^let b:undo_ftplugin = "setl cms< com< fo< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/racc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/readline.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/registry.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rhelp.vim	/^let b:undo_ftplugin = "setl isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rmd.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rmd.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rnc.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin .= " | setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rnoweb.vim	/^  let b:undo_ftplugin = "setl isk< sua< com< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rpl.vim	/^let b:undo_ftplugin = "setlocal fo< comments<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rrst.vim	/^  let b:undo_ftplugin .= " | setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rrst.vim	/^  let b:undo_ftplugin = "setl cms< com< fo< flp< isk< | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rst.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= "| setl bexpr="$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ruby.vim	/^  let b:undo_ftplugin .= ' | setl sw< sts< et<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><ctag>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl inc= sua= path= tags= fo< com< cms< kp="$/;"	v
b:undo_ftplugin	./vim82/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sass.vim	/^  let b:undo_ftplugin .= ' isk<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/scheme.vim	/^let b:undo_ftplugin = 'setl lisp< comments< commentstring< define< iskeyword<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/scheme.vim	/^let b:undo_ftplugin = b:undo_ftplugin . ' lispwords<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/screen.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sensors.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/services.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/setserial.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sgml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sh.vim	/^let b:undo_ftplugin = "setlocal cms< | unlet! b:browsefilter b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sieve.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/slpconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/slpreg.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/slpspi.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/spec.vim	/^let b:undo_ftplugin = "unlet! b:match_ignorecase b:match_words"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sql.vim	/^let b:undo_ftplugin = "setl comments< formatoptions< define< omnifunc<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sshconfig.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sudoers.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/svg.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/sysctl.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/systemd.vim	/^  let b:undo_ftplugin .= '| setlocal keywordprg< iskeyword<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/systemd.vim	/^  let b:undo_ftplugin = 'setlocal keywordprg< iskeyword<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/tcl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isf< kp<" .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/tcsh.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/terminfo.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/tex.vim	/^let b:undo_ftplugin .= "| setl inex<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/text.vim	/^let b:undo_ftplugin = 'setlocal comments< commentstring<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/treetop.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/udevconf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/udevperm.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/udevrules.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/updatedb.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/verilog.vim	/^let b:undo_ftplugin = "setlocal fo< com< tw<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/vim.vim	/^let b:undo_ftplugin = "call VimFtpluginUndo()"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/vroom.vim	/^let b:undo_ftplugin = 'setlocal formatoptions< shiftwidth< softtabstop<' .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/wast.vim	/^let b:undo_ftplugin = "setlocal comments< commentstring< formatoptions< iskeyword<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/xdefaults.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/xf86conf.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/xhtml.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter b:match_words | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/xinetd.vim	/^let b:undo_ftplugin = "setl com< cms< inc< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/xml.vim	/^let b:undo_ftplugin = "setlocal commentstring< comments< formatoptions< formatexpr< " .$/;"	v
b:undo_ftplugin	./vim82/ftplugin/xmodmap.vim	/^let b:undo_ftplugin = "setl com< cms< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/xsd.vim	/^let b:undo_ftplugin = "unlet! b:browsefilter | " . s:undo_ftplugin$/;"	v
b:undo_ftplugin	./vim82/ftplugin/yaml.vim	/^  let b:undo_ftplugin ..= " sw< sts<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/yaml.vim	/^let b:undo_ftplugin = "setl com< cms< et< fo<"$/;"	v
b:undo_ftplugin	./vim82/ftplugin/zimbu.vim	/^let b:undo_ftplugin = "setl fo< com< ofu< efm< tw< et< sts< sw< | if has('vms') | setl isk< | en/;"	v
b:undo_ftplugin	./vim82/ftplugin/zsh.vim	/^  let b:undo_ftplugin .= 'keywordprg< errorformat< makeprg<'$/;"	v
b:undo_ftplugin	./vim82/ftplugin/zsh.vim	/^let b:undo_ftplugin = "setl com< cms< fo< "$/;"	v
b:undo_ftplugin	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	./vimfiles/ftplugin/stap.vim	/^let b:undo_ftplugin = "setl cin< fo< com<"$/;"	v
b:undo_indent	./vim82/indent/bib.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	./vim82/indent/c.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	./vim82/indent/changelog.vim	/^let b:undo_indent = "setl ai<"$/;"	v
b:undo_indent	./vim82/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	./vim82/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< inden/;"	v
b:undo_indent	./vim82/indent/context.vim	/^let b:undo_indent = "setl indentexpr<"$/;"	v
b:undo_indent	./vim82/indent/cpp.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	./vim82/indent/cs.vim	/^let b:undo_indent = 'setlocal indentexpr<'$/;"	v
b:undo_indent	./vim82/indent/css.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr<"$/;"	v
b:undo_indent	./vim82/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	./vim82/indent/cuda.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	./vim82/indent/dtrace.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	./vim82/indent/eiffel.vim	/^let b:undo_indent = "setl smartindent< indentkeys< indentexpr< autoindent< comments< "$/;"	v
b:undo_indent	./vim82/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	./vim82/indent/hog.vim	/^let b:undo_indent = 'setlocal smartindent< indentexpr< indentkeys<'$/;"	v
b:undo_indent	./vim82/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:undo_indent	./vim82/indent/ishd.vim	/^let b:undo_indent = "setl ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	./vim82/indent/j.vim	/^let b:undo_indent = 'setlocal indentkeys< indentexpr<'$/;"	v
b:undo_indent	./vim82/indent/java.vim	/^let b:undo_indent = "set cin< cino< indentkeys< indentexpr<"$/;"	v
b:undo_indent	./vim82/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	./vim82/indent/lifelines.vim	/^let b:undo_indent = "setl cin< cino< cinw<"$/;"	v
b:undo_indent	./vim82/indent/lisp.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	./vim82/indent/mp.vim	/^let b:undo_indent = "setl indentkeys< indentexpr<"$/;"	v
b:undo_indent	./vim82/indent/rpl.vim	/^let b:undo_indent = "set ai< indentkeys< indentexpr<"$/;"	v
b:undo_indent	./vim82/indent/sh.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys< smartindent<'$/;"	v
b:undo_indent	./vim82/indent/vb.vim	/^let b:undo_indent = "set ai< indentexpr< indentkeys<"$/;"	v
b:undo_indent	./vim82/indent/vim.vim	/^let b:undo_indent = "setl indentkeys< indentexpr<"$/;"	v
b:undo_indent	./vim82/indent/vroom.vim	/^let b:undo_indent = 'setlocal autoindent<'$/;"	v
b:undo_indent	./vim82/indent/wast.vim	/^let b:undo_indent = "setl lisp< indentexpr<"$/;"	v
b:undo_indent	./vim82/indent/yaml.vim	/^let b:undo_indent = 'setlocal indentexpr< indentkeys< smartindent<'$/;"	v
b:undo_indent	./vim82/indent/zimbu.vim	/^let b:undo_indent = "setl et< sw< ai< indentkeys< indentexpr="$/;"	v
b:undo_indent	./vimfiles/bundle/html5.vim/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:various	./vim82/syntax/hitest.vim	/^let b:various = &highlight.',:Normal,:Cursor,:,'$/;"	v
b:vera_minlines	./vim82/syntax/vera.vim	/^    let b:vera_minlines = 15	" mostly for () constructs$/;"	v
b:vera_minlines	./vim82/syntax/vera.vim	/^    let b:vera_minlines = 50	" #if 0 constructs can be long$/;"	v
b:vera_minlines	./vim82/syntax/vera.vim	/^  let b:vera_minlines = vera_minlines$/;"	v
b:vhdl_explore	./vim82/ftplugin/vhdl.vim	/^let b:vhdl_explore = '\\%(architecture\\|block\\|configuration\\|component\\|entity\\|function\\/;"	v
b:vmustache_view_model	./vimfiles/bundle/vmustache/tests/test018_buffer_local_view_model.vim	/^let b:vmustache_view_model = {}$/;"	v
b:vmustache_view_model	./vimfiles/bundle/vmustache/tests/test018_buffer_local_view_model.vim	/^let b:vmustache_view_model["from_view"] = "From View!"$/;"	v
b:vmustache_view_model	./vimfiles/bundle/vmustache/tests/test019_view_model_overriding.vim	/^let b:vmustache_view_model = {}$/;"	v
b:vmustache_view_model	./vimfiles/bundle/vmustache/tests/test019_view_model_overriding.vim	/^let b:vmustache_view_model["overwritten"] = "From View!"$/;"	v
b:xf86conf_xfree86_version	./vim82/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = 4$/;"	v
b:xf86conf_xfree86_version	./vim82/syntax/xf86conf.vim	/^		let b:xf86conf_xfree86_version = xf86conf_xfree86_version$/;"	v
b:xml_indent_close	./vim82/indent/xml.vim	/^    let b:xml_indent_close = '.\\{-}<\/'$/;"	v
b:xml_indent_open	./vim82/indent/xml.vim	/^    let b:xml_indent_open = '.\\{-}<[:A-Z_a-z]'$/;"	v
b:yaml_schema	./vim82/syntax/yaml.vim	/^    let b:yaml_schema = 'core'$/;"	v
b:yaml_schema	./vim82/syntax/yaml.vim	/^    let b:yaml_schema = g:yaml_schema$/;"	v
before	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^        let before = &wildignore$/;"	v
bmenu_priority	./vim82/menu.vim	/^  let bmenu_priority = 60$/;"	v
body_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblu/;"	v
body_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
buf	./vim82/optwin.vim	/^let buf = bufnr('option-window')$/;"	v
buffer_list	./vim82/menu.vim	/^  aug buffer_list$/;"	a
build_fun_lines	./vim82/syntax/2html.vim	/^      let build_fun_lines += [$/;"	v
build_fun_lines	./vim82/syntax/2html.vim	/^    let build_fun_lines += [$/;"	v
build_fun_lines	./vim82/syntax/2html.vim	/^    let build_fun_lines = [$/;"	v
builder.build	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^  function! builder.build() abort$/;"	f	signature:()
c	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap c j$/;"	m
c_comment_strings	./vim82/defaults.vim	/^  let c_comment_strings=1$/;"	v
c_no_if0	./vimfiles/after/syntax/ifdef.vim	/^let c_no_if0=1$/;"	v
calutil#Cal2Jul	./vimfiles/autoload/calutil.vim	/^fun! calutil#Cal2Jul(y,m,d)$/;"	f	signature:(y,m,d)
calutil#DayOfWeek	./vimfiles/autoload/calutil.vim	/^fun! calutil#DayOfWeek(y,m,d,...)$/;"	f	signature:(y,m,d,...)
calutil#Jul2Cal	./vimfiles/autoload/calutil.vim	/^fun! calutil#Jul2Cal(julday,...)$/;"	f	signature:(julday,...)
calutil#cal	./vimfiles/autoload/calutil.vim	/^function! calutil#cal(julian)$/;"	f	signature:(julian)
calutil#dayname	./vimfiles/autoload/calutil.vim	/^function! calutil#dayname(date)$/;"	f	signature:(date)
calutil#dow	./vimfiles/autoload/calutil.vim	/^function! calutil#dow(date)$/;"	f	signature:(date)
calutil#jul	./vimfiles/autoload/calutil.vim	/^function! calutil#jul(date)$/;"	f	signature:(date)
ccomplete#Complete	./vim82/autoload/ccomplete.vim	/^function! ccomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
changelogMenu	./vim82/ftplugin/debchangelog.vim	/^augroup changelogMenu$/;"	a
chars	./vim82/syntax/xpm.vim	/^	 let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	./vim82/syntax/xpm.vim	/^	 let chars = substitute(chars, '.$', '', '')$/;"	v
chars	./vim82/syntax/xpm.vim	/^	 let chars = substitute(s, '"\\(.\\{'.cpp.'}\\s\\).*"', '\\1', '')$/;"	v
chars	./vim82/syntax/xpm.vim	/^let chars  = ""$/;"	v
chars	./vim82/syntax/xpm2.vim	/^	let chars = escape(chars, '\/\\*^$.~[]')$/;"	v
chars	./vim82/syntax/xpm2.vim	/^	let chars = substitute(chars, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
chars	./vim82/syntax/xpm2.vim	/^	let chars = substitute(chars, '\\\\s\\\\+$', '', '')$/;"	v
chars	./vim82/syntax/xpm2.vim	/^	let chars = substitute(s, '\\(.\\{'.cpp.'}\\s\\+\\).*', '\\1', '')$/;"	v
chars	./vim82/syntax/xpm2.vim	/^  let chars  = ""$/;"	v
charset	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let charset = [$/;"	v
chill_minlines	./vim82/syntax/chill.vim	/^  let chill_minlines = 15$/;"	v
chiylown_func_dict.getprojtypefunc	./VIMPROJ/vimrc/_vimrc	/^function g:chiylown_func_dict.getprojtypefunc(functype) dict$/;"	f	signature:(functype)
clojurecomplete#Complete	./vim82/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
closure.Process	./vim82/autoload/RstFold.vim	/^  function closure.Process(match) dict$/;"	f	signature:(match)
col1	./vim82/syntax/colortest.vim	/^  let col1 = substitute(expand("<cword>"), '\\(\\a\\+\\)_on_\\a\\+', '\\1', "")$/;"	v
col2	./vim82/syntax/colortest.vim	/^  let col2 = substitute(expand("<cword>"), '\\a\\+_on_\\(\\a\\+\\)', '\\1', "")$/;"	v
color	./vim82/syntax/xpm.vim	/^		     let color = ""$/;"	v
color	./vim82/syntax/xpm.vim	/^		  let color = substitute(s, '".*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*"', '\\1', '')$/;"	v
color	./vim82/syntax/xpm.vim	/^	       let color = substitute(s, '".*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*"', '\\1', /;"	v
color	./vim82/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	./vim82/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	./vim82/syntax/xpm.vim	/^	    let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	./vim82/syntax/xpm.vim	/^	    let color = substitute(s, '".*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	./vim82/syntax/xpm.vim	/^	 let color = substitute(s, '".*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*"', /;"	v
color	./vim82/syntax/xpm.vim	/^let color  = ""$/;"	v
color	./vim82/syntax/xpm2.vim	/^		let color = ""$/;"	v
color	./vim82/syntax/xpm2.vim	/^	      let color = substitute(s, '.*\\sm\\s\\+\\(.\\{-}\\)\\s*\\(s\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	./vim82/syntax/xpm2.vim	/^	    let color = substitute(s, '.*\\sg4\\s\\+\\(.\\{-}\\)\\s*\\([ms]\\s.*\\)*\\s*', '\\1', '')$/;"	v
color	./vim82/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\)\\(\\x\\)\\(\\x\\)', '0\\10\\20\\3', '')$/;"	v
color	./vim82/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x', '\\1', 'g')$/;"	v
color	./vim82/syntax/xpm2.vim	/^	  let color = substitute(color, '\\(\\x\\x\\)\\x\\x', '\\1', 'g')$/;"	v
color	./vim82/syntax/xpm2.vim	/^	  let color = substitute(s, '.*\\sg\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\|[ms]\\)\\s.*\\)*\\s*', '\\1/;"	v
color	./vim82/syntax/xpm2.vim	/^	let color = substitute(s, '.*\\sc\\s\\+\\(.\\{-}\\)\\s*\\(\\(g4\\=\\|[ms]\\)\\s.*\\)*\\s*', '\\/;"	v
color	./vim82/syntax/xpm2.vim	/^  let color  = ""$/;"	v
colors	./vim82/syntax/xpm.vim	/^	 let colors = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
colors	./vim82/syntax/xpm.vim	/^let colors = 0$/;"	v
colors	./vim82/syntax/xpm2.vim	/^	let colors = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
colors	./vim82/syntax/xpm2.vim	/^  let colors = 0$/;"	v
colors_name	./vim82/colors/darkblue.vim	/^let colors_name = "darkblue"$/;"	v
colors_name	./vim82/colors/default.vim	/^let colors_name = "default"$/;"	v
colors_name	./vim82/colors/evening.vim	/^let colors_name = "evening"$/;"	v
colors_name	./vim82/colors/industry.vim	/^let colors_name = "industry"$/;"	v
colors_name	./vim82/colors/morning.vim	/^let colors_name = "morning"$/;"	v
colors_name	./vim82/colors/peachpuff.vim	/^let colors_name = "peachpuff"$/;"	v
colors_name	./vim82/colors/shine.vim	/^let colors_name = "shine"$/;"	v
colors_name	./vim82/colors/slate.vim	/^let colors_name = "slate"$/;"	v
colors_name	./vimfiles/colors/lucius.vim	/^  let colors_name="lucius"$/;"	v
comment_block_end	./vim82/ftplugin/eiffel.vim	/^  let comment_block_end = '^\\s\\+--.*\\n\\%(\\s\\+--\\)\\@!'$/;"	v
comment_block_start	./vim82/ftplugin/eiffel.vim	/^  let comment_block_start = '^\\%(\\s\\+--.*\\n\\)\\@<!\\s\\+--'$/;"	v
content	./vimfiles/bundle/jedi-vim/test/vspec/documentation.vim	/^        let content = join(getline(3, '$'), "\\n")$/;"	v
context#callback	./vim82/autoload/context.vim	/^  function! context#callback(path, job, status)$/;"	f	signature:(path,job,status)
context#close_cb	./vim82/autoload/context.vim	/^  function! context#close_cb(channel)$/;"	f	signature:(channel)
context#command	./vim82/autoload/context.vim	/^function! context#command()$/;"	f	signature:()
context#job_status	./vim82/autoload/context.vim	/^  function! context#job_status()$/;"	f	signature:()
context#stop_jobs	./vim82/autoload/context.vim	/^  function! context#stop_jobs()$/;"	f	signature:()
context#typeset	./vim82/autoload/context.vim	/^function! context#typeset(...) abort$/;"	f	signature:(...)
contextcomplete#Complete	./vim82/autoload/contextcomplete.vim	/^function! contextcomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
core_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], '/;"	v
cpp	./vim82/syntax/xpm.vim	/^	 let cpp = substitute(s, '"\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*"', '\\1', '')$/;"	v
cpp	./vim82/syntax/xpm.vim	/^let cpp    = 0$/;"	v
cpp	./vim82/syntax/xpm2.vim	/^	let cpp = substitute(s, '\\s*\\d\\+\\s\\+\\d\\+\\s\\+\\d\\+\\s\\+\\(\\d\\+\\).*', '\\1', '')$/;"	v
cpp	./vim82/syntax/xpm2.vim	/^  let cpp    = 0$/;"	v
cr	./vimfiles/plugin/supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
crossorigin	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let crossorigin = ['anonymous', 'use-credentials']$/;"	v
csc_minlines	./vim82/syntax/csc.vim	/^	let csc_minlines = 50	" mostly for () constructs$/;"	v
csscomplete#CompleteCSS	./vim82/autoload/csscomplete.vim	/^function! csscomplete#CompleteCSS(findstart, base)$/;"	f	signature:(findstart,base)
ctrl_n	./vimfiles/plugin/supertab.vim	/^    let ctrl_n = substitute(ctrl_n, '<', '<lt>', 'g')$/;"	v
ctrl_n	./vimfiles/plugin/supertab.vim	/^  let ctrl_n = maparg('<c-n>', 'i')$/;"	v
ctrl_p	./vimfiles/plugin/supertab.vim	/^    let ctrl_p = substitute(ctrl_p, '<', '<lt>', 'g')$/;"	v
ctrl_p	./vimfiles/plugin/supertab.vim	/^  let ctrl_p = maparg('<c-p>', 'i')$/;"	v
ctrlp#acceptfile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#acceptfile(...)$/;"	f	signature:(...)
ctrlp#autoignore#get_patterns	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#get_patterns(root_dir) abort$/;"	f	signature:(root_dir)
ctrlp#autoignore#ignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore(item, type) abort$/;"	f	signature:(item,type)
ctrlp#autoignore#ignore_close	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_close() abort$/;"	f	signature:()
ctrlp#autoignore#ignore_init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! ctrlp#autoignore#ignore_init() abort$/;"	f	signature:()
ctrlp#bookmarkdir#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#bookmarkdir#add	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#add(bang, dir, ...)$/;"	f	signature:(bang,dir,...)
ctrlp#bookmarkdir#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#id()$/;"	f	signature:()
ctrlp#bookmarkdir#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#init()$/;"	f	signature:()
ctrlp#bookmarkdir#remove	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! ctrlp#bookmarkdir#remove(entries)$/;"	f	signature:(entries)
ctrlp#buffers	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#buffers(...)$/;"	f	signature:(...)
ctrlp#buffertag#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#buffertag#cmd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#cmd(mode, ...)$/;"	f	signature:(mode,...)
ctrlp#buffertag#exit	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#exit()$/;"	f	signature:()
ctrlp#buffertag#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#id()$/;"	f	signature:()
ctrlp#buffertag#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#init(fname)$/;"	f	signature:(fname)
ctrlp#buffertag#opts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! ctrlp#buffertag#opts()$/;"	f	signature:()
ctrlp#call	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#call(func, ...)$/;"	f	signature:(func,...)
ctrlp#changes#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#changes#cmd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#cmd(mode, ...)$/;"	f	signature:(mode,...)
ctrlp#changes#exit	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#exit()$/;"	f	signature:()
ctrlp#changes#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! ctrlp#changes#init(original_bufnr, bufnr)$/;"	f	signature:(original_bufnr,bufnr)
ctrlp#clearmarkedlist	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clearmarkedlist()$/;"	f	signature:()
ctrlp#clr	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clr(...)$/;"	f	signature:(...)
ctrlp#clra	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#clra()$/;"	f	signature:()
ctrlp#cmdline#accept	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^func! ctrlp#cmdline#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#cmdline#id	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^function! ctrlp#cmdline#id()$/;"	f	signature:()
ctrlp#cmdline#init	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^function! ctrlp#cmdline#init()$/;"	f	signature:()
ctrlp#complen	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#complen(...)$/;"	f	signature:(...)
ctrlp#dir#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#dir#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#id()$/;"	f	signature:()
ctrlp#dir#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! ctrlp#dir#init(...)$/;"	f	signature:(...)
ctrlp#dirnfile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#dirnfile(entries)$/;"	f	signature:(entries)
ctrlp#exit	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#exit()$/;"	f	signature:()
ctrlp#files	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#files()$/;"	f	signature:()
ctrlp#getcline	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getcline()$/;"	f	signature:()
ctrlp#getmarkedlist	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getmarkedlist()$/;"	f	signature:()
ctrlp#getvar	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#getvar(var)$/;"	f	signature:(var)
ctrlp#hicheck	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#hicheck(grp, defgrp)$/;"	f	signature:(grp,defgrp)
ctrlp#igncwd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#igncwd(cwd)$/;"	f	signature:(cwd)
ctrlp#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#init(type, ...)$/;"	f	signature:(type,...)
ctrlp#j2l	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#j2l(nr)$/;"	f	signature:(nr)
ctrlp#lasync#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lasync.vim	/^function! ctrlp#lasync#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lasync#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lasync.vim	/^function! ctrlp#lasync#enter()$/;"	f	signature:()
ctrlp#lasync#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lasync.vim	/^function! ctrlp#lasync#exit()$/;"	f	signature:()
ctrlp#lasync#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lasync.vim	/^function! ctrlp#lasync#id()$/;"	f	signature:()
ctrlp#lasync#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lasync.vim	/^function! ctrlp#lasync#init()$/;"	f	signature:()
ctrlp#lasync#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lasync.vim	/^function! ctrlp#lasync#opts()$/;"	f	signature:()
ctrlp#lcomm#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^function! ctrlp#lcomm#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lcomm#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^function! ctrlp#lcomm#enter()$/;"	f	signature:()
ctrlp#lcomm#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^function! ctrlp#lcomm#exit()$/;"	f	signature:()
ctrlp#lcomm#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^function! ctrlp#lcomm#id()$/;"	f	signature:()
ctrlp#lcomm#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^function! ctrlp#lcomm#init()$/;"	f	signature:()
ctrlp#lcomm#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^function! ctrlp#lcomm#opts()$/;"	f	signature:()
ctrlp#lcscmd#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^function! ctrlp#lcscmd#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lcscmd#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^function! ctrlp#lcscmd#enter()$/;"	f	signature:()
ctrlp#lcscmd#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^function! ctrlp#lcscmd#exit()$/;"	f	signature:()
ctrlp#lcscmd#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^function! ctrlp#lcscmd#id()$/;"	f	signature:()
ctrlp#lcscmd#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^function! ctrlp#lcscmd#init()$/;"	f	signature:()
ctrlp#lcscmd#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^function! ctrlp#lcscmd#opts()$/;"	f	signature:()
ctrlp#ldbtables#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^function! ctrlp#ldbtables#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#ldbtables#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^function! ctrlp#ldbtables#enter()$/;"	f	signature:()
ctrlp#ldbtables#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^function! ctrlp#ldbtables#exit()$/;"	f	signature:()
ctrlp#ldbtables#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^function! ctrlp#ldbtables#id()$/;"	f	signature:()
ctrlp#ldbtables#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^function! ctrlp#ldbtables#init()$/;"	f	signature:()
ctrlp#ldbtables#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^function! ctrlp#ldbtables#opts()$/;"	f	signature:()
ctrlp#lerror#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^function! ctrlp#lerror#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lerror#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^function! ctrlp#lerror#enter()$/;"	f	signature:()
ctrlp#lerror#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^function! ctrlp#lerror#exit()$/;"	f	signature:()
ctrlp#lerror#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^function! ctrlp#lerror#id()$/;"	f	signature:()
ctrlp#lerror#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^function! ctrlp#lerror#init()$/;"	f	signature:()
ctrlp#lerror#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^function! ctrlp#lerror#opts()$/;"	f	signature:()
ctrlp#leventlog#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^function! ctrlp#leventlog#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#leventlog#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^function! ctrlp#leventlog#enter()$/;"	f	signature:()
ctrlp#leventlog#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^function! ctrlp#leventlog#exit()$/;"	f	signature:()
ctrlp#leventlog#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^function! ctrlp#leventlog#id()$/;"	f	signature:()
ctrlp#leventlog#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^function! ctrlp#leventlog#init()$/;"	f	signature:()
ctrlp#leventlog#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^function! ctrlp#leventlog#opts()$/;"	f	signature:()
ctrlp#lextdbtype#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^function! ctrlp#lextdbtype#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lextdbtype#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^function! ctrlp#lextdbtype#enter()$/;"	f	signature:()
ctrlp#lextdbtype#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^function! ctrlp#lextdbtype#exit()$/;"	f	signature:()
ctrlp#lextdbtype#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^function! ctrlp#lextdbtype#id()$/;"	f	signature:()
ctrlp#lextdbtype#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^function! ctrlp#lextdbtype#init()$/;"	f	signature:()
ctrlp#lextdbtype#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^function! ctrlp#lextdbtype#opts()$/;"	f	signature:()
ctrlp#lidip#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^function! ctrlp#lidip#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lidip#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^function! ctrlp#lidip#enter()$/;"	f	signature:()
ctrlp#lidip#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^function! ctrlp#lidip#exit()$/;"	f	signature:()
ctrlp#lidip#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^function! ctrlp#lidip#id()$/;"	f	signature:()
ctrlp#lidip#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^function! ctrlp#lidip#init()$/;"	f	signature:()
ctrlp#lidip#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^function! ctrlp#lidip#opts()$/;"	f	signature:()
ctrlp#line#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#accept(dict)$/;"	f	signature:(dict)
ctrlp#line#cmd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#cmd(mode, ...)$/;"	f	signature:(mode,...)
ctrlp#line#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! ctrlp#line#init(bufnr)$/;"	f	signature:(bufnr)
ctrlp#locur#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/locur.vim	/^function! ctrlp#locur#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#locur#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/locur.vim	/^function! ctrlp#locur#enter()$/;"	f	signature:()
ctrlp#locur#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/locur.vim	/^function! ctrlp#locur#exit()$/;"	f	signature:()
ctrlp#locur#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/locur.vim	/^function! ctrlp#locur#id()$/;"	f	signature:()
ctrlp#locur#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/locur.vim	/^function! ctrlp#locur#init()$/;"	f	signature:()
ctrlp#locur#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/locur.vim	/^function! ctrlp#locur#opts()$/;"	f	signature:()
ctrlp#lofiles#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^function! ctrlp#lofiles#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lofiles#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^function! ctrlp#lofiles#enter()$/;"	f	signature:()
ctrlp#lofiles#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^function! ctrlp#lofiles#exit()$/;"	f	signature:()
ctrlp#lofiles#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^function! ctrlp#lofiles#id()$/;"	f	signature:()
ctrlp#lofiles#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^function! ctrlp#lofiles#init()$/;"	f	signature:()
ctrlp#lofiles#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^function! ctrlp#lofiles#opts()$/;"	f	signature:()
ctrlp#lomem#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^function! ctrlp#lomem#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lomem#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^function! ctrlp#lomem#enter()$/;"	f	signature:()
ctrlp#lomem#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^function! ctrlp#lomem#exit()$/;"	f	signature:()
ctrlp#lomem#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^function! ctrlp#lomem#id()$/;"	f	signature:()
ctrlp#lomem#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^function! ctrlp#lomem#init()$/;"	f	signature:()
ctrlp#lomem#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^function! ctrlp#lomem#opts()$/;"	f	signature:()
ctrlp#loname#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^function! ctrlp#loname#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#loname#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^function! ctrlp#loname#enter()$/;"	f	signature:()
ctrlp#loname#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^function! ctrlp#loname#exit()$/;"	f	signature:()
ctrlp#loname#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^function! ctrlp#loname#id()$/;"	f	signature:()
ctrlp#loname#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^function! ctrlp#loname#init()$/;"	f	signature:()
ctrlp#loname#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^function! ctrlp#loname#opts()$/;"	f	signature:()
ctrlp#lresource#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^function! ctrlp#lresource#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lresource#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^function! ctrlp#lresource#enter()$/;"	f	signature:()
ctrlp#lresource#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^function! ctrlp#lresource#exit()$/;"	f	signature:()
ctrlp#lresource#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^function! ctrlp#lresource#id()$/;"	f	signature:()
ctrlp#lresource#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^function! ctrlp#lresource#init()$/;"	f	signature:()
ctrlp#lresource#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^function! ctrlp#lresource#opts()$/;"	f	signature:()
ctrlp#lsscmd#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^function! ctrlp#lsscmd#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lsscmd#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^function! ctrlp#lsscmd#enter()$/;"	f	signature:()
ctrlp#lsscmd#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^function! ctrlp#lsscmd#exit()$/;"	f	signature:()
ctrlp#lsscmd#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^function! ctrlp#lsscmd#id()$/;"	f	signature:()
ctrlp#lsscmd#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^function! ctrlp#lsscmd#init()$/;"	f	signature:()
ctrlp#lsscmd#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^function! ctrlp#lsscmd#opts()$/;"	f	signature:()
ctrlp#lsvrid#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^function! ctrlp#lsvrid#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lsvrid#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^function! ctrlp#lsvrid#enter()$/;"	f	signature:()
ctrlp#lsvrid#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^function! ctrlp#lsvrid#exit()$/;"	f	signature:()
ctrlp#lsvrid#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^function! ctrlp#lsvrid#id()$/;"	f	signature:()
ctrlp#lsvrid#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^function! ctrlp#lsvrid#init()$/;"	f	signature:()
ctrlp#lsvrid#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^function! ctrlp#lsvrid#opts()$/;"	f	signature:()
ctrlp#lswitch#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^function! ctrlp#lswitch#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#lswitch#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^function! ctrlp#lswitch#enter()$/;"	f	signature:()
ctrlp#lswitch#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^function! ctrlp#lswitch#exit()$/;"	f	signature:()
ctrlp#lswitch#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^function! ctrlp#lswitch#id()$/;"	f	signature:()
ctrlp#lswitch#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^function! ctrlp#lswitch#init()$/;"	f	signature:()
ctrlp#lswitch#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^function! ctrlp#lswitch#opts()$/;"	f	signature:()
ctrlp#menu#accept	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^func! ctrlp#menu#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#menu#id	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^function! ctrlp#menu#id()$/;"	f	signature:()
ctrlp#menu#init	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^function! ctrlp#menu#init()$/;"	f	signature:()
ctrlp#mixed#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#id()$/;"	f	signature:()
ctrlp#mixed#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! ctrlp#mixed#init(clim)$/;"	f	signature:(clim)
ctrlp#modfilecond	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#modfilecond(w)$/;"	f	signature:(w)
ctrlp#mrufiles#add	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#add(fn)$/;"	f	signature:(fn)
ctrlp#mrufiles#bufs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#bufs()$/;"	f	signature:()
ctrlp#mrufiles#cachefile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#cachefile()$/;"	f	signature:()
ctrlp#mrufiles#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#init()$/;"	f	signature:()
ctrlp#mrufiles#list	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#list(...)$/;"	f	signature:(...)
ctrlp#mrufiles#opts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#opts()$/;"	f	signature:()
ctrlp#mrufiles#refresh	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#refresh(...)$/;"	f	signature:(...)
ctrlp#mrufiles#remove	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#remove(files)$/;"	f	signature:(files)
ctrlp#mrufiles#tgrel	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! ctrlp#mrufiles#tgrel()$/;"	f	signature:()
ctrlp#mybase#ctrlp_open_new_win	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mybase.vim	/^function! ctrlp#mybase#ctrlp_open_new_win(fileout,is_writefile)$/;"	f	signature:(fileout,is_writefile)
ctrlp#mybase#mysplit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mybase.vim	/^function! ctrlp#mybase#mysplit(line,seq)$/;"	f	signature:(line,seq)
ctrlp#mybase#strlp_link_to_changenum	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mybase.vim	/^function! ctrlp#mybase#strlp_link_to_changenum(link)$/;"	f	signature:(link)
ctrlp#mycmd#GitBlame	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#GitBlame()$/;"	f	signature:()
ctrlp#mycmd#NerdTreeCurFile	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#NerdTreeCurFile()$/;"	f	signature:()
ctrlp#mycmd#SvnBlame	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#SvnBlame()$/;"	f	signature:()
ctrlp#mycmd#TabSplit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#TabSplit()$/;"	f	signature:()
ctrlp#mycmd#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#mycmd#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#enter()$/;"	f	signature:()
ctrlp#mycmd#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#exit()$/;"	f	signature:()
ctrlp#mycmd#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#id()$/;"	f	signature:()
ctrlp#mycmd#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#init()$/;"	f	signature:()
ctrlp#mycmd#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^function! ctrlp#mycmd#opts()$/;"	f	signature:()
ctrlp#mylowner#getmodule_en_us_by_file	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! ctrlp#mylowner#getmodule_en_us_by_file(filename)$/;"	f	signature:(filename)
ctrlp#mylowner#getmodule_en_us_by_member	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! ctrlp#mylowner#getmodule_en_us_by_member(member)$/;"	f	signature:(member)
ctrlp#mylowner#lgameowner_get_module	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! ctrlp#mylowner#lgameowner_get_module(module_en_us,isshowlist)$/;"	f	signature:(module_en_us,isshowlist)
ctrlp#mylowner#lgameownersimplefiles	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! ctrlp#mylowner#lgameownersimplefiles()$/;"	f	signature:()
ctrlp#mylowner#namelists	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! ctrlp#mylowner#namelists()$/;"	f	signature:()
ctrlp#mylowner#userlists	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! ctrlp#mylowner#userlists()$/;"	f	signature:()
ctrlp#mymenu#accept	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^func! ctrlp#mymenu#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#mymenu#id	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^function! ctrlp#mymenu#id()$/;"	f	signature:()
ctrlp#mymenu#init	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^function! ctrlp#mymenu#init()$/;"	f	signature:()
ctrlp#myp4#P4Annotate	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Annotate()$/;"	f	signature:()
ctrlp#myp4#P4AnnotateA	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4AnnotateA()$/;"	f	signature:()
ctrlp#myp4#P4Changes	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Changes()$/;"	f	signature:()
ctrlp#myp4#P4Describe	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Describe()$/;"	f	signature:()
ctrlp#myp4#P4Diff	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Diff()$/;"	f	signature:()
ctrlp#myp4#P4Edit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Edit()$/;"	f	signature:()
ctrlp#myp4#P4Filelog	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Filelog()$/;"	f	signature:()
ctrlp#myp4#P4Opened	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Opened()$/;"	f	signature:()
ctrlp#myp4#P4Revert	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Revert()$/;"	f	signature:()
ctrlp#myp4#P4RevertAll	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4RevertAll()$/;"	f	signature:()
ctrlp#myp4#P4ReviewLink	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4ReviewLink()$/;"	f	signature:()
ctrlp#myp4#P4Sync	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Sync()$/;"	f	signature:()
ctrlp#myp4#P4Unshelve	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#P4Unshelve()$/;"	f	signature:()
ctrlp#myp4#accept	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#myp4#enter	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#enter()$/;"	f	signature:()
ctrlp#myp4#exit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#exit()$/;"	f	signature:()
ctrlp#myp4#id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#id()$/;"	f	signature:()
ctrlp#myp4#init	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#init()$/;"	f	signature:()
ctrlp#myp4#opts	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^function! ctrlp#myp4#opts()$/;"	f	signature:()
ctrlp#mysubmenu#accept	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^func! ctrlp#mysubmenu#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#mysubmenu#id	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^function! ctrlp#mysubmenu#id()$/;"	f	signature:()
ctrlp#mysubmenu#init	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^function! ctrlp#mysubmenu#init()$/;"	f	signature:()
ctrlp#myutils#accept_submenu	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/myutils.vim	/^fu! ctrlp#myutils#accept_submenu(str)$/;"	f	signature:(str)
ctrlp#myutils#get_mymenu	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/myutils.vim	/^fu! ctrlp#myutils#get_mymenu()$/;"	f	signature:()
ctrlp#myutils#get_mysubmenu	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/myutils.vim	/^fu! ctrlp#myutils#get_mysubmenu()$/;"	f	signature:()
ctrlp#myutils#init_mymenu	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/myutils.vim	/^fu! ctrlp#myutils#init_mymenu()$/;"	f	signature:()
ctrlp#myutils#set_menu	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/myutils.vim	/^fu! ctrlp#myutils#set_menu(str)$/;"	f	signature:(str)
ctrlp#normcmd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#normcmd(cmd, ...)$/;"	f	signature:(cmd,...)
ctrlp#nosy	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#nosy()$/;"	f	signature:()
ctrlp#progress	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#progress(enum, ...)$/;"	f	signature:(enum,...)
ctrlp#prtclear	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#prtclear()$/;"	f	signature:()
ctrlp#quickfix#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#quickfix#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#id()$/;"	f	signature:()
ctrlp#quickfix#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! ctrlp#quickfix#init()$/;"	f	signature:()
ctrlp#recordhist	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#recordhist()$/;"	f	signature:()
ctrlp#rmbasedir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#rmbasedir(items)$/;"	f	signature:(items)
ctrlp#rtscript#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#id()$/;"	f	signature:()
ctrlp#rtscript#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! ctrlp#rtscript#init(caching)$/;"	f	signature:(caching)
ctrlp#setdir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setdir(path, ...)$/;"	f	signature:(path,...)
ctrlp#setlcdir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlcdir()$/;"	f	signature:()
ctrlp#setlines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setlines(...)$/;"	f	signature:(...)
ctrlp#setpathmode	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#setpathmode(pmode, ...)$/;"	f	signature:(pmode,...)
ctrlp#statusline	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#statusline()$/;"	f	signature:()
ctrlp#switchtype	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#switchtype(id)$/;"	f	signature:(id)
ctrlp#syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#syntax()$/;"	f	signature:()
ctrlp#tabcount	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! ctrlp#tabcount()$/;"	f	signature:()
ctrlp#tag#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#tag#enter	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#enter()$/;"	f	signature:()
ctrlp#tag#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#id()$/;"	f	signature:()
ctrlp#tag#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! ctrlp#tag#init()$/;"	f	signature:()
ctrlp#undo#accept	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#undo#enter	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#enter()$/;"	f	signature:()
ctrlp#undo#exit	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#exit()$/;"	f	signature:()
ctrlp#undo#id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#id()$/;"	f	signature:()
ctrlp#undo#init	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! ctrlp#undo#init()$/;"	f	signature:()
ctrlp#utils#cachedir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachedir()$/;"	f	signature:()
ctrlp#utils#cachefile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#cachefile(...)$/;"	f	signature:(...)
ctrlp#utils#fnesc	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#fnesc(path, type, ...)$/;"	f	signature:(path,type,...)
ctrlp#utils#glob	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#glob(...)$/;"	f	signature:(...)
ctrlp#utils#globpath	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#globpath(...)$/;"	f	signature:(...)
ctrlp#utils#lash	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#lash()$/;"	f	signature:()
ctrlp#utils#mkdir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#mkdir(dir)$/;"	f	signature:(dir)
ctrlp#utils#opts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#opts()$/;"	f	signature:()
ctrlp#utils#readfile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#readfile(file)$/;"	f	signature:(file)
ctrlp#utils#writecache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! ctrlp#utils#writecache(lines, ...)$/;"	f	signature:(lines,...)
ctrlp#yankring#accept	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^func! ctrlp#yankring#accept(mode, str)$/;"	f	signature:(mode,str)
ctrlp#yankring#id	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^function! ctrlp#yankring#id()$/;"	f	signature:()
ctrlp#yankring#init	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^function! ctrlp#yankring#init()$/;"	f	signature:()
ctrlp_ext_yankring	./vimfiles/bundle/ctrlp-extensions.vim/plugin/yankring.vim	/^  augroup ctrlp_ext_yankring$/;"	a
current_compiler	./vim82/compiler/ant.vim	/^let current_compiler = "ant"$/;"	v
current_compiler	./vim82/compiler/bcc.vim	/^let current_compiler = "bcc"$/;"	v
current_compiler	./vim82/compiler/bdf.vim	/^let current_compiler = "bdf"$/;"	v
current_compiler	./vim82/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	./vim82/compiler/checkstyle.vim	/^let current_compiler = "checkstyle"$/;"	v
current_compiler	./vim82/compiler/context.vim	/^  let current_compiler = 'context'$/;"	v
current_compiler	./vim82/compiler/context.vim	/^  let current_compiler = 'make'$/;"	v
current_compiler	./vim82/compiler/cs.vim	/^let current_compiler = "cs"$/;"	v
current_compiler	./vim82/compiler/csslint.vim	/^let current_compiler = "csslint"$/;"	v
current_compiler	./vim82/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	./vim82/compiler/decada.vim	/^let current_compiler = "decada"$/;"	v
current_compiler	./vim82/compiler/dot.vim	/^let current_compiler = "dot"$/;"	v
current_compiler	./vim82/compiler/erlang.vim	/^let current_compiler = "erlang"$/;"	v
current_compiler	./vim82/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	./vim82/compiler/fortran_F.vim	/^let current_compiler = "fortran_F"$/;"	v
current_compiler	./vim82/compiler/fortran_cv.vim	/^let current_compiler = "fortran_cv"$/;"	v
current_compiler	./vim82/compiler/fortran_elf90.vim	/^let current_compiler = "fortran_elf90"$/;"	v
current_compiler	./vim82/compiler/fortran_g77.vim	/^let current_compiler = "fortran_g77"$/;"	v
current_compiler	./vim82/compiler/fortran_lf95.vim	/^let current_compiler = "fortran_lf95"$/;"	v
current_compiler	./vim82/compiler/fpc.vim	/^let current_compiler = "fpc"$/;"	v
current_compiler	./vim82/compiler/g95.vim	/^let current_compiler = 'g95'$/;"	v
current_compiler	./vim82/compiler/gcc.vim	/^let current_compiler = "gcc"$/;"	v
current_compiler	./vim82/compiler/gfortran.vim	/^let current_compiler = 'gfortran'$/;"	v
current_compiler	./vim82/compiler/ghc.vim	/^let current_compiler = "ghc"$/;"	v
current_compiler	./vim82/compiler/gnat.vim	/^let current_compiler = "gnat"$/;"	v
current_compiler	./vim82/compiler/go.vim	/^let current_compiler = 'go'$/;"	v
current_compiler	./vim82/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	./vim82/compiler/hp_acc.vim	/^let current_compiler = "hp_acc"$/;"	v
current_compiler	./vim82/compiler/icc.vim	/^let current_compiler = "icc"$/;"	v
current_compiler	./vim82/compiler/ifort.vim	/^let current_compiler = 'ifort'$/;"	v
current_compiler	./vim82/compiler/intel.vim	/^let current_compiler = "intel"$/;"	v
current_compiler	./vim82/compiler/irix5_c.vim	/^let current_compiler = "irix5_c"$/;"	v
current_compiler	./vim82/compiler/irix5_cpp.vim	/^let current_compiler = "irix5_cpp"$/;"	v
current_compiler	./vim82/compiler/javac.vim	/^let current_compiler = "javac"$/;"	v
current_compiler	./vim82/compiler/jikes.vim	/^let current_compiler = "jikes"$/;"	v
current_compiler	./vim82/compiler/mcs.vim	/^let current_compiler = "mcs"$/;"	v
current_compiler	./vim82/compiler/mips_c.vim	/^let current_compiler = "mips_c"$/;"	v
current_compiler	./vim82/compiler/mipspro_c89.vim	/^let current_compiler = "mipspro_c89"$/;"	v
current_compiler	./vim82/compiler/mipspro_cpp.vim	/^let current_compiler = "mipspro_cpp"$/;"	v
current_compiler	./vim82/compiler/modelsim_vcom.vim	/^let current_compiler = "modelsim_vcom"$/;"	v
current_compiler	./vim82/compiler/msbuild.vim	/^let current_compiler = "msbuild"$/;"	v
current_compiler	./vim82/compiler/msvc.vim	/^let current_compiler = "msvc"$/;"	v
current_compiler	./vim82/compiler/neato.vim	/^let current_compiler = "neato"$/;"	v
current_compiler	./vim82/compiler/ocaml.vim	/^let current_compiler = "ocaml"$/;"	v
current_compiler	./vim82/compiler/onsgmls.vim	/^let current_compiler = "onsgmls"$/;"	v
current_compiler	./vim82/compiler/pbx.vim	/^let current_compiler = "pbx"$/;"	v
current_compiler	./vim82/compiler/perl.vim	/^let current_compiler = "perl"$/;"	v
current_compiler	./vim82/compiler/php.vim	/^let current_compiler = "php"$/;"	v
current_compiler	./vim82/compiler/pylint.vim	/^let current_compiler = "pylint"$/;"	v
current_compiler	./vim82/compiler/pyunit.vim	/^let current_compiler = "pyunit"$/;"	v
current_compiler	./vim82/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	./vim82/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	./vim82/compiler/rst.vim	/^let current_compiler = "rst"$/;"	v
current_compiler	./vim82/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	./vim82/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	./vim82/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	./vim82/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_compiler	./vim82/compiler/se.vim	/^let current_compiler = "se"$/;"	v
current_compiler	./vim82/compiler/splint.vim	/^let current_compiler = "splint"$/;"	v
current_compiler	./vim82/compiler/stack.vim	/^let current_compiler = "stack"$/;"	v
current_compiler	./vim82/compiler/tcl.vim	/^let current_compiler = "tcl"$/;"	v
current_compiler	./vim82/compiler/tex.vim	/^		let current_compiler = "latex"$/;"	v
current_compiler	./vim82/compiler/tex.vim	/^		let current_compiler = b:tex_flavor$/;"	v
current_compiler	./vim82/compiler/tex.vim	/^		let current_compiler = g:tex_flavor$/;"	v
current_compiler	./vim82/compiler/tex.vim	/^	let current_compiler = 'make'$/;"	v
current_compiler	./vim82/compiler/tidy.vim	/^let current_compiler = "tidy"$/;"	v
current_compiler	./vim82/compiler/xbuild.vim	/^let current_compiler = "xbuild"$/;"	v
current_compiler	./vim82/compiler/xmllint.vim	/^let current_compiler = "xmllint"$/;"	v
current_compiler	./vim82/compiler/xmlwf.vim	/^let current_compiler = "xmlwf"$/;"	v
current_compiler	./vimfiles/compiler/javac_ex.vim	/^let current_compiler = "javac_ex"$/;"	v
current_compiler	./vimfiles/compiler/txt2tags-compiler.vim	/^let current_compiler = "txt2tags.py"$/;"	v
d	./vim82/macros/less.vim	/^noremap <script> d <C-D><SID>L$/;"	m
d	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap d e$/;"	m
d	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> d             :call <SID>BERemoveBuffer("delete", "n")<cr>$/;"	m
d	./vimfiles/plugin/bufexplorer.vim	/^  xnoremap <buffer> <silent> d             :call <SID>BERemoveBuffer("delete", "v")<cr>$/;"	m
d	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> d    <C-o>:call <SID>Tlist_Remove_File(-1, 1)<CR>$/;"	m
d	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> d :call <SID>Tlist_Remove_File(-1, 1)<CR>$/;"	m
data	./vimfiles/bundle/vmustache/tests/test003_render.vim	/^let data = {}$/;"	v
data	./vimfiles/bundle/vmustache/tests/test003_render.vim	/^let data["outer_section"] = []$/;"	v
data	./vimfiles/bundle/vmustache/tests/test003_render.vim	/^let data["variable"] = "Some fancy info"$/;"	v
data	./vimfiles/bundle/vmustache/tests/test007_whitespace_last_token.vim	/^let data = {}$/;"	v
data	./vimfiles/bundle/vmustache/tests/test007_whitespace_last_token.vim	/^let data["name"] = "varName"$/;"	v
data	./vimfiles/bundle/vmustache/tests/test007_whitespace_last_token.vim	/^let data["type"] = "int"$/;"	v
data	./vimfiles/bundle/vmustache/tests/test008_block_variable_false.vim	/^let data = {}$/;"	v
data	./vimfiles/bundle/vmustache/tests/test008_block_variable_false.vim	/^let data["block_not_rendered_false"] = 0$/;"	v
data	./vimfiles/bundle/vmustache/tests/test008_block_variable_false.vim	/^let data["block_rendered"] = 1$/;"	v
data	./vimfiles/bundle/vmustache/tests/test012_bug_render_list_empty.vim	/^let data = {$/;"	v
data	./vimfiles/bundle/vmustache/tests/test014_counter.vim	/^let data = {$/;"	v
data	./vimfiles/bundle/vmustache/tests/test015_complex_snipmate.vim	/^let data = {$/;"	v
data	./vimfiles/bundle/vmustache/tests/test016_block_variable_empty.vim	/^let data = {}$/;"	v
data	./vimfiles/bundle/vmustache/tests/test016_block_variable_empty.vim	/^let data["block_empty_string"] = ""$/;"	v
data	./vimfiles/bundle/vmustache/tests/test016_block_variable_empty.vim	/^let data["block_not_empty_string"] = "foo"$/;"	v
data	./vimfiles/bundle/vmustache/tests/test017_variable_in_block_condition.vim	/^let data = {}$/;"	v
data	./vimfiles/bundle/vmustache/tests/test017_variable_in_block_condition.vim	/^let data["false"] = 0$/;"	v
data	./vimfiles/bundle/vmustache/tests/test017_variable_in_block_condition.vim	/^let data["true"] = 1$/;"	v
data	./vimfiles/bundle/vmustache/tests/test018_buffer_local_view_model.vim	/^let data = {}$/;"	v
data	./vimfiles/bundle/vmustache/tests/test018_buffer_local_view_model.vim	/^let data["from_data"] = "From Data!"$/;"	v
data	./vimfiles/bundle/vmustache/tests/test019_view_model_overriding.vim	/^let data = {}$/;"	v
data	./vimfiles/bundle/vmustache/tests/test019_view_model_overriding.vim	/^let data["overwritten"] = "From Data!"$/;"	v
data_not_rendered	./vimfiles/bundle/vmustache/tests/test011_render_negative_section.vim	/^let data_not_rendered = {"negative_section": [{"variable": 1}, {"variable": 2}]}$/;"	v
data_rendered	./vimfiles/bundle/vmustache/tests/test011_render_negative_section.vim	/^let data_rendered = {}$/;"	v
decada#Make	./vim82/autoload/decada.vim	/^function decada#Make () dict					     " {{{1$/;"	f	signature:()
decada#New	./vim82/autoload/decada.vim	/^function decada#New ()						     " }}}1$/;"	f	signature:()
decada#Set_Session	./vim82/autoload/decada.vim	/^function decada#Set_Session (...) dict				     " {{{1$/;"	f	signature:(...)
decada#Unit_Name	./vim82/autoload/decada.vim	/^function decada#Unit_Name () dict				     " {{{1$/;"	f	signature:()
default_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
dein	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  augroup dein$/;"	a
dein	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  augroup dein-events$/;"	a
dein	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^    augroup dein-install$/;"	a
dein	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^  augroup dein-install$/;"	a
dein	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  augroup dein$/;"	a
dein	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  augroup dein-events | augroup END$/;"	a
dein	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^  augroup dein-install$/;"	a
dein	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  augroup dein$/;"	a
dein	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  augroup dein-events$/;"	a
dein	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^    augroup dein-install$/;"	a
dein	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^  augroup dein-install$/;"	a
dein#_get_cache_file	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#_get_cache_file() abort "{{{$/;"	f	signature:()
dein#_get_cache_file	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#_get_cache_file() abort "{{{$/;"	f	signature:()
dein#_get_state_file	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#_get_state_file() abort "{{{$/;"	f	signature:()
dein#_get_state_file	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#_get_state_file() abort "{{{$/;"	f	signature:()
dein#_init	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#_init() abort "{{{$/;"	f	signature:()
dein#_init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#_init() abort$/;"	f	signature:()
dein#_init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#_init() abort "{{{$/;"	f	signature:()
dein#_json2vim	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#_json2vim(expr) abort "{{{$/;"	f	signature:(expr)
dein#_json2vim	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#_json2vim(expr) abort "{{{$/;"	f	signature:(expr)
dein#_vim2json	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#_vim2json(expr) abort "{{{$/;"	f	signature:(expr)
dein#_vim2json	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#_vim2json(expr) abort "{{{$/;"	f	signature:(expr)
dein#add	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#add(repo, ...) abort "{{{$/;"	f	signature:(repo,...)
dein#add	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#add(repo, ...) abort$/;"	f	signature:(repo,...)
dein#add	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#add(repo, ...) abort "{{{$/;"	f	signature:(repo,...)
dein#autoload#_dummy_complete	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_dummy_complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f	signature:(arglead,cmdline,cursorpos)
dein#autoload#_dummy_complete	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_dummy_complete(arglead, cmdline, cursorpos) abort$/;"	f	signature:(arglead,cmdline,cursorpos)
dein#autoload#_dummy_complete	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_dummy_complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f	signature:(arglead,cmdline,cursorpos)
dein#autoload#_on_cmd	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_on_cmd(command, name, args, bang, line1, line2) abort "{{{$/;"	f	signature:(command,name,args,bang,line1,line2)
dein#autoload#_on_cmd	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_on_cmd(command, name, args, bang, line1, line2) abort$/;"	f	signature:(command,name,args,bang,line1,line2)
dein#autoload#_on_cmd	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_on_cmd(command, name, args, bang, line1, line2) abort "{{{$/;"	f	signature:(command,name,args,bang,line1,line2)
dein#autoload#_on_default_event	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_on_default_event(event) abort "{{{$/;"	f	signature:(event)
dein#autoload#_on_default_event	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_on_default_event(event) abort$/;"	f	signature:(event)
dein#autoload#_on_default_event	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_on_default_event(event) abort "{{{$/;"	f	signature:(event)
dein#autoload#_on_event	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_on_event(event, plugins) abort "{{{$/;"	f	signature:(event,plugins)
dein#autoload#_on_event	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_on_event(event, plugins) abort$/;"	f	signature:(event,plugins)
dein#autoload#_on_event	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_on_event(event, plugins) abort "{{{$/;"	f	signature:(event,plugins)
dein#autoload#_on_func	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_on_func(name) abort "{{{$/;"	f	signature:(name)
dein#autoload#_on_func	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_on_func(name) abort$/;"	f	signature:(name)
dein#autoload#_on_func	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_on_func(name) abort "{{{$/;"	f	signature:(name)
dein#autoload#_on_map	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_on_map(mapping, name, mode) abort "{{{$/;"	f	signature:(mapping,name,mode)
dein#autoload#_on_map	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_on_map(mapping, name, mode) abort$/;"	f	signature:(mapping,name,mode)
dein#autoload#_on_map	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_on_map(mapping, name, mode) abort "{{{$/;"	f	signature:(mapping,name,mode)
dein#autoload#_on_pre_cmd	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_on_pre_cmd(name) abort "{{{$/;"	f	signature:(name)
dein#autoload#_on_pre_cmd	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_on_pre_cmd(name) abort$/;"	f	signature:(name)
dein#autoload#_on_pre_cmd	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_on_pre_cmd(name) abort "{{{$/;"	f	signature:(name)
dein#autoload#_source	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! dein#autoload#_source(...) abort "{{{$/;"	f	signature:(...)
dein#autoload#_source	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! dein#autoload#_source(...) abort$/;"	f	signature:(...)
dein#autoload#_source	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! dein#autoload#_source(...) abort "{{{$/;"	f	signature:(...)
dein#begin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#begin(path, ...) abort "{{{$/;"	f	signature:(path,...)
dein#begin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#begin(path, ...) abort$/;"	f	signature:(path,...)
dein#begin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#begin(path, ...) abort "{{{$/;"	f	signature:(path,...)
dein#build	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#build(...) abort$/;"	f	signature:(...)
dein#call_hook	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#call_hook(hook_name, ...) abort "{{{$/;"	f	signature:(hook_name,...)
dein#call_hook	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#call_hook(hook_name, ...) abort$/;"	f	signature:(hook_name,...)
dein#call_hook	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#call_hook(hook_name, ...) abort "{{{$/;"	f	signature:(hook_name,...)
dein#check_clean	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#check_clean() abort "{{{$/;"	f	signature:()
dein#check_clean	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#check_clean() abort$/;"	f	signature:()
dein#check_clean	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#check_clean() abort "{{{$/;"	f	signature:()
dein#check_install	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#check_install(...) abort "{{{$/;"	f	signature:(...)
dein#check_install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#check_install(...) abort$/;"	f	signature:(...)
dein#check_install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#check_install(...) abort "{{{$/;"	f	signature:(...)
dein#check_lazy_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#check_lazy_plugins() abort "{{{$/;"	f	signature:()
dein#check_lazy_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#check_lazy_plugins() abort$/;"	f	signature:()
dein#check_lazy_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#check_lazy_plugins() abort "{{{$/;"	f	signature:()
dein#check_update	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#check_update(...) abort "{{{$/;"	f	signature:(...)
dein#check_update	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#check_update(...) abort$/;"	f	signature:(...)
dein#check_update	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#check_update(...) abort "{{{$/;"	f	signature:(...)
dein#clear_state	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#clear_state() abort "{{{$/;"	f	signature:()
dein#clear_state	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#clear_state() abort$/;"	f	signature:()
dein#clear_state	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#clear_state() abort "{{{$/;"	f	signature:()
dein#config	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#config(arg, ...) abort "{{{$/;"	f	signature:(arg,...)
dein#config	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#config(arg, ...) abort$/;"	f	signature:(arg,...)
dein#config	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#config(arg, ...) abort "{{{$/;"	f	signature:(arg,...)
dein#direct_install	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#direct_install(repo, ...) abort "{{{$/;"	f	signature:(repo,...)
dein#direct_install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#direct_install(repo, ...) abort$/;"	f	signature:(repo,...)
dein#direct_install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#direct_install(repo, ...) abort "{{{$/;"	f	signature:(repo,...)
dein#disable	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#disable(names) abort "{{{$/;"	f	signature:(names)
dein#disable	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#disable(names) abort$/;"	f	signature:(names)
dein#disable	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#disable(names) abort "{{{$/;"	f	signature:(names)
dein#each	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#each(command, ...) abort "{{{$/;"	f	signature:(command,...)
dein#each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#each(command, ...) abort$/;"	f	signature:(command,...)
dein#each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#each(command, ...) abort "{{{$/;"	f	signature:(command,...)
dein#end	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#end() abort "{{{$/;"	f	signature:()
dein#end	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#end() abort$/;"	f	signature:()
dein#end	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#end() abort "{{{$/;"	f	signature:()
dein#get	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#get(...) abort "{{{$/;"	f	signature:(...)
dein#get	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#get(...) abort$/;"	f	signature:(...)
dein#get	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#get(...) abort "{{{$/;"	f	signature:(...)
dein#get_direct_plugins_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#get_direct_plugins_path() abort "{{{$/;"	f	signature:()
dein#get_direct_plugins_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#get_direct_plugins_path() abort$/;"	f	signature:()
dein#get_direct_plugins_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#get_direct_plugins_path() abort "{{{$/;"	f	signature:()
dein#get_log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#get_log() abort "{{{$/;"	f	signature:()
dein#get_log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#get_log() abort$/;"	f	signature:()
dein#get_log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#get_log() abort "{{{$/;"	f	signature:()
dein#get_progress	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#get_progress() abort$/;"	f	signature:()
dein#get_updates_log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#get_updates_log() abort "{{{$/;"	f	signature:()
dein#get_updates_log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#get_updates_log() abort$/;"	f	signature:()
dein#get_updates_log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#get_updates_log() abort "{{{$/;"	f	signature:()
dein#install	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#install(...) abort "{{{$/;"	f	signature:(...)
dein#install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#install(...) abort$/;"	f	signature:(...)
dein#install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#install(...) abort "{{{$/;"	f	signature:(...)
dein#install#_args2string_unix	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_args2string_unix(args) abort$/;"	f	signature:(args)
dein#install#_args2string_windows	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_args2string_windows(args) abort$/;"	f	signature:(args)
dein#install#_build	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_build(plugins) abort$/;"	f	signature:(plugins)
dein#install#_cd	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_cd(path) abort "{{{$/;"	f	signature:(path)
dein#install#_cd	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_cd(path) abort$/;"	f	signature:(path)
dein#install#_cd	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_cd(path) abort "{{{$/;"	f	signature:(path)
dein#install#_copy_directories	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_copy_directories(srcs, dest) abort "{{{$/;"	f	signature:(srcs,dest)
dein#install#_copy_directories	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_copy_directories(srcs, dest) abort$/;"	f	signature:(srcs,dest)
dein#install#_copy_directories	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_copy_directories(srcs, dest) abort "{{{$/;"	f	signature:(srcs,dest)
dein#install#_direct_install	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_direct_install(repo, options) abort "{{{$/;"	f	signature:(repo,options)
dein#install#_direct_install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_direct_install(repo, options) abort$/;"	f	signature:(repo,options)
dein#install#_direct_install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_direct_install(repo, options) abort "{{{$/;"	f	signature:(repo,options)
dein#install#_each	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_each(cmd, plugins) abort "{{{$/;"	f	signature:(cmd,plugins)
dein#install#_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_each(cmd, plugins) abort$/;"	f	signature:(cmd,plugins)
dein#install#_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_each(cmd, plugins) abort "{{{$/;"	f	signature:(cmd,plugins)
dein#install#_execute	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_execute(command) abort$/;"	f	signature:(command)
dein#install#_get_context	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_get_context() abort "{{{$/;"	f	signature:()
dein#install#_get_context	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_get_context() abort$/;"	f	signature:()
dein#install#_get_context	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_get_context() abort "{{{$/;"	f	signature:()
dein#install#_get_default_ftplugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_get_default_ftplugin() abort$/;"	f	signature:()
dein#install#_get_last_status	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_get_last_status() abort "{{{$/;"	f	signature:()
dein#install#_get_last_status	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_get_last_status() abort "{{{$/;"	f	signature:()
dein#install#_get_log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_get_log() abort "{{{$/;"	f	signature:()
dein#install#_get_log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_get_log() abort$/;"	f	signature:()
dein#install#_get_log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_get_log() abort "{{{$/;"	f	signature:()
dein#install#_get_progress	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_get_progress() abort$/;"	f	signature:()
dein#install#_get_updates_log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_get_updates_log() abort "{{{$/;"	f	signature:()
dein#install#_get_updates_log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_get_updates_log() abort$/;"	f	signature:()
dein#install#_get_updates_log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_get_updates_log() abort "{{{$/;"	f	signature:()
dein#install#_is_async	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_is_async() abort "{{{$/;"	f	signature:()
dein#install#_is_async	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_is_async() abort$/;"	f	signature:()
dein#install#_is_async	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_is_async() abort "{{{$/;"	f	signature:()
dein#install#_polling	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_polling() abort$/;"	f	signature:()
dein#install#_recache_runtimepath	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_recache_runtimepath() abort "{{{$/;"	f	signature:()
dein#install#_recache_runtimepath	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_recache_runtimepath() abort$/;"	f	signature:()
dein#install#_recache_runtimepath	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_recache_runtimepath() abort "{{{$/;"	f	signature:()
dein#install#_reinstall	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_reinstall(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#install#_reinstall	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_reinstall(plugins) abort$/;"	f	signature:(plugins)
dein#install#_reinstall	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_reinstall(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#install#_remote_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_remote_plugins() abort "{{{$/;"	f	signature:()
dein#install#_remote_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_remote_plugins() abort$/;"	f	signature:()
dein#install#_remote_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_remote_plugins() abort "{{{$/;"	f	signature:()
dein#install#_rm	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_rm(path) abort "{{{$/;"	f	signature:(path)
dein#install#_rm	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_rm(path) abort$/;"	f	signature:(path)
dein#install#_rm	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_rm(path) abort "{{{$/;"	f	signature:(path)
dein#install#_rollback	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_rollback(date, plugins) abort "{{{$/;"	f	signature:(date,plugins)
dein#install#_rollback	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_rollback(date, plugins) abort$/;"	f	signature:(date,plugins)
dein#install#_rollback	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_rollback(date, plugins) abort "{{{$/;"	f	signature:(date,plugins)
dein#install#_status	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_status() abort$/;"	f	signature:()
dein#install#_system	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_system(command) abort "{{{$/;"	f	signature:(command)
dein#install#_system	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_system(command) abort$/;"	f	signature:(command)
dein#install#_system	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_system(command) abort "{{{$/;"	f	signature:(command)
dein#install#_update	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! dein#install#_update(plugins, update_type, async) abort "{{{$/;"	f	signature:(plugins,update_type,async)
dein#install#_update	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! dein#install#_update(plugins, update_type, async) abort$/;"	f	signature:(plugins,update_type,async)
dein#install#_update	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! dein#install#_update(plugins, update_type, async) abort "{{{$/;"	f	signature:(plugins,update_type,async)
dein#is_sourced	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#is_sourced(name) abort "{{{$/;"	f	signature:(name)
dein#is_sourced	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#is_sourced(name) abort$/;"	f	signature:(name)
dein#is_sourced	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#is_sourced(name) abort "{{{$/;"	f	signature:(name)
dein#load_cache_raw	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#load_cache_raw(...) abort "{{{$/;"	f	signature:(...)
dein#load_cache_raw	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#load_cache_raw(vimrcs) abort$/;"	f	signature:(vimrcs)
dein#load_cache_raw	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#load_cache_raw(...) abort "{{{$/;"	f	signature:(...)
dein#load_dict	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#load_dict(dict, ...) abort "{{{$/;"	f	signature:(dict,...)
dein#load_dict	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#load_dict(dict, ...) abort$/;"	f	signature:(dict,...)
dein#load_dict	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#load_dict(dict, ...) abort "{{{$/;"	f	signature:(dict,...)
dein#load_state	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#load_state(path, ...) abort "{{{$/;"	f	signature:(path,...)
dein#load_state	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#load_state(path, ...) abort$/;"	f	signature:(path,...)
dein#load_state	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#load_state(path, ...) abort "{{{$/;"	f	signature:(path,...)
dein#load_toml	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#load_toml(filename, ...) abort "{{{$/;"	f	signature:(filename,...)
dein#load_toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#load_toml(filename, ...) abort$/;"	f	signature:(filename,...)
dein#load_toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#load_toml(filename, ...) abort "{{{$/;"	f	signature:(filename,...)
dein#local	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#local(dir, ...) abort "{{{$/;"	f	signature:(dir,...)
dein#local	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#local(dir, ...) abort$/;"	f	signature:(dir,...)
dein#local	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#local(dir, ...) abort "{{{$/;"	f	signature:(dir,...)
dein#parse#_add	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_add(repo, options) abort "{{{$/;"	f	signature:(repo,options)
dein#parse#_add	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_add(repo, options) abort$/;"	f	signature:(repo,options)
dein#parse#_add	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_add(repo, options) abort "{{{$/;"	f	signature:(repo,options)
dein#parse#_dict	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_dict(repo, plugin) abort "{{{$/;"	f	signature:(repo,plugin)
dein#parse#_dict	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_dict(plugin) abort$/;"	f	signature:(plugin)
dein#parse#_dict	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_dict(repo, plugin) abort "{{{$/;"	f	signature:(repo,plugin)
dein#parse#_get_types	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_get_types() abort "{{{$/;"	f	signature:()
dein#parse#_get_types	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_get_types() abort$/;"	f	signature:()
dein#parse#_get_types	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_get_types() abort "{{{$/;"	f	signature:()
dein#parse#_init	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_init(repo, options) abort "{{{$/;"	f	signature:(repo,options)
dein#parse#_init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_init(repo, options) abort$/;"	f	signature:(repo,options)
dein#parse#_init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_init(repo, options) abort "{{{$/;"	f	signature:(repo,options)
dein#parse#_load_dict	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_load_dict(dict, default) abort "{{{$/;"	f	signature:(dict,default)
dein#parse#_load_dict	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_load_dict(dict, default) abort$/;"	f	signature:(dict,default)
dein#parse#_load_dict	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_load_dict(dict, default) abort "{{{$/;"	f	signature:(dict,default)
dein#parse#_load_toml	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_load_toml(filename, default) abort "{{{$/;"	f	signature:(filename,default)
dein#parse#_load_toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_load_toml(filename, default) abort$/;"	f	signature:(filename,default)
dein#parse#_load_toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_load_toml(filename, default) abort "{{{$/;"	f	signature:(filename,default)
dein#parse#_local	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_local(localdir, options, includes) abort "{{{$/;"	f	signature:(localdir,options,includes)
dein#parse#_local	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_local(localdir, options, includes) abort$/;"	f	signature:(localdir,options,includes)
dein#parse#_local	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_local(localdir, options, includes) abort "{{{$/;"	f	signature:(localdir,options,includes)
dein#parse#_name_conversion	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_name_conversion(path) abort "{{{$/;"	f	signature:(path)
dein#parse#_name_conversion	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_name_conversion(path) abort$/;"	f	signature:(path)
dein#parse#_name_conversion	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_name_conversion(path) abort "{{{$/;"	f	signature:(path)
dein#parse#_plugins2toml	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! dein#parse#_plugins2toml(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#parse#_plugins2toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! dein#parse#_plugins2toml(plugins) abort$/;"	f	signature:(plugins)
dein#parse#_plugins2toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! dein#parse#_plugins2toml(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#plugins2toml	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#plugins2toml(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#plugins2toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#plugins2toml(plugins) abort$/;"	f	signature:(plugins)
dein#plugins2toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#plugins2toml(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#recache_runtimepath	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#recache_runtimepath() abort "{{{$/;"	f	signature:()
dein#recache_runtimepath	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#recache_runtimepath() abort$/;"	f	signature:()
dein#recache_runtimepath	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#recache_runtimepath() abort "{{{$/;"	f	signature:()
dein#reinstall	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#reinstall(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#reinstall	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#reinstall(plugins) abort$/;"	f	signature:(plugins)
dein#reinstall	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#reinstall(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#remote_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#remote_plugins() abort "{{{$/;"	f	signature:()
dein#remote_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#remote_plugins() abort$/;"	f	signature:()
dein#remote_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#remote_plugins() abort "{{{$/;"	f	signature:()
dein#rollback	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#rollback(date, ...) abort "{{{$/;"	f	signature:(date,...)
dein#rollback	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#rollback(date, ...) abort$/;"	f	signature:(date,...)
dein#rollback	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#rollback(date, ...) abort "{{{$/;"	f	signature:(date,...)
dein#save_state	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#save_state() abort "{{{$/;"	f	signature:()
dein#save_state	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#save_state() abort$/;"	f	signature:()
dein#save_state	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#save_state() abort "{{{$/;"	f	signature:()
dein#set_hook	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#set_hook(name, hook_name, hook) abort "{{{$/;"	f	signature:(name,hook_name,hook)
dein#set_hook	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#set_hook(plugins, hook_name, hook) abort$/;"	f	signature:(plugins,hook_name,hook)
dein#set_hook	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#set_hook(name, hook_name, hook) abort "{{{$/;"	f	signature:(name,hook_name,hook)
dein#source	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#source(...) abort "{{{$/;"	f	signature:(...)
dein#source	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#source(...) abort$/;"	f	signature:(...)
dein#source	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#source(...) abort "{{{$/;"	f	signature:(...)
dein#tap	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#tap(name) abort "{{{$/;"	f	signature:(name)
dein#tap	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#tap(name) abort$/;"	f	signature:(name)
dein#tap	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#tap(name) abort "{{{$/;"	f	signature:(name)
dein#toml#parse	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! dein#toml#parse(text) abort$/;"	f	signature:(text)
dein#toml#parse	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! dein#toml#parse(text) abort$/;"	f	signature:(text)
dein#toml#parse	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! dein#toml#parse(text) abort$/;"	f	signature:(text)
dein#toml#parse_file	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! dein#toml#parse_file(filename) abort$/;"	f	signature:(filename)
dein#toml#parse_file	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! dein#toml#parse_file(filename) abort$/;"	f	signature:(filename)
dein#toml#parse_file	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! dein#toml#parse_file(filename) abort$/;"	f	signature:(filename)
dein#types#git#define	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! dein#types#git#define() abort "{{{$/;"	f	signature:()
dein#types#git#define	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! dein#types#git#define() abort$/;"	f	signature:()
dein#types#git#define	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! dein#types#git#define() abort "{{{$/;"	f	signature:()
dein#types#raw#define	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/raw.vim	/^function! dein#types#raw#define() abort "{{{$/;"	f	signature:()
dein#types#raw#define	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/raw.vim	/^function! dein#types#raw#define() abort$/;"	f	signature:()
dein#types#raw#define	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/raw.vim	/^function! dein#types#raw#define() abort "{{{$/;"	f	signature:()
dein#update	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^function! dein#update(...) abort "{{{$/;"	f	signature:(...)
dein#update	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^function! dein#update(...) abort$/;"	f	signature:(...)
dein#update	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^function! dein#update(...) abort "{{{$/;"	f	signature:(...)
dein#util#_add_after	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_add_after(rtps, path) abort$/;"	f	signature:(rtps,path)
dein#util#_begin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_begin(path, vimrcs) abort "{{{$/;"	f	signature:(path,vimrcs)
dein#util#_begin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_begin(path, vimrcs) abort$/;"	f	signature:(path,vimrcs)
dein#util#_begin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_begin(path, vimrcs) abort "{{{$/;"	f	signature:(path,vimrcs)
dein#util#_call_hook	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_call_hook(hook_name, ...) abort "{{{$/;"	f	signature:(hook_name,...)
dein#util#_call_hook	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_call_hook(hook_name, ...) abort$/;"	f	signature:(hook_name,...)
dein#util#_call_hook	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_call_hook(hook_name, ...) abort "{{{$/;"	f	signature:(hook_name,...)
dein#util#_check_clean	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_check_clean() abort "{{{$/;"	f	signature:()
dein#util#_check_clean	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_check_clean() abort$/;"	f	signature:()
dein#util#_check_clean	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_check_clean() abort "{{{$/;"	f	signature:()
dein#util#_check_install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_check_install(plugins) abort$/;"	f	signature:(plugins)
dein#util#_check_lazy_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_check_lazy_plugins() abort "{{{$/;"	f	signature:()
dein#util#_check_lazy_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_check_lazy_plugins() abort$/;"	f	signature:()
dein#util#_check_lazy_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_check_lazy_plugins() abort "{{{$/;"	f	signature:()
dein#util#_check_vimrcs	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_check_vimrcs() abort "{{{$/;"	f	signature:()
dein#util#_check_vimrcs	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_check_vimrcs() abort$/;"	f	signature:()
dein#util#_check_vimrcs	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_check_vimrcs() abort "{{{$/;"	f	signature:()
dein#util#_chomp	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_chomp(str) abort "{{{$/;"	f	signature:(str)
dein#util#_chomp	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_chomp(str) abort$/;"	f	signature:(str)
dein#util#_chomp	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_chomp(str) abort "{{{$/;"	f	signature:(str)
dein#util#_clear_state	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_clear_state() abort "{{{$/;"	f	signature:()
dein#util#_clear_state	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_clear_state() abort$/;"	f	signature:()
dein#util#_clear_state	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_clear_state() abort "{{{$/;"	f	signature:()
dein#util#_config	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_config(arg, dict) abort "{{{$/;"	f	signature:(arg,dict)
dein#util#_config	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_config(arg, dict) abort$/;"	f	signature:(arg,dict)
dein#util#_config	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_config(arg, dict) abort "{{{$/;"	f	signature:(arg,dict)
dein#util#_convert2list	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_convert2list(expr) abort "{{{$/;"	f	signature:(expr)
dein#util#_convert2list	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_convert2list(expr) abort$/;"	f	signature:(expr)
dein#util#_convert2list	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_convert2list(expr) abort "{{{$/;"	f	signature:(expr)
dein#util#_disable	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_disable(names) abort "{{{$/;"	f	signature:(names)
dein#util#_disable	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_disable(names) abort$/;"	f	signature:(names)
dein#util#_disable	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_disable(names) abort "{{{$/;"	f	signature:(names)
dein#util#_download	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_download(uri, outpath) abort "{{{$/;"	f	signature:(uri,outpath)
dein#util#_download	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_download(uri, outpath) abort$/;"	f	signature:(uri,outpath)
dein#util#_download	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_download(uri, outpath) abort "{{{$/;"	f	signature:(uri,outpath)
dein#util#_end	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_end() abort "{{{$/;"	f	signature:()
dein#util#_end	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_end() abort$/;"	f	signature:()
dein#util#_end	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_end() abort "{{{$/;"	f	signature:()
dein#util#_error	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_error(msg) abort "{{{$/;"	f	signature:(msg)
dein#util#_error	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_error(msg) abort$/;"	f	signature:(msg)
dein#util#_error	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_error(msg) abort "{{{$/;"	f	signature:(msg)
dein#util#_execute_hook	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_execute_hook(plugin, hook) abort "{{{$/;"	f	signature:(plugin,hook)
dein#util#_execute_hook	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_execute_hook(plugin, hook) abort$/;"	f	signature:(plugin,hook)
dein#util#_execute_hook	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_execute_hook(plugin, hook) abort "{{{$/;"	f	signature:(plugin,hook)
dein#util#_expand	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_expand(path) abort "{{{$/;"	f	signature:(path)
dein#util#_expand	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_expand(path) abort$/;"	f	signature:(path)
dein#util#_expand	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_expand(path) abort "{{{$/;"	f	signature:(path)
dein#util#_get_base_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_get_base_path() abort "{{{$/;"	f	signature:()
dein#util#_get_base_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_base_path() abort$/;"	f	signature:()
dein#util#_get_base_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_get_base_path() abort "{{{$/;"	f	signature:()
dein#util#_get_cache_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_get_cache_path() abort "{{{$/;"	f	signature:()
dein#util#_get_cache_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_cache_path() abort$/;"	f	signature:()
dein#util#_get_cache_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_get_cache_path() abort "{{{$/;"	f	signature:()
dein#util#_get_lazy_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_get_lazy_plugins() abort "{{{$/;"	f	signature:()
dein#util#_get_lazy_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_lazy_plugins() abort$/;"	f	signature:()
dein#util#_get_lazy_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_get_lazy_plugins() abort "{{{$/;"	f	signature:()
dein#util#_get_myvimrc	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_myvimrc() abort$/;"	f	signature:()
dein#util#_get_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_get_plugins(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#util#_get_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_plugins(plugins) abort$/;"	f	signature:(plugins)
dein#util#_get_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_get_plugins(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#util#_get_runtime_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_get_runtime_path() abort "{{{$/;"	f	signature:()
dein#util#_get_runtime_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_runtime_path() abort$/;"	f	signature:()
dein#util#_get_runtime_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_get_runtime_path() abort "{{{$/;"	f	signature:()
dein#util#_get_type	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_get_type(name) abort "{{{$/;"	f	signature:(name)
dein#util#_get_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_type(name) abort$/;"	f	signature:(name)
dein#util#_get_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_get_type(name) abort "{{{$/;"	f	signature:(name)
dein#util#_get_vimrcs	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_get_vimrcs(vimrcs) abort$/;"	f	signature:(vimrcs)
dein#util#_globlist	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_globlist(path) abort "{{{$/;"	f	signature:(path)
dein#util#_globlist	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_globlist(path) abort$/;"	f	signature:(path)
dein#util#_globlist	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_globlist(path) abort "{{{$/;"	f	signature:(path)
dein#util#_has_job	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_has_job() abort$/;"	f	signature:()
dein#util#_has_vimproc	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_has_vimproc() abort "{{{$/;"	f	signature:()
dein#util#_has_vimproc	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_has_vimproc() abort "{{{$/;"	f	signature:()
dein#util#_init	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_init() abort "{{{$/;"	f	signature:()
dein#util#_init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_init() abort$/;"	f	signature:()
dein#util#_init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_init() abort "{{{$/;"	f	signature:()
dein#util#_is_cygwin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_is_cygwin() abort "{{{$/;"	f	signature:()
dein#util#_is_cygwin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_is_cygwin() abort "{{{$/;"	f	signature:()
dein#util#_is_fish	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_is_fish() abort "{{{$/;"	f	signature:()
dein#util#_is_fish	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_is_fish() abort$/;"	f	signature:()
dein#util#_is_fish	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_is_fish() abort "{{{$/;"	f	signature:()
dein#util#_is_mac	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_is_mac() abort "{{{$/;"	f	signature:()
dein#util#_is_mac	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_is_mac() abort$/;"	f	signature:()
dein#util#_is_mac	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_is_mac() abort "{{{$/;"	f	signature:()
dein#util#_is_sudo	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_is_sudo() abort "{{{$/;"	f	signature:()
dein#util#_is_sudo	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_is_sudo() abort "{{{$/;"	f	signature:()
dein#util#_is_windows	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_is_windows() abort "{{{$/;"	f	signature:()
dein#util#_is_windows	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_is_windows() abort$/;"	f	signature:()
dein#util#_is_windows	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_is_windows() abort "{{{$/;"	f	signature:()
dein#util#_join_rtp	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_join_rtp(list, runtimepath, rtp) abort "{{{$/;"	f	signature:(list,runtimepath,rtp)
dein#util#_join_rtp	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_join_rtp(list, runtimepath, rtp) abort$/;"	f	signature:(list,runtimepath,rtp)
dein#util#_join_rtp	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_join_rtp(list, runtimepath, rtp) abort "{{{$/;"	f	signature:(list,runtimepath,rtp)
dein#util#_load_merged_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_load_merged_plugins() abort "{{{$/;"	f	signature:()
dein#util#_load_merged_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_load_merged_plugins() abort$/;"	f	signature:()
dein#util#_load_merged_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_load_merged_plugins() abort "{{{$/;"	f	signature:()
dein#util#_notify	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_notify(msg) abort "{{{$/;"	f	signature:(msg)
dein#util#_notify	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_notify(msg) abort$/;"	f	signature:(msg)
dein#util#_notify	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_notify(msg) abort "{{{$/;"	f	signature:(msg)
dein#util#_redir	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_redir(cmd) abort "{{{$/;"	f	signature:(cmd)
dein#util#_redir	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_redir(cmd) abort$/;"	f	signature:(cmd)
dein#util#_redir	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_redir(cmd) abort "{{{$/;"	f	signature:(cmd)
dein#util#_save_cache	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_save_cache(vimrcs, is_state, is_starting) abort "{{{$/;"	f	signature:(vimrcs,is_state,is_starting)
dein#util#_save_cache	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_save_cache(vimrcs, is_state, is_starting) abort$/;"	f	signature:(vimrcs,is_state,is_starting)
dein#util#_save_cache	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_save_cache(vimrcs, is_state, is_starting) abort "{{{$/;"	f	signature:(vimrcs,is_state,is_starting)
dein#util#_save_merged_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_save_merged_plugins(merged_plugins) abort "{{{$/;"	f	signature:(merged_plugins)
dein#util#_save_merged_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_save_merged_plugins(plugins) abort$/;"	f	signature:(plugins)
dein#util#_save_merged_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_save_merged_plugins(merged_plugins) abort "{{{$/;"	f	signature:(merged_plugins)
dein#util#_save_state	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_save_state(is_starting) abort "{{{$/;"	f	signature:(is_starting)
dein#util#_save_state	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_save_state(is_starting) abort$/;"	f	signature:(is_starting)
dein#util#_save_state	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_save_state(is_starting) abort "{{{$/;"	f	signature:(is_starting)
dein#util#_set_default	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_set_default(var, val, ...) abort "{{{$/;"	f	signature:(var,val,...)
dein#util#_set_default	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_set_default(var, val, ...) abort$/;"	f	signature:(var,val,...)
dein#util#_set_default	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_set_default(var, val, ...) abort "{{{$/;"	f	signature:(var,val,...)
dein#util#_set_hook	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_set_hook(name, hook_name, hook) abort "{{{$/;"	f	signature:(name,hook_name,hook)
dein#util#_set_hook	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_set_hook(plugins, hook_name, hook) abort$/;"	f	signature:(plugins,hook_name,hook)
dein#util#_set_hook	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_set_hook(name, hook_name, hook) abort "{{{$/;"	f	signature:(name,hook_name,hook)
dein#util#_sort_by	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_sort_by(list, expr) abort "{{{$/;"	f	signature:(list,expr)
dein#util#_sort_by	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_sort_by(list, expr) abort$/;"	f	signature:(list,expr)
dein#util#_sort_by	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_sort_by(list, expr) abort "{{{$/;"	f	signature:(list,expr)
dein#util#_split	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_split(expr) abort "{{{$/;"	f	signature:(expr)
dein#util#_split	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_split(expr) abort$/;"	f	signature:(expr)
dein#util#_split	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_split(expr) abort "{{{$/;"	f	signature:(expr)
dein#util#_split_rtp	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_split_rtp(runtimepath) abort "{{{$/;"	f	signature:(runtimepath)
dein#util#_split_rtp	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_split_rtp(runtimepath) abort$/;"	f	signature:(runtimepath)
dein#util#_split_rtp	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_split_rtp(runtimepath) abort "{{{$/;"	f	signature:(runtimepath)
dein#util#_substitute_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_substitute_path(path) abort "{{{$/;"	f	signature:(path)
dein#util#_substitute_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_substitute_path(path) abort$/;"	f	signature:(path)
dein#util#_substitute_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_substitute_path(path) abort "{{{$/;"	f	signature:(path)
dein#util#_tsort	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_tsort(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#util#_tsort	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_tsort(plugins) abort$/;"	f	signature:(plugins)
dein#util#_tsort	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_tsort(plugins) abort "{{{$/;"	f	signature:(plugins)
dein#util#_uniq	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_uniq(list) abort "{{{$/;"	f	signature:(list)
dein#util#_uniq	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_uniq(list) abort$/;"	f	signature:(list)
dein#util#_uniq	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_uniq(list) abort "{{{$/;"	f	signature:(list)
dein#util#_writefile	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! dein#util#_writefile(path, list) abort "{{{$/;"	f	signature:(path,list)
dein#util#_writefile	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! dein#util#_writefile(path, list) abort$/;"	f	signature:(path,list)
dein#util#_writefile	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! dein#util#_writefile(path, list) abort "{{{$/;"	f	signature:(path,list)
deleted	./vim82/spell/fixdup.vim	/^      let deleted += 1$/;"	v
deleted	./vim82/spell/fixdup.vim	/^let deleted = 0$/;"	v
did_angularjs_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    let did_angularjs_coffee_syntax_inits = 1$/;"	v
did_angularjs_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    let did_angularjs_javascript_syntax_inits = 1$/;"	v
did_angularjs_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    let did_angularjs_ls_syntax_inits = 1$/;"	v
did_angularjs_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    let did_angularjs_typescript_syntax_inits = 1$/;"	v
did_backbone_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    let did_backbone_coffee_syntax_inits = 1$/;"	v
did_backbone_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    let did_backbone_javascript_syntax_inits = 1$/;"	v
did_backbone_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    let did_backbone_ls_syntax_inits = 1$/;"	v
did_backbone_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    let did_backbone_typescript_syntax_inits = 1$/;"	v
did_chai_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    let did_chai_coffee_syntax_inits = 1$/;"	v
did_chai_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    let did_chai_javascript_syntax_inits = 1$/;"	v
did_chai_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    let did_chai_ls_syntax_inits = 1$/;"	v
did_chai_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    let did_chai_typescript_syntax_inits = 1$/;"	v
did_cpp_syntax_inits	./vimfiles/after/syntax/cpp/stl.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_drchip_netrwlist_syntax	./vim82/syntax/netrw.vim	/^ let did_drchip_netrwlist_syntax= 1$/;"	v
did_eighth_syntax_inits	./vim82/syntax/8th.vim	/^    let did_eighth_syntax_inits=1$/;"	v
did_idl_syntax_inits	./vim82/syntax/idl.vim	/^    let did_idl_syntax_inits = 1$/;"	v
did_indent_on	./vim82/indent.vim	/^let did_indent_on = 1$/;"	v
did_install_default_menus	./vim82/menu.vim	/^let did_install_default_menus = 1$/;"	v
did_install_syntax_menu	./vim82/menu.vim	/^  let did_install_syntax_menu = 1$/;"	v
did_jquery_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_lisp_syntax_inits	./vimfiles/syntax/jquery.vim	/^    let did_lisp_syntax_inits = 1$/;"	v
did_load_filetypes	./vim82/filetype.vim	/^let did_load_filetypes = 1$/;"	v
did_load_ftplugin	./VIMPROJ/3rd/dein.vim/.dein/ftplugin.vim	/^let did_load_ftplugin = 1$/;"	v
did_load_ftplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/ftplugin.vim	/^let did_load_ftplugin = 1$/;"	v
did_load_ftplugin	./vim82/ftplugin.vim	/^let did_load_ftplugin = 1$/;"	v
did_menu_trans	./vim82/lang/menu_af_af.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_ca_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_chinese_gb.936.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_chinese_taiwan.950.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_cs_cz.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_da.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_de_de.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_en_gb.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_eo.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_es_es.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_fi_fi.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_fr_fr.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_hu_hu.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_is_is.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_it_it.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_ja_jp.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_japanese_japan.932.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_ko_kr.euckr.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_ko_kr.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_nl_nl.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_no_no.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_pl_pl.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_polish_poland.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_pt_br.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_pt_pt.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_ru_ru.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sk_sk.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sl_si.cp1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sl_si.latin2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sl_si.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_slovak_slovak_republic.1250.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sr_rs.ascii.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sr_rs.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_sv_se.latin1.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_tr_tr.cp1254.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_tr_tr.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_uk_ua.cp1251.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_vi_vn.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_zh_cn.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_menu_trans	./vim82/lang/menu_zh_tw.utf-8.vim	/^let did_menu_trans = 1$/;"	v
did_meson_syn_inits	./vim82/syntax/meson.vim	/^    let did_meson_syn_inits = 1$/;"	v
did_mmp_syntax_inits	./vim82/syntax/mmp.vim	/^  let did_mmp_syntax_inits=1$/;"	v
did_openbrowser_menu_trans	./vimfiles/bundle/open-browser.vim/lang/openbrowser_menu_ja.vim	/^let did_openbrowser_menu_trans = 1$/;"	v
did_optwin_syntax_inits	./vim82/optwin.vim	/^    let did_optwin_syntax_inits = 1$/;"	v
did_plugin_ultisnips	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
did_prelude_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_pyrex_syntax_inits	./vimfiles/bundle/python-mode/syntax/pyrex.vim	/^    let did_pyrex_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_reva_syntax_inits	./vim82/syntax/reva.vim	/^    let did_reva_syntax_inits=1$/;"	v
did_stap_syn_inits	./vimfiles/syntax/stap.vim	/^    let did_stap_syn_inits = 1$/;"	v
did_tapverboseoutput_syntax_inits	./vim82/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
did_toolbar_tmenu	./vim82/menu.vim	/^  let did_toolbar_tmenu = 1$/;"	v
did_underscore_coffee_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
diffstyle	./vim82/syntax/2html.vim	/^  let diffstyle =$/;"	v
dist#ft#BindzoneCheck	./vim82/autoload/dist/ft.vim	/^func dist#ft#BindzoneCheck(default)$/;"	f	signature:(default)
dist#ft#CSH	./vim82/autoload/dist/ft.vim	/^func dist#ft#CSH()$/;"	f	signature:()
dist#ft#Check_inp	./vim82/autoload/dist/ft.vim	/^func dist#ft#Check_inp()$/;"	f	signature:()
dist#ft#DtraceCheck	./vim82/autoload/dist/ft.vim	/^func dist#ft#DtraceCheck()$/;"	f	signature:()
dist#ft#EuphoriaCheck	./vim82/autoload/dist/ft.vim	/^func dist#ft#EuphoriaCheck()$/;"	f	signature:()
dist#ft#FTRules	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTRules()$/;"	f	signature:()
dist#ft#FTVB	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTVB(alt)$/;"	f	signature:(alt)
dist#ft#FTasm	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTasm()$/;"	f	signature:()
dist#ft#FTasmsyntax	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTasmsyntax()$/;"	f	signature:()
dist#ft#FTbtm	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTbtm()$/;"	f	signature:()
dist#ft#FTchange	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTchange()$/;"	f	signature:()
dist#ft#FTe	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTe()$/;"	f	signature:()
dist#ft#FTent	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTent()$/;"	f	signature:()
dist#ft#FTheader	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTheader()$/;"	f	signature:()
dist#ft#FThtml	./vim82/autoload/dist/ft.vim	/^func dist#ft#FThtml()$/;"	f	signature:()
dist#ft#FTidl	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTidl()$/;"	f	signature:()
dist#ft#FTinc	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTinc()$/;"	f	signature:()
dist#ft#FTlpc	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTlpc()$/;"	f	signature:()
dist#ft#FTm	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTm()$/;"	f	signature:()
dist#ft#FTmm	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTmm()$/;"	f	signature:()
dist#ft#FTmms	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTmms()$/;"	f	signature:()
dist#ft#FTnroff	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTnroff()$/;"	f	signature:()
dist#ft#FTperl	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTperl()$/;"	f	signature:()
dist#ft#FTpl	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTpl()$/;"	f	signature:()
dist#ft#FTprogress_asm	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTprogress_asm()$/;"	f	signature:()
dist#ft#FTprogress_cweb	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTprogress_cweb()$/;"	f	signature:()
dist#ft#FTprogress_pascal	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTprogress_pascal()$/;"	f	signature:()
dist#ft#FTr	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTr()$/;"	f	signature:()
dist#ft#FTtex	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTtex()$/;"	f	signature:()
dist#ft#FTxml	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTxml()$/;"	f	signature:()
dist#ft#FTy	./vim82/autoload/dist/ft.vim	/^func dist#ft#FTy()$/;"	f	signature:()
dist#ft#McSetf	./vim82/autoload/dist/ft.vim	/^func dist#ft#McSetf()$/;"	f	signature:()
dist#ft#ProtoCheck	./vim82/autoload/dist/ft.vim	/^func dist#ft#ProtoCheck(default)$/;"	f	signature:(default)
dist#ft#Redif	./vim82/autoload/dist/ft.vim	/^func dist#ft#Redif()$/;"	f	signature:()
dist#ft#SQL	./vim82/autoload/dist/ft.vim	/^func dist#ft#SQL()$/;"	f	signature:()
dist#ft#SetFileTypeSH	./vim82/autoload/dist/ft.vim	/^func dist#ft#SetFileTypeSH(name)$/;"	f	signature:(name)
dist#ft#SetFileTypeShell	./vim82/autoload/dist/ft.vim	/^func dist#ft#SetFileTypeShell(name)$/;"	f	signature:(name)
doclines	./vimfiles/bundle/pdv/tests/test001_attributes.vim	/^let doclines = [7, 5, 3]$/;"	v
doclines	./vimfiles/bundle/pdv/tests/test002_functions.vim	/^let doclines = [48, 46, 42, 38, 30, 27, 24, 20, 17, 13, 9, 6]$/;"	v
doclines	./vimfiles/bundle/pdv/tests/test003_classes.vim	/^let doclines = [25, 22, 17, 14, 10, 6, 3]$/;"	v
doclines	./vimfiles/bundle/pdv/tests/test004_attributes_snipmate.vim	/^let doclines = [7, 5, 3]$/;"	v
doclines	./vimfiles/bundle/pdv/tests/test005_functions_snipmate.vim	/^let doclines = [48, 46, 42, 38, 30, 27, 24, 20, 17, 13, 9, 6]$/;"	v
doclines	./vimfiles/bundle/pdv/tests/test006_interfaces.vim	/^let doclines = [20, 17, 14, 10, 6, 3]$/;"	v
doclines	./vimfiles/bundle/pdv/tests/test007_traits.vim	/^let doclines = [10, 6, 3]$/;"	v
doclines	./vimfiles/bundle/pdv/tests/test008_consts.vim	/^let doclines = [9, 6, 3]$/;"	v
document_structure	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let document_structure = [$/;"	v
document_structure	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let document_structure = ['article', 'cell', 'columnheader', 'definition', 'directory', 'doc/;"	v
dosbatch_cmdextversion	./vim82/syntax/dosbatch.vim	/^  let dosbatch_cmdextversion = 2$/;"	v
doxygengroup	./vim82/syntax/doxygen.vim	/^    aug doxygengroup$/;"	a
dpub_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let dpub_role = [$/;"	v
dpub_role	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let dpub_role = ['dpub-abstract', 'dpub-afterword', 'dpub-appendix', 'dpub-biblioentry', 'dp/;"	v
drag_and_drop_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {$/;"	v
e	./vim82/macros/hanoi/hanoi.vim	/^map e "fy2l$/;"	m
e	./vim82/macros/less.vim	/^map e <CR>$/;"	m
e	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap e .$/;"	m
easy_align#align	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! easy_align#align(bang, live, visualmode, expr) range$/;"	f	signature:(bang,live,visualmode,expr)
encoding	./vim82/keymap/hebrew.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	./vim82/keymap/hebrew.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	./vim82/keymap/hebrew.vim	/^let encoding = &enc$/;"	v
encoding	./vim82/keymap/hebrewp.vim	/^	let encoding = 'cp1255'$/;"	v
encoding	./vim82/keymap/hebrewp.vim	/^	let encoding = 'iso-8859-8'$/;"	v
encoding	./vim82/keymap/hebrewp.vim	/^let encoding = &enc$/;"	v
encoding	./vim82/keymap/persian.vim	/^	let encoding = 'utf-8'$/;"	v
encoding	./vim82/keymap/persian.vim	/^let encoding = &enc$/;"	v
encoding	./vim82/keymap/polish-slash.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	./vim82/keymap/polish-slash.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	./vim82/keymap/polish-slash.vim	/^let encoding = &enc$/;"	v
encoding	./vim82/keymap/serbian.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	./vim82/keymap/serbian.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	./vim82/keymap/serbian.vim	/^let encoding = &enc$/;"	v
encoding	./vim82/keymap/slovak.vim	/^	let encoding = 'cp1250'$/;"	v
encoding	./vim82/keymap/slovak.vim	/^	let encoding = 'iso-8859-2'$/;"	v
encoding	./vim82/keymap/slovak.vim	/^let encoding = &enc$/;"	v
event_attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythro/;"	v
expr_map	./vimfiles/plugin/supertab.vim	/^      let expr_map = map_dict.expr$/;"	v
expr_map	./vimfiles/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	./vimfiles/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
f	./vim82/macros/less.vim	/^map f <Space>$/;"	m
f	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap f u$/;"	m
f	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> f             :call <SID>BEToggleFindActive()<cr>$/;"	m
filename	./vim82/indent/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	./vim82/indent/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	./vim82/indent/sql.vim	/^let filename = 'sqlanywhere'$/;"	v
filename	./vim82/syntax/sql.vim	/^        let filename = b:sql_type_override$/;"	v
filename	./vim82/syntax/sql.vim	/^        let filename = g:sql_type_default$/;"	v
filename	./vim82/syntax/sql.vim	/^let filename = 'sqloracle'$/;"	v
filetypedetect	./vim82/filetype.vim	/^augroup filetypedetect$/;"	a
filetypeindent	./vim82/indent.vim	/^augroup filetypeindent$/;"	a
filetypeplugin	./VIMPROJ/3rd/dein.vim/.cache/.vimrc/.dein/ftplugin.vim	/^augroup filetypeplugin$/;"	a
filetypeplugin	./VIMPROJ/3rd/dein.vim/.cache/_vimrc/.dein/ftplugin.vim	/^augroup filetypeplugin$/;"	a
filetypeplugin	./VIMPROJ/3rd/dein.vim/.dein/ftplugin.vim	/^augroup filetypeplugin$/;"	a
filetypeplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/ftplugin.vim	/^augroup filetypeplugin$/;"	a
filetypeplugin	./vim82/ftplugin.vim	/^augroup filetypeplugin$/;"	a
flow_elements	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', /;"	v
format_command	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^  let format_command = "gq"$/;"	v
fortran_free_source	./vim82/syntax/sinda.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	./vim82/syntax/tak.vim	/^let fortran_free_source=1$/;"	v
fortran_free_source	./vim82/syntax/trasys.vim	/^let fortran_free_source=1$/;"	v
fuf	./vimfiles/autoload/fuf/buffer.vim	/^  augroup fuf#buffer$/;"	a
fuf	./vimfiles/autoload/fuf/mrufile.vim	/^  augroup fuf#mrufile$/;"	a
fuf#addMode	./vimfiles/autoload/fuf.vim	/^function fuf#addMode(modeName)$/;"	f	signature:(modeName)
fuf#bookmarkdir#createHandler	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#createHandler(base)$/;"	f	signature:(base)
fuf#bookmarkdir#getEditableDataNames	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getEditableDataNames()$/;"	f	signature:()
fuf#bookmarkdir#getSwitchOrder	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#getSwitchOrder()$/;"	f	signature:()
fuf#bookmarkdir#onInit	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#onInit()$/;"	f	signature:()
fuf#bookmarkdir#renewCache	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#renewCache()$/;"	f	signature:()
fuf#bookmarkdir#requiresOnCommandPre	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function fuf#bookmarkdir#requiresOnCommandPre()$/;"	f	signature:()
fuf#bookmarkfile#createHandler	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#createHandler(base)$/;"	f	signature:(base)
fuf#bookmarkfile#getEditableDataNames	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getEditableDataNames()$/;"	f	signature:()
fuf#bookmarkfile#getSwitchOrder	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#getSwitchOrder()$/;"	f	signature:()
fuf#bookmarkfile#onInit	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#onInit()$/;"	f	signature:()
fuf#bookmarkfile#renewCache	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#renewCache()$/;"	f	signature:()
fuf#bookmarkfile#requiresOnCommandPre	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function fuf#bookmarkfile#requiresOnCommandPre()$/;"	f	signature:()
fuf#buffer#createHandler	./vimfiles/autoload/fuf/buffer.vim	/^function fuf#buffer#createHandler(base)$/;"	f	signature:(base)
fuf#buffer#getEditableDataNames	./vimfiles/autoload/fuf/buffer.vim	/^function fuf#buffer#getEditableDataNames()$/;"	f	signature:()
fuf#buffer#getSwitchOrder	./vimfiles/autoload/fuf/buffer.vim	/^function fuf#buffer#getSwitchOrder()$/;"	f	signature:()
fuf#buffer#onInit	./vimfiles/autoload/fuf/buffer.vim	/^function fuf#buffer#onInit()$/;"	f	signature:()
fuf#buffer#renewCache	./vimfiles/autoload/fuf/buffer.vim	/^function fuf#buffer#renewCache()$/;"	f	signature:()
fuf#buffer#requiresOnCommandPre	./vimfiles/autoload/fuf/buffer.vim	/^function fuf#buffer#requiresOnCommandPre()$/;"	f	signature:()
fuf#buffertag#createHandler	./vimfiles/autoload/fuf/buffertag.vim	/^function fuf#buffertag#createHandler(base)$/;"	f	signature:(base)
fuf#buffertag#getEditableDataNames	./vimfiles/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getEditableDataNames()$/;"	f	signature:()
fuf#buffertag#getSwitchOrder	./vimfiles/autoload/fuf/buffertag.vim	/^function fuf#buffertag#getSwitchOrder()$/;"	f	signature:()
fuf#buffertag#onInit	./vimfiles/autoload/fuf/buffertag.vim	/^function fuf#buffertag#onInit()$/;"	f	signature:()
fuf#buffertag#renewCache	./vimfiles/autoload/fuf/buffertag.vim	/^function fuf#buffertag#renewCache()$/;"	f	signature:()
fuf#buffertag#requiresOnCommandPre	./vimfiles/autoload/fuf/buffertag.vim	/^function fuf#buffertag#requiresOnCommandPre()$/;"	f	signature:()
fuf#callbackfile#createHandler	./vimfiles/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#createHandler(base)$/;"	f	signature:(base)
fuf#callbackfile#getEditableDataNames	./vimfiles/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getEditableDataNames()$/;"	f	signature:()
fuf#callbackfile#getSwitchOrder	./vimfiles/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#getSwitchOrder()$/;"	f	signature:()
fuf#callbackfile#launch	./vimfiles/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#launch(initialPattern, partialMatching, prompt, exclude, listener)$/;"	f	signature:(initialPattern,partialMatching,prompt,exclude,listener)
fuf#callbackfile#onInit	./vimfiles/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#onInit()$/;"	f	signature:()
fuf#callbackfile#renewCache	./vimfiles/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#renewCache()$/;"	f	signature:()
fuf#callbackfile#requiresOnCommandPre	./vimfiles/autoload/fuf/callbackfile.vim	/^function fuf#callbackfile#requiresOnCommandPre()$/;"	f	signature:()
fuf#callbackitem#createHandler	./vimfiles/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#createHandler(base)$/;"	f	signature:(base)
fuf#callbackitem#getEditableDataNames	./vimfiles/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getEditableDataNames()$/;"	f	signature:()
fuf#callbackitem#getSwitchOrder	./vimfiles/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#getSwitchOrder()$/;"	f	signature:()
fuf#callbackitem#launch	./vimfiles/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#launch(initialPattern, partialMatching, prompt, listener, items, forPa/;"	f	signature:(initialPattern,partialMatching,prompt,listener,items,forPath)
fuf#callbackitem#onInit	./vimfiles/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#onInit()$/;"	f	signature:()
fuf#callbackitem#renewCache	./vimfiles/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#renewCache()$/;"	f	signature:()
fuf#callbackitem#requiresOnCommandPre	./vimfiles/autoload/fuf/callbackitem.vim	/^function fuf#callbackitem#requiresOnCommandPre()$/;"	f	signature:()
fuf#changelist#createHandler	./vimfiles/autoload/fuf/changelist.vim	/^function fuf#changelist#createHandler(base)$/;"	f	signature:(base)
fuf#changelist#getEditableDataNames	./vimfiles/autoload/fuf/changelist.vim	/^function fuf#changelist#getEditableDataNames()$/;"	f	signature:()
fuf#changelist#getSwitchOrder	./vimfiles/autoload/fuf/changelist.vim	/^function fuf#changelist#getSwitchOrder()$/;"	f	signature:()
fuf#changelist#onInit	./vimfiles/autoload/fuf/changelist.vim	/^function fuf#changelist#onInit()$/;"	f	signature:()
fuf#changelist#renewCache	./vimfiles/autoload/fuf/changelist.vim	/^function fuf#changelist#renewCache()$/;"	f	signature:()
fuf#changelist#requiresOnCommandPre	./vimfiles/autoload/fuf/changelist.vim	/^function fuf#changelist#requiresOnCommandPre()$/;"	f	signature:()
fuf#compareRanks	./vimfiles/autoload/fuf.vim	/^function fuf#compareRanks(i1, i2)$/;"	f	signature:(i1,i2)
fuf#countModifiedFiles	./vimfiles/autoload/fuf.vim	/^function fuf#countModifiedFiles(files, time)$/;"	f	signature:(files,time)
fuf#coveragefile#createHandler	./vimfiles/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#createHandler(base)$/;"	f	signature:(base)
fuf#coveragefile#getEditableDataNames	./vimfiles/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getEditableDataNames()$/;"	f	signature:()
fuf#coveragefile#getSwitchOrder	./vimfiles/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#getSwitchOrder()$/;"	f	signature:()
fuf#coveragefile#onInit	./vimfiles/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#onInit()$/;"	f	signature:()
fuf#coveragefile#renewCache	./vimfiles/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#renewCache()$/;"	f	signature:()
fuf#coveragefile#requiresOnCommandPre	./vimfiles/autoload/fuf/coveragefile.vim	/^function fuf#coveragefile#requiresOnCommandPre()$/;"	f	signature:()
fuf#defineKeyMappingInHandler	./vimfiles/autoload/fuf.vim	/^function fuf#defineKeyMappingInHandler(key, func)$/;"	f	signature:(key,func)
fuf#defineLaunchCommand	./vimfiles/autoload/fuf.vim	/^function fuf#defineLaunchCommand(CmdName, modeName, prefixInitialPattern, tempVars)$/;"	f	signature:(CmdName,modeName,prefixInitialPattern,tempVars)
fuf#dir#createHandler	./vimfiles/autoload/fuf/dir.vim	/^function fuf#dir#createHandler(base)$/;"	f	signature:(base)
fuf#dir#getEditableDataNames	./vimfiles/autoload/fuf/dir.vim	/^function fuf#dir#getEditableDataNames()$/;"	f	signature:()
fuf#dir#getSwitchOrder	./vimfiles/autoload/fuf/dir.vim	/^function fuf#dir#getSwitchOrder()$/;"	f	signature:()
fuf#dir#onInit	./vimfiles/autoload/fuf/dir.vim	/^function fuf#dir#onInit()$/;"	f	signature:()
fuf#dir#renewCache	./vimfiles/autoload/fuf/dir.vim	/^function fuf#dir#renewCache()$/;"	f	signature:()
fuf#dir#requiresOnCommandPre	./vimfiles/autoload/fuf/dir.vim	/^function fuf#dir#requiresOnCommandPre()$/;"	f	signature:()
fuf#echoError	./vimfiles/autoload/fuf.vim	/^function fuf#echoError(msg)$/;"	f	signature:(msg)
fuf#echoWarning	./vimfiles/autoload/fuf.vim	/^function fuf#echoWarning(msg)$/;"	f	signature:(msg)
fuf#editDataFile	./vimfiles/autoload/fuf.vim	/^function fuf#editDataFile()$/;"	f	signature:()
fuf#enumExpandedDirsEntries	./vimfiles/autoload/fuf.vim	/^function fuf#enumExpandedDirsEntries(dir, exclude)$/;"	f	signature:(dir,exclude)
fuf#expandTailDotSequenceToParentDir	./vimfiles/autoload/fuf.vim	/^function fuf#expandTailDotSequenceToParentDir(pattern)$/;"	f	signature:(pattern)
fuf#file#createHandler	./vimfiles/autoload/fuf/file.vim	/^function fuf#file#createHandler(base)$/;"	f	signature:(base)
fuf#file#getEditableDataNames	./vimfiles/autoload/fuf/file.vim	/^function fuf#file#getEditableDataNames()$/;"	f	signature:()
fuf#file#getSwitchOrder	./vimfiles/autoload/fuf/file.vim	/^function fuf#file#getSwitchOrder()$/;"	f	signature:()
fuf#file#onInit	./vimfiles/autoload/fuf/file.vim	/^function fuf#file#onInit()$/;"	f	signature:()
fuf#file#renewCache	./vimfiles/autoload/fuf/file.vim	/^function fuf#file#renewCache()$/;"	f	signature:()
fuf#file#requiresOnCommandPre	./vimfiles/autoload/fuf/file.vim	/^function fuf#file#requiresOnCommandPre()$/;"	f	signature:()
fuf#formatPrompt	./vimfiles/autoload/fuf.vim	/^function fuf#formatPrompt(prompt, partialMatching, otherString)$/;"	f	signature:(prompt,partialMatching,otherString)
fuf#getCurrentTagFiles	./vimfiles/autoload/fuf.vim	/^function fuf#getCurrentTagFiles()$/;"	f	signature:()
fuf#getDataFileTime	./vimfiles/autoload/fuf.vim	/^function fuf#getDataFileTime(modeName, dataName)$/;"	f	signature:(modeName,dataName)
fuf#getFileLines	./vimfiles/autoload/fuf.vim	/^function fuf#getFileLines(file)$/;"	f	signature:(file)
fuf#getModeNames	./vimfiles/autoload/fuf.vim	/^function fuf#getModeNames()$/;"	f	signature:()
fuf#getRunningHandler	./vimfiles/autoload/fuf.vim	/^function fuf#getRunningHandler()$/;"	f	signature:()
fuf#givencmd#createHandler	./vimfiles/autoload/fuf/givencmd.vim	/^function fuf#givencmd#createHandler(base)$/;"	f	signature:(base)
fuf#givencmd#getEditableDataNames	./vimfiles/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getEditableDataNames()$/;"	f	signature:()
fuf#givencmd#getSwitchOrder	./vimfiles/autoload/fuf/givencmd.vim	/^function fuf#givencmd#getSwitchOrder()$/;"	f	signature:()
fuf#givencmd#launch	./vimfiles/autoload/fuf/givencmd.vim	/^function fuf#givencmd#launch(initialPattern, partialMatching, prompt, items)$/;"	f	signature:(initialPattern,partialMatching,prompt,items)
fuf#givencmd#onInit	./vimfiles/autoload/fuf/givencmd.vim	/^function fuf#givencmd#onInit()$/;"	f	signature:()
fuf#givencmd#renewCache	./vimfiles/autoload/fuf/givencmd.vim	/^function fuf#givencmd#renewCache()$/;"	f	signature:()
fuf#givencmd#requiresOnCommandPre	./vimfiles/autoload/fuf/givencmd.vim	/^function fuf#givencmd#requiresOnCommandPre()$/;"	f	signature:()
fuf#givendir#createHandler	./vimfiles/autoload/fuf/givendir.vim	/^function fuf#givendir#createHandler(base)$/;"	f	signature:(base)
fuf#givendir#getEditableDataNames	./vimfiles/autoload/fuf/givendir.vim	/^function fuf#givendir#getEditableDataNames()$/;"	f	signature:()
fuf#givendir#getSwitchOrder	./vimfiles/autoload/fuf/givendir.vim	/^function fuf#givendir#getSwitchOrder()$/;"	f	signature:()
fuf#givendir#launch	./vimfiles/autoload/fuf/givendir.vim	/^function fuf#givendir#launch(initialPattern, partialMatching, prompt, items)$/;"	f	signature:(initialPattern,partialMatching,prompt,items)
fuf#givendir#onInit	./vimfiles/autoload/fuf/givendir.vim	/^function fuf#givendir#onInit()$/;"	f	signature:()
fuf#givendir#renewCache	./vimfiles/autoload/fuf/givendir.vim	/^function fuf#givendir#renewCache()$/;"	f	signature:()
fuf#givendir#requiresOnCommandPre	./vimfiles/autoload/fuf/givendir.vim	/^function fuf#givendir#requiresOnCommandPre()$/;"	f	signature:()
fuf#givenfile#createHandler	./vimfiles/autoload/fuf/givenfile.vim	/^function fuf#givenfile#createHandler(base)$/;"	f	signature:(base)
fuf#givenfile#getEditableDataNames	./vimfiles/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getEditableDataNames()$/;"	f	signature:()
fuf#givenfile#getSwitchOrder	./vimfiles/autoload/fuf/givenfile.vim	/^function fuf#givenfile#getSwitchOrder()$/;"	f	signature:()
fuf#givenfile#launch	./vimfiles/autoload/fuf/givenfile.vim	/^function fuf#givenfile#launch(initialPattern, partialMatching, prompt, items)$/;"	f	signature:(initialPattern,partialMatching,prompt,items)
fuf#givenfile#onInit	./vimfiles/autoload/fuf/givenfile.vim	/^function fuf#givenfile#onInit()$/;"	f	signature:()
fuf#givenfile#renewCache	./vimfiles/autoload/fuf/givenfile.vim	/^function fuf#givenfile#renewCache()$/;"	f	signature:()
fuf#givenfile#requiresOnCommandPre	./vimfiles/autoload/fuf/givenfile.vim	/^function fuf#givenfile#requiresOnCommandPre()$/;"	f	signature:()
fuf#glob	./vimfiles/autoload/fuf.vim	/^function fuf#glob(expr)$/;"	f	signature:(expr)
fuf#help#createHandler	./vimfiles/autoload/fuf/help.vim	/^function fuf#help#createHandler(base)$/;"	f	signature:(base)
fuf#help#getEditableDataNames	./vimfiles/autoload/fuf/help.vim	/^function fuf#help#getEditableDataNames()$/;"	f	signature:()
fuf#help#getSwitchOrder	./vimfiles/autoload/fuf/help.vim	/^function fuf#help#getSwitchOrder()$/;"	f	signature:()
fuf#help#onInit	./vimfiles/autoload/fuf/help.vim	/^function fuf#help#onInit()$/;"	f	signature:()
fuf#help#renewCache	./vimfiles/autoload/fuf/help.vim	/^function fuf#help#renewCache()$/;"	f	signature:()
fuf#help#requiresOnCommandPre	./vimfiles/autoload/fuf/help.vim	/^function fuf#help#requiresOnCommandPre()$/;"	f	signature:()
fuf#jumplist#createHandler	./vimfiles/autoload/fuf/jumplist.vim	/^function fuf#jumplist#createHandler(base)$/;"	f	signature:(base)
fuf#jumplist#getEditableDataNames	./vimfiles/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getEditableDataNames()$/;"	f	signature:()
fuf#jumplist#getSwitchOrder	./vimfiles/autoload/fuf/jumplist.vim	/^function fuf#jumplist#getSwitchOrder()$/;"	f	signature:()
fuf#jumplist#onInit	./vimfiles/autoload/fuf/jumplist.vim	/^function fuf#jumplist#onInit()$/;"	f	signature:()
fuf#jumplist#renewCache	./vimfiles/autoload/fuf/jumplist.vim	/^function fuf#jumplist#renewCache()$/;"	f	signature:()
fuf#jumplist#requiresOnCommandPre	./vimfiles/autoload/fuf/jumplist.vim	/^function fuf#jumplist#requiresOnCommandPre()$/;"	f	signature:()
fuf#launch	./vimfiles/autoload/fuf.vim	/^function fuf#launch(modeName, initialPattern, partialMatching)$/;"	f	signature:(modeName,initialPattern,partialMatching)
fuf#line#createHandler	./vimfiles/autoload/fuf/line.vim	/^function fuf#line#createHandler(base)$/;"	f	signature:(base)
fuf#line#getEditableDataNames	./vimfiles/autoload/fuf/line.vim	/^function fuf#line#getEditableDataNames()$/;"	f	signature:()
fuf#line#getSwitchOrder	./vimfiles/autoload/fuf/line.vim	/^function fuf#line#getSwitchOrder()$/;"	f	signature:()
fuf#line#onInit	./vimfiles/autoload/fuf/line.vim	/^function fuf#line#onInit()$/;"	f	signature:()
fuf#line#renewCache	./vimfiles/autoload/fuf/line.vim	/^function fuf#line#renewCache()$/;"	f	signature:()
fuf#line#requiresOnCommandPre	./vimfiles/autoload/fuf/line.vim	/^function fuf#line#requiresOnCommandPre()$/;"	f	signature:()
fuf#loadDataFile	./vimfiles/autoload/fuf.vim	/^function fuf#loadDataFile(modeName, dataName)$/;"	f	signature:(modeName,dataName)
fuf#makeNonPathItem	./vimfiles/autoload/fuf.vim	/^function fuf#makeNonPathItem(word, menu)$/;"	f	signature:(word,menu)
fuf#makePathItem	./vimfiles/autoload/fuf.vim	/^function fuf#makePathItem(fname, menu, appendsDirSuffix)$/;"	f	signature:(fname,menu,appendsDirSuffix)
fuf#makePatternSet	./vimfiles/autoload/fuf.vim	/^function fuf#makePatternSet(patternBase, interpreter, partialMatching)$/;"	f	signature:(patternBase,interpreter,partialMatching)
fuf#makePreviewLinesAround	./vimfiles/autoload/fuf.vim	/^function fuf#makePreviewLinesAround(lines, indices, page, maxHeight)$/;"	f	signature:(lines,indices,page,maxHeight)
fuf#makePreviewLinesForFile	./vimfiles/autoload/fuf.vim	/^function fuf#makePreviewLinesForFile(file, count, maxHeight)$/;"	f	signature:(file,count,maxHeight)
fuf#mapToSetAbbrWithSnippedWordAsPath	./vimfiles/autoload/fuf.vim	/^function fuf#mapToSetAbbrWithSnippedWordAsPath(items)$/;"	f	signature:(items)
fuf#mapToSetSerialIndex	./vimfiles/autoload/fuf.vim	/^function fuf#mapToSetSerialIndex(in, offset)$/;"	f	signature:(in,offset)
fuf#mrucmd#createHandler	./vimfiles/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#createHandler(base)$/;"	f	signature:(base)
fuf#mrucmd#getEditableDataNames	./vimfiles/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getEditableDataNames()$/;"	f	signature:()
fuf#mrucmd#getSwitchOrder	./vimfiles/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#getSwitchOrder()$/;"	f	signature:()
fuf#mrucmd#onCommandPre	./vimfiles/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onCommandPre(cmd)$/;"	f	signature:(cmd)
fuf#mrucmd#onInit	./vimfiles/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#onInit()$/;"	f	signature:()
fuf#mrucmd#renewCache	./vimfiles/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#renewCache()$/;"	f	signature:()
fuf#mrucmd#requiresOnCommandPre	./vimfiles/autoload/fuf/mrucmd.vim	/^function fuf#mrucmd#requiresOnCommandPre()$/;"	f	signature:()
fuf#mrufile#createHandler	./vimfiles/autoload/fuf/mrufile.vim	/^function fuf#mrufile#createHandler(base)$/;"	f	signature:(base)
fuf#mrufile#getEditableDataNames	./vimfiles/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getEditableDataNames()$/;"	f	signature:()
fuf#mrufile#getSwitchOrder	./vimfiles/autoload/fuf/mrufile.vim	/^function fuf#mrufile#getSwitchOrder()$/;"	f	signature:()
fuf#mrufile#onInit	./vimfiles/autoload/fuf/mrufile.vim	/^function fuf#mrufile#onInit()$/;"	f	signature:()
fuf#mrufile#renewCache	./vimfiles/autoload/fuf/mrufile.vim	/^function fuf#mrufile#renewCache()$/;"	f	signature:()
fuf#mrufile#requiresOnCommandPre	./vimfiles/autoload/fuf/mrufile.vim	/^function fuf#mrufile#requiresOnCommandPre()$/;"	f	signature:()
fuf#onComplete	./vimfiles/autoload/fuf.vim	/^function fuf#onComplete(findstart, base)$/;"	f	signature:(findstart,base)
fuf#openBuffer	./vimfiles/autoload/fuf.vim	/^function fuf#openBuffer(bufNr, mode, reuse)$/;"	f	signature:(bufNr,mode,reuse)
fuf#openFile	./vimfiles/autoload/fuf.vim	/^function fuf#openFile(path, mode, reuse)$/;"	f	signature:(path,mode,reuse)
fuf#openHelp	./vimfiles/autoload/fuf.vim	/^function fuf#openHelp(tag, mode)$/;"	f	signature:(tag,mode)
fuf#openTag	./vimfiles/autoload/fuf.vim	/^function fuf#openTag(tag, mode)$/;"	f	signature:(tag,mode)
fuf#prejump	./vimfiles/autoload/fuf.vim	/^function fuf#prejump(mode)$/;"	f	signature:(mode)
fuf#quickfix#createHandler	./vimfiles/autoload/fuf/quickfix.vim	/^function fuf#quickfix#createHandler(base)$/;"	f	signature:(base)
fuf#quickfix#getEditableDataNames	./vimfiles/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getEditableDataNames()$/;"	f	signature:()
fuf#quickfix#getSwitchOrder	./vimfiles/autoload/fuf/quickfix.vim	/^function fuf#quickfix#getSwitchOrder()$/;"	f	signature:()
fuf#quickfix#onInit	./vimfiles/autoload/fuf/quickfix.vim	/^function fuf#quickfix#onInit()$/;"	f	signature:()
fuf#quickfix#renewCache	./vimfiles/autoload/fuf/quickfix.vim	/^function fuf#quickfix#renewCache()$/;"	f	signature:()
fuf#quickfix#requiresOnCommandPre	./vimfiles/autoload/fuf/quickfix.vim	/^function fuf#quickfix#requiresOnCommandPre()$/;"	f	signature:()
fuf#saveDataFile	./vimfiles/autoload/fuf.vim	/^function fuf#saveDataFile(modeName, dataName, items)$/;"	f	signature:(modeName,dataName,items)
fuf#setAbbrWithFormattedWord	./vimfiles/autoload/fuf.vim	/^function fuf#setAbbrWithFormattedWord(item, abbrIndex)$/;"	f	signature:(item,abbrIndex)
fuf#setOneTimeVariables	./vimfiles/autoload/fuf.vim	/^function fuf#setOneTimeVariables(...)$/;"	f	signature:(...)
fuf#splitPath	./vimfiles/autoload/fuf.vim	/^function fuf#splitPath(path)$/;"	f	signature:(path)
fuf#suffixNumber	./vimfiles/autoload/fuf.vim	/^function fuf#suffixNumber(str)$/;"	f	signature:(str)
fuf#tag#createHandler	./vimfiles/autoload/fuf/tag.vim	/^function fuf#tag#createHandler(base)$/;"	f	signature:(base)
fuf#tag#getEditableDataNames	./vimfiles/autoload/fuf/tag.vim	/^function fuf#tag#getEditableDataNames()$/;"	f	signature:()
fuf#tag#getSwitchOrder	./vimfiles/autoload/fuf/tag.vim	/^function fuf#tag#getSwitchOrder()$/;"	f	signature:()
fuf#tag#onInit	./vimfiles/autoload/fuf/tag.vim	/^function fuf#tag#onInit()$/;"	f	signature:()
fuf#tag#renewCache	./vimfiles/autoload/fuf/tag.vim	/^function fuf#tag#renewCache()$/;"	f	signature:()
fuf#tag#requiresOnCommandPre	./vimfiles/autoload/fuf/tag.vim	/^function fuf#tag#requiresOnCommandPre()$/;"	f	signature:()
fuf#taggedfile#createHandler	./vimfiles/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#createHandler(base)$/;"	f	signature:(base)
fuf#taggedfile#getEditableDataNames	./vimfiles/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getEditableDataNames()$/;"	f	signature:()
fuf#taggedfile#getSwitchOrder	./vimfiles/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#getSwitchOrder()$/;"	f	signature:()
fuf#taggedfile#onInit	./vimfiles/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#onInit()$/;"	f	signature:()
fuf#taggedfile#renewCache	./vimfiles/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#renewCache()$/;"	f	signature:()
fuf#taggedfile#requiresOnCommandPre	./vimfiles/autoload/fuf/taggedfile.vim	/^function fuf#taggedfile#requiresOnCommandPre()$/;"	f	signature:()
fuf#updateMruList	./vimfiles/autoload/fuf.vim	/^function fuf#updateMruList(mrulist, newItem, maxItem, exclude)$/;"	f	signature:(mrulist,newItem,maxItem,exclude)
funcname	./vimfiles/bundle/jedi-vim/test/vspec/signatures.vim	/^        let funcname = repeat('a', &columns - (30 + (&ruler ? 18 : 0)))$/;"	v
g	./vim82/macros/hanoi/hanoi.vim	/^map g IL$/;"	m
g	./vim82/macros/less.vim	/^noremap <script> g gg<SID>L$/;"	m
g	./vim82/macros/life/life.vim	/^map g IR$/;"	m
g	./vim82/macros/urm/urm.vim	/^map g 1G\/^[(as;.]$/;"	m
g	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap g i$/;"	m
g%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^nmap <silent> g% <Plug>(MatchitNormalBackward)$/;"	m
g%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^omap <silent> g% <Plug>(MatchitOperationBackward)$/;"	m
g%	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^xmap <silent> g% <Plug>(MatchitVisualBackward)$/;"	m
g:	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^      let g:[name] = extend(get(g:, name, {}), value, 'keep')$/;"	v
g:	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^      let g:[name] = get(g:, name, value)$/;"	v
g:BufExplorer_title	./vimfiles/plugin/bufexplorer.vim	/^let g:BufExplorer_title = "\\[Buf\\ List\\]"$/;"	v
g:C_UseTool_doxygen	./VIMPROJ/vimrc/_vimrc	/^let g:C_UseTool_doxygen = 'yes'$/;"	v
g:CalUtilDayOfWeek	./vimfiles/autoload/calutil.vim	/^   let g:CalUtilDayOfWeek= a:1$/;"	v
g:DrChipTopLvlMenu	./vimfiles/plugin/DrawItPlugin.vim	/^  let g:DrChipTopLvlMenu= "DrChip."$/;"	v
g:GetLatestVimScripts_allowautoinstall	./vim82/autoload/getscript.vim	/^ let g:GetLatestVimScripts_allowautoinstall= 1$/;"	v
g:GetLatestVimScripts_mv	./vim82/autoload/getscript.vim	/^   let g:GetLatestVimScripts_mv= "mv"$/;"	v
g:GetLatestVimScripts_mv	./vim82/autoload/getscript.vim	/^   let g:GetLatestVimScripts_mv= "ren"$/;"	v
g:GetLatestVimScripts_options	./vim82/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options = ""$/;"	v
g:GetLatestVimScripts_options	./vim82/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options= ""$/;"	v
g:GetLatestVimScripts_options	./vim82/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options= "-q -O"$/;"	v
g:GetLatestVimScripts_options	./vim82/autoload/getscript.vim	/^  let g:GetLatestVimScripts_options= "-s -O"$/;"	v
g:GetLatestVimScripts_scriptaddr	./vim82/autoload/getscript.vim	/^ let g:GetLatestVimScripts_scriptaddr = 'http:\/\/vim.sourceforge.net\/script.php?script_id='$/;"	v
g:GetLatestVimScripts_wget	./vim82/autoload/getscript.vim	/^  let g:GetLatestVimScripts_wget    = 'echo "GetLatestVimScripts needs wget or curl"'$/;"	v
g:GetLatestVimScripts_wget	./vim82/autoload/getscript.vim	/^  let g:GetLatestVimScripts_wget= "curl"$/;"	v
g:GetLatestVimScripts_wget	./vim82/autoload/getscript.vim	/^  let g:GetLatestVimScripts_wget= "wget"$/;"	v
g:MARK_ENABLED	./vimfiles/autoload/mark.vim	/^			let g:MARK_ENABLED = s:enabled$/;"	v
g:MARK_ENABLED	./vimfiles/autoload/mark.vim	/^	let g:MARK_ENABLED = s:enabled$/;"	v
g:MARK_MARKS	./vimfiles/autoload/mark.vim	/^	let g:MARK_MARKS = string(l:savedMarks)$/;"	v
g:NERDTree	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeBookmarks = []$/;"	v
g:NERDTreeCreator	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	./vimfiles/bundle/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeInvalidBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^        let g:NERDTreeInvalidBookmarks = []$/;"	v
g:NERDTreeKeyMap	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	./vimfiles/bundle/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeShowHidden	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeShowHidden = 1$/;"	v
g:NERDTreeShowHidden	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^        let g:NERDTreeShowHidden = showhidden$/;"	v
g:NERDTreeShowLineNumbers	./VIMPROJ/vimrc/_vimrc	/^let g:NERDTreeShowLineNumbers=0				" show line number$/;"	v
g:NERDTreeSortOrder	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeWinPos	./VIMPROJ/vimrc/_vimrc	/^let g:NERDTreeWinPos="right"					" put NERDTree at right$/;"	v
g:NERDTreeWinSize	./VIMPROJ/vimrc/_vimrc	/^let g:NERDTreeWinSize=45						" set size$/;"	v
g:NetrwMenuPriority	./vim82/autoload/netrw.vim	/^   let g:NetrwMenuPriority= 80$/;"	v
g:OmniCpp_DefaultNamespaces	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]$/;"	v
g:OmniCpp_DefaultNamespaces	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]$/;"	v
g:OmniCpp_DefaultNamespaces	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]$/;"	v
g:OmniCpp_DefaultNamespaces	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_DefaultNamespaces = []$/;"	v
g:OmniCpp_DisplayMode	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_DisplayMode = 0$/;"	v
g:OmniCpp_GlobalScopeSearch	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_GlobalScopeSearch = 1 "enabled Global scope search toggle$/;"	v
g:OmniCpp_GlobalScopeSearch	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_GlobalScopeSearch = 1 "enabled Global scope search toggle$/;"	v
g:OmniCpp_GlobalScopeSearch	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_GlobalScopeSearch = 1 "enabled Global scope search toggle$/;"	v
g:OmniCpp_GlobalScopeSearch	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_GlobalScopeSearch = 1$/;"	v
g:OmniCpp_LocalSearchDecl	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_LocalSearchDecl= 0$/;"	v
g:OmniCpp_MayCompleteArrow	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_MayCompleteArrow = 0 " autocomplete after ->$/;"	v
g:OmniCpp_MayCompleteArrow	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_MayCompleteArrow = 0 " autocomplete after ->$/;"	v
g:OmniCpp_MayCompleteArrow	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_MayCompleteArrow = 0 " autocomplete after ->$/;"	v
g:OmniCpp_MayCompleteArrow	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_MayCompleteArrow = 1$/;"	v
g:OmniCpp_MayCompleteDot	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_MayCompleteDot = 0 " autocomplete after .$/;"	v
g:OmniCpp_MayCompleteDot	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_MayCompleteDot = 0 " autocomplete after .$/;"	v
g:OmniCpp_MayCompleteDot	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_MayCompleteDot = 0 " autocomplete after .$/;"	v
g:OmniCpp_MayCompleteDot	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_MayCompleteDot = 1$/;"	v
g:OmniCpp_MayCompleteScope	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_MayCompleteScope = 1 " autocomplete after ::$/;"	v
g:OmniCpp_MayCompleteScope	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_MayCompleteScope = 1 " autocomplete after ::$/;"	v
g:OmniCpp_MayCompleteScope	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_MayCompleteScope = 1 " autocomplete after ::$/;"	v
g:OmniCpp_MayCompleteScope	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_MayCompleteScope = 0$/;"	v
g:OmniCpp_NamespaceSearch	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_NamespaceSearch = 1 " 1 = search namespaces in the current buffer$/;"	v
g:OmniCpp_NamespaceSearch	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_NamespaceSearch = 1 " 1 = search namespaces in the current buffer$/;"	v
g:OmniCpp_NamespaceSearch	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_NamespaceSearch = 1 " 1 = search namespaces in the current buffer$/;"	v
g:OmniCpp_NamespaceSearch	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_NamespaceSearch = 1$/;"	v
g:OmniCpp_SelectFirstItem	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_SelectFirstItem= 0$/;"	v
g:OmniCpp_ShowAccess	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_ShowAccess = 1  "enable to show the access information ('+', '#', '-') in the /;"	v
g:OmniCpp_ShowAccess	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_ShowAccess = 1  "enable to show the access information ('+', '#', '-') in the /;"	v
g:OmniCpp_ShowAccess	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_ShowAccess = 1  "enable to show the access information ('+', '#', '-') in the /;"	v
g:OmniCpp_ShowAccess	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_ShowAccess = 1$/;"	v
g:OmniCpp_ShowPrototypeInAbbr	./VIMPROJ/Tool/InitCPP.vim	/^    let g:OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters$/;"	v
g:OmniCpp_ShowPrototypeInAbbr	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters$/;"	v
g:OmniCpp_ShowPrototypeInAbbr	./VIMPROJ/Tool/InitVim.vim	/^    let g:OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters$/;"	v
g:OmniCpp_ShowPrototypeInAbbr	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_ShowPrototypeInAbbr = 0$/;"	v
g:OmniCpp_ShowScopeInAbbr	./vimfiles/autoload/omni/cpp/settings.vim	/^        let g:OmniCpp_ShowScopeInAbbr = 0$/;"	v
g:PymodeLocList	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^let g:PymodeLocList= {}$/;"	v
g:PymodeSigns	./vimfiles/bundle/python-mode/autoload/pymode/tools/signs.vim	/^let g:PymodeSigns = {}$/;"	v
g:ST_WIN_CMD	./vimfiles/autoload/genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
g:SuperTabClosePreviewOnPopupClose	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompletionContexts	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrMapping	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	./vimfiles/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['\\s']$/;"	v
g:SuperTabNoCompleteAfter	./vimfiles/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	./vimfiles/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	./vimfiles/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	./vimfiles/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:UltiSnipsEditSplit	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	./vimfiles/bundle/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	./vimfiles/bundle/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	./vimfiles/bundle/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-z>"$/;"	v
g:UltiSnipsJumpForwardTrigger	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	./vimfiles/bundle/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="<c-b>"$/;"	v
g:UltiSnipsListSnippets	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsMappingsToIgnore	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	./vimfiles/bundle/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:UltiSnipsUsePythonVersion	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:UltiSnipsUsePythonVersion = 2$/;"	v
g:UltiSnipsUsePythonVersion	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:UltiSnipsUsePythonVersion = 3$/;"	v
g:WMGraphviz_dot	./vimfiles/after/ftplugin/dot.vim	/^	let g:WMGraphviz_dot = 'dot'$/;"	v
g:WMGraphviz_dot	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^	let g:WMGraphviz_dot = 'dot'$/;"	v
g:WMGraphviz_dot2tex	./vimfiles/after/ftplugin/dot.vim	/^	let g:WMGraphviz_dot2tex = 'dot2tex'$/;"	v
g:WMGraphviz_dot2tex	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^	let g:WMGraphviz_dot2tex = 'dot2tex'$/;"	v
g:WMGraphviz_dot2texoptions	./vimfiles/after/ftplugin/dot.vim	/^	let g:WMGraphviz_dot2texoptions = '-tmath'$/;"	v
g:WMGraphviz_dot2texoptions	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^	let g:WMGraphviz_dot2texoptions = '-tmath'$/;"	v
g:WMGraphviz_output	./vimfiles/after/ftplugin/dot.vim	/^	let g:WMGraphviz_output = 'pdf'$/;"	v
g:WMGraphviz_output	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^	let g:WMGraphviz_output = 'pdf'$/;"	v
g:WMGraphviz_shelloptions	./vimfiles/after/ftplugin/dot.vim	/^	let g:WMGraphviz_shelloptions = ''$/;"	v
g:WMGraphviz_shelloptions	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^	let g:WMGraphviz_shelloptions = ''$/;"	v
g:WMGraphviz_viewer	./vimfiles/after/ftplugin/dot.vim	/^				let g:WMGraphviz_viewer = 'acroread'$/;"	v
g:WMGraphviz_viewer	./vimfiles/after/ftplugin/dot.vim	/^				let g:WMGraphviz_viewer = 'gv'$/;"	v
g:WMGraphviz_viewer	./vimfiles/after/ftplugin/dot.vim	/^			let g:WMGraphviz_viewer = 'xdg-open'$/;"	v
g:WMGraphviz_viewer	./vimfiles/after/ftplugin/dot.vim	/^		let g:WMGraphviz_viewer = 'open'$/;"	v
g:WMGraphviz_viewer	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^				let g:WMGraphviz_viewer = 'acroread'$/;"	v
g:WMGraphviz_viewer	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^				let g:WMGraphviz_viewer = 'gv'$/;"	v
g:WMGraphviz_viewer	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^			let g:WMGraphviz_viewer = 'xdg-open'$/;"	v
g:WMGraphviz_viewer	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^		let g:WMGraphviz_viewer = 'open'$/;"	v
g:YANKRING	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:YANKRING = []$/;"	v
g:YANKRING	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:YANKRING = g:tmp$/;"	v
g:_jedi_init_error	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^    let g:_jedi_init_error = 0$/;"	v
g:_uspy	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":py "$/;"	v
g:_uspy	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":python "$/;"	v
g:_uspy	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":python3 "$/;"	v
g:_uspy	./vimfiles/bundle/ultisnips/plugin/UltiSnips.vim	/^   let g:_uspy=":py3 "$/;"	v
g:ada#Comment	./vim82/autoload/ada.vim	/^let g:ada#Comment	   = "\\\\v^(\\"[^\\"]*\\"|'.'|[^\\"']){-}\\\\zs\\\\s*--.*"$/;"	v
g:ada#Ctags_Kinds	./vim82/autoload/ada.vim	/^let g:ada#Ctags_Kinds = {$/;"	v
g:ada#DotWordRegex	./vim82/autoload/ada.vim	/^let g:ada#DotWordRegex	   = '\\a\\w*\\(\\_s*\\.\\_s*\\a\\w*\\)*'$/;"	v
g:ada#Keywords	./vim82/autoload/ada.vim	/^	let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	./vim82/autoload/ada.vim	/^       let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	./vim82/autoload/ada.vim	/^    let g:ada#Keywords += [{$/;"	v
g:ada#Keywords	./vim82/autoload/ada.vim	/^let g:ada#Keywords	   = []$/;"	v
g:ada#WordRegex	./vim82/autoload/ada.vim	/^let g:ada#WordRegex	   = '\\a\\w*'$/;"	v
g:ada_	./vim82/autoload/ada.vim	/^      let g:ada_{a:option}=1$/;"	v
g:ada_default_compiler	./vim82/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'decada'$/;"	v
g:ada_default_compiler	./vim82/ftplugin/ada.vim	/^      let g:ada_default_compiler = 'gnat'$/;"	v
g:aria_attributes_complete	./vimfiles/bundle/html5.vim/autoload/htmlcomplete.vim	/^        let g:aria_attributes_complete = 0$/;"	v
g:aria_attributes_complete	./vimfiles/bundle/html5.vim/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:astyle_file	./VIMPROJ/Tool/InitCPP.vim	/^    let g:astyle_file=expand("%")$/;"	v
g:astyle_file	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:astyle_file=expand("%")$/;"	v
g:beginword	./vim82/indent/cobol.vim	/^            let g:beginword = beginword$/;"	v
g:bmenu_max_pathlen	./vim82/menu.vim	/^  let g:bmenu_max_pathlen = 35$/;"	v
g:bmenu_priority	./vim82/menu.vim	/^    let g:bmenu_priority = a:1$/;"	v
g:bufExplorerDetailedHelp	./vimfiles/plugin/bufexplorer.vim	/^  let g:bufExplorerDetailedHelp = !g:bufExplorerDetailedHelp$/;"	v
g:bufExplorerFindActive	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerFindActive = !g:bufExplorerFindActive$/;"	v
g:bufExplorerOnlyOneTab	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerOnlyOneTab = !g:bufExplorerOnlyOneTab$/;"	v
g:bufExplorerReverseSort	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerReverseSort = !g:bufExplorerReverseSort$/;"	v
g:bufExplorerShowRelativePath	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerShowRelativePath = !g:bufExplorerShowRelativePath$/;"	v
g:bufExplorerShowTabBuffer	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerShowTabBuffer = !g:bufExplorerShowTabBuffer$/;"	v
g:bufExplorerShowUnlisted	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerShowUnlisted = !g:bufExplorerShowUnlisted$/;"	v
g:bufExplorerSortBy	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerSortBy = get(s:sort_by, (index(s:sort_by, g:bufExplorerSortBy) + len(s:sort/;"	v
g:bufExplorerSortBy	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerSortBy = get(s:sort_by, index(s:sort_by, g:bufExplorerSortBy) + 1, s:sort_b/;"	v
g:bufExplorerSplitOutPathName	./vimfiles/plugin/bufexplorer.vim	/^    let g:bufExplorerSplitOutPathName = !g:bufExplorerSplitOutPathName$/;"	v
g:bufexplorer_version	./vimfiles/plugin/bufexplorer.vim	/^let g:bufexplorer_version = "7.2.8"$/;"	v
g:changelog_date_end_entry_search	./vim82/ftplugin/changelog.vim	/^    let g:changelog_date_end_entry_search = '^\\s*$'$/;"	v
g:changelog_date_entry_search	./vim82/ftplugin/changelog.vim	/^    let g:changelog_date_entry_search = '^\\s*%d\\_s*%u'$/;"	v
g:changelog_dateformat	./vim82/ftplugin/changelog.vim	/^      let g:changelog_dateformat = "%Y-%m-%d"$/;"	v
g:changelog_dateformat	./vim82/ftplugin/changelog.vim	/^      let g:changelog_dateformat = g:changelog_timeformat$/;"	v
g:changelog_new_date_format	./vim82/ftplugin/changelog.vim	/^    let g:changelog_new_date_format = "%d  %u\\n\\n\\t* %p%c\\n\\n"$/;"	v
g:changelog_new_entry_format	./vim82/ftplugin/changelog.vim	/^    let g:changelog_new_entry_format = "\\t* %p%c"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitCPP.vim	/^    let g:chiylown_func_dict["ASTYLE"]["cpp"]="ASTYLE_cpp"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitCPP.vim	/^    let g:chiylown_func_dict["CSTAG"]["cpp"]="CSTAG_cpp"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitCPP.vim	/^    let g:chiylown_func_dict["UPFILE"]["cpp"]="UPFILE_cpp"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:chiylown_func_dict["ASTYLE"]["lgamesvr"]="ASTYLE_lgamesvr"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:chiylown_func_dict["CSTAG"]["lgamesvr"]="CSTAG_lgamesvr"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitLGameSvr.vim	/^    let g:chiylown_func_dict["UPFILE"]["lgamesvr"]="UPFILE_lgamesvr"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitLua.vim	/^    let g:chiylown_func_dict["UPFILE"]["lua"]="UPFILE_lua"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitPHP.vim	/^    let g:chiylown_func_dict["CSTAG"]["php"]="CSTAG_php"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitPHP.vim	/^    let g:chiylown_func_dict["UPFILE"]["php"]="UPFILE_php"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitPkm.vim	/^    let g:chiylown_func_dict["UPFILE"]["pkm"]="UPFILE_pkm"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitPython.vim	/^    let g:chiylown_func_dict["ASTYLE"]["python"]="ASTYLE_python"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitPython.vim	/^    let g:chiylown_func_dict["CSTAG"]["python"]="CSTAG_python"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitPython.vim	/^    let g:chiylown_func_dict["UPFILE"]["python"]="UPFILE_python"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitVim.vim	/^    let g:chiylown_func_dict["ASTYLE"]["vim"]="ASTYLE_vim"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitVim.vim	/^    let g:chiylown_func_dict["CSTAG"]["vim"]="CSTAG_vim"$/;"	v
g:chiylown_func_dict	./VIMPROJ/Tool/InitVim.vim	/^    let g:chiylown_func_dict["UPFILE"]["vim"]="UPFILE_vim"$/;"	v
g:chiylown_func_dict	./VIMPROJ/vimrc/_vimrc	/^let g:chiylown_func_dict={}$/;"	v
g:chiylown_func_dict	./VIMPROJ/vimrc/_vimrc	/^let g:chiylown_func_dict["ASTYLE"]={"default":"ASTYLE_default"}$/;"	v
g:chiylown_func_dict	./VIMPROJ/vimrc/_vimrc	/^let g:chiylown_func_dict["CSTAG"]={"default":"CSTAG_default"}$/;"	v
g:chiylown_func_dict	./VIMPROJ/vimrc/_vimrc	/^let g:chiylown_func_dict["UPFILE"]={"default":"UPFILE_default"}$/;"	v
g:clojure_align_multiline_strings	./vim82/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	./vim82/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	./vim82/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	./vim82/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	./vim82/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	./vim82/indent/clojure.vim	/^		let g:clojure_maxlines = 100$/;"	v
g:clojure_special_indent_words	./vim82/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protoco/;"	v
g:cobol_inline_comment	./vim82/syntax/cobol.vim	/^   let g:cobol_inline_comment=0$/;"	v
g:colors_name	./vim82/colors/blue.vim	/^let g:colors_name = "blue"$/;"	v
g:colors_name	./vim82/colors/delek.vim	/^let g:colors_name = "delek"$/;"	v
g:colors_name	./vim82/colors/desert.vim	/^let g:colors_name="desert"$/;"	v
g:colors_name	./vim82/colors/elflord.vim	/^let g:colors_name = "elflord"$/;"	v
g:colors_name	./vim82/colors/koehler.vim	/^let g:colors_name = "koehler"$/;"	v
g:colors_name	./vim82/colors/murphy.vim	/^let g:colors_name = "murphy"$/;"	v
g:colors_name	./vim82/colors/pablo.vim	/^let g:colors_name = "pablo"$/;"	v
g:colors_name	./vim82/colors/ron.vim	/^let g:colors_name = "ron"$/;"	v
g:colors_name	./vim82/colors/torte.vim	/^let g:colors_name = "torte"$/;"	v
g:colors_name	./vim82/colors/zellner.vim	/^let g:colors_name = "zellner"$/;"	v
g:commented_fixture_class_content	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^    let g:commented_fixture_class_content = readfile(expand('%:p:h').'\/'.'fixtures\/CompleteUse/;"	v
g:comp	./vimfiles/bundle/jedi-vim/test/vspec/pyimport.vim	/^        let g:comp = jedi#py_import_completions('sre_', 0, 0)$/;"	v
g:context_jobs	./vim82/autoload/context.vim	/^    let g:context_jobs = l:tmp$/;"	v
g:context_jobs	./vim82/autoload/context.vim	/^  let g:context_jobs = []$/;"	v
g:context_metapost	./vim82/syntax/context.vim	/^  let g:context_metapost = (index(s:context_include, 'mp') != -1)$/;"	v
g:ctags_command	./vim82/menu.vim	/^    let g:ctags_command = "ctags -R ."$/;"	v
g:ctags_command	./vim82/menu.vim	/^    let g:ctags_command = "mc vim:ctags *.*"$/;"	v
g:ctrlp_alldirs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^			let g:ctrlp_alldirs = ctrlp#utils#readfile(cafile)$/;"	v
g:ctrlp_allfiles	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^			let g:ctrlp_allfiles = ctrlp#dirnfile(g:ctrlp_allfiles)[1]$/;"	v
g:ctrlp_allfiles	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^			let g:ctrlp_allfiles = ctrlp#utils#readfile(cafile)$/;"	v
g:ctrlp_allfiles	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = []$/;"	v
g:ctrlp_allfiles	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = split(system(s:safe_printf(lscmd, path)), "\\n")$/;"	v
g:ctrlp_allfiles	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_allfiles = systemlist(s:safe_printf(lscmd, path))$/;"	v
g:ctrlp_allmixes	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_allmixes = { 'filtime': getftime(ctrlp#utils#cachefile()),$/;"	v
g:ctrlp_alltags	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^	let g:ctrlp_alltags = []$/;"	v
g:ctrlp_autoignore_debug	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_debug = 0$/;"	v
g:ctrlp_autoignore_loaded	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_autoignore_loaded = 1$/;"	v
g:ctrlp_autoignore_trace	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_autoignore_trace = 0$/;"	v
g:ctrlp_builtins	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let g:ctrlp_builtins = len(g:ctrlp_types)-1$/;"	v
g:ctrlp_by_filename	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_by_filename = 1$/;"	v
g:ctrlp_clear_cache_on_exit	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_clear_cache_on_exit = 0$/;"	v
g:ctrlp_cmd	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_cmd = 'CtrlPMyMenu'$/;"	v
g:ctrlp_custom_ignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_custom_ignore = {}$/;"	v
g:ctrlp_custom_ignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func'] = 'ctrlp#autoignore#ignore'$/;"	v
g:ctrlp_custom_ignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-close'] = 'ctrlp#autoignore#ignore_close'$/;"	v
g:ctrlp_custom_ignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let g:ctrlp_custom_ignore['func-init'] = 'ctrlp#autoignore#ignore_init'$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^	let g:ctrlp_ext_vars = [s:cmdline_var]$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^	let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:cmdline_var)$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^  let g:ctrlp_ext_vars = [s:ctrlp_var]$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:ctrlp_var)$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^  let g:ctrlp_ext_vars = [s:yankring_var]$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:yankring_var)$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^  let g:ctrlp_ext_vars = [s:ctrlp_var]$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:ctrlp_var)$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^  let g:ctrlp_ext_vars = [s:ctrlp_var]$/;"	v
g:ctrlp_ext_vars	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^  let g:ctrlp_ext_vars = add(g:ctrlp_ext_vars, s:ctrlp_var)$/;"	v
g:ctrlp_extensions	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_extensions = ['mycmd', 'myp4', 'locur', 'lerror', 'lasync', 'lextdbtype',$/;"	v
g:ctrlp_lazy_update	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_lazy_update = 350$/;"	v
g:ctrlp_lines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_lines = ctrlp#mrufiles#refresh()$/;"	v
g:ctrlp_lines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = []$/;"	v
g:ctrlp_lines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = call(a:rfunc, [tbrem])$/;"	v
g:ctrlp_lines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_lines = eval(types[s:itemtype])$/;"	v
g:ctrlp_lines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^		let g:ctrlp_lines = g:ctrlp_allmixes['data']$/;"	v
g:ctrlp_lines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_lines = copy(ctrlp#files())$/;"	v
g:ctrlp_lines	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_lines = len(mrufs) > len(g:ctrlp_lines)$/;"	v
g:ctrlp_map	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_map = '<c-p>'$/;"	v
g:ctrlp_match_func	./VIMPROJ/vimrc/_vimrc	/^    let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }$/;"	v
g:ctrlp_match_window_reversed	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:ctrlp_match_window_reversed = 1$/;"	v
g:ctrlp_match_window_reversed	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:ctrlp_match_window_reversed = g:reversed$/;"	v
g:ctrlp_max_files	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_max_files = 0$/;"	v
g:ctrlp_mycmd_cmds	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_mycmd_cmds=[{'name':'nt','cmd':'NERDTree','desc':'NERDTree'}]$/;"	v
g:ctrlp_mymenu_ext_groups	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_mymenu_ext_groups={$/;"	v
g:ctrlp_myp4_cmds	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^let g:ctrlp_myp4_cmds=[]$/;"	v
g:ctrlp_newcache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^		let g:ctrlp_newcache = 0$/;"	v
g:ctrlp_newcache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^		let g:ctrlp_newcache = 1$/;"	v
g:ctrlp_newdir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^		let g:ctrlp_newdir = 0$/;"	v
g:ctrlp_newmix	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^	let g:ctrlp_newmix = 0$/;"	v
g:ctrlp_root_markers	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^	let g:ctrlp_root_markers = []$/;"	v
g:ctrlp_switch_buffer	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_switch_buffer = 'Et'$/;"	v
g:ctrlp_types	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^	let g:ctrlp_types = s:types$/;"	v
g:ctrlp_user_command	./VIMPROJ/vimrc/_vimrc	/^    let g:ctrlp_user_command = 'ag %s -i --nocolor --nogroup --ignore ''.git'' --ignore ''.DS_St/;"	v
g:ctrlp_working_path_mode	./VIMPROJ/vimrc/_vimrc	/^let g:ctrlp_working_path_mode = 'a'$/;"	v
g:ctrlp_yankring_limit	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^let g:ctrlp_yankring_limit = get(g:, 'ctrlp_yankring_limit', 100)$/;"	v
g:ctrlp_yankring_minimum_chars	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^let g:ctrlp_yankring_minimum_chars = get(g:, 'ctrlp_yankring_minimum_chars', 2)$/;"	v
g:cucumber_languages	./vim82/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:current_ulti_dict	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^    let g:current_ulti_dict = {}$/;"	v
g:current_ulti_dict_info	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^      let g:current_ulti_dict_info = {}$/;"	v
g:debchangelog_complete_mode	./vim82/ftplugin/debchangelog.vim	/^          let g:debchangelog_complete_mode = 'lp'$/;"	v
g:debchangelog_complete_mode	./vim82/ftplugin/debchangelog.vim	/^    let g:debchangelog_complete_mode = 'debbugs'$/;"	v
g:debchangelog_listbugs_severities	./vim82/ftplugin/debchangelog.vim	/^  let g:debchangelog_listbugs_severities = 'critical,grave,serious,important,normal,minor,wishli/;"	v
g:decada	./vim82/compiler/decada.vim	/^   let g:decada = decada#New ()$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_base_path = ''$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_base_path = expand(a:path)$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^    let g:dein#_base_path = g:dein#_base_path[: -2]$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^  let g:dein#_base_path = dein#util#_expand(a:path)$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_base_path = ''$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_base_path = expand(a:path)$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^    let g:dein#_base_path = g:dein#_base_path[: -2]$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_base_path = dein#util#_expand(a:path)$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_base_path = ''$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_base_path = expand(a:path)$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^    let g:dein#_base_path = g:dein#_base_path[: -2]$/;"	v
g:dein#_base_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^  let g:dein#_base_path = dein#util#_expand(a:path)$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_block_level = 0$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^  let g:dein#_block_level += 1$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^  let g:dein#_block_level -= 1$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_block_level = 0$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_block_level += 1$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_block_level -= 1$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_block_level = 0$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^  let g:dein#_block_level += 1$/;"	v
g:dein#_block_level	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^  let g:dein#_block_level -= 1$/;"	v
g:dein#_cache_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_cache_path = ''$/;"	v
g:dein#_cache_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_cache_path = get(g:,$/;"	v
g:dein#_cache_version	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_cache_version = 100$/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_event_plugins = {}$/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^        let g:dein#_event_plugins[event] = [a:plugin.name]$/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^        let g:dein#_event_plugins[event] = dein#util#_uniq($/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_event_plugins = {}$/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^        let g:dein#_event_plugins[event] = [a:plugin.name]$/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^        let g:dein#_event_plugins[event] = dein#util#_uniq($/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_event_plugins = {}$/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^        let g:dein#_event_plugins[event] = [a:plugin.name]$/;"	v
g:dein#_event_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^        let g:dein#_event_plugins[event] = dein#util#_uniq($/;"	v
g:dein#_ftplugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_ftplugin = {}$/;"	v
g:dein#_ftplugin	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#_ftplugin = {$/;"	v
g:dein#_ftplugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_ftplugin = {}$/;"	v
g:dein#_ftplugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#_ftplugin = {$/;"	v
g:dein#_ftplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_ftplugin = {}$/;"	v
g:dein#_ftplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#_ftplugin = {$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_hook_add = ''$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^    let g:dein#_hook_add .= "\\n" . substitute($/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^  let g:dein#_hook_add = ''$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#_hook_add = 'let g:foo = 0'$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_hook_add = ''$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^    let g:dein#_hook_add .= "\\n" . substitute($/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_hook_add = ''$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#_hook_add = 'let g:foo = 0'$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_hook_add = ''$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^    let g:dein#_hook_add .= "\\n" . substitute($/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^  let g:dein#_hook_add = ''$/;"	v
g:dein#_hook_add	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#_hook_add = 'let g:foo = 0'$/;"	v
g:dein#_init_runtimepath	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_init_runtimepath = &runtimepath$/;"	v
g:dein#_is_sudo	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_is_sudo = $SUDO_USER !=# '' && $USER !=# $SUDO_USER$/;"	v
g:dein#_is_sudo	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^  let g:dein#_is_sudo = 1$/;"	v
g:dein#_is_sudo	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^  let g:dein#_is_sudo = sudo$/;"	v
g:dein#_off1	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_off1 = ''$/;"	v
g:dein#_off1	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^    let g:dein#_off1 = 'filetype off'$/;"	v
g:dein#_off1	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_off1 = ''$/;"	v
g:dein#_off1	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^    let g:dein#_off1 = 'filetype off'$/;"	v
g:dein#_off1	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_off1 = ''$/;"	v
g:dein#_off1	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^    let g:dein#_off1 = 'filetype off'$/;"	v
g:dein#_off2	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_off2 = ''$/;"	v
g:dein#_off2	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^    let g:dein#_off2 = 'filetype plugin indent off'$/;"	v
g:dein#_off2	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_off2 = ''$/;"	v
g:dein#_off2	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^    let g:dein#_off2 = 'filetype plugin indent off'$/;"	v
g:dein#_off2	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_off2 = ''$/;"	v
g:dein#_off2	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^    let g:dein#_off2 = 'filetype plugin indent off'$/;"	v
g:dein#_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_plugins = {}$/;"	v
g:dein#_plugins	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^  let g:dein#_plugins[plugin.name] = plugin$/;"	v
g:dein#_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_plugins = {}$/;"	v
g:dein#_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^  let g:dein#_plugins[plugin.name] = plugin$/;"	v
g:dein#_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_plugins = {}$/;"	v
g:dein#_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^  let g:dein#_plugins[plugin.name] = plugin$/;"	v
g:dein#_progname	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_progname = fnamemodify(v:progname, ':r')$/;"	v
g:dein#_runtime_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_runtime_path = ''$/;"	v
g:dein#_runtime_path	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^  let g:dein#_runtime_path = g:dein#_base_path . '\/.dein'$/;"	v
g:dein#_runtime_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_runtime_path = ''$/;"	v
g:dein#_runtime_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_runtime_path = dein#util#_get_cache_path() . '\/.dein'$/;"	v
g:dein#_runtime_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_runtime_path = ''$/;"	v
g:dein#_runtime_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^  let g:dein#_runtime_path = g:dein#_base_path . '\/.dein'$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#_vimrcs = []$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^  let g:dein#_vimrcs = dein#util#_convert2list(a:vimrcs)$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^  let g:dein#_vimrcs = dein#util#_uniq(g:dein#_vimrcs)$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_vimrcs = []$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#_vimrcs = a:vimrcs$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_vimrcs = dein#util#_get_vimrcs(a:vimrcs)$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^  let g:dein#_vimrcs = dein#util#_uniq(g:dein#_vimrcs)$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#_vimrcs = []$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^  let g:dein#_vimrcs = dein#util#_convert2list(a:vimrcs)$/;"	v
g:dein#_vimrcs	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^  let g:dein#_vimrcs = dein#util#_uniq(g:dein#_vimrcs)$/;"	v
g:dein#download_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^    let g:dein#download_command =$/;"	v
g:dein#download_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^    let g:dein#download_command =$/;"	v
g:dein#download_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^    let g:dein#download_command =$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^let g:dein#enable_name_conversion =$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^  let g:dein#enable_name_conversion = 0$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^  let g:dein#enable_name_conversion = 1$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^let g:dein#enable_name_conversion =$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^  let g:dein#enable_name_conversion = 0$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^  let g:dein#enable_name_conversion = 1$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^let g:dein#enable_name_conversion =$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^  let g:dein#enable_name_conversion = 0$/;"	v
g:dein#enable_name_conversion	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^  let g:dein#enable_name_conversion = 1$/;"	v
g:dein#enable_notification	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#enable_notification = 0$/;"	v
g:dein#enable_notification	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#enable_notification = 1$/;"	v
g:dein#enable_notification	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#enable_notification = 0$/;"	v
g:dein#enable_notification	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#enable_notification = 1$/;"	v
g:dein#enable_notification	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#enable_notification = 0$/;"	v
g:dein#enable_notification	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#enable_notification = 1$/;"	v
g:dein#install_log_filename	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let g:dein#install_log_filename =$/;"	v
g:dein#install_log_filename	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let g:dein#install_log_filename =$/;"	v
g:dein#install_log_filename	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let g:dein#install_log_filename =$/;"	v
g:dein#install_max_processes	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let g:dein#install_max_processes =$/;"	v
g:dein#install_max_processes	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let g:dein#install_max_processes =$/;"	v
g:dein#install_max_processes	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let g:dein#install_max_processes =$/;"	v
g:dein#install_message_type	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let g:dein#install_message_type =$/;"	v
g:dein#install_message_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let g:dein#install_message_type =$/;"	v
g:dein#install_message_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let g:dein#install_message_type =$/;"	v
g:dein#install_process_timeout	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let g:dein#install_process_timeout =$/;"	v
g:dein#install_process_timeout	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let g:dein#install_process_timeout =$/;"	v
g:dein#install_process_timeout	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let g:dein#install_process_timeout =$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let g:dein#install_progress_type =$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#install_progress_type = 'echo'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#install_progress_type = 'none'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#install_progress_type = 'statusline'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#install_progress_type = 'tabline'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:dein#install_progress_type = 'title'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^  let g:dein#install_progress_type = 'echo'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let g:dein#install_progress_type =$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#install_progress_type = 'echo'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#install_progress_type = 'none'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#install_progress_type = 'statusline'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#install_progress_type = 'tabline'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:dein#install_progress_type = 'title'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^  let g:dein#install_progress_type = 'echo'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let g:dein#install_progress_type =$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#install_progress_type = 'echo'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#install_progress_type = 'none'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#install_progress_type = 'statusline'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#install_progress_type = 'tabline'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:dein#install_progress_type = 'title'$/;"	v
g:dein#install_progress_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^  let g:dein#install_progress_type = 'echo'$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#name = ''$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#name = a:name$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^  let g:dein#name = 'unite.vim'$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#name = ''$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#name = a:name$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^  let g:dein#name = 'denite.nvim'$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#name = ''$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#name = a:name$/;"	v
g:dein#name	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^  let g:dein#name = 'unite.vim'$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#plugin = g:dein#_plugins[a:name]$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein.vim	/^  let g:dein#plugin = {}$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^    let g:dein#plugin = a:plugin$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#plugin = g:dein#_plugins[a:name]$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein.vim	/^  let g:dein#plugin = {}$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^    let g:dein#plugin = a:plugin$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#plugin = g:dein#_plugins[a:name]$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein.vim	/^  let g:dein#plugin = {}$/;"	v
g:dein#plugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^    let g:dein#plugin = a:plugin$/;"	v
g:dein#types#git#default_protocol	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^  let g:dein#types#git#default_protocol = 'https'$/;"	v
g:dein#types#git#default_protocol	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^  let g:dein#types#git#default_protocol = 'ssh'$/;"	v
g:dein#types#git#default_protocol	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^  let g:dein#types#git#default_protocol = 'https'$/;"	v
g:dein#types#git#default_protocol	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^  let g:dein#types#git#default_protocol = 'ssh'$/;"	v
g:dein#types#git#default_protocol	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^  let g:dein#types#git#default_protocol = 'https'$/;"	v
g:dein#types#git#default_protocol	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^  let g:dein#types#git#default_protocol = 'ssh'$/;"	v
g:did_changelog_ftplugin	./vim82/ftplugin/debchangelog.vim	/^let g:did_changelog_ftplugin = 1$/;"	v
g:did_cobol_ftplugin_functions	./vim82/ftplugin/cobol.vim	/^let g:did_cobol_ftplugin_functions = 1$/;"	v
g:did_ft	./vimfiles/plugin/snipMate.vim	/^		let g:did_ft[ft] = 1$/;"	v
g:did_ft	./vimfiles/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:did_load_ftplugin	./VIMPROJ/3rd/dein.vim/.cache/.vimrc/.dein/ftplugin.vim	/^let g:did_load_ftplugin = 1$/;"	v
g:did_load_ftplugin	./VIMPROJ/3rd/dein.vim/.cache/_vimrc/.dein/ftplugin.vim	/^let g:did_load_ftplugin = 1$/;"	v
g:did_ocaml_switch	./vim82/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	./vim82/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:doxygen_end_punctuation	./vim82/syntax/doxygen.vim	/^      let g:doxygen_end_punctuation='[.]'$/;"	v
g:easy_align_delimiters	./VIMPROJ/vimrc/_vimrc	/^let g:easy_align_delimiters = {$/;"	v
g:easy_align_last_command	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^      let g:easy_align_last_command = s:echon('', n, regexp, ch, copts, '')$/;"	v
g:easy_align_last_command	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^    let g:easy_align_last_command = s:echon('', n, regx, d, copts, '')$/;"	v
g:easy_align_need_repeat	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^      let g:easy_align_need_repeat = 1$/;"	v
g:erlang_folding	./vim82/ftplugin/erlang.vim	/^	let g:erlang_folding = 0$/;"	v
g:erlang_indent_searchpair_timeout	./vim82/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_keywordprg	./vim82/ftplugin/erlang.vim	/^	let g:erlang_keywordprg = 'erl -man'$/;"	v
g:erlang_unexpected_token_indent	./vim82/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	./vim82/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	./vim82/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:filetype_blacklist	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^    let g:filetype_blacklist =  g:ycm_filetypes_to_completely_ignore$/;"	v
g:fixture_class_content	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^    let g:fixture_class_content = readfile(expand('%:p:h').'\/'.'fixtures\/CompleteUserClass\/us/;"	v
g:fixture_class_content	./vimfiles/bundle/phpcomplete.vim/tests/GetDocBlock_test.vim	/^    let g:fixture_class_content = readfile(expand('%:p:h').'\/'.'fixtures\/DocBlock\/foo.class.p/;"	v
g:fm	./vim82/autoload/javascriptcomplete.vim	/^	let g:fm = final_menu$/;"	v
g:foo	./vim82/indent/cobol.vim	/^        let g:foo = s:stripped(lastclause)$/;"	v
g:format_allow_over_tw	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^  let g:format_allow_over_tw = 2$/;"	v
g:format_follow_taboo_rule	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^  let g:format_follow_taboo_rule = 1$/;"	v
g:format_indent_sensitive	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^  let g:format_indent_sensitive = 0$/;"	v
g:format_join_spaces	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^  let g:format_join_spaces = 1$/;"	v
g:format_no_begin	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let g:format_no_begin = "!  ,  .  ?  )  ]  }  -  _  ~  :  ;  .*  .*  .*  .*  .*  .*  .*  "$/;"	v
g:format_no_end	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let g:format_no_end = "(  [  {  "$/;"	v
g:ft_ignore_pat	./vim82/filetype.vim	/^  let g:ft_ignore_pat = '\\.\\(Z\\|gz\\|bz2\\|zip\\|tgz\\)$'$/;"	v
g:ftplugin_sql_objects	./vim82/ftplugin/sql.vim	/^    let g:ftplugin_sql_objects = 'function,procedure,event,' .$/;"	v
g:ftplugin_sql_omni_key	./vim82/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key = '<C-C>'$/;"	v
g:ftplugin_sql_omni_key_left	./vim82/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_left = '<Left>'$/;"	v
g:ftplugin_sql_omni_key_right	./vim82/ftplugin/sql.vim	/^    let g:ftplugin_sql_omni_key_right = '<Right>'$/;"	v
g:ftplugin_sql_statements	./vim82/ftplugin/sql.vim	/^    let g:ftplugin_sql_statements = 'create'$/;"	v
g:fullDefMatcher	./vim82/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSp/;"	v
g:getscript_cygwin	./vim82/autoload/getscript.vim	/^   let g:getscript_cygwin= 0$/;"	v
g:getscript_cygwin	./vim82/autoload/getscript.vim	/^   let g:getscript_cygwin= 1$/;"	v
g:getscript_cygwin	./vim82/autoload/getscript.vim	/^  let g:getscript_cygwin= 0$/;"	v
g:gnat	./vim82/compiler/gnat.vim	/^   let g:gnat = gnat#New ()$/;"	v
g:go_highlight_array_whitespace_error	./vim82/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_chan_whitespace_error	./vim82/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	./vim82/syntax/go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_space_tab_error	./vim82/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_trailing_whitespace_error	./vim82/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:got_char	./vim82/ftplugin/zimbu.vim	/^    let g:got_char = 1111$/;"	v
g:got_char	./vim82/ftplugin/zimbu.vim	/^    let g:got_char = 777$/;"	v
g:got_char	./vim82/ftplugin/zimbu.vim	/^    let g:got_char = 999$/;"	v
g:got_char	./vim82/ftplugin/zimbu.vim	/^    let g:got_char = v:char$/;"	v
g:haml_self_closing_tags	./vim82/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:html5_aria_attributes_complete	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:html_common_libs_file_list	./vimfiles/bundle/htmlcomplete.vim/autoload/htmlcomplete.vim	/^let g:html_common_libs_file_list={ $/;"	v
g:html_diff_win_num	./vim82/autoload/tohtml.vim	/^      let g:html_diff_win_num += 1$/;"	v
g:html_diff_win_num	./vim82/autoload/tohtml.vim	/^    let g:html_diff_win_num = 0$/;"	v
g:html_end_line	./vim82/autoload/tohtml.vim	/^      let g:html_end_line = a:line1$/;"	v
g:html_end_line	./vim82/autoload/tohtml.vim	/^      let g:html_end_line = a:line2$/;"	v
g:html_end_line	./vim82/autoload/tohtml.vim	/^      let g:html_end_line = line('$')$/;"	v
g:html_start_line	./vim82/autoload/tohtml.vim	/^      let g:html_start_line = 1$/;"	v
g:html_start_line	./vim82/autoload/tohtml.vim	/^      let g:html_start_line = a:line1$/;"	v
g:html_start_line	./vim82/autoload/tohtml.vim	/^      let g:html_start_line = a:line2$/;"	v
g:html_use_xhtml	./vim82/autoload/tohtml.vim	/^      let g:html_use_xhtml = g:use_xhtml$/;"	v
g:ia	./vim82/autoload/javascriptcomplete.vim	/^		let g:ia = i$/;"	v
g:is_kornshell	./vim82/syntax/sh.vim	/^   let g:is_kornshell= g:is_posix$/;"	v
g:iswindows	./VIMPROJ/vimrc/_vimrc	/^    let g:iswindows=0$/;"	v
g:iswindows	./VIMPROJ/vimrc/_vimrc	/^    let g:iswindows=1$/;"	v
g:j_indent_definitions	./vim82/indent/j.vim	/^  let g:j_indent_definitions = 0$/;"	v
g:jedi#auto_initialization	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#auto_initialization = 1$/;"	v
g:jedi#auto_vim_configuration	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#auto_vim_configuration = 1$/;"	v
g:jedi#completions_command	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#completions_command = "<C-K>"$/;"	v
g:jedi#completions_command	./vimfiles/bundle/jedi-vim/test/vspec/completions.vim	/^let g:jedi#completions_command = 'X'$/;"	v
g:jedi#completions_command	./vimfiles/bundle/jedi-vim/test/vspec/completions_disabled.vim	/^let g:jedi#completions_command = 'X'$/;"	v
g:jedi#completions_enabled	./vimfiles/bundle/jedi-vim/test/vspec/completions_disabled.vim	/^let g:jedi#completions_enabled = 0$/;"	v
g:jedi#environment_path	./VIMPROJ/vimrc/_vimrc	/^    let g:jedi#environment_path = "E:\\\\env-python39"$/;"	v
g:jedi#popup_on_dot	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#popup_on_dot = 1$/;"	v
g:jedi#popup_select_first	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#popup_select_first = 1$/;"	v
g:jedi#popup_select_first	./vimfiles/bundle/jedi-vim/test/vspec/completions.vim	/^        let g:jedi#popup_select_first = 0$/;"	v
g:jedi#popup_select_first	./vimfiles/bundle/jedi-vim/test/vspec/completions.vim	/^        let g:jedi#popup_select_first = 1$/;"	v
g:jedi#project_path	./vimfiles/bundle/jedi-vim/test/vspec/pyimport.vim	/^        let g:jedi#project_path = 'autoload'$/;"	v
g:jedi#show_call_signatures	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#show_call_signatures = "1"$/;"	v
g:jedi#show_call_signatures	./vimfiles/bundle/jedi-vim/test/vspec/signatures.vim	/^        let g:jedi#show_call_signatures = 0$/;"	v
g:jedi#show_call_signatures	./vimfiles/bundle/jedi-vim/test/vspec/signatures.vim	/^        let g:jedi#show_call_signatures = 1$/;"	v
g:jedi#show_call_signatures	./vimfiles/bundle/jedi-vim/test/vspec/signatures.vim	/^        let g:jedi#show_call_signatures = 2$/;"	v
g:jedi#smart_auto_mappings	./vimfiles/bundle/jedi-vim/test/vspec/completions.vim	/^        let g:jedi#smart_auto_mappings = 0$/;"	v
g:jedi#smart_auto_mappings	./vimfiles/bundle/jedi-vim/test/vspec/completions.vim	/^        let g:jedi#smart_auto_mappings = 1$/;"	v
g:jedi#squelch_py_warning	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^        let g:jedi#squelch_py_warning = saved_squelch_py_warning$/;"	v
g:jedi#squelch_py_warning	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^    let g:jedi#squelch_py_warning = 1$/;"	v
g:jedi#use_splits_not_buffers	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#use_splits_not_buffers = ""$/;"	v
g:jedi#use_splits_not_buffers	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^        let g:jedi#use_splits_not_buffers = 'left'$/;"	v
g:jedi#use_splits_not_buffers	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^        let g:jedi#use_splits_not_buffers = 1$/;"	v
g:jedi#use_tabs_not_buffers	./VIMPROJ/vimrc/_vimrc	/^let g:jedi#use_tabs_not_buffers = 0$/;"	v
g:jedi#use_tabs_not_buffers	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^        let g:jedi#use_tabs_not_buffers = 0$/;"	v
g:jedi#use_tabs_not_buffers	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^        let g:jedi#use_tabs_not_buffers = 1$/;"	v
g:jedi#use_tabs_not_buffers	./vimfiles/bundle/jedi-vim/test/vspec/pyimport.vim	/^        let g:jedi#use_tabs_not_buffers = 1$/;"	v
g:jedi#use_tag_stack	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^        let g:jedi#use_tag_stack = 0$/;"	v
g:jedi#use_tag_stack	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^        let g:jedi#use_tag_stack = 1$/;"	v
g:l0	./vimfiles/autoload/l9.vim	/^      let g:l0 += [a:lines[i : j]]$/;"	v
g:liquid_default_subtype	./vim82/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	./vim82/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	./vim82/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_2html_plugin	./vim82/plugin/tohtml.vim	/^let g:loaded_2html_plugin = 'vim8.1_v2'$/;"	v
g:loaded_DrawIt	./vimfiles/autoload/DrawIt.vim	/^let g:loaded_DrawIt= "v10"$/;"	v
g:loaded_DrawItPlugin	./vimfiles/plugin/DrawItPlugin.vim	/^let g:loaded_DrawItPlugin = "v10"$/;"	v
g:loaded_autoload_l9	./vimfiles/autoload/l9.vim	/^let g:loaded_autoload_l9 = 1$/;"	v
g:loaded_calutil	./vimfiles/autoload/calutil.vim	/^let g:loaded_calutil= "v3b"$/;"	v
g:loaded_cecutil	./vimfiles/plugin/cecutil.vim	/^let g:loaded_cecutil = "v17"$/;"	v
g:loaded_ctrlp	./vimfiles/bundle/ctrlp.vim/plugin/ctrlp.vim	/^let g:loaded_ctrlp = 1$/;"	v
g:loaded_ctrlp_bookmarkdir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let g:loaded_ctrlp_bookmarkdir = 1$/;"	v
g:loaded_ctrlp_buftag	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let g:loaded_ctrlp_buftag = 1$/;"	v
g:loaded_ctrlp_changes	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let g:loaded_ctrlp_changes = 1$/;"	v
g:loaded_ctrlp_cmdline	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^let g:loaded_ctrlp_cmdline = 1$/;"	v
g:loaded_ctrlp_ext_yankring	./vimfiles/bundle/ctrlp-extensions.vim/plugin/yankring.vim	/^let g:loaded_ctrlp_ext_yankring = 1$/;"	v
g:loaded_ctrlp_lcomm	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^let g:loaded_ctrlp_lcomm = 1$/;"	v
g:loaded_ctrlp_lcscmd	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^let g:loaded_ctrlp_lcscmd = 1$/;"	v
g:loaded_ctrlp_ldbtables	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^let g:loaded_ctrlp_ldbtables = 1$/;"	v
g:loaded_ctrlp_lerror	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^let g:loaded_ctrlp_lerror = 1$/;"	v
g:loaded_ctrlp_leventlog	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^let g:loaded_ctrlp_leventlog = 1$/;"	v
g:loaded_ctrlp_lextdbtype	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^let g:loaded_ctrlp_lextdbtype = 1$/;"	v
g:loaded_ctrlp_lidip	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^let g:loaded_ctrlp_lidip = 1$/;"	v
g:loaded_ctrlp_line	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let g:loaded_ctrlp_line = 1$/;"	v
g:loaded_ctrlp_lofiles	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^let g:loaded_ctrlp_lofiles = 1$/;"	v
g:loaded_ctrlp_lomem	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^let g:loaded_ctrlp_lomem = 1$/;"	v
g:loaded_ctrlp_loname	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^let g:loaded_ctrlp_loname = 1$/;"	v
g:loaded_ctrlp_lresource	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^let g:loaded_ctrlp_lresource = 1$/;"	v
g:loaded_ctrlp_lsscmd	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^let g:loaded_ctrlp_lsscmd = 1$/;"	v
g:loaded_ctrlp_lsvrid	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^let g:loaded_ctrlp_lsvrid = 1$/;"	v
g:loaded_ctrlp_lswitch	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^let g:loaded_ctrlp_lswitch = 1$/;"	v
g:loaded_ctrlp_menu	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^let g:loaded_ctrlp_menu = 1$/;"	v
g:loaded_ctrlp_mycmd	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^let g:loaded_ctrlp_mycmd = 1$/;"	v
g:loaded_ctrlp_mymenu	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^let g:loaded_ctrlp_mymenu = 1$/;"	v
g:loaded_ctrlp_myp4	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^let g:loaded_ctrlp_myp4 = 1$/;"	v
g:loaded_ctrlp_mysubmenu	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^let g:loaded_ctrlp_mysubmenu = 1$/;"	v
g:loaded_ctrlp_quickfix	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let g:loaded_ctrlp_quickfix = 1$/;"	v
g:loaded_ctrlp_tag	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let g:loaded_ctrlp_tag = 1$/;"	v
g:loaded_ctrlp_undo	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let g:loaded_ctrlp_undo = 1$/;"	v
g:loaded_ctrlp_yankring	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^let g:loaded_ctrlp_yankring = 1$/;"	v
g:loaded_dvorak_plugin	./vim82/pack/dist/opt/dvorak/plugin/dvorak.vim	/^let g:loaded_dvorak_plugin = 1$/;"	v
g:loaded_easy_align	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let g:loaded_easy_align = 1$/;"	v
g:loaded_easy_align_plugin	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^let g:loaded_easy_align_plugin = 1$/;"	v
g:loaded_getscript	./vim82/autoload/getscript.vim	/^let g:loaded_getscript= "v36"$/;"	v
g:loaded_getscriptPlugin	./vim82/plugin/getscriptPlugin.vim	/^let g:loaded_getscriptPlugin = "v36"$/;"	v
g:loaded_gocode	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^let g:loaded_gocode = 1$/;"	v
g:loaded_gocode	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^let g:loaded_gocode = 1$/;"	v
g:loaded_logiPat	./vim82/plugin/logiPat.vim	/^let g:loaded_logiPat = "v4"$/;"	v
g:loaded_mark	./vimfiles/plugin/mark.vim	/^let g:loaded_mark = 1$/;"	v
g:loaded_marvim	./vimfiles/bundle/marvim/plugin/marvim.vim	/^let g:loaded_marvim = 1$/;"	v
g:loaded_matchit	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^let g:loaded_matchit = 1$/;"	v
g:loaded_matchparen	./vim82/plugin/matchparen.vim	/^let g:loaded_matchparen = 1$/;"	v
g:loaded_nerdtree_autoload	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	./vimfiles/bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_netrw	./vim82/autoload/netrw.vim	/^let g:loaded_netrw = "v168"$/;"	v
g:loaded_netrwFileHandlers	./vim82/autoload/netrwFileHandlers.vim	/^let g:loaded_netrwFileHandlers= "v11b"$/;"	v
g:loaded_netrwPlugin	./vim82/plugin/netrwPlugin.vim	/^let g:loaded_netrwPlugin = "v168"$/;"	v
g:loaded_netrwSettings	./vim82/autoload/netrwSettings.vim	/^let g:loaded_netrwSettings = "v16"$/;"	v
g:loaded_openbrowser	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^let g:loaded_openbrowser = 1$/;"	v
g:loaded_pathogen	./vimfiles/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_previm	./vimfiles/bundle/previm/plugin/previm.vim	/^let g:loaded_previm = 1$/;"	v
g:loaded_sql_completion	./vim82/autoload/sqlcomplete.vim	/^let g:loaded_sql_completion = 160$/;"	v
g:loaded_syntax_completion	./vim82/autoload/syntaxcomplete.vim	/^let g:loaded_syntax_completion = 130$/;"	v
g:loaded_syntax_completion	./vimfiles/autoload/syntaxcomplete.vim	/^let g:loaded_syntax_completion = 130$/;"	v
g:loaded_tar	./vim82/autoload/tar.vim	/^let g:loaded_tar= "v32"$/;"	v
g:loaded_tarPlugin	./vim82/plugin/tarPlugin.vim	/^let g:loaded_tarPlugin = "v32"$/;"	v
g:loaded_vimball	./vim82/autoload/vimball.vim	/^let g:loaded_vimball = "v37"$/;"	v
g:loaded_vimballPlugin	./vim82/plugin/vimballPlugin.vim	/^let g:loaded_vimballPlugin = "v37"$/;"	v
g:loaded_vimcdoc	./vimfiles/bundle/vimcdoc/plugin/vimcdoc.vim	/^let g:loaded_vimcdoc = 1$/;"	v
g:loaded_visincr	./vimfiles/autoload/visincr.vim	/^let g:loaded_visincr = "v20"$/;"	v
g:loaded_visincrPlugin	./vimfiles/plugin/visincrPlugin.vim	/^let g:loaded_visincrPlugin = "v20"$/;"	v
g:loaded_xmlformat	./vim82/autoload/xmlformat.vim	/^let g:loaded_xmlformat = 1$/;"	v
g:loaded_youcompleteme	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:loaded_youcompleteme = 1$/;"	v
g:loaded_zip	./vim82/autoload/zip.vim	/^let g:loaded_zip= "v30"$/;"	v
g:loaded_zipPlugin	./vim82/plugin/zipPlugin.vim	/^let g:loaded_zipPlugin = "v30"$/;"	v
g:makeArgumentList	./vimfiles/autoload/genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	./vimfiles/autoload/genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:markdown_fenced_languages	./vim82/syntax/markdown.vim	/^  let g:markdown_fenced_languages = []$/;"	v
g:markdown_fenced_languages	./vim82/syntax/rmd.vim	/^    let g:markdown_fenced_languages = []$/;"	v
g:markdown_minlines	./vim82/syntax/markdown.vim	/^  let g:markdown_minlines = 50$/;"	v
g:marvim_find_key	./vimfiles/bundle/marvim/marvim.vim	/^    let g:marvim_find_key = '<F2>'$/;"	v
g:marvim_find_key	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let g:marvim_find_key = '<F2>'$/;"	v
g:marvim_prefix	./vimfiles/bundle/marvim/marvim.vim	/^    let g:marvim_prefix = 1 $/;"	v
g:marvim_prefix	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let g:marvim_prefix = 1$/;"	v
g:marvim_register	./vimfiles/bundle/marvim/marvim.vim	/^    let g:marvim_register = 'q'  $/;"	v
g:marvim_register	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let g:marvim_register = 'q'$/;"	v
g:marvim_store	./vimfiles/bundle/marvim/plugin/marvim.vim	/^        let g:marvim_store = g:marvim_store$/;"	v
g:marvim_store	./vimfiles/bundle/marvim/plugin/marvim.vim	/^        let g:marvim_store = g:marvim_store.s:path_seperator$/;"	v
g:marvim_store	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let g:marvim_store = s:marvim_store$/;"	v
g:marvim_store_key	./vimfiles/bundle/marvim/marvim.vim	/^    let g:marvim_store_key = '<F3>'$/;"	v
g:marvim_store_key	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let g:marvim_store_key = '<F3>'$/;"	v
g:marvim_use_find_key	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let g:marvim_use_find_key = v:true$/;"	v
g:marvim_use_store_key	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let g:marvim_use_store_key = v:true$/;"	v
g:matchparen_insert_timeout	./vim82/plugin/matchparen.vim	/^  let g:matchparen_insert_timeout = 60$/;"	v
g:matchparen_timeout	./vim82/plugin/matchparen.vim	/^  let g:matchparen_timeout = 300$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nȡ.*(&C)"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Annuller"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_eo.utf-8.vim	/^let g:menutrans_fileformat_choices = " &Unikso \\n &Dos \\n &Mak \\n &Rezigni "$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Peru "$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Annuler "$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_it_it.latin1.vim	/^let g:menutrans_fileformat_choices = " &Unix \\n &Dos \\n &Mac \\n &Annullare "$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n.*(&C)"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nキャンセル(&C)"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n.*L.*Z.*(&C)"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Anuluj"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n.*&.*"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nО&тмена"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Prekli.*i"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Prekli.*i"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Prekliči"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Otkazi"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Otka.*i"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&.*"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Откажи"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n.*&ptal"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n.*&ptal"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\nİ&ptal"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_vi_vn.vim	/^let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Hủy bỏ"$/;"	v
g:menutrans_fileformat_choices	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n取消(&C)"$/;"	v
g:menutrans_fileformat_choices	./vim82/menu.vim	/^    let g:menutrans_fileformat_choices = "&Unix\\n&Dos\\n&Mac\\n&Cancel"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_ca_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccioneu el format per escriure el fitxer."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_fileformat_dialog = "ѡ.*ļ.*ı.*ʽ:"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce .*dk.*"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_cs_cz.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce řádků"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce .*dk.*"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let g:menutrans_fileformat_dialog = "Vyberte typ konce radku"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Vælg format til skrivning af filen"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_de_de.latin1.vim	/^let g:menutrans_fileformat_dialog = "W.*hlen Sie ein Datei-Format aus"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_eo.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Elektu la formaton de la skribonta dosiero."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_es_es.latin1.vim	/^let g:menutrans_fileformat_dialog = "Seleccione el formato para escribir el archivo"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_fileformat_dialog = "Anaa tiedoston kirjoitusmuoto."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_fileformat_dialog = "Choisissez le format dans lequel .*crire le fichier."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "V.*laszd ki a f.*jl form.*tum.*t"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Válaszd ki a fájl formátumát"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_is_is.latin1.vim	/^let g:menutrans_fileformat_dialog =                 "Velji.* Skr.*arsni.*"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_it_it.latin1.vim	/^let g:menutrans_fileformat_dialog = "Scegli formato con cui scrivere il file"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_fileformat_dialog = ".*."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_fileformat_dialog = "ファイル出力の際の改行記号の形式を選んで/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_fileformat_dialog = ".*t.*@.*C.*o.*s.*L.*`.*I.*."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_fileformat_dialog = "Selecteer formaat voor het schrijven van het bestand"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_no_no.latin1.vim	/^	let g:menutrans_fileformat_dialog = "Velg filformat som filen skal lagres med"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w kt.*rym ten plik ma by.* zapisany"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w którym ten plik ma być zapisany"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_polish_poland.1250.vim	/^let g:menutrans_fileformat_dialog = "Wybierz format w kt.*rym ten plik ma by.* zapisany"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_pt_br.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_pt_pt.vim	/^let g:menutrans_fileformat_dialog = "Selecione o formato para gravar o arquivo"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_fileformat_dialog = ".* .* .*."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_fileformat_dialog = "Выберите формат файла."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sl_si.latin2.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Izberite format datoteke"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_fileformat_dialog = "Izaberite format zapisa datoteke"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_fileformat_dialog = "Izaberite format zapisa datoteke"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_fileformat_dialog = ".* .* .* .*"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Изаберите формат записа фајла"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_sv_se.latin1.vim	/^let g:menutrans_fileformat_dialog = "V.*lj filformat som filen ska sparas med"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_fileformat_dialog = "Dosya bi.*imi se.*in"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_fileformat_dialog = "Dosya bi.*imi se.*in"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_fileformat_dialog = "Dosya biçimi seçin"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_fileformat_dialog = ".* .* .*"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_fileformat_dialog = ".* .* .*"$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_vi_vn.vim	/^let g:menutrans_fileformat_dialog = "Hãy chọn định dạng tập tin."$/;"	v
g:menutrans_fileformat_dialog	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_fileformat_dialog = "选择文件的保存格式:"$/;"	v
g:menutrans_fileformat_dialog	./vim82/menu.vim	/^    let g:menutrans_fileformat_dialog = "Select format for writing the file"$/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_ca_es.latin1.vim	/^let g:menutrans_help_dialog = "Introdu.*u el terme sobre el qual necessiteu ajuda.\\n\\nUseu el p/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_help_dialog = ".*򵥴.*Ի.*:\\n\\n.*׺ i_ .*µ.*(.*:/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_help_dialog = "Zadejte hledan.* p.*kaz nebo slovo:\\n\\n\\tP.*idejte i_ pro p.*kaz/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_cs_cz.utf-8.vim	/^let g:menutrans_help_dialog = "Zadejte hledaný příkaz nebo slovo:\\n\\n\\tPřidejte i_ pro př/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let g:menutrans_help_dialog = "Zadejte hledan.* p.*kaz nebo slovo:\\n\\n\\tP.*idejte i_ pro p.*kaz/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let g:menutrans_help_dialog = "Zadejte hledany prikaz nebo slovo:\\n\\n\\tPridejte i_ pro prikaz/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_help_dialog = "Indtast en kommando eller ord for at finde hjælp om:\\n\\nStart /;"	v
g:menutrans_help_dialog	./vim82/lang/menu_de_de.latin1.vim	/^let g:menutrans_help_dialog = "Geben Sie einen Befehl oder ein Wort ein, f.*r das Sie Hilfe ben.*t/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_eo.utf-8.vim	/^let g:menutrans_help_dialog = "Tajpu komandon aŭ serĉendan vorton en la helparo.\\n\\nAldonu i/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_es_es.latin1.vim	/^let g:menutrans_help_dialog = "Introduzca un nombre de comando o palabra para obtener ayuda;\\n\\/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_help_dialog = "Anna komento tai sana, jota haetaan ohjeesta.\\n\\nAloita i_:ll.* /;"	v
g:menutrans_help_dialog	./vim82/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_help_dialog = "Entrez une commande ou un mot .* rechercher dans l'aide.\\n\\nAjou/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_is_is.latin1.vim	/^let g:menutrans_help_dialog =                       "Sl.*i.* inn skipun e.*a or.*a til a.* leita uppl/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_it_it.latin1.vim	/^let g:menutrans_help_dialog = "Batti un comando o una parola per cercare aiuto:\\n\\nPremetti i_/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_help_dialog = ".*ñ.*:\\n\\n.*/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_help_dialog = "ヘルプを検索したいコマンドもしくは単語を入力/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_help_dialog = ".*w.*v.*R.*}.*h.*P.*:\\n\\n.*}.*/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_no_no.latin1.vim	/^	let g:menutrans_help_dialog = "Skriv en kommando eller ord du vil ha hjelp om:\\n\\nLegg til i_/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_pt_br.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ /;"	v
g:menutrans_help_dialog	./vim82/lang/menu_pt_pt.vim	/^let g:menutrans_help_dialog = "Digite um comando ou palavra para obter ajuda;\\n\\nAnteponha i_ /;"	v
g:menutrans_help_dialog	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_help_dialog = ".* .* .* .* .* .*:\\n\\n.* i_ .* .*/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_help_dialog = "Введите команду или слово для поиск/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero .*elite pomo.*:\\n\\nUporabite p/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_sl_si.latin2.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero .*elite pomo.*:\\n\\nUporabite p/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_help_dialog = "Vnesite ukaz ali besedo, za katero želite pomoč:\\n\\nUporabite/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_help_dialog = "Yard.*m i.*in komut veya s.*zc.*k girin:\\n\\nEkleme Kipi komutlar.*n.*/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_help_dialog = "Yard.*m i.*in komut veya s.*zc.*k girin:\\n\\nEkleme Kipi komutlar.*n.*/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_help_dialog = "Yardım için komut veya sözcük girin:\\n\\nEkleme Kipi komutla/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_vi_vn.vim	/^let g:menutrans_help_dialog = "Hãy nhập câu lệnh hoặc từ khóa tìm kiếm:\\n\\nThêm/;"	v
g:menutrans_help_dialog	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_help_dialog = "输入命令或单词以获得帮助:\\n\\n前缀 i_ 表示输入/;"	v
g:menutrans_help_dialog	./vim82/menu.vim	/^    let g:menutrans_help_dialog = "Enter a command or word to find help on:\\n\\nPrepend i_ for /;"	v
g:menutrans_no_file	./vim82/lang/menu_ca_es.latin1.vim	/^let g:menutrans_no_file = "[Cap fitxer]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_no_file = "[.*ļ.*]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_no_file = "[.*dn.* soubor]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_cs_cz.utf-8.vim	/^let g:menutrans_no_file = "[Žádný soubor]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let g:menutrans_no_file = "[.*dn.* soubor]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let g:menutrans_no_file = "[Zadny soubor]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_no_file = "[Ingen fil]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_de_de.latin1.vim	/^let g:menutrans_no_file = "[Keine Datei]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_eo.utf-8.vim	/^let g:menutrans_no_file = "[Neniu dosiero]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_es_es.latin1.vim	/^let g:menutrans_no_file = "[Sin archivo]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_no_file = "[Ei tiedostoja]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_no_file = "[Aucun fichier]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_is_is.latin1.vim	/^let g:menutrans_no_file =                           "[Engin Skr.*]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_it_it.latin1.vim	/^let g:menutrans_no_file = "[Senza nome]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_no_file = "[̵̾]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_no_file = "[無名]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_no_file = "[.*]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_no_no.latin1.vim	/^	let g:menutrans_no_file = "[Uten navn]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_pt_br.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_pt_pt.vim	/^let g:menutrans_no_file = "[Sem arquivos]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_sl_si.latin2.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_no_file = "[Brez datoteke]"$/;"	v
g:menutrans_no_file	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_no_file = "[无文件]"$/;"	v
g:menutrans_no_file	./vim82/menu.vim	/^      let g:menutrans_no_file = "[No Name]"$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_ca_es.latin1.vim	/^let g:menutrans_path_dialog = "Introdu.*u les ubicacions on cercar fitxers.\\nSepareu els noms de/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_path_dialog = ".*·.*\\n.*ŷָ.*Ŀ¼.*"$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhled.*v.*n.* soubor.*. Jednotliv.* cesty odd.*lte .*/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_cs_cz.utf-8.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhledávání souborů. Jednotlivé cesty oddě/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhled.*v.*n.* soubor.*. Jednotliv.* cesty odd.*lte .*/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let g:menutrans_path_dialog = "Zadejte cesty pro vyhledavani souboru. Jednotlive cesty oddelte c/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_path_dialog = "Indtast søgesti til filer.\\nSeparer mappenavne med et komma."$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_de_de.latin1.vim	/^let g:menutrans_path_dialog = "Geben Sie Such-Pfade f.*r Dateien ein.\\nTrennen Sie die Verzeichn/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_eo.utf-8.vim	/^let g:menutrans_path_dialog = "Tajpu la vojon de serĉo de dosieroj.\\nDisigu la dosierujojn per/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_es_es.latin1.vim	/^let g:menutrans_path_dialog = "Introduzca la ruta de b.*squeda para los archivos.\\nSepare los no/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_path_dialog = "Anna tiedostojen hakupolku.\\nErota hakemistot pilkuin."$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_path_dialog = "Entrez le chemin de recherche des fichiers.\\nS.*parez les r.*perto/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_path_dialog = ".*rd be a keresett f.*jl lehets.*ges el.*r.*si .*tjait, vessz.*vel elv.*l/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_path_dialog = "Írd be a keresett fájl lehetséges elérési útjait, vesszőve/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_is_is.latin1.vim	/^let g:menutrans_path_dialog =                       "Sl.*i.* inn leitarsl.* fyrir skr.*r.\\nA.*skilj/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_it_it.latin1.vim	/^let g:menutrans_path_dialog = "Batti percorso di ricerca per i file.\\nSepara fra loro i nomi di/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_path_dialog = ".*:\\n.*̾.* ( /;"	v
g:menutrans_path_dialog	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_path_dialog = "ファイルの検索パスを入力してください:\\nディレ/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_path_dialog = ".*t.*@.*C.*p.*X.*:\\n.*f.*B.*N.*g.*J.*} ( /;"	v
g:menutrans_path_dialog	./vim82/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_path_dialog = "Typ het zoekpad voor bestanden.\\nGebruik commas tussen de padnam/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_no_no.latin1.vim	/^	let g:menutrans_path_dialog = "Skriv s.*kesti for filer.\\nSkill katalognavn med komma."$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Wprowad.* .*cie.*k.* poszukiwania plik.*w.\\nProsz.* rozdziela.* nazwy k/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_path_dialog = "Wprowadź ścieżkę poszukiwania plików.\\nProszę rozdzielać /;"	v
g:menutrans_path_dialog	./vim82/lang/menu_polish_poland.1250.vim	/^let g:menutrans_path_dialog = "Wprowad.* .*cie.*k.* poszukiwania plik.*w.\\nProsz.* rozdziela.* nazwy k/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_pt_br.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_pt_pt.vim	/^let g:menutrans_path_dialog = "Indique um caminho de procura para os arquivos.\\nSepare os nomes/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_path_dialog = ".* .* .* .* .*.\\n.* .* .* .*/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_path_dialog = "Укажите путь для поиска файлов.\\nИме/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev lo.*ite z ve/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sl_si.latin2.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev lo.*ite z ve/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_path_dialog = "Vnesite poti za iskanje datotek.\\nImena direktorijev ločite z v/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena dire/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_path_dialog = "Unesite put pretrage za datoteke\\nRazdvojite zarezima imena dire/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_path_dialog = ".* .* .* .* .*\\n.* .* .* .*/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_path_dialog = "Унесите путању претраге за фајлове\\/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_sv_se.latin1.vim	/^let g:menutrans_path_dialog = "Skriv in s.*kv.*g f.*r filer.\\nSeparera katalognamn med komma"$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_path_dialog = "Dosya aramas.* i.*in yol belirtin.\\nDizin adlar.* virg.*llerle ayr.*l/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_path_dialog = "Dosya aramas.* i.*in yol belirtin.\\nDizin adlar.* virg.*llerle ayr.*l/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_path_dialog = "Dosya araması için yol belirtin.\\nDizin adları virgüllerle a/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_path_dialog = ".* .* .* .*\\n.* .* .* .*."$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_path_dialog = ".* .* .* .*\\n.* .* .* .*."$/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_vi_vn.vim	/^let g:menutrans_path_dialog = "Hãy chỉ ra đường dẫn để tìm kiếm tập tin.\\nTên/;"	v
g:menutrans_path_dialog	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_path_dialog = "输入搜索路径。\\n用逗号分隔目录名。"$/;"	v
g:menutrans_path_dialog	./vim82/menu.vim	/^    let g:menutrans_path_dialog = "Enter search path for files.\\nSeparate directory names with /;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_set_lang_to = ".*Ϊ"$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_cs_cz.utf-8.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_czech_czech_republic.1250.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^   let g:menutrans_set_lang_to = "Nastavit jazyk na"$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_set_lang_to = "Sæt sprog til"$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_set_lang_to =				'.* .*'$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_set_lang_to =				'Установить язык'$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_set_lang_to =		'Dil Y.*kle'$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_set_lang_to =		'Dil Y.*kle'$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_set_lang_to =		'Dil Yükle'$/;"	v
g:menutrans_set_lang_to	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_set_lang_to = "设置语言为"$/;"	v
g:menutrans_set_lang_to	./vim82/menu.vim	/^      let g:menutrans_set_lang_to = 'Set Language to'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_spell_add_ARG_to_word_list = '.*\\ "%s"\\ .*ӵ.*ʵ.*'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_spell_add_ARG_to_word_list = 'Tilføj\\ "%s"\\ til\\ ordliste'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_spell_add_ARG_to_word_list = '"%s"\\ .*ɲ.*'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_spell_add_ARG_to_word_list = '"%s"\\ を単語リストに追加'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_spell_add_ARG_to_word_list = '"%s"\\ .*P.*X.*g.*ɒǉ.*'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_spell_add_ARG_to_word_list =		'Добавить\\ "%s"\\ в\\ словарь'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_spell_add_ARG_to_word_list =	'"%s"\\ s.*zc.*n.*\\ s.*zl.*e\\ ekle'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_spell_add_ARG_to_word_list =	'"%s"\\ s.*zc.*n.*\\ s.*zl.*e\\ ekle'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_spell_add_ARG_to_word_list =	'"%s"\\ sözcüğünü\\ sözlüğe\\ ekle'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_spell_add_ARG_to_word_list = '将\\ "%s"\\ 添加到词典'$/;"	v
g:menutrans_spell_add_ARG_to_word_list	./vim82/menu.vim	/^	  let g:menutrans_spell_add_ARG_to_word_list = 'Add\\ "%s"\\ to\\ Word\\ List'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_spell_change_ARG_to = '.*\\ "%s"\\ .*Ϊ'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_spell_change_ARG_to = 'Ændr\\ "%s"\\ til'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_spell_change_ARG_to = '"%s"\\ .*'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_spell_change_ARG_to = '"%s"\\ を変更'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_spell_change_ARG_to = '"%s"\\ .*ύX'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_spell_change_ARG_to =			'Исправить\\ "%s"\\ на'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_spell_change_ARG_to =		'D.*zeltilecek:\\ "%s"\\ ->'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_spell_change_ARG_to =		'D.*zeltilecek:\\ "%s"\\ ->'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_spell_change_ARG_to =		'Düzeltilecek:\\ "%s"\\ ->'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_spell_change_ARG_to = '将\\ "%s"\\ 更改为'$/;"	v
g:menutrans_spell_change_ARG_to	./vim82/menu.vim	/^	  let g:menutrans_spell_change_ARG_to = 'Change\\ "%s"\\ to'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_spell_ignore_ARG = '.*\\ "%s"'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_spell_ignore_ARG = 'Ignorer "%s"'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_spell_ignore_ARG = '"%s"\\ .*̵.*'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_spell_ignore_ARG = '"%s"\\ を無視'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_spell_ignore_ARG = '"%s"\\ .*𖳎.*'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_spell_ignore_ARG =			'Пропустить\\ "%s"'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_spell_ignore_ARG =		'"%s"\\ s.*zc.*n.*\\ yoksay'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_spell_ignore_ARG =		'"%s"\\ s.*zc.*n.*\\ yoksay'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_spell_ignore_ARG =		'"%s"\\ sözcüğünü\\ yoksay'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_spell_ignore_ARG = '忽略\\ "%s"'$/;"	v
g:menutrans_spell_ignore_ARG	./vim82/menu.vim	/^	  let g:menutrans_spell_ignore_ARG = 'Ignore\\ "%s"'$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_ca_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introdu.*u els noms dels fitxers d'etiquetes.\\nSepareu els noms a/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_tags_dialog = ".*ļ.*(Tags).*\\n.*ŷָ.*ļ.*"$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Zadejte jm.*na soubor.* s tagy. Jm.*na odd.*lte .*rkami."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_cs_cz.utf-8.vim	/^let g:menutrans_tags_dialog = "Zadejte jména souborů s tagy. Jména oddělte čárkami."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let g:menutrans_tags_dialog = "Zadejte jm.*na soubor.* s tagy. Jm.*na odd.*lte .*rkami."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let g:menutrans_tags_dialog = "Zadejte jmena souboru s tagy. Jmena oddelte carkami."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_tags_dialog = "Indtast navne på tag-filer.\\nSeparer navnene med et komma."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_de_de.latin1.vim	/^let g:menutrans_tags_dialog = "Geben Sie die Namen der 'tag'-Dateien ein.\\nTrennen Sie die Name/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_eo.utf-8.vim	/^let g:menutrans_tags_dialog = "Tajpu la nomojn de dosieroj de etikedoj.\\nDisigu la nomojn per k/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_es_es.latin1.vim	/^let g:menutrans_tags_dialog = "Introduzca los nombres de los archivos de tags.\\nSepare los nomb/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_tags_dialog = "Anna t.*gitiedostojen nimet.\\nErota tidostot pilkuin."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_tags_dialog = "Entrez les noms des fichiers d'.*tiquettes.\\nS.*parez les noms par/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_tags_dialog = ".*rd be a tag f.*jl lehets.*ges el.*r.*si .*tjait, vessz.*vel elv.*lasztv/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_tags_dialog = "Írd be a tag fájl lehetséges elérési útjait, vesszővel elv/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_is_is.latin1.vim	/^let g:menutrans_tags_dialog =                       "Sl.*i.* inn nafn Merkjaskr.*a.\\nA.*skilji.* n.*f/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_it_it.latin1.vim	/^let g:menutrans_tags_dialog = "Batti nome dei file di tag.\\nSepara fra loro i nomi di directory/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_tags_dialog = ".*̾.*:\\n̾.* ( , ) .*Ƕ.*/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_tags_dialog = "タグファイルの名前を入力してください:\\n名前は/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_tags_dialog = ".*^.*O.*t.*@.*C.*O.*:\\n.*O.*J.*} ( , ) .*/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_tags_dialog = "Typ namen van tag bestanden.\\nGebruik commas tussen de namen."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_no_no.latin1.vim	/^	let g:menutrans_tags_dialog = "Skriv navn p.* tagfiler.\\nSkill navnene med komma."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plik.*w tag.*w.\\nProsz.* rozdziela.* nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plików tagów.\\nProszę rozdzielać nazwy przecinki/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_polish_poland.1250.vim	/^let g:menutrans_tags_dialog = "Podaj nazwy plik.*w tag.*w.\\nProsz.* rozdziela.* nazwy przecinkiem."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_pt_br.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma /;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_pt_pt.vim	/^let g:menutrans_tags_dialog = "Indique os nomes dos arquivos de tags.\\nSepare os nomes com uma /;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_tags_dialog = ".* .* .* .* (.* .*).\\n"$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_tags_dialog = "Введите имена файлов меток (через за/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z zna.*kami ('tag').\\nImana lo.*ite z vejica/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sl_si.latin2.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z zna.*kami ('tag').\\nImana lo.*ite z vejica/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_tags_dialog = "Vnesite imena datotek z značkami ('tag').\\nImana ločite z veji/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_tags_dialog = "Unesite imena datoteka sa oznakama\\nRazdvojite zarezima imena."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_tags_dialog = ".* .* .* .* .*\\n.* .* .*."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_tags_dialog = "Унесите имена фајлова са ознакама\\n/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_sv_se.latin1.vim	/^let g:menutrans_tags_dialog = "Skriv in namn p.* taggfiler.\\nSeparera namn med komma."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_tags_dialog = "Etiket dosyas.* adlar.* belirtin (virg.*lle ay.*rarak).\\n"$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_tags_dialog = "Etiket dosyas.* adlar.* belirtin (virg.*lle ay.*rarak).\\n"$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_tags_dialog = "Etiket dosyası adları belirtin (virgülle ayırarak).\\n"$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_tags_dialog = ".* .* .* .*\\n.* .* .*."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_tags_dialog = ".* .* .* .*\\n.* .* .*."$/;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_vi_vn.vim	/^let g:menutrans_tags_dialog = "Nhập tên tập tin thẻ ghi (phân cách bởi dấu phẩy)./;"	v
g:menutrans_tags_dialog	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_tags_dialog = "输入标记文件(Tags)名称。\\n用逗号分隔文件名。/;"	v
g:menutrans_tags_dialog	./vim82/menu.vim	/^    let g:menutrans_tags_dialog = "Enter names of tag files.\\nSeparate the names with a comma."$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_ca_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introdu.*u la nova amplada del text (0 per infinit): "$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_chinese_gb.936.vim	/^  let g:menutrans_textwidth_dialog = ".*(.*ַ.*0 .*):"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Zadejte d.*lku .*dku (0 pro zak.*z.*n.* form.*tov.*n.*):"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_cs_cz.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Zadejte délku řádku (0 pro zakázání formátování):"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let g:menutrans_textwidth_dialog = "Zadejte d.*lku .*dku (0 pro zak.*z.*n.* form.*tov.*n.*):"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let g:menutrans_textwidth_dialog = "Zadejte delku radku (0 pro zakazani formatovani):"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_da.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Indtast ny tekstbredde (0 for at deaktivere formatering): "$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_de_de.latin1.vim	/^let g:menutrans_textwidth_dialog = "Geben Sie eine neue Text-Breite ein (oder 0, um die Formatie/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_eo.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Tajpu la novan larĝon de teksto\\n(0 por malŝalti formatig/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_es_es.latin1.vim	/^let g:menutrans_textwidth_dialog = "Introduzca el nuevo ancho del texto (0 para desactivar el qu/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_fi_fi.latin1.vim	/^let g:menutrans_textwidth_dialog = "Anna uusi tekstin leveys\\n(0 poistaa k.*yt.*st.*)"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_fr_fr.latin1.vim	/^let g:menutrans_textwidth_dialog = "Entrez la nouvelle largeur du texte\\n(0 pour d.*sactiver le /;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = ".*rd be a sz.*veg sz.*less.*g.*t (0 = form.*z.*s kikapcsolva)"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_hu_hu.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Írd be a szöveg szélességét (0 = formázás kikapcsolva/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_is_is.latin1.vim	/^let g:menutrans_textwidth_dialog =                  "Sl.*i.* inn n.*ja textabreidd (0 til a.* .*virkj/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_it_it.latin1.vim	/^let g:menutrans_textwidth_dialog = "Batti nuova lunghezza linea (0 per inibire la formattazione)/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let g:menutrans_textwidth_dialog = ".*('textwidth').* (0.*/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_ja_jp.utf-8.vim	/^let g:menutrans_textwidth_dialog = "テキストの幅('textwidth')を設定してください (/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_japanese_japan.932.vim	/^let g:menutrans_textwidth_dialog = ".*e.*L.*X.*g.*̕.*('textwidth').*ݒ.* (0.*Ő.*`.*/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_nl_nl.latin1.vim	/^let g:menutrans_textwidth_dialog = "Typ de nieuwe tekst breedte (0 om formatteren uit the schake/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_no_no.latin1.vim	/^	let g:menutrans_textwidth_dialog = "Velg ny tekstbredde (0 for .* forhindre formatering): "$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Wprowad.* now.* szeroko.* tekstu (0 wy.*cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_pl_pl.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Wprowadź nową szerokość tekstu (0 wyłącza przewijanie)/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_polish_poland.1250.vim	/^let g:menutrans_textwidth_dialog = "Wprowad.* now.* szeroko.* tekstu (0 wy.*cza przewijanie): "$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_pt_br.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formata.*/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_pt_pt.vim	/^let g:menutrans_textwidth_dialog = "Digite a nova largura do texto (0 para desativar a formata.*/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let g:menutrans_textwidth_dialog = ".* .* .* .* .*.\\n.* .* .*/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_ru_ru.vim	/^let g:menutrans_textwidth_dialog = "Введите ширину текста для формат/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sl_si.cp1250.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo .*irino besedila (ali 0 za izklop formatiranja):/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sl_si.latin2.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo .*irino besedila (ali 0 za izklop formatiranja):/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sl_si.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Vnesite novo širino besedila (ali 0 za izklop formatiranja)/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sr_rs.ascii.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu sirinu teksta (0 sprecava prelom)"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let g:menutrans_textwidth_dialog = "Unesite novu .*irinu teksta (0 spre.*ava prelom)"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let g:menutrans_textwidth_dialog = ".* .* .* .* (0 .* .*)"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sr_rs.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Унесите нову ширину текста (0 спре/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_sv_se.latin1.vim	/^let g:menutrans_textwidth_dialog = "V.*lj ny textbredd (0 f.*r att f.*rhindra formatering): "$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_tr_tr.cp1254.vim	/^let g:menutrans_textwidth_dialog = "Bi.*imlendirme i.*in metin geni.*li.*ini belirtin.\\nBi.*imlendir/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let g:menutrans_textwidth_dialog = "Bi.*imlendirme i.*in metin geni.*li.*ini belirtin.\\nBi.*imlendir/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_tr_tr.utf-8.vim	/^let g:menutrans_textwidth_dialog = "Biçimlendirme için metin genişliğini belirtin.\\nBiçiml/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_uk_ua.cp1251.vim	/^let g:menutrans_textwidth_dialog = ".* .* .* .* (0 .* .* .*)"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let g:menutrans_textwidth_dialog = ".* .* .* .* (0 .* .* .*)"$/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_vi_vn.vim	/^let g:menutrans_textwidth_dialog = "Hãy nhập chiều rộng văn bản mới.\\nNhập 0 để/;"	v
g:menutrans_textwidth_dialog	./vim82/lang/menu_zh_cn.utf-8.vim	/^  let g:menutrans_textwidth_dialog = "输入文本宽度(每行最大字符数，0 表示禁用)/;"	v
g:menutrans_textwidth_dialog	./vim82/menu.vim	/^    let g:menutrans_textwidth_dialog = "Enter new text width (0 to disable formatting): "$/;"	v
g:mp_close_tag	./vim82/indent/mp.vim	/^let g:mp_close_tag = ''$/;"	v
g:mp_open_tag	./vim82/indent/mp.vim	/^let g:mp_open_tag = ''$/;"	v
g:mp_statement	./vim82/indent/mp.vim	/^let g:mp_statement = ''$/;"	v
g:mwAutoLoadMarks	./vimfiles/plugin/mark.vim	/^	let g:mwAutoLoadMarks = 0$/;"	v
g:mwAutoSaveMarks	./vimfiles/plugin/mark.vim	/^	let g:mwAutoSaveMarks = 1$/;"	v
g:mwDoDeferredLoad	./vimfiles/plugin/mark.vim	/^				let g:mwDoDeferredLoad = 1$/;"	v
g:mwHistAdd	./vimfiles/plugin/mark.vim	/^	let g:mwHistAdd = '\/@'$/;"	v
g:netrw_altv	./vim82/autoload/netrw.vim	/^   let g:netrw_altv     = keep_altv$/;"	v
g:netrw_altv	./vim82/autoload/netrw.vim	/^   let g:netrw_altv = 0$/;"	v
g:netrw_banner	./vim82/autoload/netrw.vim	/^  let g:netrw_banner= !g:netrw_banner$/;"	v
g:netrw_bookmarklist	./vim82/autoload/netrw.vim	/^   let g:netrw_bookmarklist= []$/;"	v
g:netrw_browse_split	./vim82/autoload/netrw.vim	/^        let g:netrw_browse_split= s:netrw_browse_split_{winnr()}$/;"	v
g:netrw_browse_split	./vim82/autoload/netrw.vim	/^       let g:netrw_browse_split= 0$/;"	v
g:netrw_browse_split	./vim82/autoload/netrw.vim	/^     let g:netrw_browse_split= [g:netrw_servername,1,1]$/;"	v
g:netrw_browse_split	./vim82/autoload/netrw.vim	/^    let g:netrw_browse_split= s:netrw_browse_split_{winnr()}$/;"	v
g:netrw_browse_split	./vim82/autoload/netrw.vim	/^   let g:netrw_browse_split= 0$/;"	v
g:netrw_chgwin	./vim82/autoload/netrw.vim	/^    let g:netrw_chgwin= 1$/;"	v
g:netrw_chgwin	./vim82/autoload/netrw.vim	/^    let g:netrw_chgwin= 2$/;"	v
g:netrw_chgwin	./vim82/autoload/netrw.vim	/^    let g:netrw_chgwin= a:1$/;"	v
g:netrw_chgwin	./vim82/autoload/netrw.vim	/^    let g:netrw_chgwin= winnr()$/;"	v
g:netrw_chgwin	./vim82/autoload/netrw.vim	/^   let g:netrw_chgwin= v:count$/;"	v
g:netrw_chgwin	./vim82/autoload/netrw.vim	/^   let g:netrw_chgwin= winnr()$/;"	v
g:netrw_choice	./vim82/autoload/netrw.vim	/^  let g:netrw_choice  = a:choice$/;"	v
g:netrw_cursor	./vim82/autoload/netrw.vim	/^ let g:netrw_cursor= g:netrw_cursorline$/;"	v
g:netrw_cygwin	./vim82/autoload/netrw.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	./vim82/autoload/netrw.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	./vim82/autoload/netrw.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	./vim82/autoload/tar.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	./vim82/autoload/tar.vim	/^   let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	./vim82/autoload/tar.vim	/^  let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	./vim82/autoload/vimball.vim	/^    let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	./vim82/autoload/vimball.vim	/^    let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	./vim82/autoload/vimball.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_dav_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_dav_cmd	= "cadaver"$/;"	v
g:netrw_dav_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_dav_cmd	= "curl"$/;"	v
g:netrw_dav_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_dav_cmd   = ""$/;"	v
g:netrw_dirhist_	./vim82/autoload/netrw.vim	/^     let g:netrw_dirhist_{g:netrw_dirhistcnt} = a:curdir$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^      let g:netrw_dirhistcnt= g:netrw_dirhistcnt + g:netrw_dirhistmax$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^     let g:netrw_dirhistcnt                   = ( g:netrw_dirhistcnt + 1 ) % g:netrw_dirhistmax$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^     let g:netrw_dirhistcnt= ( g:netrw_dirhistcnt + v:count1 ) % g:netrw_dirhistmax$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^     let g:netrw_dirhistcnt= ( g:netrw_dirhistcnt - 1 ) % g:netrw_dirhistmax$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^     let g:netrw_dirhistcnt= 0$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^     let g:netrw_dirhistcnt= g:netrw_dirhistcnt + g:netrw_dirhistmax$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^    let g:netrw_dirhistcnt= ( g:netrw_dirhistcnt + 1 ) % g:netrw_dirhistmax$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^    let g:netrw_dirhistcnt= ( g:netrw_dirhistcnt - v:count1 ) % g:netrw_dirhistmax$/;"	v
g:netrw_dirhistcnt	./vim82/autoload/netrw.vim	/^    let g:netrw_dirhistcnt= 0$/;"	v
g:netrw_fetch_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_fetch_cmd	= ""$/;"	v
g:netrw_fetch_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_fetch_cmd	= "fetch -o"$/;"	v
g:netrw_ftp	./vim82/autoload/netrwSettings.vim	/^   let g:netrw_ftp= 0$/;"	v
g:netrw_ftp_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_ftp_cmd	= "ftp"$/;"	v
g:netrw_ftp_list_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_ftp_list_cmd     = "dir"$/;"	v
g:netrw_ftp_list_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_ftp_list_cmd     = "ls -lF"$/;"	v
g:netrw_ftp_options	./vim82/autoload/netrw.vim	/^ let g:netrw_ftp_options= "-i -n"$/;"	v
g:netrw_ftp_sizelist_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "dir"$/;"	v
g:netrw_ftp_sizelist_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_ftp_sizelist_cmd = "ls -slF"$/;"	v
g:netrw_ftp_timelist_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "dir"$/;"	v
g:netrw_ftp_timelist_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_ftp_timelist_cmd = "ls -tlF"$/;"	v
g:netrw_hide	./vim82/autoload/netrw.vim	/^   let g:netrw_hide= 1$/;"	v
g:netrw_hide	./vim82/autoload/netrw.vim	/^   let g:netrw_hide=(g:netrw_hide+1)%3$/;"	v
g:netrw_home	./vim82/autoload/netrw.vim	/^  let g:netrw_home= home$/;"	v
g:netrw_http_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_http_cmd	= ""$/;"	v
g:netrw_http_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_http_cmd	= "curl"$/;"	v
g:netrw_http_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_http_cmd	= "fetch"$/;"	v
g:netrw_http_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_http_cmd	= "wget"$/;"	v
g:netrw_http_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_http_cmd = "elinks"$/;"	v
g:netrw_http_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_http_cmd = "links"$/;"	v
g:netrw_ignorenetrc	./vim82/autoload/netrw.vim	/^  let g:netrw_ignorenetrc= 0$/;"	v
g:netrw_ignorenetrc	./vim82/autoload/netrw.vim	/^  let g:netrw_ignorenetrc= 1$/;"	v
g:netrw_ignorenetrc	./vim82/autoload/netrwSettings.vim	/^   let g:netrw_ignorenetrc= 0$/;"	v
g:netrw_keepj	./vim82/autoload/netrw.vim	/^ let g:netrw_keepj= ""$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_list_cmd  = substitute(g:netrw_list_cmd,' -l','','ge')$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_list_cmd = g:netrw_list_cmd." -l"$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_list_cmd = substitute(g:netrw_list_cmd,' -l','','ge')$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_list_cmd= g:netrw_scp_cmd." -ls USEPORT HOSTNAME: ".g:netrw_list_cmd_options$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_list_cmd= g:netrw_scp_cmd." -ls USEPORT HOSTNAME:"$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_list_cmd= g:netrw_ssh_cmd." USEPORT HOSTNAME ls -FLa ".g:netrw_list_cmd_options$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_list_cmd= g:netrw_ssh_cmd." USEPORT HOSTNAME ls -FLa"$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^  let g:netrw_list_cmd= ""$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrw.vim	/^ let g:netrw_list_cmd= g:netrw_list_cmd." -l"$/;"	v
g:netrw_list_cmd	./vim82/autoload/netrwSettings.vim	/^   let g:netrw_list_cmd= "ssh HOSTNAME ls -FLa"$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^      let g:netrw_list_hide= '\\<'.escape(fname,g:netrw_fname_escape).'\\>'$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^      let g:netrw_list_hide= g:netrw_list_hide.",".sfxpat$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^      let g:netrw_list_hide= g:netrw_list_hide.',\\<'.escape(fname,g:netrw_fname_escape).'\\>'$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^      let g:netrw_list_hide= join(hidelist,",")$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^      let g:netrw_list_hide= sfxpat$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^     let g:netrw_list_hide= substitute(g:netrw_list_hide,',,',',','g')$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^     let g:netrw_list_hide= substitute(g:netrw_list_hide,'..\\<'.escape(fname,g:netrw_fname_esca/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^     let g:netrw_list_hide= substitute(g:netrw_list_hide,'^,\\|,$','','')$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^   let g:netrw_list_hide= '\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^   let g:netrw_list_hide= g:netrw_list_hide . ',\\(^\\|\\s\\s\\)\\zs\\.\\S\\+'$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^   let g:netrw_list_hide= strpart(g:netrw_list_hide,1)$/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^   let g:netrw_list_hide= substitute(g:netrw_list_hide,'\\(^\\|,\\)\\\\(^\\\\|\\\\s\\\\s\\\\)\\\\/;"	v
g:netrw_list_hide	./vim82/autoload/netrw.vim	/^  let g:netrw_list_hide= newhide$/;"	v
g:netrw_liststyle	./vim82/autoload/netrw.vim	/^   let g:netrw_liststyle = s:THINLIST$/;"	v
g:netrw_liststyle	./vim82/autoload/netrw.vim	/^ let g:netrw_liststyle= s:THINLIST$/;"	v
g:netrw_liststyle	./vim82/autoload/netrwSettings.vim	/^   let g:netrw_liststyle= 0$/;"	v
g:netrw_localcmdshell	./vim82/autoload/netrw.vim	/^ let g:netrw_localcmdshell= ""$/;"	v
g:netrw_localcopycmd	./vim82/autoload/netrw.vim	/^   let g:netrw_localcopycmd   = expand("$COMSPEC")$/;"	v
g:netrw_localcopycmd	./vim82/autoload/netrw.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	./vim82/autoload/netrw.vim	/^  let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	./vim82/autoload/netrw.vim	/^  let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	./vim82/autoload/netrw.vim	/^ let g:netrw_localcopycmd= g:netrw_local_copycmd$/;"	v
g:netrw_localcopycmd	./vim82/autoload/tar.vim	/^    let g:netrw_localcopycmd= "copy"$/;"	v
g:netrw_localcopycmd	./vim82/autoload/tar.vim	/^    let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmd	./vim82/autoload/tar.vim	/^   let g:netrw_localcopycmd= ""$/;"	v
g:netrw_localcopycmd	./vim82/autoload/tar.vim	/^   let g:netrw_localcopycmd= "cp"$/;"	v
g:netrw_localcopycmdopt	./vim82/autoload/netrw.vim	/^   let g:netrw_localcopycmdopt= " \/c copy"$/;"	v
g:netrw_localcopycmdopt	./vim82/autoload/netrw.vim	/^let g:netrw_localcopycmdopt    = ""$/;"	v
g:netrw_localcopydircmd	./vim82/autoload/netrw.vim	/^   let g:netrw_localcopydircmd   = "cp"$/;"	v
g:netrw_localcopydircmd	./vim82/autoload/netrw.vim	/^   let g:netrw_localcopydircmd   = expand("$COMSPEC")$/;"	v
g:netrw_localcopydircmd	./vim82/autoload/netrw.vim	/^  let g:netrw_localcopydircmd   = "cp"$/;"	v
g:netrw_localcopydircmd	./vim82/autoload/netrw.vim	/^  let g:netrw_localcopydircmd= ""$/;"	v
g:netrw_localcopydircmdopt	./vim82/autoload/netrw.vim	/^   let g:netrw_localcopydircmdopt= " -R"$/;"	v
g:netrw_localcopydircmdopt	./vim82/autoload/netrw.vim	/^   let g:netrw_localcopydircmdopt= " \/c xcopy \/e \/c \/h \/i \/k"$/;"	v
g:netrw_localcopydircmdopt	./vim82/autoload/netrw.vim	/^  let g:netrw_localcopydircmdopt= " -R"$/;"	v
g:netrw_localcopydircmdopt	./vim82/autoload/netrw.vim	/^let g:netrw_localcopydircmdopt = ""$/;"	v
g:netrw_localmkdir	./vim82/autoload/netrw.vim	/^   let g:netrw_localmkdir   = expand("$COMSPEC")$/;"	v
g:netrw_localmkdir	./vim82/autoload/netrw.vim	/^ let g:netrw_localmkdir= g:netrw_local_mkdir$/;"	v
g:netrw_localmkdiropt	./vim82/autoload/netrw.vim	/^   let g:netrw_localmkdiropt= " \/c mkdir"$/;"	v
g:netrw_localmkdiropt	./vim82/autoload/netrw.vim	/^let g:netrw_localmkdiropt      = ""$/;"	v
g:netrw_localmovecmd	./vim82/autoload/netrw.vim	/^   let g:netrw_localmovecmd   = expand("$COMSPEC")$/;"	v
g:netrw_localmovecmd	./vim82/autoload/netrw.vim	/^   let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_localmovecmd	./vim82/autoload/netrw.vim	/^  let g:netrw_localmovecmd= ""$/;"	v
g:netrw_localmovecmd	./vim82/autoload/netrw.vim	/^  let g:netrw_localmovecmd= "mv"$/;"	v
g:netrw_localmovecmd	./vim82/autoload/netrw.vim	/^ let g:netrw_localmovecmd= g:netrw_local_movecmd$/;"	v
g:netrw_localmovecmdopt	./vim82/autoload/netrw.vim	/^   let g:netrw_localmovecmdopt= " \/c move"$/;"	v
g:netrw_localmovecmdopt	./vim82/autoload/netrw.vim	/^let g:netrw_localmovecmdopt    = ""$/;"	v
g:netrw_localrmdiropt	./vim82/autoload/netrw.vim	/^let g:netrw_localrmdiropt      = ""$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^    let g:netrw_machine = substitute(a:choice,mf,'\\1',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^    let g:netrw_machine= 'http:\/\/'.substitute(a:choice,davurm,'\\1\/\\2',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^    let g:netrw_machine= 'https:\/\/'.substitute(a:choice,davurm,'\\1\/\\2',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^    let g:netrw_machine= input('Enter hostname: ')$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine = substitute(a:choice,mipf,'\\1',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine = substitute(a:choice,rcphf,'\\3',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine = substitute(a:choice,rcpurm,'\\2',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine = substitute(a:choice,scpurm,'\\1',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine= input('Enter hostname: ')$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine= substitute(a:choice,fetchurm,'\\3',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine= substitute(a:choice,ftpurm,'\\3',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine= substitute(a:choice,httpurm,'\\1',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine= substitute(a:choice,rsyncurm,'\\1',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^   let g:netrw_machine= substitute(a:choice,sftpurm,'\\1',"")$/;"	v
g:netrw_machine	./vim82/autoload/netrw.vim	/^  let g:netrw_machine = ""$/;"	v
g:netrw_maxfilenamelen	./vim82/autoload/netrw.vim	/^   let g:netrw_maxfilenamelen = max(map(filelistcopy,'len(v:val)')) + 1$/;"	v
g:netrw_nogx	./VIMPROJ/vimrc/_vimrc	/^let g:netrw_nogx = 1 " disable netrw's gx mapping.$/;"	v
g:netrw_passwd	./vim82/plugin/netrwPlugin.vim	/^  let g:netrw_passwd= inputsecret("Enter Password: ")$/;"	v
g:netrw_passwd	./vim82/plugin/netrwPlugin.vim	/^  let g:netrw_passwd=a:2$/;"	v
g:netrw_port	./vim82/autoload/netrw.vim	/^   let g:netrw_port    = substitute(a:choice,scpurm,'\\2',"")$/;"	v
g:netrw_port	./vim82/autoload/netrw.vim	/^   let g:netrw_port   = substitute(a:choice,ftpurm,'\\4',"")$/;"	v
g:netrw_port	./vim82/autoload/netrw.vim	/^   let g:netrw_port = substitute(g:netrw_port,'[#:]\\+','','')$/;"	v
g:netrw_port	./vim82/autoload/netrw.vim	/^   let g:netrw_port= netrw_port$/;"	v
g:netrw_port	./vim82/autoload/netrw.vim	/^  let g:netrw_port    = ""$/;"	v
g:netrw_quickhelp	./vim82/autoload/netrw.vim	/^     let g:netrw_quickhelp= (g:netrw_quickhelp + 1)%len(s:QuickHelp)$/;"	v
g:netrw_quickhelp	./vim82/autoload/netrw.vim	/^     let g:netrw_quickhelp= g:netrw_quickhelp - 1$/;"	v
g:netrw_quiet	./vim82/autoload/netrw.vim	/^     let g:netrw_quiet= netrw_quiet_keep$/;"	v
g:netrw_quiet	./vim82/autoload/netrw.vim	/^    let g:netrw_quiet = 1$/;"	v
g:netrw_scp_cmd	./vim82/autoload/netrw.vim	/^   let g:netrw_scp_cmd ="pscp -i C:\\\\private.ppk"$/;"	v
g:netrw_silent	./vim82/autoload/netrwSettings.vim	/^   let g:netrw_silent= 0$/;"	v
g:netrw_sort_by	./vim82/autoload/netrw.vim	/^  let g:netrw_sort_by= (g:netrw_sort_by =~# '^n')? 'time' : (g:netrw_sort_by =~# '^t')? 'size' :/;"	v
g:netrw_sort_sequence	./vim82/autoload/netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\.h$,\\.c$,\\.cpp$,*,\\.o$,\\.obj$,\\.info$,\\.swp$,\\.ba/;"	v
g:netrw_sort_sequence	./vim82/autoload/netrw.vim	/^  let g:netrw_sort_sequence= '[\\\/]$,\\<core\\%(\\.\\d\\+\\)\\=\\>,\\.h$,\\.c$,\\.cpp$,\\~\\=\\/;"	v
g:netrw_sort_sequence	./vim82/autoload/netrw.vim	/^  let g:netrw_sort_sequence= newsortseq$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^    let g:netrw_uid    = input("Enter UserId: ")$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^    let g:netrw_uid    = s:netrw_hup[host].uid$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^    let g:netrw_uid= userid$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^   let g:netrw_uid     = substitute(a:choice,mipf,'\\2',"")$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^   let g:netrw_uid = a:1$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^   let g:netrw_uid= input('Enter username: ')$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^  let g:netrw_uid              = s:netrw_hup[host].uid$/;"	v
g:netrw_uid	./vim82/autoload/netrw.vim	/^  let g:netrw_uid    = a:1$/;"	v
g:netrw_uid	./vim82/plugin/netrwPlugin.vim	/^   let g:netrw_uid= input('Enter username: ')$/;"	v
g:netrw_uid	./vim82/plugin/netrwPlugin.vim	/^  let g:netrw_uid= a:1$/;"	v
g:netrw_use_errorwindow	./vim82/autoload/spellfile.vim	/^    let g:netrw_use_errorwindow = save_ew$/;"	v
g:netrw_use_errorwindow	./vim82/autoload/spellfile.vim	/^  let g:netrw_use_errorwindow=0$/;"	v
g:netrw_use_nt_rcp	./vim82/autoload/netrwSettings.vim	/^   let g:netrw_use_nt_rcp= 0$/;"	v
g:netrw_userid	./vim82/autoload/netrw.vim	/^   let g:netrw_userid = substitute(a:choice,fetchurm,'\\2',"")$/;"	v
g:netrw_winsize	./vim82/autoload/netrw.vim	/^    let g:netrw_winsize = a:count$/;"	v
g:netrw_winsize	./vim82/autoload/netrw.vim	/^    let g:netrw_winsize = netrw_winsize$/;"	v
g:netrw_winsize	./vim82/autoload/netrw.vim	/^   let g:netrw_winsize = -winwidth(0)$/;"	v
g:netrw_xstrlen	./vim82/autoload/netrw.vim	/^  let g:netrw_xstrlen= 0$/;"	v
g:netrw_xstrlen	./vim82/autoload/netrw.vim	/^  let g:netrw_xstrlen= 1$/;"	v
g:netrw_xstrlen	./vim82/autoload/netrw.vim	/^  let g:netrw_xstrlen= g:Align_xstrlen$/;"	v
g:netrw_xstrlen	./vim82/autoload/netrw.vim	/^  let g:netrw_xstrlen= g:drawit_xstrlen$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	./vimfiles/autoload/omni/cpp/complete.vim	/^            let g:omni#cpp#includes#CACHE_FILE_TIME[szIncludeName] = fTime$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	./vimfiles/autoload/omni/cpp/complete.vim	/^        let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	./vimfiles/autoload/omni/cpp/includes.vim	/^    let g:omni#cpp#includes#CACHE_FILE_TIME[a:szFilePath] = getftime(a:szFilePath)$/;"	v
g:omni#cpp#includes#CACHE_FILE_TIME	./vimfiles/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_FILE_TIME = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	./vimfiles/autoload/omni/cpp/complete.vim	/^        let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	./vimfiles/autoload/omni/cpp/includes.vim	/^    let g:omni#cpp#includes#CACHE_INCLUDES[a:szFilePath] = listIncludes$/;"	v
g:omni#cpp#includes#CACHE_INCLUDES	./vimfiles/autoload/omni/cpp/includes.vim	/^let g:omni#cpp#includes#CACHE_INCLUDES = {}$/;"	v
g:omni#cpp#items#data	./vimfiles/autoload/omni/cpp/complete.vim	/^            let g:omni#cpp#items#data = omni#cpp#items#Get(omni#cpp#utils#TokenizeCurrentInstruc/;"	v
g:omni#cpp#items#data	./vimfiles/autoload/omni/cpp/maycomplete.vim	/^                let g:omni#cpp#items#data = omni#cpp#items#Get(omni#cpp#utils#TokenizeCurrentIns/;"	v
g:omni#cpp#items#data	./vimfiles/autoload/omni/cpp/maycomplete.vim	/^        let g:omni#cpp#items#data = omni#cpp#items#Get(omni#cpp#utils#TokenizeCurrentInstruction/;"	v
g:omni#cpp#namespaces#CacheResolve	./vimfiles/autoload/omni/cpp/complete.vim	/^        let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheResolve	./vimfiles/autoload/omni/cpp/namespaces.vim	/^        let g:omni#cpp#namespaces#CacheResolve[a:namespace] = listTagsOfNamespace$/;"	v
g:omni#cpp#namespaces#CacheResolve	./vimfiles/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheResolve = {}$/;"	v
g:omni#cpp#namespaces#CacheUsing	./vimfiles/autoload/omni/cpp/namespaces.vim	/^        let g:omni#cpp#namespaces#CacheUsing[szFixedPath] = namespaceMap$/;"	v
g:omni#cpp#namespaces#CacheUsing	./vimfiles/autoload/omni/cpp/namespaces.vim	/^let g:omni#cpp#namespaces#CacheUsing = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	./vimfiles/autoload/omni/cpp/complete.vim	/^        let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	./vimfiles/autoload/omni/cpp/utils.vim	/^            let g:omni#cpp#utils#CACHE_TAG_INHERITS[szTypeInfo] = result$/;"	v
g:omni#cpp#utils#CACHE_TAG_INHERITS	./vimfiles/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#CACHE_TAG_INHERITS = {}$/;"	v
g:omni#cpp#utils#szFilterGlobalScope	./vimfiles/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope .= "&& (!has_key(v:val, 'enum') || (has_key(v:val, 'enu/;"	v
g:omni#cpp#utils#szFilterGlobalScope	./vimfiles/autoload/omni/cpp/utils.vim	/^let g:omni#cpp#utils#szFilterGlobalScope = "(!has_key(v:val, 'class') && !has_key(v:val, 'struct/;"	v
g:omni_sql_default_compl_type	./vim82/autoload/sqlcomplete.vim	/^    let g:omni_sql_default_compl_type = 'table'$/;"	v
g:omni_sql_ignorecase	./vim82/autoload/sqlcomplete.vim	/^    let g:omni_sql_ignorecase = &ignorecase$/;"	v
g:omni_sql_include_owner	./vim82/autoload/sqlcomplete.vim	/^            let g:omni_sql_include_owner = 1$/;"	v
g:omni_sql_include_owner	./vim82/autoload/sqlcomplete.vim	/^    let g:omni_sql_include_owner = 0$/;"	v
g:omni_sql_precache_syntax_groups	./vim82/autoload/sqlcomplete.vim	/^    let g:omni_sql_precache_syntax_groups = [$/;"	v
g:omni_sql_use_tbl_alias	./vim82/autoload/sqlcomplete.vim	/^    let g:omni_sql_use_tbl_alias = 'a'$/;"	v
g:omni_syntax_group_exclude_context	./vim82/ftplugin/context.vim	/^  let g:omni_syntax_group_exclude_context = 'mfTodoComment'$/;"	v
g:omni_syntax_group_exclude_lifelines	./vim82/syntax/lifelines.vim	/^		let g:omni_syntax_group_exclude_lifelines = 'lifelinesError'$/;"	v
g:omni_syntax_group_exclude_mf	./vim82/ftplugin/mf.vim	/^let g:omni_syntax_group_exclude_mf = 'mfTodoComment'$/;"	v
g:omni_syntax_group_exclude_mp	./vim82/ftplugin/mp.vim	/^let g:omni_syntax_group_exclude_mp = 'mfTodoComment'$/;"	v
g:omni_syntax_group_exclude_sql	./vim82/autoload/sqlcomplete.vim	/^        let g:omni_syntax_group_exclude_sql = ''$/;"	v
g:omni_syntax_group_exclude_sql	./vim82/autoload/sqlcomplete.vim	/^        let g:omni_syntax_group_exclude_sql = s:save_exc$/;"	v
g:omni_syntax_group_exclude_sql	./vim82/autoload/sqlcomplete.vim	/^    let g:omni_syntax_group_exclude_sql = ''$/;"	v
g:omni_syntax_group_include_context	./vim82/ftplugin/context.vim	/^  let g:omni_syntax_group_include_context = 'mf\\w\\+,mp\\w\\+'$/;"	v
g:omni_syntax_group_include_mf	./vim82/ftplugin/mf.vim	/^let g:omni_syntax_group_include_mf = 'mf\\w\\+'$/;"	v
g:omni_syntax_group_include_mp	./vim82/ftplugin/mp.vim	/^let g:omni_syntax_group_include_mp = 'mf\\w\\+,mp\\w\\+'$/;"	v
g:omni_syntax_group_include_sql	./vim82/autoload/sqlcomplete.vim	/^            let g:omni_syntax_group_include_sql = syn_group$/;"	v
g:omni_syntax_group_include_sql	./vim82/autoload/sqlcomplete.vim	/^        let g:omni_syntax_group_include_sql = ''$/;"	v
g:omni_syntax_group_include_sql	./vim82/autoload/sqlcomplete.vim	/^        let g:omni_syntax_group_include_sql = s:save_inc$/;"	v
g:omni_syntax_group_include_sql	./vim82/autoload/sqlcomplete.vim	/^    let g:omni_syntax_group_include_sql = ''$/;"	v
g:omni_syntax_ignorecase	./vim82/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_ignorecase = &ignorecase$/;"	v
g:omni_syntax_ignorecase	./vimfiles/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_ignorecase = &ignorecase$/;"	v
g:omni_syntax_minimum_length	./vim82/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_minimum_length = 0$/;"	v
g:omni_syntax_minimum_length	./vimfiles/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_minimum_length = 0$/;"	v
g:omni_syntax_use_iskeyword	./vim82/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword = 1$/;"	v
g:omni_syntax_use_iskeyword	./vimfiles/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword = 1$/;"	v
g:omni_syntax_use_iskeyword_numeric	./vim82/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword_numeric = 1$/;"	v
g:omni_syntax_use_iskeyword_numeric	./vimfiles/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_use_iskeyword_numeric = 1$/;"	v
g:omni_syntax_use_single_byte	./vim82/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_use_single_byte = 1$/;"	v
g:omni_syntax_use_single_byte	./vimfiles/autoload/syntaxcomplete.vim	/^    let g:omni_syntax_use_single_byte = 1$/;"	v
g:openbrowser_browser_commands	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^      let g:openbrowser_browser_commands = default.browser_commands$/;"	v
g:openbrowser_browser_commands	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^      let g:openbrowser_browser_commands = s:_convert_commands_and_rules()$/;"	v
g:openbrowser_format_message	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^    let g:openbrowser_format_message = default.format_message$/;"	v
g:openbrowser_format_message	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^    let g:openbrowser_format_message = extend($/;"	v
g:openbrowser_open_filepath_in_vim	./vimfiles/bundle/previm/autoload/previm.vim	/^    let g:openbrowser_open_filepath_in_vim = 0$/;"	v
g:openbrowser_open_filepath_in_vim	./vimfiles/bundle/previm/autoload/previm.vim	/^    let g:openbrowser_open_filepath_in_vim = saved_in_vim$/;"	v
g:other_mf_macros	./vim82/syntax/mp.vim	/^  let g:other_mf_macros = s:other_mf_macros$/;"	v
g:other_mf_macros	./vim82/syntax/mp.vim	/^let g:other_mf_macros = 0 " cmbase.mf, logo.mf, ... neither$/;"	v
g:pandoc#syntax#codeblocks#embeds#langs	./vim82/syntax/rmd.vim	/^let g:pandoc#syntax#codeblocks#embeds#langs = get(g:, 'pandoc#syntax#codeblocks#embeds#langs', [/;"	v
g:pdv_cfg_Author	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_Author = "Tobias Schlitt <toby@qafoo.com>"$/;"	v
g:pdv_cfg_BOL	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_BOL = "norm! o"$/;"	v
g:pdv_cfg_Copyright	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_Copyright = "Copyright (C) 2010 Qafoo GmbH. All rights reserved."$/;"	v
g:pdv_cfg_EOL	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_EOL = ""$/;"	v
g:pdv_cfg_License	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_License = ""$/;"	v
g:pdv_cfg_Package	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_Package = "qaVoice"$/;"	v
g:pdv_cfg_ReturnVal	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_ReturnVal = "void"$/;"	v
g:pdv_cfg_Type	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_Type = "mixed"$/;"	v
g:pdv_cfg_Version	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_cfg_Version = ""$/;"	v
g:pdv_re_abstract	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_abstract = '\\(abstract\\)'$/;"	v
g:pdv_re_array	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_array  = "^array *(.*"$/;"	v
g:pdv_re_attribute	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_attribute = '^\\(\\s*\\)\\(\\(private\\|public\\|protected\\|static\\)\\+\\)\\s*\\$/;"	v
g:pdv_re_bool	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_bool = "\\(true\\|false\\)"$/;"	v
g:pdv_re_class	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_class = '^\\s*\\([a-zA-Z]*\\)\\s*\\(interface\\|class\\)\\s*\\([^ ]\\+\\)\\s*\\(ext/;"	v
g:pdv_re_comment	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_comment = ' *\\*\/ *'$/;"	v
g:pdv_re_final	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_final = '\\(final\\)'$/;"	v
g:pdv_re_float	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_float  = '^[0-9]*\\.[0-9]\\+'$/;"	v
g:pdv_re_func	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_func = '^\\s*\\([a-zA-Z ]*\\)function\\s\\+\\([^ (]\\+\\)\\s*(\\s*\\(.*\\)\\s*)\\s*/;"	v
g:pdv_re_indent	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_indent = '^\\s*'$/;"	v
g:pdv_re_int	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_int    = '^[0-9]\\+'$/;"	v
g:pdv_re_param	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_param = ' *\\([^ &]*\\) *&\\?\\$\\([A-Za-z_][A-Za-z0-9_]*\\) *=\\? *\\(.*\\)\\?$'$/;"	v
g:pdv_re_scope	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_scope = '\\(private\\|protected\\|public\\)'$/;"	v
g:pdv_re_static	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_static = '\\(static\\)'$/;"	v
g:pdv_re_string	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^let g:pdv_re_string = "['\\"].*"$/;"	v
g:pdv_template_dir	./VIMPROJ/vimrc/_vimrc	/^let g:pdv_template_dir = $VIM."\/vimfiles\/bundle\/pdv\/templates_snip"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test001_attributes.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test002_functions.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test003_classes.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test004_attributes_snipmate.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates_snip"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test005_functions_snipmate.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates_snip"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test006_interfaces.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test007_traits.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates"$/;"	v
g:pdv_template_dir	./vimfiles/bundle/pdv/tests/test008_consts.vim	/^let g:pdv_template_dir = expand("%:p:h") . "\/templates"$/;"	v
g:php_builtin_classes	./vim82/autoload/phpcomplete.vim	/^let g:php_builtin_classes = {}$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_builtin_classes = {}$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteBuiltInClass_test.vim	/^    let g:php_builtin_classes = {$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^    let g:php_builtin_classes = { }$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^    let g:php_builtin_classes = {$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_classes = {$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^    let g:php_builtin_classes = {$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^	let g:php_builtin_classes['fictionalbuiltinclass'] = {$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:php_builtin_classes = {}$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/GetClassContents_test.vim	/^    let g:php_builtin_classes = {}$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^    let g:php_builtin_classes = {$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^    let g:php_builtin_classes = {}$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^    let g:php_builtin_classes = {}$/;"	v
g:php_builtin_classes	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^    let g:php_builtin_classes = {}$/;"	v
g:php_builtin_classnames	./vim82/autoload/phpcomplete.vim	/^	let g:php_builtin_classnames[classname] = ''$/;"	v
g:php_builtin_classnames	./vim82/autoload/phpcomplete.vim	/^let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:php_builtin_classnames[classname] = ''$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^    let g:php_builtin_classnames = { 'DateTime':'' }$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^    let g:php_builtin_classnames = { }$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_classnames = {$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^    let g:php_builtin_classnames = {$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^    let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^	let g:php_builtin_classnames['fictionalbuiltinclass'] = ''$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^    let g:php_builtin_classnames = {'datetime': ''}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/GetClassLocation_test.vim	/^    let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^    let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^    let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_classnames	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^    let g:php_builtin_classnames = {}$/;"	v
g:php_builtin_functions	./vim82/autoload/phpcomplete.vim	/^let g:php_builtin_functions = {}$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_builtin_functions = {}$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_functions = {$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_functions = {}$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:php_builtin_functions = {}$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^    let g:php_builtin_functions = {$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^    let g:php_builtin_functions = {}$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/GetFunctionLocation_test.vim	/^    let g:php_builtin_functions = {$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/GetFunctionLocation_test.vim	/^    let g:php_builtin_functions = {}$/;"	v
g:php_builtin_functions	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^    let g:php_builtin_functions = {}$/;"	v
g:php_builtin_interfacenames	./vim82/autoload/phpcomplete.vim	/^	let g:php_builtin_interfacenames[interfacename] = ''$/;"	v
g:php_builtin_interfacenames	./vim82/autoload/phpcomplete.vim	/^let g:php_builtin_interfacenames = {}$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:php_builtin_interfacenames[interfacename] = ''$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_builtin_interfacenames = {}$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_interfacenames = {$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_interfacenames = {}$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^    let g:php_builtin_interfacenames = {}$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:php_builtin_interfacenames = {}$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^    let g:php_builtin_interfacenames = {}$/;"	v
g:php_builtin_interfacenames	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^    let g:php_builtin_interfacenames = {}$/;"	v
g:php_builtin_interfaces	./vim82/autoload/phpcomplete.vim	/^let g:php_builtin_interfaces = {}$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_builtin_interfaces = {}$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^    let g:php_builtin_interfaces = { }$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^    let g:php_builtin_interfaces = {$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_builtin_interfaces = {$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^    let g:php_builtin_interfaces = {}$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:php_builtin_interfaces = {}$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^    let g:php_builtin_interfaces = {}$/;"	v
g:php_builtin_interfaces	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^    let g:php_builtin_interfaces = {}$/;"	v
g:php_builtin_object_functions	./vim82/autoload/phpcomplete.vim	/^		let g:php_builtin_object_functions[classname.'::'.method_name.'('] = method_info.signature$/;"	v
g:php_builtin_object_functions	./vim82/autoload/phpcomplete.vim	/^		let g:php_builtin_object_functions[interfacename.'::'.method_name.'('] = method_info.signature$/;"	v
g:php_builtin_object_functions	./vim82/autoload/phpcomplete.vim	/^let g:php_builtin_object_functions = {}$/;"	v
g:php_builtin_object_functions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^		let g:php_builtin_object_functions[classname.'::'.method_name.'('] = method_info.signature$/;"	v
g:php_builtin_object_functions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^		let g:php_builtin_object_functions[interfacename.'::'.method_name.'('] = method_info.signature$/;"	v
g:php_builtin_object_functions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_builtin_object_functions = {}$/;"	v
g:php_builtin_object_functions	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^    let g:php_builtin_object_functions = {$/;"	v
g:php_builtin_object_functions	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^    let g:php_builtin_object_functions = {}$/;"	v
g:php_builtin_vars	./vim82/autoload/phpcomplete.vim	/^let g:php_builtin_vars ={$/;"	v
g:php_builtin_vars	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_builtin_vars ={$/;"	v
g:php_builtin_vars	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^    let g:php_builtin_vars = {$/;"	v
g:php_builtin_vars	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^    let g:php_builtin_vars = {}$/;"	v
g:php_constants	./vim82/autoload/phpcomplete.vim	/^let g:php_constants = {}$/;"	v
g:php_constants	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:php_constants = {}$/;"	v
g:php_constants	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_constants = {$/;"	v
g:php_constants	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_constants = {}$/;"	v
g:php_constants	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:php_constants = {}$/;"	v
g:php_keywords	./vim82/autoload/phpcomplete.vim	/^let g:php_keywords={'PHP_SELF':'','argv':'','argc':'','GATEWAY_INTERFACE':'','SERVER_ADDR':'','S/;"	v
g:php_keywords	./vimfiles/bundle/phpcomplete.vim/misc/php_keywords.vim	/^let g:php_keywords = {$/;"	v
g:php_keywords	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_keywords = {$/;"	v
g:php_keywords	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:php_keywords = {}$/;"	v
g:php_keywords	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:php_keywords = {}$/;"	v
g:php_sync_method	./vim82/indent/php.vim	/^let g:php_sync_method = 0$/;"	v
g:phpcomplete_active_class_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_active_class_extensions += g:phpcomplete_add_class_extensions$/;"	v
g:phpcomplete_active_class_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:phpcomplete_active_class_extensions = [$/;"	v
g:phpcomplete_active_constant_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_active_constant_extensions += g:phpcomplete_add_constant_extensions$/;"	v
g:phpcomplete_active_constant_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:phpcomplete_active_constant_extensions = [$/;"	v
g:phpcomplete_active_function_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_active_function_extensions += g:phpcomplete_add_function_extensions$/;"	v
g:phpcomplete_active_function_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:phpcomplete_active_function_extensions = [$/;"	v
g:phpcomplete_active_interface_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_active_interface_extensions += g:phpcomplete_add_interface_extensions$/;"	v
g:phpcomplete_active_interface_extensions	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let g:phpcomplete_active_interface_extensions = [$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['0mq_messaging'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['apc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['cairo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['chdb'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['curl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['date_time'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['directories'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['dom'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['ev'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['event'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['fann'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['fileinfo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['gearman'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['gender'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['gmagick'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['gmp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['haru'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['hrtime'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['http'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['imagemagick'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['intl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['judy'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['ktaglib'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['lapack'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['libxml'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['lua'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['memcache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['memcached'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['ming'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['mongo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['mysqli'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['mysqlnd_uh'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['oauth'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['oci8'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['phar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['predefined_exceptions'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['predefined_interfaces_and_classes'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['pthreads'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['quickhash'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['rar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['reflection'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['rrd'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['sessions'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['simplexml'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['snmp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['soap'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['solr'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['sphinx'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['spl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['spl_types'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['sqlite3'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['stomp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['streams'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['svm'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['sync'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['tidy'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['tokyo_tyrant'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['v8js'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['varnish'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['weakref'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['xmldiff'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['xmlreader'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['xsl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['yaf'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['yar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['classes']['zip'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['4d_pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['apc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['apd'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['arrays'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['bbcode'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['blenc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['cairo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['calendar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['classkit'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['com'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['command_line_usage'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['common'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['context_options_and_parameters'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['cubrid'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['cubrid_pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['curl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['cyrus'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['date_time'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['db_'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['dbx'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['direct_io'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['directories'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['dom'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['eio'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['error_handling'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ev'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['event'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['exif'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['expect'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['fann'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['fdf'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['fileinfo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['filesystem'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['filter'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['firebird_interbase'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['firebird_pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['fribidi'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['frontbase'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ftp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['gd'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['gearman'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['geoip'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['gmp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['gnupg'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['gopher'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['gupnp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['handling_file_uploads'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['hash'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['http'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['hyperwave_api'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ibm_db2'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['iconv'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['id3'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['iis'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['imagemagick'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['imap'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['informix'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ingres'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['inotify'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['intl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['json'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['kadm5'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ldap'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['libevent'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['libxml'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['list_of_parser_tokens'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['list_of_reserved_words'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mailparse'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['math'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['maxdb'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mcrypt'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mcve'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['memcache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mhash'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['migrating_from_php_4_to_php_50x'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['migrating_from_php_50x_to_php_51x'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['migrating_from_php_51x_to_php_52x'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['migrating_from_php_52x_to_php_53x'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['migrating_from_php_53x_to_php_54x'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['migrating_from_php_54x_to_php_55x'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['migrating_from_php_55x_to_php_56x'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ming'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['misc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mnogosearch'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mongo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ms_sql_server_pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['msql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mssql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['multibyte_string'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysql_pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysqli'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysqlnd_memcache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysqlnd_ms'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysqlnd_mux'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysqlnd_qc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['mysqlnd_uh'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ncurses'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['network'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['newt'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['oauth'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['oci8'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['odbc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['odbc_and_db2_pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['oggvorbis'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['openal'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['openssl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['output_control'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['paradox'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['parsekit'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['password_hashing'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['pcntl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['pcre'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['pdo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['php_options_info'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['php_type_comparison_tables'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['phpini_directives'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['posix'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['posix_regex'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['postgresql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['program_execution'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['pspell'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['pthreads'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['radius'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['rar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['rpm_reader'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['runkit'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['sam'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['semaphore'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['sessions'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['snmp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['soap'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['sockets'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['solr'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['sphinx'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['spl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['sqlite'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['sqlite3'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['sqlsrv'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['ssh2'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['streams'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['strings'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['supported_protocols_and_wrappers'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['svn'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['tidy'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['trader'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['types'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['unknow'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['uopz'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['urls'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['variable_handling'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['varnish'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['win32service'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['xattr'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['xdiff'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['xhprof'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['xml_parser'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['xsl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['yaf'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['yaml'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['yar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['yp_nis'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['constants']['zlib'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['apache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['apc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['apd'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['arrays'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['bbcode'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['bc_math'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['bcompiler'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['blenc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['bzip2'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['cairo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['calendar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['chdb'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['classes_objects'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['classkit'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['com'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['crack'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ctype'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['cubrid'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['curl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['cyrus'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['date_time'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['db_'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['dba'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['dbase'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['dbx'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['direct_io'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['directories'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['dom'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['eio'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['enchant'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['error_handling'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['exif'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['expect'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['fam'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['fann'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['fastcgi_process_manager'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['fdf'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['fileinfo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['filepro'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['filesystem'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['filter'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['firebird_interbase'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['fribidi'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['frontbase'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ftp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['function_handling'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['gd'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['geoip'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['gettext'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['gmp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['gnupg'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['gopher'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['gupnp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['hash'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['http'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['hyperwave_api'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ibm_db2'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['iconv'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['id3'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['iis'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['imap'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['inclued'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['informix'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ingres'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['inotify'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['intl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['json'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['judy'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['kadm5'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ldap'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['libevent'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['libxml'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['lzf'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mail'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mailparse'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['math'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['maxdb'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mcrypt'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mcve'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['memcache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mhash'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ming'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['misc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mnogosearch'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mongo'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mqseries'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['msession'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['msql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mssql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['multibyte_string'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mysql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mysqli'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mysqlnd_memcache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mysqlnd_ms'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mysqlnd_qc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['mysqlnd_uh'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ncurses'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['network'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['newt'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['nsapi'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['oauth'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['oci8'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['odbc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['opcache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['openal'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['openssl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['output_control'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['paradox'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['parsekit'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['password_hashing'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['pcntl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['pcre'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['pdf'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['php_options_info'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['posix'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['posix_regex'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['postgresql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['proctitle'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['program_execution'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ps'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['pspell'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['radius'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['rar'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['readline'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['recode'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['rpm_reader'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['rrd'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['runkit'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['semaphore'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['session_pgsql'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['sessions'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['shared_memory'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['simplexml'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['snmp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['soap'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['sockets'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['solr'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['spl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['spplus'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['sqlite'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['sqlsrv'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ssdeep'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['ssh2'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['statistics'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['stomp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['streams'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['strings'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['svn'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['sybase'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['taint'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['tcp'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['tidy'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['tokenizer'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['trader'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['uopz'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['urls'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['variable_handling'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['vpopmail'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['wddx'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['win32ps'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['win32service'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['wincache'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['xattr'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['xdiff'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['xhprof'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['xml_parser'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['xml_rpc'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['xmlwriter'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['yaml'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['yaz'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['yp_nis'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['zip'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['functions']['zlib'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['interfaces']['date_time'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['interfaces']['json'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['interfaces']['predefined_interfaces_and_classes'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['interfaces']['reflection'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin.vim	/^let g:phpcomplete_builtin['interfaces']['spl'] = {$/;"	v
g:phpcomplete_builtin	./vimfiles/bundle/phpcomplete.vim/misc/builtin_manual.vim	/^let g:phpcomplete_builtin['classes']['xmlwriter'] = {$/;"	v
g:phpcomplete_cache_taglists	./vim82/autoload/phpcomplete.vim	/^	let g:phpcomplete_cache_taglists = 1$/;"	v
g:phpcomplete_cache_taglists	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_cache_taglists = 1$/;"	v
g:phpcomplete_complete_for_unknown_classes	./vim82/autoload/phpcomplete.vim	/^	let g:phpcomplete_complete_for_unknown_classes = 0$/;"	v
g:phpcomplete_complete_for_unknown_classes	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_complete_for_unknown_classes = 0$/;"	v
g:phpcomplete_complete_for_unknown_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^    let g:phpcomplete_complete_for_unknown_classes = 0$/;"	v
g:phpcomplete_complete_for_unknown_classes	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUnknownClass_test.vim	/^    let g:phpcomplete_complete_for_unknown_classes = 1$/;"	v
g:phpcomplete_enhance_jump_to_definition	./vimfiles/bundle/phpcomplete.vim/ftplugin/php_phpcomplete.vim	/^let g:phpcomplete_enhance_jump_to_definition = get(g:, 'phpcomplete_enhance_jump_to_definition',/;"	v
g:phpcomplete_mappings	./vimfiles/bundle/phpcomplete.vim/ftplugin/php_phpcomplete.vim	/^let g:phpcomplete_mappings = extend({$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vim82/autoload/phpcomplete.vim	/^	let g:phpcomplete_min_num_of_chars_for_namespace_completion = 1$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_min_num_of_chars_for_namespace_completion = 1$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/tests/CompleteClassName_test.vim	/^    let g:phpcomplete_min_num_of_chars_for_namespace_completion = 1$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/tests/CompleteGeneral_test.vim	/^    let g:phpcomplete_min_num_of_chars_for_namespace_completion = 1$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^    let g:phpcomplete_min_num_of_chars_for_namespace_completion = 2$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUse_test.vim	/^    let g:phpcomplete_min_num_of_chars_for_namespace_completion = 99$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/tests/GenerateBuiltinClassStub_test.vim	/^    let g:phpcomplete_min_num_of_chars_for_namespace_completion = 1$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/tests/GetCurrentSymbolWithContext_test.vim	/^    let g:phpcomplete_min_num_of_chars_for_namespace_completion = 2$/;"	v
g:phpcomplete_min_num_of_chars_for_namespace_completion	./vimfiles/bundle/phpcomplete.vim/tests/LocateSymbol_test.vim	/^    let g:phpcomplete_min_num_of_chars_for_namespace_completion = 2$/;"	v
g:phpcomplete_parse_docblock_comments	./vim82/autoload/phpcomplete.vim	/^	let g:phpcomplete_parse_docblock_comments = 0$/;"	v
g:phpcomplete_parse_docblock_comments	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_parse_docblock_comments = 0$/;"	v
g:phpcomplete_parse_docblock_comments	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^    let g:phpcomplete_parse_docblock_comments = 0$/;"	v
g:phpcomplete_parse_docblock_comments	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^    let g:phpcomplete_parse_docblock_comments = 1$/;"	v
g:phpcomplete_relax_static_constraint	./vim82/autoload/phpcomplete.vim	/^	let g:phpcomplete_relax_static_constraint = 0$/;"	v
g:phpcomplete_relax_static_constraint	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_relax_static_constraint = 0$/;"	v
g:phpcomplete_relax_static_constraint	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^    let g:phpcomplete_relax_static_constraint = 0$/;"	v
g:phpcomplete_relax_static_constraint	./vimfiles/bundle/phpcomplete.vim/tests/CompleteUserClass_test.vim	/^    let g:phpcomplete_relax_static_constraint = 1$/;"	v
g:phpcomplete_relax_static_constraint	./vimfiles/bundle/phpcomplete.vim/tests/GetDocBlock_test.vim	/^    let g:phpcomplete_relax_static_constraint = 0$/;"	v
g:phpcomplete_search_tags_for_variables	./vim82/autoload/phpcomplete.vim	/^	let g:phpcomplete_search_tags_for_variables = 0$/;"	v
g:phpcomplete_search_tags_for_variables	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let g:phpcomplete_search_tags_for_variables = 0$/;"	v
g:phpcomplete_search_tags_for_variables	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^    let g:phpcomplete_search_tags_for_variables = 0$/;"	v
g:phpcomplete_search_tags_for_variables	./vimfiles/bundle/phpcomplete.vim/tests/CompleteVariable_test.vim	/^    let g:phpcomplete_search_tags_for_variables = 1$/;"	v
g:phpcomplete_search_tags_for_variables	./vimfiles/bundle/phpcomplete.vim/tests/GetClassName_test.vim	/^    let g:phpcomplete_search_tags_for_variables = 1$/;"	v
g:plain_mf_macros	./vim82/syntax/mp.vim	/^  let g:plain_mf_macros = s:plain_mf_macros$/;"	v
g:plain_mf_macros	./vim82/syntax/mp.vim	/^let g:plain_mf_macros = 0 " plain.mf has no special meaning for MetaPost$/;"	v
g:plain_mf_modes	./vim82/syntax/mp.vim	/^  let g:plain_mf_modes = s:plain_mf_modes$/;"	v
g:plain_mf_modes	./vim82/syntax/mp.vim	/^let g:plain_mf_modes  = 0 " No METAFONT modes$/;"	v
g:previm_custom_css_path	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^    let g:previm_custom_css_path = self.tmp_previm_custom_css_path$/;"	v
g:previm_custom_css_path	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^  let g:previm_custom_css_path = s:base_dir . '\/dummy_user_custom.css'$/;"	v
g:previm_custom_css_path	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^  let g:previm_custom_css_path = s:base_dir . '\/not_exists.css'$/;"	v
g:previm_disable_default_css	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^    let g:previm_disable_default_css = self.tmp_previm_disable_default_css$/;"	v
g:previm_disable_default_css	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^  let g:previm_disable_default_css = 1$/;"	v
g:previm_disable_default_css	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^  let g:previm_disable_default_css = 2$/;"	v
g:previm_open_cmd	./VIMPROJ/vimrc/_vimrc	/^    let g:previm_open_cmd = 'open -a Safari'$/;"	v
g:proj_type	./VIMPROJ/AlphaTaiBai.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/CN_2C_Release.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/CN_2D_Release.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/CN_2E_Release.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/GITBA_python-plugin-sdk.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/GOpen_Tcaplus.vim	/^    let g:proj_type="cpp"$/;"	v
g:proj_type	./VIMPROJ/GovVersion_20200201.vim	/^    let g:proj_type="cpp"$/;"	v
g:proj_type	./VIMPROJ/Lgame-server_group3_daily_task.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/Server_proj.release_0.3.0.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/Server_proj.trunk.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/VIMPROJ.vim	/^    let g:proj_type="vim"$/;"	v
g:proj_type	./VIMPROJ/chinese-poetry.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/main.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/myLGameTools.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/myp4helper.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/python-plugin-sdk.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/release_3.2.0.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/release_3.3.0.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/release_3.4.0.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/release_3.5.0.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/tplugin-sdk.vim	/^    let g:proj_type="python"$/;"	v
g:proj_type	./VIMPROJ/trunkmain.Configure_proj.vim	/^    let g:proj_type="cpp"$/;"	v
g:proj_type	./VIMPROJ/trunkmain.Server_proj.vim	/^    let g:proj_type="lgamesvr"$/;"	v
g:proj_type	./VIMPROJ/vimrc/_vimrc	/^        let g:proj_type="cpp"$/;"	v
g:proj_type	./VIMPROJ/vimrc/_vimrc	/^        let g:proj_type="php"$/;"	v
g:proj_type	./VIMPROJ/vimrc/_vimrc	/^        let g:proj_type="pkm"$/;"	v
g:proj_type	./VIMPROJ/vimrc/_vimrc	/^let g:proj_type="default"$/;"	v
g:pydoc_executable	./vim82/ftplugin/python.vim	/^        let g:pydoc_executable = 0$/;"	v
g:pydoc_executable	./vim82/ftplugin/python.vim	/^        let g:pydoc_executable = 1$/;"	v
g:pyindent_nested_paren	./vim82/indent/bzl.vim	/^      let g:pyindent_nested_paren = l:pyindent_nested_paren$/;"	v
g:pyindent_nested_paren	./vim82/indent/bzl.vim	/^    let g:pyindent_nested_paren = 'shiftwidth() * 2'$/;"	v
g:pyindent_open_paren	./vim82/indent/bzl.vim	/^      let g:pyindent_open_paren = l:pyindent_open_paren$/;"	v
g:pyindent_open_paren	./vim82/indent/bzl.vim	/^    let g:pyindent_open_paren = 'shiftwidth() * 2'$/;"	v
g:pymode	./VIMPROJ/vimrc/_vimrc	/^let g:pymode = 0$/;"	v
g:pymode_breakpoint_cmd	./vimfiles/bundle/python-mode/autoload/pymode/breakpoint.vim	/^        let g:pymode_breakpoint_cmd = 'import pdb; pdb.set_trace()  # XXX BREAKPOINT'$/;"	v
g:pymode_debug	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^        let g:pymode_debug += 1$/;"	v
g:pymode_debug	./vimfiles/bundle/python-mode/t/rope.vim	/^let g:pymode_debug = 1$/;"	v
g:pymode_doc	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:pymode_doc = 0$/;"	v
g:pymode_folding	./VIMPROJ/vimrc/_vimrc	/^let g:pymode_folding = 0$/;"	v
g:pymode_lint	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^    let g:pymode_lint = g:pymode_lint ? 0 : 1$/;"	v
g:pymode_lint	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:pymode_lint = 0$/;"	v
g:pymode_motion	./VIMPROJ/vimrc/_vimrc	/^let g:pymode_motion = 0$/;"	v
g:pymode_path	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:pymode_path = 0$/;"	v
g:pymode_python	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^        let g:pymode_python = 'disable'$/;"	v
g:pymode_python	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^        let g:pymode_python = 'python'$/;"	v
g:pymode_python	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^        let g:pymode_python = 'python3'$/;"	v
g:pymode_python	./vimfiles/bundle/python-mode/t/plugin.vim	/^        let g:pymode_python = 'disable'$/;"	v
g:pymode_rope	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:pymode_rope = 0$/;"	v
g:pymode_rope_autoimport	./vimfiles/bundle/python-mode/t/rope.vim	/^let g:pymode_rope_autoimport = 0$/;"	v
g:pymode_rope_completion_bind	./vimfiles/bundle/python-mode/t/rope.vim	/^let g:pymode_rope_completion_bind = 'X'$/;"	v
g:pymode_rope_lookup_project	./vimfiles/bundle/python-mode/t/rope.vim	/^let g:pymode_rope_lookup_project = 0$/;"	v
g:pymode_run	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:pymode_run = 0$/;"	v
g:pymode_run_bind	./VIMPROJ/vimrc/_vimrc	/^let g:pymode_run_bind = '<leader>r'$/;"	v
g:pymode_version	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^let g:pymode_version = "0.9.2"$/;"	v
g:pymode_virtualenv	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^    let g:pymode_virtualenv = 0$/;"	v
g:pymode_virtualenv_path	./vimfiles/bundle/python-mode/autoload/pymode/virtualenv.vim	/^    let g:pymode_virtualenv_path = a:path$/;"	v
g:r_indent_align_args	./vim82/indent/r.vim	/^let g:r_indent_align_args     = get(g:, 'r_indent_align_args',      1)$/;"	v
g:r_indent_comment_column	./vim82/indent/r.vim	/^let g:r_indent_comment_column = get(g:, 'r_indent_comment_column', 40)$/;"	v
g:r_indent_ess_comments	./vim82/indent/r.vim	/^let g:r_indent_ess_comments   = get(g:, 'r_indent_ess_comments',    0)$/;"	v
g:r_indent_ess_compatible	./vim82/indent/r.vim	/^let g:r_indent_ess_compatible = get(g:, 'r_indent_ess_compatible',  0)$/;"	v
g:r_indent_op_pattern	./vim82/indent/r.vim	/^let g:r_indent_op_pattern     = get(g:, 'r_indent_op_pattern',$/;"	v
g:r_syntax_fun_pattern	./vim82/syntax/r.vim	/^    let g:r_syntax_fun_pattern = 0$/;"	v
g:r_syntax_fun_pattern	./vim82/syntax/r.vim	/^    let g:r_syntax_fun_pattern = 1$/;"	v
g:r_syntax_hl_roxygen	./vim82/syntax/r.vim	/^  let g:r_syntax_hl_roxygen = g:r_hl_roxygen$/;"	v
g:r_syntax_hl_roxygen	./vim82/syntax/r.vim	/^let g:r_syntax_hl_roxygen = get(g:, 'r_syntax_hl_roxygen', 1)$/;"	v
g:r_syntax_minlines	./vim82/syntax/r.vim	/^  let g:r_syntax_minlines = g:r_syn_minlines$/;"	v
g:reversed	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:reversed = get(g:, 'ctrlp_match_window_reversed', 0)$/;"	v
g:rmd_fenced_languages	./vim82/syntax/rmd.vim	/^    let g:rmd_fenced_languages = deepcopy(g:markdown_fenced_languages)$/;"	v
g:rmd_fenced_languages	./vim82/syntax/rmd.vim	/^  let g:rmd_fenced_languages = ['r']$/;"	v
g:rmd_syn_hl_chunk	./vim82/syntax/rmd.vim	/^let g:rmd_syn_hl_chunk = get(g:, 'g:rmd_syn_hl_chunk', 0)$/;"	v
g:rmd_syn_hl_citations	./vim82/syntax/rmd.vim	/^let g:rmd_syn_hl_citations = get(g:, 'rmd_syn_hl_citations', 1)$/;"	v
g:rmd_syn_hl_yaml	./vim82/syntax/rmd.vim	/^let g:rmd_syn_hl_yaml = get(g:, 'rmd_syn_hl_yaml', 1)$/;"	v
g:rst_fold_enabled	./vim82/ftplugin/rst.vim	/^  let g:rst_fold_enabled = 0$/;"	v
g:rst_syntax_code_list	./vim82/syntax/rst.vim	/^        let g:rst_syntax_code_list[s:elem] = [s:elem]$/;"	v
g:rst_syntax_code_list	./vim82/syntax/rst.vim	/^    let g:rst_syntax_code_list = {$/;"	v
g:rst_syntax_code_list	./vim82/syntax/rst.vim	/^    let g:rst_syntax_code_list = {}$/;"	v
g:ruby_default_path	./vim82/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	./vim82/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	./vim82/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	./vim82/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	./vim82/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'expression'$/;"	v
g:ruby_version_paths	./vim82/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'/;"	v
g:ruby_version_paths	./vim82/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	./vim82/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	./vim82/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_completions	./vim82/autoload/rubycomplete.vim	/^        let g:rubycomplete_completions = []$/;"	v
g:rubycomplete_include_object	./vim82/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	./vim82/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	./vim82/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	./vim82/autoload/rustfmt.vim	/^	let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	./vim82/autoload/rustfmt.vim	/^	let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_fail_silently	./vim82/autoload/rustfmt.vim	/^	let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_options	./vim82/autoload/rustfmt.vim	/^	let g:rustfmt_options = ""$/;"	v
g:savemark_	./vimfiles/plugin/cecutil.vim	/^   let g:savemark_{markname} = ""$/;"	v
g:savemark_	./vimfiles/plugin/cecutil.vim	/^   let g:savemark_{markname} = savemark$/;"	v
g:sh_fold_enabled	./vim82/syntax/sh.vim	/^ let g:sh_fold_enabled= 0$/;"	v
g:snipPos	./vimfiles/autoload/snipMate.vim	/^				let g:snipPos[s:curPos][3][i][1] = col$/;"	v
g:snipPos	./vimfiles/autoload/snipMate.vim	/^			let g:snipPos[s:curPos][1] = col('.')$/;"	v
g:snipPos	./vimfiles/autoload/snipMate.vim	/^			let g:snipPos[s:curPos][1] = startPlaceholder$/;"	v
g:snipPos	./vimfiles/autoload/snipMate.vim	/^			let g:snipPos[s:curPos][2] = -2$/;"	v
g:snipPos	./vimfiles/autoload/snipMate.vim	/^			let g:snipPos[s:curPos][2] = 0$/;"	v
g:snipPos	./vimfiles/autoload/snipMate.vim	/^	let g:snipPos[s:curPos][2] = newWordLen$/;"	v
g:spec_chglog_format	./vim82/ftplugin/spec.vim	/^				let g:spec_chglog_format = "%a %b %d %Y " . l:email$/;"	v
g:spec_chglog_format	./vim82/ftplugin/spec.vim	/^				let g:spec_chglog_format = a:format$/;"	v
g:spell_clean_limit	./vim82/spell/cleanadd.vim	/^  let g:spell_clean_limit = 1$/;"	v
g:spellfile_URL	./vim82/autoload/spellfile.vim	/^    let g:spellfile_URL = 'ftp:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:spellfile_URL	./vim82/autoload/spellfile.vim	/^    let g:spellfile_URL = 'http:\/\/ftp.vim.org\/pub\/vim\/runtime\/spell'$/;"	v
g:syntastic_c_checkers	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  let g:syntastic_c_checkers = []$/;"	v
g:syntastic_cpp_checkers	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  let g:syntastic_cpp_checkers = []$/;"	v
g:syntastic_cuda_checkers	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  let g:syntastic_cuda_checkers = []$/;"	v
g:syntastic_objc_checkers	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  let g:syntastic_objc_checkers = []$/;"	v
g:syntastic_objcpp_checkers	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  let g:syntastic_objcpp_checkers = []$/;"	v
g:tagbar_type_snippets	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:tar_browseoptions	./vim82/autoload/tar.vim	/^ let g:tar_browseoptions= "Ptf"$/;"	v
g:tar_cmd	./vim82/autoload/tar.vim	/^ let g:tar_cmd= "tar"$/;"	v
g:tar_copycmd	./vim82/autoload/tar.vim	/^ let g:tar_copycmd= g:netrw_localcopycmd$/;"	v
g:tar_delfile	./vim82/autoload/tar.vim	/^ let g:tar_delfile="--delete -f"$/;"	v
g:tar_extractcmd	./vim82/autoload/tar.vim	/^ let g:tar_extractcmd= "tar -xf"$/;"	v
g:tar_readoptions	./vim82/autoload/tar.vim	/^ let g:tar_readoptions= "OPxf"$/;"	v
g:tar_shq	./vim82/autoload/tar.vim	/^   let g:tar_shq= "'"$/;"	v
g:tar_shq	./vim82/autoload/tar.vim	/^   let g:tar_shq= '"'$/;"	v
g:tar_shq	./vim82/autoload/tar.vim	/^  let g:tar_shq= "'"$/;"	v
g:tar_shq	./vim82/autoload/tar.vim	/^  let g:tar_shq= &shq$/;"	v
g:tar_writeoptions	./vim82/autoload/tar.vim	/^ let g:tar_writeoptions= "uf"$/;"	v
g:tarmodifyfile_dstpath	./VIMPROJ/Tool/main.vim	/^        let g:tarmodifyfile_dstpath=''$/;"	v
g:tarmodifyfile_exclude	./VIMPROJ/Tool/main.vim	/^        let g:tarmodifyfile_exclude=".svn .git *.md tags cscope.files cscope.out *.swp *.tmp *.l/;"	v
g:tarmodifyfile_listfile	./VIMPROJ/Tool/main.vim	/^        let g:tarmodifyfile_listfile=0  ".*Ƿ.*ӡ.*ļ.*б.*$/;"	v
g:tarmodifyfile_path	./VIMPROJ/Tool/main.vim	/^        let g:tarmodifyfile_path=s:filename$/;"	v
g:tarmodifyfile_zlib	./VIMPROJ/Tool/main.vim	/^        let g:tarmodifyfile_zlib=0      ".*Ƿ.*ѹ.*$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/.dein/test/toml.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/toml.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^  let g:temp = tempname()$/;"	v
g:temp	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/toml.vim	/^  let g:temp = tempname()$/;"	v
g:termdebugger	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  let g:termdebugger = 'gdb'$/;"	v
g:tex_indent_brace	./vim82/indent/tex.vim	/^    let g:tex_indent_brace = 1$/;"	v
g:tex_indent_items	./vim82/indent/tex.vim	/^    let g:tex_indent_items = 1$/;"	v
g:tex_itemize_env	./vim82/indent/tex.vim	/^        let g:tex_itemize_env = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
g:tex_items	./vim82/indent/tex.vim	/^        let g:tex_items = '\\\\bibitem\\|\\\\item'$/;"	v
g:tex_items	./vim82/indent/tex.vim	/^    let g:tex_items = ''$/;"	v
g:tex_items	./vim82/indent/tex.vim	/^let g:tex_items = '^\\s*' . substitute(g:tex_items, '^\\(\\^\\\\s\\*\\)*', '', '')$/;"	v
g:tex_max_scan_line	./vim82/indent/tex.vim	/^    let g:tex_max_scan_line = 60$/;"	v
g:tex_noindent_env	./vim82/indent/tex.vim	/^    let g:tex_noindent_env = 'document\\|verbatim\\|lstlisting'$/;"	v
g:tmp	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:tmp = exists('g:YANKRING') ? g:YANKRING : []$/;"	v
g:tohtml#charset_to_encoding	./vim82/autoload/tohtml.vim	/^let g:tohtml#charset_to_encoding = {$/;"	v
g:tohtml#encoding_to_charset	./vim82/autoload/tohtml.vim	/^let g:tohtml#encoding_to_charset = {$/;"	v
g:txt2tags_executable	./vimfiles/compiler/txt2tags-compiler.vim	/^	let g:txt2tags_executable = "txt2tags.py"$/;"	v
g:txt2tags_options	./vimfiles/compiler/txt2tags-compiler.vim	/^	let g:txt2tags_options = " "$/;"	v
g:unloaded_tohtml_plugin	./vim82/syntax/2html.vim	/^	let g:unloaded_tohtml_plugin = "unknown"$/;"	v
g:unloaded_tohtml_plugin	./vim82/syntax/2html.vim	/^	let g:unloaded_tohtml_plugin = substitute(s:lines[0], '.*loaded_2html_plugin = \\([''"]\\)\\(\\/;"	v
g:unloaded_tohtml_plugin	./vim82/syntax/2html.vim	/^      let g:unloaded_tohtml_plugin = "unknown"$/;"	v
g:used_javascript_libs	./VIMPROJ/Tool/InitPHP.vim	/^    let g:used_javascript_libs = 'jquery'$/;"	v
g:used_javascript_libs	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^    let g:used_javascript_libs = join(s:default_libs, ',')$/;"	v
g:val	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:val = [1, 2, 3 ,4, 5]$/;"	v
g:val	./vimfiles/bundle/ctrlp-extensions.vim/t/yankring.vim	/^    let g:val = [1, 2, 3]$/;"	v
g:vhdl_indent_genportmap	./vim82/indent/vhdl.vim	/^  let g:vhdl_indent_genportmap = 1$/;"	v
g:vhdl_indent_rhsassign	./vim82/indent/vhdl.vim	/^  let g:vhdl_indent_rhsassign = 1$/;"	v
g:vimball_home	./VIMPROJ/vimrc/_vimrc	/^let g:vimball_home=$VIMPROJ."\/..\/vimfiles\/"$/;"	v
g:vimball_home	./vim82/autoload/getscript.vim	/^       let g:vimball_home= oldvimballhome$/;"	v
g:vimball_home	./vim82/autoload/getscript.vim	/^      let g:vimball_home= s:autoinstall$/;"	v
g:vimball_mkdir	./vim82/autoload/vimball.vim	/^   let g:vimball_mkdir= "makedir"$/;"	v
g:vimball_mkdir	./vim82/autoload/vimball.vim	/^   let g:vimball_mkdir= "mkdir"$/;"	v
g:vimball_mkdir	./vim82/autoload/vimball.vim	/^   let g:vimball_mkdir= g:netrw_local_mkdir$/;"	v
g:vimsyn_embed	./vim82/syntax/vim.vim	/^ let g:vimsyn_embed= "lmpPr"$/;"	v
g:vimsyn_maxlines	./vim82/syntax/vim.vim	/^ let g:vimsyn_maxlines= g:vim_maxlines$/;"	v
g:vimsyn_minlines	./vim82/syntax/vim.vim	/^ let g:vimsyn_minlines= g:vim_minlines$/;"	v
g:vimsyn_noerror	./vim82/syntax/vim.vim	/^ let g:vimsyn_noerror= g:vimsyntax_noerror$/;"	v
g:visincr_datedivset	./vimfiles/autoload/visincr.vim	/^ let g:visincr_datedivset= '[-.\/_:~,+*^]\\='$/;"	v
g:visincr_leaddate	./vimfiles/autoload/visincr.vim	/^ let g:visincr_leaddate = '0'$/;"	v
g:vmustache_counters	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^	let g:vmustache_counters[a:name] += 1$/;"	v
g:vmustache_counters	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^	let g:vmustache_counters[a:name] = l:start$/;"	v
g:vmustache_counters	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^let g:vmustache_counters = {}$/;"	v
g:xmldata_aria	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_connection	./vim82/autoload/xmlcomplete.vim	/^		let g:xmldata_connection = {}$/;"	v
g:xmldata_connection	./vim82/autoload/xmlcomplete.vim	/^	let g:xmldata_connection[users] = a:canonical$/;"	v
g:xmldata_entconnect	./vim82/autoload/xmlcomplete.vim	/^		let g:xmldata_entconnect = 'DEFAULT'$/;"	v
g:xmldata_entconnect	./vim82/autoload/xmlcomplete.vim	/^		let g:xmldata_entconnect = a:1$/;"	v
g:xmldata_html32	./vim82/autoload/xml/html32.vim	/^let g:xmldata_html32 = {$/;"	v
g:xmldata_html401s	./vim82/autoload/xml/html401s.vim	/^let g:xmldata_html401s = {$/;"	v
g:xmldata_html401t	./vim82/autoload/xml/html401f.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html401t	./vim82/autoload/xml/html401t.vim	/^let g:xmldata_html401t = {$/;"	v
g:xmldata_html40s	./vim82/autoload/xml/html40s.vim	/^let g:xmldata_html40s = {$/;"	v
g:xmldata_html40t	./vim82/autoload/xml/html40f.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_html40t	./vim82/autoload/xml/html40t.vim	/^let g:xmldata_html40t = {$/;"	v
g:xmldata_html5	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:xmldata_jsf_c	./vimfiles/autoload/xml/jsf_c.vim	/^let g:xmldata_jsf_c= {$/;"	v
g:xmldata_jsf_h	./vimfiles/autoload/xml/jsf_h.vim	/^let g:xmldata_jsf_h= {$/;"	v
g:xmldata_stl_c	./vimfiles/autoload/xml/stl_c.vim	/^let g:xmldata_stl_c= {$/;"	v
g:xmldata_stl_fmt	./vimfiles/autoload/xml/stl_fmt.vim	/^let g:xmldata_stl_fmt= {$/;"	v
g:xmldata_stl_sql	./vimfiles/autoload/xml/stl_sql.vim	/^let g:xmldata_stl_sql= {$/;"	v
g:xmldata_stl_x	./vimfiles/autoload/xml/stl_x.vim	/^let g:xmldata_stl_x= {$/;"	v
g:xmldata_tc	./vimfiles/autoload/xml/tc.vim	/^let g:xmldata_tc= {$/;"	v
g:xmldata_tx	./vimfiles/autoload/xml/tx.vim	/^let g:xmldata_tx= {$/;"	v
g:xmldata_xhtml10f	./vim82/autoload/xml/xhtml10f.vim	/^let g:xmldata_xhtml10f = {$/;"	v
g:xmldata_xhtml10s	./vim82/autoload/xml/xhtml10s.vim	/^let g:xmldata_xhtml10s = {$/;"	v
g:xmldata_xhtml10t	./vim82/autoload/xml/xhtml10t.vim	/^let g:xmldata_xhtml10t = {$/;"	v
g:xmldata_xhtml11	./vim82/autoload/xml/xhtml11.vim	/^let g:xmldata_xhtml11 = {$/;"	v
g:xmldata_xsd	./vim82/autoload/xml/xsd.vim	/^let g:xmldata_xsd = {$/;"	v
g:xmldata_xsl	./vim82/autoload/xml/xsl.vim	/^let g:xmldata_xsl = {$/;"	v
g:xxdprogram	./vim82/menu.vim	/^	let g:xxdprogram = '"' .. g:xxdprogram .. '"'$/;"	v
g:xxdprogram	./vim82/menu.vim	/^      let g:xxdprogram = "xxd"$/;"	v
g:xxdprogram	./vim82/menu.vim	/^      let g:xxdprogram = $VIMRUNTIME . (&shellslash ? '\/' : '\\') . "xxd.exe"$/;"	v
g:ycm_add_preview_to_completeopt	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_add_preview_to_completeopt =$/;"	v
g:ycm_always_populate_location_list	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_always_populate_location_list =$/;"	v
g:ycm_auto_start_csharp_server	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_auto_start_csharp_server =$/;"	v
g:ycm_auto_stop_csharp_server	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_auto_stop_csharp_server =$/;"	v
g:ycm_auto_trigger	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_auto_trigger =$/;"	v
g:ycm_autoclose_preview_window_after_completion	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_autoclose_preview_window_after_completion =$/;"	v
g:ycm_autoclose_preview_window_after_insertion	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_autoclose_preview_window_after_insertion =$/;"	v
g:ycm_cache_omnifunc	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_cache_omnifunc =$/;"	v
g:ycm_collect_identifiers_from_comments_and_strings	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_collect_identifiers_from_comments_and_strings =$/;"	v
g:ycm_collect_identifiers_from_tags_files	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_collect_identifiers_from_tags_files =$/;"	v
g:ycm_complete_in_comments	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^    let g:ycm_complete_in_comments = 1$/;"	v
g:ycm_complete_in_comments	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_complete_in_comments =$/;"	v
g:ycm_complete_in_strings	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^    let g:ycm_complete_in_strings = 1$/;"	v
g:ycm_complete_in_strings	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_complete_in_strings =$/;"	v
g:ycm_confirm_extra_conf	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_confirm_extra_conf =$/;"	v
g:ycm_csharp_server_port	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_csharp_server_port =$/;"	v
g:ycm_disable_for_files_larger_than_kb	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_disable_for_files_larger_than_kb =$/;"	v
g:ycm_echo_current_diagnostic	./VIMPROJ/vimrc/_vimrc	/^let g:ycm_echo_current_diagnostic = 0 " 关闭实时报错$/;"	v
g:ycm_echo_current_diagnostic	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_echo_current_diagnostic =$/;"	v
g:ycm_enable_diagnostic_highlighting	./VIMPROJ/vimrc/_vimrc	/^let g:ycm_enable_diagnostic_highlighting = 0$/;"	v
g:ycm_enable_diagnostic_highlighting	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_enable_diagnostic_highlighting =$/;"	v
g:ycm_enable_diagnostic_signs	./VIMPROJ/vimrc/_vimrc	/^let g:ycm_enable_diagnostic_signs = 0$/;"	v
g:ycm_enable_diagnostic_signs	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_enable_diagnostic_signs =$/;"	v
g:ycm_error_symbol	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_error_symbol =$/;"	v
g:ycm_extra_conf_globlist	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_extra_conf_globlist =$/;"	v
g:ycm_extra_conf_vim_data	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_extra_conf_vim_data =$/;"	v
g:ycm_filepath_blacklist	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_filepath_blacklist =$/;"	v
g:ycm_filepath_completion_use_working_dir	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_filepath_completion_use_working_dir =$/;"	v
g:ycm_filetype_blacklist	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_filetype_blacklist =$/;"	v
g:ycm_filetype_specific_completion_to_disable	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_filetype_specific_completion_to_disable =$/;"	v
g:ycm_filetype_whitelist	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_filetype_whitelist =$/;"	v
g:ycm_filter_diagnostics	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_filter_diagnostics =$/;"	v
g:ycm_global_ycm_extra_conf	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_global_ycm_extra_conf =$/;"	v
g:ycm_gocode_binary_path	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_gocode_binary_path =$/;"	v
g:ycm_godef_binary_path	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_godef_binary_path =$/;"	v
g:ycm_goto_buffer_command	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_goto_buffer_command =$/;"	v
g:ycm_java_jdtls_use_clean_workspace	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_java_jdtls_use_clean_workspace =$/;"	v
g:ycm_keep_logfiles	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_keep_logfiles =$/;"	v
g:ycm_key_detailed_diagnostics	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_key_detailed_diagnostics =$/;"	v
g:ycm_key_invoke_completion	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_key_invoke_completion =$/;"	v
g:ycm_key_list_previous_completion	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_key_list_previous_completion =$/;"	v
g:ycm_key_list_select_completion	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_key_list_select_completion =$/;"	v
g:ycm_key_list_stop_completion	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_key_list_stop_completion =$/;"	v
g:ycm_log_level	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_log_level =$/;"	v
g:ycm_max_diagnostics_to_display	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_max_diagnostics_to_display =$/;"	v
g:ycm_max_num_candidates	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_max_num_candidates =$/;"	v
g:ycm_max_num_identifier_candidates	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_max_num_identifier_candidates =$/;"	v
g:ycm_min_identifier_candidate_chars	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_min_identifier_candidate_chars =$/;"	v
g:ycm_min_num_of_chars_for_completion	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_min_num_of_chars_for_completion =$/;"	v
g:ycm_open_loclist_on_ycm_diags	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_open_loclist_on_ycm_diags =$/;"	v
g:ycm_python_binary_path	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_python_binary_path =$/;"	v
g:ycm_racerd_binary_path	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_racerd_binary_path =$/;"	v
g:ycm_rust_src_path	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_rust_src_path =$/;"	v
g:ycm_seed_identifiers_with_syntax	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_seed_identifiers_with_syntax =$/;"	v
g:ycm_semantic_triggers	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_semantic_triggers =$/;"	v
g:ycm_server_python_interpreter	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_server_python_interpreter =$/;"	v
g:ycm_show_diagnostics_ui	./VIMPROJ/vimrc/_vimrc	/^let g:ycm_show_diagnostics_ui = 0$/;"	v
g:ycm_show_diagnostics_ui	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_show_diagnostics_ui =$/;"	v
g:ycm_use_ultisnips_completer	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_use_ultisnips_completer =$/;"	v
g:ycm_warning_symbol	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let g:ycm_warning_symbol =$/;"	v
g:zipPlugin_ext	./vim82/plugin/zipPlugin.vim	/^ let g:zipPlugin_ext='*.apk,*.celzip,*.crtx,*.docm,*.docx,*.dotm,*.dotx,*.ear,*.epub,*.gcsx,*.gl/;"	v
g:zip_extractcmd	./vim82/autoload/zip.vim	/^ let g:zip_extractcmd= g:zip_unzipcmd$/;"	v
g:zip_shq	./vim82/autoload/zip.vim	/^  let g:zip_shq= "'"$/;"	v
g:zip_shq	./vim82/autoload/zip.vim	/^  let g:zip_shq= &shq$/;"	v
g:zip_shq	./vim82/autoload/zip.vim	/^  let g:zip_shq= '"'$/;"	v
g:zip_unzipcmd	./vim82/autoload/zip.vim	/^ let g:zip_unzipcmd= "unzip"$/;"	v
g:zip_zipcmd	./vim82/autoload/zip.vim	/^ let g:zip_zipcmd= "zip"$/;"	v
g<C-]>	./vim82/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#Jump_Tag ('','stjump')<cr>$/;"	m
g<C-]>	./vim82/ftplugin/ada.vim	/^	 nnoremap <unique> <buffer> g<C-]>   :call ada#List_Tag ()<cr>$/;"	m
g<LeftMouse>\t<C-RightMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 g<LeftMouse>	<C-RightMouse>$/;"	m
g<RightMouse>\t<C-LeftMouse>	./vim82/pack/dist/opt/swapmouse/plugin/swapmouse.vim	/^noremap	 g<RightMouse>	<C-LeftMouse>$/;"	m
ga	./VIMPROJ/vimrc/_vimrc	/^nmap ga <Plug>(EasyAlign)$/;"	m
ga	./VIMPROJ/vimrc/_vimrc	/^xmap ga <Plug>(EasyAlign)$/;"	m
gd\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gd	:<c-u>call <SID>NetrwForceChgDir(0,<SID>NetrwGetWord()/;"	m
gd\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gd	:<c-u>call <SID>NetrwForceChgDir(1,<SID>NetrwGetWord()/;"	m
gdb_minlines	./vim82/syntax/gdb.vim	/^  let gdb_minlines = 10$/;"	v
genutils#AddNotifyWindowClose	./vimfiles/autoload/genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f	signature:(windowTitle,functionName)
genutils#AddToFCShellPre	./vimfiles/autoload/genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f	signature:(funcName)
genutils#AlignWordWithWordInPreviousLine	./vimfiles/autoload/genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f	signature:()
genutils#ArrayVarExists	./vimfiles/autoload/genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f	signature:(varName,index)
genutils#BinInsertSort	./vimfiles/autoload/genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f	signature:(cmp,direction)
genutils#BinInsertSort2	./vimfiles/autoload/genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f	signature:(start,end,cmp,direction,accessor,mover,context)
genutils#BinSearchForInsert	./vimfiles/autoload/genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f	signature:(start,end,line,cmp,direction)
genutils#BinSearchForInsert2	./vimfiles/autoload/genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f	signature:(start,end,line,cmp,direction,accessor,context)
genutils#BinSearchList	./vimfiles/autoload/genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f	signature:(list,start,end,item,cmp)
genutils#CenterWordInSpace	./vimfiles/autoload/genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f	signature:()
genutils#CheckWindowClose	./vimfiles/autoload/genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f	signature:()
genutils#CleanDiffOptions	./vimfiles/autoload/genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f	signature:()
genutils#CleanupFileName	./vimfiles/autoload/genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f	signature:(fileName)
genutils#CleanupFileName2	./vimfiles/autoload/genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f	signature:(fileName,win32ProtectedChars)
genutils#ClearAllSigns	./vimfiles/autoload/genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f	signature:()
genutils#CloseWinNoEa	./vimfiles/autoload/genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f	signature:(winnr,force)
genutils#CloseWindow	./vimfiles/autoload/genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f	signature:(win,force)
genutils#CmpByLength	./vimfiles/autoload/genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f	signature:(line1,line2,...)
genutils#CmpByLineLengthNname	./vimfiles/autoload/genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f	signature:(line1,line2,...)
genutils#CmpByNumber	./vimfiles/autoload/genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f	signature:(line1,line2,...)
genutils#CmpByString	./vimfiles/autoload/genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f	signature:(line1,line2,...)
genutils#CmpByStringIgnoreCase	./vimfiles/autoload/genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f	signature:(line1,line2,...)
genutils#CmpJavaImports	./vimfiles/autoload/genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f	signature:(line1,line2,...)
genutils#CommonPath	./vimfiles/autoload/genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f	signature:(path1,path2,...)
genutils#CommonString	./vimfiles/autoload/genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f	signature:(str1,str2)
genutils#CrUnProtectedCharsPattern	./vimfiles/autoload/genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f	signature:(chars,...)
genutils#CreateArgString	./vimfiles/autoload/genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f	signature:(argList,sep,...)
genutils#CurLineHasSign	./vimfiles/autoload/genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f	signature:()
genutils#DeEscape	./vimfiles/autoload/genutils.vim	/^function! genutils#DeEscape(str)$/;"	f	signature:(str)
genutils#DebugShowArgs	./vimfiles/autoload/genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f	signature:(...)
genutils#DefFCShellInstall	./vimfiles/autoload/genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f	signature:()
genutils#DefFCShellUninstall	./vimfiles/autoload/genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f	signature:()
genutils#DefFileChangedShell	./vimfiles/autoload/genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f	signature:()
genutils#EatChar	./vimfiles/autoload/genutils.vim	/^function! genutils#EatChar(pat)$/;"	f	signature:(pat)
genutils#Escape	./vimfiles/autoload/genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f	signature:(str,chars)
genutils#EscapeCommand	./vimfiles/autoload/genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f	signature:(cmd,args,pipe)
genutils#ExpandStr	./vimfiles/autoload/genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f	signature:(str)
genutils#ExtractFuncListing	./vimfiles/autoload/genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f	signature:(funcName,hLines,tLines)
genutils#FindBufferForName	./vimfiles/autoload/genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f	signature:(fileName)
genutils#FindWindowForBuffer	./vimfiles/autoload/genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f	signature:(bufferName,checkUnlisted)
genutils#GetBufNameForAu	./vimfiles/autoload/genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f	signature:(bufName)
genutils#GetColPosition	./vimfiles/autoload/genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f	signature:(id)
genutils#GetLastWinnrInStack	./vimfiles/autoload/genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f	signature:(dir)
genutils#GetLinePosition	./vimfiles/autoload/genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f	signature:(id)
genutils#GetNextWinnrInStack	./vimfiles/autoload/genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f	signature:(dir)
genutils#GetPersistentVar	./vimfiles/autoload/genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f	signature:(pluginName,persistentVar,default)
genutils#GetPreviewWinnr	./vimfiles/autoload/genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f	signature:()
genutils#GetSelectedIndex	./vimfiles/autoload/genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f	signature:()
genutils#GetShellEnvType	./vimfiles/autoload/genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f	signature:()
genutils#GetSpacer	./vimfiles/autoload/genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f	signature:(width)
genutils#GetVimCmdOutput	./vimfiles/autoload/genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f	signature:(cmd)
genutils#IsOnlyHorizontalWindow	./vimfiles/autoload/genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f	signature:()
genutils#IsOnlyVerticalWindow	./vimfiles/autoload/genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f	signature:()
genutils#IsPositionSet	./vimfiles/autoload/genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f	signature:(id)
genutils#MakeArgumentList	./vimfiles/autoload/genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f	signature:(...)
genutils#MakeArgumentString	./vimfiles/autoload/genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f	signature:(...)
genutils#MapAppendCascaded	./vimfiles/autoload/genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f	signature:(lhs,rhs,mapMode)
genutils#MarkActiveWindow	./vimfiles/autoload/genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f	signature:()
genutils#MoveCurLineToWinLine	./vimfiles/autoload/genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f	signature:(n)
genutils#MoveCursorToLastInWinStack	./vimfiles/autoload/genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f	signature:(dir)
genutils#MoveCursorToNextInWinStack	./vimfiles/autoload/genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f	signature:(dir)
genutils#MoveCursorToWindow	./vimfiles/autoload/genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f	signature:(winno)
genutils#NumberOfWindows	./vimfiles/autoload/genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f	signature:()
genutils#OnMS	./vimfiles/autoload/genutils.vim	/^function! genutils#OnMS()$/;"	f	signature:()
genutils#OpenWinNoEa	./vimfiles/autoload/genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f	signature:(winOpenCmd)
genutils#OptClearBuffer	./vimfiles/autoload/genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f	signature:()
genutils#PathIsAbsolute	./vimfiles/autoload/genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f	signature:(path)
genutils#PathIsFileNameOnly	./vimfiles/autoload/genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f	signature:(path)
genutils#PromptForElement	./vimfiles/autoload/genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f	signature:(array,default,msg,skip,useDialog,nCols)
genutils#PutPersistentVar	./vimfiles/autoload/genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f	signature:(pluginName,persistentVar,value)
genutils#QSort	./vimfiles/autoload/genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f	signature:(cmp,direction)
genutils#QSort2	./vimfiles/autoload/genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f	signature:(start,end,cmp,direction,accessor,swapper,context)
genutils#QuoteStr	./vimfiles/autoload/genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f	signature:(str)
genutils#RelPathFromDir	./vimfiles/autoload/genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f	signature:(srcDir,tgtFile)
genutils#RelPathFromFile	./vimfiles/autoload/genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f	signature:(srcFile,tgtFile)
genutils#RemoveFromFCShellPre	./vimfiles/autoload/genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f	signature:(funcName)
genutils#RemoveNotifyWindowClose	./vimfiles/autoload/genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f	signature:(windowTitle)
genutils#ResetHardPosition	./vimfiles/autoload/genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f	signature:(id)
genutils#ResetHardPositionWithContext	./vimfiles/autoload/genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f	signature:(id)
genutils#ResetSoftPosition	./vimfiles/autoload/genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f	signature:(id)
genutils#ResetWindowSettings	./vimfiles/autoload/genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f	signature:()
genutils#ResetWindowSettings2	./vimfiles/autoload/genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f	signature:(id)
genutils#RestoreActiveWindow	./vimfiles/autoload/genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f	signature:()
genutils#RestoreHardPosition	./vimfiles/autoload/genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f	signature:(id)
genutils#RestoreHardPositionWithContext	./vimfiles/autoload/genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f	signature:(id)
genutils#RestoreSoftPosition	./vimfiles/autoload/genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f	signature:(id)
genutils#RestoreVisualSelection	./vimfiles/autoload/genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f	signature:(id)
genutils#RestoreWindowSettings	./vimfiles/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f	signature:()
genutils#RestoreWindowSettings2	./vimfiles/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f	signature:(id)
genutils#Roman2Decimal	./vimfiles/autoload/genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f	signature:(str)
genutils#SaveHardPosition	./vimfiles/autoload/genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f	signature:(id)
genutils#SaveHardPositionWithContext	./vimfiles/autoload/genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f	signature:(id)
genutils#SaveSoftPosition	./vimfiles/autoload/genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f	signature:(id)
genutils#SaveVisualSelection	./vimfiles/autoload/genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f	signature:(id)
genutils#SaveWindowSettings	./vimfiles/autoload/genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f	signature:()
genutils#SaveWindowSettings2	./vimfiles/autoload/genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f	signature:(id,overwrite)
genutils#SetupScratchBuffer	./vimfiles/autoload/genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f	signature:()
genutils#ShiftWordInSpace	./vimfiles/autoload/genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f	signature:(dir)
genutils#ShowLinesWithSyntax	./vimfiles/autoload/genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f	signature:()
genutils#SilentDelete	./vimfiles/autoload/genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f	signature:(arg1,...)
genutils#SilentSubstitute	./vimfiles/autoload/genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f	signature:(pat,cmd)
genutils#UnEscape	./vimfiles/autoload/genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f	signature:(str,chars)
genutils#UserDirComplete2	./vimfiles/autoload/genutils.vim	/^function! genutils#UserDirComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f	signature:(ArgLead,CmdLine,CursorPos,...)
genutils#UserFileComplete	./vimfiles/autoload/genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f	signature:(ArgLead,CmdLine,CursorPos,smartSlash,searchPath)
genutils#UserFileComplete2	./vimfiles/autoload/genutils.vim	/^function! genutils#UserFileComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f	signature:(ArgLead,CmdLine,CursorPos,...)
genutils#UserFileExpand	./vimfiles/autoload/genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f	signature:(fileArgs)
getscript#GetLatestVimScripts	./vim82/autoload/getscript.vim	/^fun! getscript#GetLatestVimScripts()$/;"	f	signature:()
gf\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gf	:<c-u>call <SID>NetrwForceFile(0,<SID>NetrwGetWord())</;"	m
gf\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gf	:<c-u>call <SID>NetrwForceFile(1,<SID>NetrwGetWord())</;"	m
gh\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gh	:<c-u>call <SID>NetrwHidden(0)<cr>$/;"	m
gh\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gh	:<c-u>call <SID>NetrwHidden(1)<cr>$/;"	m
global_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
global_states_and_properties	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let global_states_and_properties = {$/;"	v
gn\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gn	:<c-u>call netrw#SetTreetop(0,<SID>NetrwGetWord())<cr>$/;"	m
gnat#Find	./vim82/autoload/gnat.vim	/^function gnat#Find () dict					     " {{{1$/;"	f	signature:()
gnat#Get_Command	./vim82/autoload/gnat.vim	/^function gnat#Get_Command (Command) dict			     " {{{1$/;"	f	signature:(Command)
gnat#Insert_Tags_Header	./vim82/autoload/gnat.vim	/^function gnat#Insert_Tags_Header ()				  " {{{1$/;"	f	signature:()
gnat#Make	./vim82/autoload/gnat.vim	/^function gnat#Make () dict					     " {{{1$/;"	f	signature:()
gnat#New	./vim82/autoload/gnat.vim	/^function gnat#New ()						     " {{{1$/;"	f	signature:()
gnat#Pretty	./vim82/autoload/gnat.vim	/^function gnat#Pretty () dict					     " {{{1$/;"	f	signature:()
gnat#Set_Project_File	./vim82/autoload/gnat.vim	/^function gnat#Set_Project_File (...) dict			     " {{{1$/;"	f	signature:(...)
gnat#Set_Session	./vim82/autoload/gnat.vim	/^function gnat#Set_Session (...) dict				     " {{{1$/;"	f	signature:(...)
gnat#Tags	./vim82/autoload/gnat.vim	/^function gnat#Tags () dict					     " {{{1$/;"	f	signature:()
gocomplete#Complete	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! gocomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
gocomplete#Complete	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! gocomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
gp\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gp	:<c-u>call <SID>NetrwChgPerm(0,b:netrw_curdir)<cr>$/;"	m
gp\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> gp	:<c-u>call <SID>NetrwChgPerm(1,b:netrw_curdir)<cr>$/;"	m
graphic_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let graphic_role = [$/;"	v
groovy_minlines	./vim82/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
gx	./VIMPROJ/vimrc/_vimrc	/^nmap gx <Plug>(ctrlp#myp4#P4ReviewLink)$/;"	m
gx	./VIMPROJ/vimrc/_vimrc	/^vmap gx <Plug>(openbrowser-open)$/;"	m
gx	./vim82/plugin/netrwPlugin.vim	/^   nmap <unique> gx <Plug>NetrwBrowseX$/;"	m
gx	./vim82/plugin/netrwPlugin.vim	/^   vmap <unique> gx <Plug>NetrwBrowseXVis$/;"	m
gzip	./vim82/plugin/gzip.vim	/^augroup gzip$/;"	a
gzip#appre	./vim82/autoload/gzip.vim	/^fun gzip#appre(cmd)$/;"	f	signature:(cmd)
gzip#read	./vim82/autoload/gzip.vim	/^fun gzip#read(cmd)$/;"	f	signature:(cmd)
gzip#write	./vim82/autoload/gzip.vim	/^fun gzip#write(cmd)$/;"	f	signature:(cmd)
h	./vim82/macros/less.vim	/^noremap h :call <SID>Help()<CR>$/;"	m
h	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap h d$/;"	m
haskellcomplete#Complete	./vim82/autoload/haskellcomplete.vim	/^function! haskellcomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
header	./vimfiles/bundle/jedi-vim/test/vspec/documentation.vim	/^        let header = getline(1, 2)$/;"	v
health#jedi#check	./vimfiles/bundle/jedi-vim/autoload/health/jedi.vim	/^function! health#jedi#check() abort$/;"	f	signature:()
highlight_types	./vim82/syntax/spup.vim	/^    let highlight_types = 1$/;"	v
hog_minlines	./vim82/syntax/hog.vim	/^    let hog_minlines = 100$/;"	v
html_no_rendering	./vim82/syntax/spyce.vim	/^let html_no_rendering = 1    " do not render <b>,<i>, etc...$/;"	v
htmlcomplete#CheckDoctype	./vim82/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f	signature:()
htmlcomplete#CheckDoctype	./vimfiles/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f	signature:()
htmlcomplete#CheckDoctype	./vimfiles/bundle/htmlcomplete.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f	signature:()
htmlcomplete#CompleteTags	./vim82/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f	signature:(findstart,base)
htmlcomplete#CompleteTags	./vimfiles/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f	signature:(findstart,base)
htmlcomplete#CompleteTags	./vimfiles/bundle/htmlcomplete.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f	signature:(findstart,base)
htmlcomplete#DetectOmniFlavor	./vim82/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f	signature:()
htmlcomplete#DetectOmniFlavor	./vimfiles/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f	signature:()
htmlcomplete#LoadAria	./vimfiles/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f	signature:()
htmlcomplete#LoadData	./vim82/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f	signature:()
htmlcomplete#LoadData	./vimfiles/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f	signature:()
htmlcomplete#LoadData	./vimfiles/bundle/htmlcomplete.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f	signature:()
hw_subversion	./vim82/syntax/hollywood.vim	/^  let hw_subversion = 0$/;"	v
hw_version	./vim82/syntax/hollywood.vim	/^  let hw_version = 8$/;"	v
i	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap i c$/;"	m
i	./vim82/syntax/xpm.vim	/^   let i = i + 1$/;"	v
i	./vim82/syntax/xpm.vim	/^let i      = 1$/;"	v
i	./vim82/syntax/xpm2.vim	/^    let i = i + 1$/;"	v
i	./vim82/syntax/xpm2.vim	/^  let i      = 1$/;"	v
i$	./vim82/ftplugin/context.vim	/^  onoremap <silent><buffer> i$ :<c-u>normal! T$vt$<cr>$/;"	m
i$	./vim82/ftplugin/context.vim	/^  vnoremap <buffer> i$ T$ot\$$/;"	m
iC	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> iC :<C-U>call pymode#motion#select('^<Bslash>s*class<Bslash>s', 1)<CR>$/;"	m
iC	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> iC :<C-U>call pymode#motion#select('^<Bslash>s*class<Bslash>s', 1)<CR>$/;"	m
iM	./vim82/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iM	./vim82/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iM	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    onoremap <buffer> iM :<C-U>call pymode#motion#select('^<Bslash>s*def<Bslash>s', 1)<CR>$/;"	m
iM	./vimfiles/bundle/python-mode/after/ftplugin/python.vim	/^    vnoremap <buffer> iM :<C-U>call pymode#motion#select('^<Bslash>s*def<Bslash>s', 1)<CR>$/;"	m
i\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> i	:<c-u>call <SID>NetrwListStyle(0)<cr>$/;"	m
i\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> i	:<c-u>call <SID>NetrwListStyle(1)<cr>$/;"	m
icon_minlines	./vim82/syntax/icon.vim	/^  let icon_minlines = 15$/;"	v
ifdef_filename	./vimfiles/after/syntax/ifdef.vim	/^    let ifdef_filename='.defines'$/;"	v
ifdef_filename	./vimfiles/after/syntax/ifdef.vim	/^    let ifdef_filename='_defines'$/;"	v
ifdef_loaded	./vimfiles/after/syntax/ifdef.vim	/^  let ifdef_loaded=1$/;"	v
im	./vim82/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
im	./vim82/ftplugin/ruby.vim	/^    xnoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
innersect	./vimfiles/bundle/vmustache/tests/test003_render.vim	/^let innersect = []$/;"	v
is_bash	./vim82/syntax/initng.vim	/^let is_bash = 1$/;"	v
is_bash	./vim82/syntax/upstart.vim	/^let is_bash = 1$/;"	v
j	./vim82/ftplugin/flexwiki.vim	/^  nmap <buffer> j      gj$/;"	m
j	./vim82/ftplugin/flexwiki.vim	/^  vmap <buffer> j      gj$/;"	m
j	./vim82/macros/less.vim	/^map j <CR>$/;"	m
j	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap j h$/;"	m
java_highlight_all	./vim82/syntax/java.vim	/^  let java_highlight_all=1$/;"	v
java_minlines	./vim82/syntax/java.vim	/^  let java_minlines = 10$/;"	v
javascriptcomplete#CompleteJS	./vim82/autoload/javascriptcomplete.vim	/^function! javascriptcomplete#CompleteJS(findstart, base)$/;"	f	signature:(findstart,base)
jedi#_clear_buffer_usages	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#_clear_buffer_usages() abort$/;"	f	signature:()
jedi#_hide_usages_in_win	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#_hide_usages_in_win() abort$/;"	f	signature:()
jedi#_show_usages_in_win	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#_show_usages_in_win() abort$/;"	f	signature:()
jedi#_vim_exceptions	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#_vim_exceptions(str, is_eval) abort$/;"	f	signature:(str,is_eval)
jedi#add_goto_window	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#add_goto_window(for_usages, len) abort$/;"	f	signature:(for_usages,len)
jedi#choose_environment	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#choose_environment(args) abort$/;"	f	signature:(args)
jedi#clear_cache	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#clear_cache(bang) abort$/;"	f	signature:(bang)
jedi#clear_call_signatures	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#clear_call_signatures() abort$/;"	f	signature:()
jedi#clear_usages	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#clear_usages() abort$/;"	f	signature:()
jedi#complete_opened	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#complete_opened(autocomplete) abort$/;"	f	signature:(autocomplete)
jedi#complete_string	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#complete_string(autocomplete) abort$/;"	f	signature:(autocomplete)
jedi#completions	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#completions(findstart, base) abort$/;"	f	signature:(findstart,base)
jedi#configure_call_signatures	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#configure_call_signatures() abort$/;"	f	signature:()
jedi#debug_info	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#debug_info() abort$/;"	f	signature:()
jedi#disable_debugging	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#disable_debugging() abort$/;"	f	signature:()
jedi#do_popup_on_dot_in_highlight	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#do_popup_on_dot_in_highlight() abort$/;"	f	signature:()
jedi#enable_debugging	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#enable_debugging() abort$/;"	f	signature:()
jedi#enable_speed_debugging	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#enable_speed_debugging() abort$/;"	f	signature:()
jedi#goto	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto() abort$/;"	f	signature:()
jedi#goto_assignments	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto_assignments() abort$/;"	f	signature:()
jedi#goto_definitions	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto_definitions() abort$/;"	f	signature:()
jedi#goto_stubs	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto_stubs() abort$/;"	f	signature:()
jedi#goto_window_on_enter	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#goto_window_on_enter() abort$/;"	f	signature:()
jedi#init_python	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#init_python() abort$/;"	f	signature:()
jedi#load_project	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#load_project(args) abort$/;"	f	signature:(args)
jedi#py_import	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#py_import(args) abort$/;"	f	signature:(args)
jedi#py_import_completions	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#py_import_completions(argl, cmdl, pos) abort$/;"	f	signature:(argl,cmdl,pos)
jedi#reinit_python	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#reinit_python() abort$/;"	f	signature:()
jedi#rename	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#rename(...) abort$/;"	f	signature:(...)
jedi#rename_visual	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#rename_visual(...) abort$/;"	f	signature:(...)
jedi#setup_completion	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#setup_completion() abort$/;"	f	signature:()
jedi#setup_python_imports	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#setup_python_imports() abort$/;"	f	signature:()
jedi#show_call_signatures	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#show_call_signatures() abort$/;"	f	signature:()
jedi#show_documentation	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#show_documentation() abort$/;"	f	signature:()
jedi#smart_auto_mappings	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#smart_auto_mappings() abort$/;"	f	signature:()
jedi#usages	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! jedi#usages() abort$/;"	f	signature:()
jedi_call_signatures	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^    augroup jedi_call_signatures$/;"	a
jedi_goto_window	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^    augroup jedi_goto_window$/;"	a
jedi_preview	./vimfiles/bundle/jedi-vim/ftplugin/python/jedi.vim	/^        augroup jedi_preview$/;"	a
jedi_pyi	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^    augroup jedi_pyi$/;"	a
jedi_startup	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^        augroup jedi_startup$/;"	a
jedi_usages	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^            augroup jedi_usages$/;"	a
jedi_usages	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^        augroup jedi_usages$/;"	a
jedi_usages	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^    augroup jedi_usages$/;"	a
jproperties_lines	./vim82/syntax/jproperties.vim	/^	let jproperties_lines = 256$/;"	v
jproperties_show_messages	./vim82/syntax/jproperties.vim	/^	let jproperties_show_messages = 0$/;"	v
jproperties_strict_syntax	./vim82/syntax/jproperties.vim	/^	let jproperties_strict_syntax = 0$/;"	v
jslibsyntax#load	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^function! jslibsyntax#load()$/;"	f	signature:()
jspc#coffee#getlist	./vimfiles/bundle/jspc.vim/autoload/jspc/coffee.vim	/^function! jspc#coffee#getlist(method)$/;"	f	signature:(method)
jspc#complete	./vimfiles/bundle/jspc.vim/autoload/jspc.vim	/^function! jspc#complete(findstart, base)$/;"	f	signature:(findstart,base)
jspc#init	./vimfiles/bundle/jspc.vim/autoload/jspc.vim	/^function! jspc#init()$/;"	f	signature:()
jspc#javascript#getlist	./vimfiles/bundle/jspc.vim/autoload/jspc/javascript.vim	/^function! jspc#javascript#getlist(method)$/;"	f	signature:(method)
jspc#ls#getlist	./vimfiles/bundle/jspc.vim/autoload/jspc/ls.vim	/^function! jspc#ls#getlist(method)$/;"	f	signature:(method)
jspc#meet	./vimfiles/bundle/jspc.vim/autoload/jspc.vim	/^function! jspc#meet(context)$/;"	f	signature:(context)
jspc#omni	./vimfiles/bundle/jspc.vim/autoload/jspc.vim	/^function! jspc#omni(findstart, base)$/;"	f	signature:(findstart,base)
jspc#typescript#getlist	./vimfiles/bundle/jspc.vim/autoload/jspc/typescript.vim	/^function! jspc#typescript#getlist(method)$/;"	f	signature:(method)
k	./vim82/ftplugin/flexwiki.vim	/^  nmap <buffer> k      gk$/;"	m
k	./vim82/ftplugin/flexwiki.vim	/^  vmap <buffer> k      gk$/;"	m
k	./vim82/macros/less.vim	/^noremap <script> k <C-Y><SID>L$/;"	m
k	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap k t$/;"	m
l	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap l n$/;"	m
l9#async#execute	./vimfiles/autoload/l9/async.vim	/^function l9#async#execute(key, cmd, cwd, input, appends)$/;"	f	signature:(key,cmd,cwd,input,appends)
l9#async#listActiveWorkers	./vimfiles/autoload/l9/async.vim	/^function l9#async#listActiveWorkers()$/;"	f	signature:()
l9#async#listWorkers	./vimfiles/autoload/l9/async.vim	/^function l9#async#listWorkers()$/;"	f	signature:()
l9#async#read	./vimfiles/autoload/l9/async.vim	/^function l9#async#read(key)$/;"	f	signature:(key)
l9#completeForInputHl	./vimfiles/autoload/l9.vim	/^function l9#completeForInputHl(lead, line, pos)$/;"	f	signature:(lead,line,pos)
l9#concat	./vimfiles/autoload/l9.vim	/^function l9#concat(items)$/;"	f	signature:(items)
l9#concatPaths	./vimfiles/autoload/l9.vim	/^function l9#concatPaths(paths)$/;"	f	signature:(paths)
l9#convertWildcardToRegexp	./vimfiles/autoload/l9.vim	/^function l9#convertWildcardToRegexp(expr)$/;"	f	signature:(expr)
l9#defineVariableDefault	./vimfiles/autoload/l9.vim	/^function l9#defineVariableDefault(name, default)$/;"	f	signature:(name,default)
l9#deleteAllBuffersExcept	./vimfiles/autoload/l9.vim	/^function l9#deleteAllBuffersExcept(files)$/;"	f	signature:(files)
l9#echoHl	./vimfiles/autoload/l9.vim	/^function l9#echoHl(hl, msg, prefix, addingHistory)$/;"	f	signature:(hl,msg,prefix,addingHistory)
l9#filterWithLimit	./vimfiles/autoload/l9.vim	/^function l9#filterWithLimit(items, expr, limit)$/;"	f	signature:(items,expr,limit)
l9#getPathSeparator	./vimfiles/autoload/l9.vim	/^function l9#getPathSeparator()$/;"	f	signature:()
l9#getSelectedText	./vimfiles/autoload/l9.vim	/^function l9#getSelectedText()$/;"	f	signature:()
l9#getVersion	./vimfiles/autoload/l9.vim	/^function l9#getVersion()$/;"	f	signature:()
l9#grepBuffers	./vimfiles/autoload/l9.vim	/^function l9#grepBuffers(pattern, bufNrs)$/;"	f	signature:(pattern,bufNrs)
l9#grepFiles	./vimfiles/autoload/l9.vim	/^function l9#grepFiles(pattern, files)$/;"	f	signature:(pattern,files)
l9#guardScriptLoading	./vimfiles/autoload/l9.vim	/^function l9#guardScriptLoading(path, vimVersion, l9Version, exprs)$/;"	f	signature:(path,vimVersion,l9Version,exprs)
l9#hash224	./vimfiles/autoload/l9.vim	/^function l9#hash224(str)$/;"	f	signature:(str)
l9#inputHl	./vimfiles/autoload/l9.vim	/^function l9#inputHl(hl, ...)$/;"	f	signature:(hl,...)
l9#isCompatible	./vimfiles/autoload/l9.vim	/^function l9#isCompatible(ver)$/;"	f	signature:(ver)
l9#loadFilesToBuffers	./vimfiles/autoload/l9.vim	/^function l9#loadFilesToBuffers(files)$/;"	f	signature:(files)
l9#loadScript	./vimfiles/autoload/l9.vim	/^function l9#loadScript(text)$/;"	f	signature:(text)
l9#modifyPathRelativeToDir	./vimfiles/autoload/l9.vim	/^function l9#modifyPathRelativeToDir(path, dir)$/;"	f	signature:(path,dir)
l9#moveToBufferWindowInCurrentTabpage	./vimfiles/autoload/l9.vim	/^function l9#moveToBufferWindowInCurrentTabpage(bufNr)$/;"	f	signature:(bufNr)
l9#moveToBufferWindowInOtherTabpage	./vimfiles/autoload/l9.vim	/^function l9#moveToBufferWindowInOtherTabpage(bufNr)$/;"	f	signature:(bufNr)
l9#notifyBalloonly	./vimfiles/autoload/l9.vim	/^function l9#notifyBalloonly(msg)$/;"	f	signature:(msg)
l9#notifyExternally	./vimfiles/autoload/l9.vim	/^function l9#notifyExternally(msg)$/;"	f	signature:(msg)
l9#notifyScreen	./vimfiles/autoload/l9.vim	/^function l9#notifyScreen(msg)$/;"	f	signature:(msg)
l9#notifyTmux	./vimfiles/autoload/l9.vim	/^function l9#notifyTmux(msg)$/;"	f	signature:(msg)
l9#placeSign	./vimfiles/autoload/l9.vim	/^function l9#placeSign(linehl, text, texthl, locations)$/;"	f	signature:(linehl,text,texthl,locations)
l9#quickfix#compareEntries	./vimfiles/autoload/l9/quickfix.vim	/^function l9#quickfix#compareEntries(e0, e1)$/;"	f	signature:(e0,e1)
l9#quickfix#isWindowOpened	./vimfiles/autoload/l9/quickfix.vim	/^function l9#quickfix#isWindowOpened()$/;"	f	signature:()
l9#quickfix#openIfNotEmpty	./vimfiles/autoload/l9/quickfix.vim	/^function l9#quickfix#openIfNotEmpty(onlyRecognized, holdCursor)$/;"	f	signature:(onlyRecognized,holdCursor)
l9#quickfix#placeSign	./vimfiles/autoload/l9/quickfix.vim	/^function l9#quickfix#placeSign()$/;"	f	signature:()
l9#quickfix#setMakeResult	./vimfiles/autoload/l9/quickfix.vim	/^function l9#quickfix#setMakeResult(lines)$/;"	f	signature:(lines)
l9#quickfix#sort	./vimfiles/autoload/l9/quickfix.vim	/^function l9#quickfix#sort()$/;"	f	signature:()
l9#quickfix#toggleWindow	./vimfiles/autoload/l9/quickfix.vim	/^function l9#quickfix#toggleWindow()$/;"	f	signature:()
l9#readFile	./vimfiles/autoload/l9.vim	/^function l9#readFile(...)$/;"	f	signature:(...)
l9#removeIf	./vimfiles/autoload/l9.vim	/^function l9#removeIf(items, expr)$/;"	f	signature:(items,expr)
l9#removeLinesBetween	./vimfiles/autoload/l9.vim	/^function l9#removeLinesBetween(lines, begin, end)$/;"	f	signature:(lines,begin,end)
l9#shiftWinNextTabpage	./vimfiles/autoload/l9.vim	/^function l9#shiftWinNextTabpage()$/;"	f	signature:()
l9#shiftWinPrevTabpage	./vimfiles/autoload/l9.vim	/^function l9#shiftWinPrevTabpage()$/;"	f	signature:()
l9#snipHead	./vimfiles/autoload/l9.vim	/^function l9#snipHead(str, len, mask)$/;"	f	signature:(str,len,mask)
l9#snipMid	./vimfiles/autoload/l9.vim	/^function l9#snipMid(str, len, mask)$/;"	f	signature:(str,len,mask)
l9#snipTail	./vimfiles/autoload/l9.vim	/^function l9#snipTail(str, len, mask)$/;"	f	signature:(str,len,mask)
l9#tempbuffer#close	./vimfiles/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#close(bufname)$/;"	f	signature:(bufname)
l9#tempbuffer#isOpen	./vimfiles/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#isOpen(bufname)$/;"	f	signature:(bufname)
l9#tempbuffer#moveTo	./vimfiles/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#moveTo(bufname)$/;"	f	signature:(bufname)
l9#tempbuffer#openReadOnly	./vimfiles/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openReadOnly(bufname, filetype, lines, topleft, vertical, height, listene/;"	f	signature:(bufname,filetype,lines,topleft,vertical,height,listener)
l9#tempbuffer#openScratch	./vimfiles/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openScratch(bufname, filetype, lines, topleft, vertical, height, listener/;"	f	signature:(bufname,filetype,lines,topleft,vertical,height,listener)
l9#tempbuffer#openWritable	./vimfiles/autoload/l9/tempbuffer.vim	/^function l9#tempbuffer#openWritable(bufname, filetype, lines, topleft, vertical, height, listene/;"	f	signature:(bufname,filetype,lines,topleft,vertical,height,listener)
l9#tempvariables#end	./vimfiles/autoload/l9/tempvariables.vim	/^function l9#tempvariables#end(group)$/;"	f	signature:(group)
l9#tempvariables#getList	./vimfiles/autoload/l9/tempvariables.vim	/^function l9#tempvariables#getList(group)$/;"	f	signature:(group)
l9#tempvariables#set	./vimfiles/autoload/l9/tempvariables.vim	/^function l9#tempvariables#set(group, name, value)$/;"	f	signature:(group,name,value)
l9#tempvariables#setList	./vimfiles/autoload/l9/tempvariables.vim	/^function l9#tempvariables#setList(group, variables)$/;"	f	signature:(group,variables)
l9#unique	./vimfiles/autoload/l9.vim	/^function l9#unique(items)$/;"	f	signature:(items)
l9#uniqueStably	./vimfiles/autoload/l9.vim	/^function l9#uniqueStably(items)$/;"	f	signature:(items)
l9#writeAll	./vimfiles/autoload/l9.vim	/^function l9#writeAll()$/;"	f	signature:()
l9#writeFile	./vimfiles/autoload/l9.vim	/^function l9#writeFile(...)$/;"	f	signature:(...)
l9#zip	./vimfiles/autoload/l9.vim	/^function l9#zip(items)$/;"	f	signature:(items)
landmark_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let landmark_role = [$/;"	v
landmark_role	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main'/;"	v
lang	./vim82/spell/check_locales.vim	/^  let lang = substitute(item.text, '.*LANG=\\(\\S\\+\\).*', '\\1', '')$/;"	v
lang_tag	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
langonly	./vim82/menu.vim	/^	let langonly = substitute(s:lang, '_.*', "", "")$/;"	v
leveladjust	./vim82/syntax/2html.vim	/^	    let leveladjust += 1$/;"	v
leveladjust	./vim82/syntax/2html.vim	/^    let leveladjust -= 1$/;"	v
leveladjust	./vim82/syntax/2html.vim	/^  let leveladjust = 0$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['amphtml']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['apple-touch-icon', 'apple-touch-icon-precomposed', 'apple-to/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['canonical']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['chrome-webstore-item']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['hub']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['import']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['manifest']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['pgpkey']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['search']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['sitemap']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['webmention']$/;"	v
linkreltypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linktypes$/;"	v
linktypes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'dns-prefetch', 'external', 'help', 'icon', /;"	v
listener.onComplete	./vimfiles/autoload/fuf.vim	/^  function listener.onComplete(dataFile, method)$/;"	f	signature:(dataFile,method)
listener.onComplete	./vimfiles/autoload/fuf/coveragefile.vim	/^  function listener.onComplete(name, method)$/;"	f	signature:(name,method)
listener.onWrite	./vimfiles/autoload/fuf.vim	/^  function listener.onWrite(lines)$/;"	f	signature:(lines)
live_region_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let live_region_attributes = {$/;"	v
lnum	./vim82/ftplugin/ocaml.vim	/^let lnum = search('^\\s*(\\*:o\\?caml:', 'n')$/;"	v
lnum	./vim82/spell/fixdup.vim	/^  let lnum += 1$/;"	v
lnum	./vim82/spell/fixdup.vim	/^let lnum = 2$/;"	v
loaded_cfilter	./vim82/pack/dist/opt/cfilter/plugin/cfilter.vim	/^let loaded_cfilter = 1$/;"	v
loaded_genutils	./vimfiles/plugin/genutils.vim	/^let loaded_genutils = 205$/;"	v
loaded_gzip	./vim82/plugin/gzip.vim	/^let loaded_gzip = 1$/;"	v
loaded_less	./vim82/macros/less.vim	/^let loaded_less = 1$/;"	v
loaded_marvim	./vimfiles/bundle/marvim/marvim.vim	/^let loaded_marvim = 1$/;"	v
loaded_nerd_tree	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_rrhelper	./vim82/plugin/rrhelper.vim	/^let loaded_rrhelper = 1$/;"	v
loaded_snips	./vimfiles/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_spellfile_plugin	./vim82/plugin/spellfile.vim	/^let loaded_spellfile_plugin = 1$/;"	v
loaded_taglist	./vimfiles/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	./vimfiles/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	./vimfiles/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	./vimfiles/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
lua_subversion	./vim82/syntax/lua.vim	/^  let lua_subversion = 0$/;"	v
lua_subversion	./vim82/syntax/lua.vim	/^  let lua_subversion = 2$/;"	v
lua_version	./vim82/syntax/lua.vim	/^  let lua_version = 5$/;"	v
m	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap m m$/;"	m
m	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> m             :call <SID>BEMRUListShow()<cr>$/;"	m
mA\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mA	:<c-u>call <SID>NetrwMarkFileArgList(0,1)<cr>$/;"	m
mA\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mA	:<c-u>call <SID>NetrwMarkFileArgList(1,1)<cr>$/;"	m
mB\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mB	:<c-u>call <SID>NetrwBookHistHandler(6,b:netrw_curdir)/;"	m
mF\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mF	:<c-u>call <SID>NetrwUnmarkList(bufnr("%"),b:netrw_cur/;"	m
mT\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mT	:<c-u>call <SID>NetrwMarkFileTag(0)<cr>$/;"	m
mT\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mT	:<c-u>call <SID>NetrwMarkFileTag(1)<cr>$/;"	m
mX\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mX	:<c-u>call <SID>NetrwMarkFileExe(0,1)<cr>$/;"	m
mX\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mX	:<c-u>call <SID>NetrwMarkFileExe(1,1)<cr>$/;"	m
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = "apawaWasa]a[a)a(aba>a}a{aB"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "'[`[']`]'<`<'>`>'\\"`\\""$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "( ) { } n N % H M L G \/ ? "$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "2H3H4H5H6H7H8H9H"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "2L3L4L5L6L7L8L9L"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "2j3j4j5j6j7j8j9j"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "2k3k4k5k6k7k8k9k"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "[([{])]}]m]M[m[M[#]#[*[\/"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "`a`b`c`d`e`f`g`h`i`j`k`l`m`n`o`p`q`r`s`t`u`v`w`x`y`z"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "gjgkggg0g^gmgegEg$]][[][[[[]''``"$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "gqq "$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "h j k l 0 ^ $ ; , - + w W e E b B "$/;"	v
m_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let m_list = m_list . "ipiwiWisi]i[i)i(ibi>i}i{iB"$/;"	v
ma\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> ma	:<c-u>call <SID>NetrwMarkFileArgList(0,0)<cr>$/;"	m
ma\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> ma	:<c-u>call <SID>NetrwMarkFileArgList(1,0)<cr>$/;"	m
main_syntax	./vim82/syntax/aptconf.vim	/^  let main_syntax = 'aptconf'$/;"	v
main_syntax	./vim82/syntax/aspperl.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	./vim82/syntax/aspvbs.vim	/^  let main_syntax = 'aspvbs'$/;"	v
main_syntax	./vim82/syntax/css.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	./vim82/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	./vim82/syntax/fvwm2m4.vim	/^  let main_syntax = 'fvwm2m4'$/;"	v
main_syntax	./vim82/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	./vim82/syntax/gsp.vim	/^  let main_syntax = 'gsp'$/;"	v
main_syntax	./vim82/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	./vim82/syntax/html.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	./vim82/syntax/htmlcheetah.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	./vim82/syntax/htmldjango.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	./vim82/syntax/htmlm4.vim	/^  let main_syntax='htmlm4'$/;"	v
main_syntax	./vim82/syntax/htmlos.vim	/^  let main_syntax = 'htmlos'$/;"	v
main_syntax	./vim82/syntax/java.vim	/^  let main_syntax='java'$/;"	v
main_syntax	./vim82/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	./vim82/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	./vim82/syntax/jsp.vim	/^  let main_syntax = 'jsp'$/;"	v
main_syntax	./vim82/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	./vim82/syntax/lite.vim	/^  let main_syntax = 'lite'$/;"	v
main_syntax	./vim82/syntax/m4.vim	/^  let main_syntax='m4'$/;"	v
main_syntax	./vim82/syntax/markdown.vim	/^  let main_syntax = 'markdown'$/;"	v
main_syntax	./vim82/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	./vim82/syntax/msql.vim	/^  let main_syntax = 'msql'$/;"	v
main_syntax	./vim82/syntax/ora.vim	/^  let main_syntax = 'ora'$/;"	v
main_syntax	./vim82/syntax/pdf.vim	/^    let main_syntax = 'pdf'$/;"	v
main_syntax	./vim82/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	./vim82/syntax/plp.vim	/^  let main_syntax = 'perlscript'$/;"	v
main_syntax	./vim82/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
main_syntax	./vim82/syntax/smarty.vim	/^  let main_syntax = 'smarty'$/;"	v
main_syntax	./vim82/syntax/smil.vim	/^  let main_syntax = 'smil'$/;"	v
main_syntax	./vim82/syntax/spyce.vim	/^  let main_syntax='spyce'$/;"	v
main_syntax	./vim82/syntax/texinfo.vim	/^  let main_syntax = 'texinfo'$/;"	v
main_syntax	./vim82/syntax/tf.vim	/^  let main_syntax = 'tf'$/;"	v
main_syntax	./vim82/syntax/tpp.vim	/^  let main_syntax = 'tpp'$/;"	v
main_syntax	./vim82/syntax/typescript.vim	/^  let main_syntax = 'typescript'$/;"	v
main_syntax	./vim82/syntax/typescriptreact.vim	/^  let main_syntax = 'typescriptreact'$/;"	v
main_syntax	./vim82/syntax/uc.vim	/^  let main_syntax='uc'$/;"	v
main_syntax	./vim82/syntax/webmacro.vim	/^  let main_syntax = 'webmacro'$/;"	v
main_syntax	./vim82/syntax/wml.vim	/^  let main_syntax = 'wml'$/;"	v
main_syntax	./vimfiles/syntax/jquery.vim	/^  let main_syntax = 'javascript'$/;"	v
map	./vimfiles/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	./vimfiles/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map_dict	./vimfiles/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
mapleader	./vimfiles/bundle/jedi-vim/test/vspec/goto.vim	/^let mapleader = '\\'$/;"	v
mark#ClearAll	./vimfiles/autoload/mark.vim	/^function! mark#ClearAll()$/;"	f	signature:()
mark#CurrentMark	./vimfiles/autoload/mark.vim	/^function! mark#CurrentMark()$/;"	f	signature:()
mark#DoMark	./vimfiles/autoload/mark.vim	/^function! mark#DoMark(...) " DoMark(regexp)$/;"	f	signature:(...)
mark#GetVisualSelection	./vimfiles/autoload/mark.vim	/^function! mark#GetVisualSelection()$/;"	f	signature:()
mark#GetVisualSelectionAsLiteralPattern	./vimfiles/autoload/mark.vim	/^function! mark#GetVisualSelectionAsLiteralPattern()$/;"	f	signature:()
mark#GetVisualSelectionAsRegexp	./vimfiles/autoload/mark.vim	/^function! mark#GetVisualSelectionAsRegexp()$/;"	f	signature:()
mark#Init	./vimfiles/autoload/mark.vim	/^function! mark#Init()$/;"	f	signature:()
mark#Load	./vimfiles/autoload/mark.vim	/^function! mark#Load( pattern, enabled )$/;"	f	signature:( pattern,enabled )
mark#LoadCommand	./vimfiles/autoload/mark.vim	/^function! mark#LoadCommand( isShowMessages )$/;"	f	signature:( isShowMessages )
mark#MarkCurrentWord	./vimfiles/autoload/mark.vim	/^function! mark#MarkCurrentWord()$/;"	f	signature:()
mark#MarkRegex	./vimfiles/autoload/mark.vim	/^function! mark#MarkRegex( regexpPreset )$/;"	f	signature:( regexpPreset )
mark#SaveCommand	./vimfiles/autoload/mark.vim	/^function! mark#SaveCommand()$/;"	f	signature:()
mark#SearchAnyMark	./vimfiles/autoload/mark.vim	/^function! mark#SearchAnyMark( isBackward )$/;"	f	signature:( isBackward )
mark#SearchCurrentMark	./vimfiles/autoload/mark.vim	/^function! mark#SearchCurrentMark( isBackward )$/;"	f	signature:( isBackward )
mark#SearchNext	./vimfiles/autoload/mark.vim	/^function! mark#SearchNext( isBackward )$/;"	f	signature:( isBackward )
mark#ToPatternList	./vimfiles/autoload/mark.vim	/^function! mark#ToPatternList()$/;"	f	signature:()
mark#Toggle	./vimfiles/autoload/mark.vim	/^function! mark#Toggle()$/;"	f	signature:()
mark#UpdateMark	./vimfiles/autoload/mark.vim	/^function! mark#UpdateMark()$/;"	f	signature:()
mark#UpdateScope	./vimfiles/autoload/mark.vim	/^function! mark#UpdateScope()$/;"	f	signature:()
marvim#completion	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! marvim#completion(ArgLead, CmdLine, CursorPos)$/;"	f	signature:(ArgLead,CmdLine,CursorPos)
marvim#macro_store	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! marvim#macro_store()$/;"	f	signature:()
marvim#search	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! marvim#search()$/;"	f	signature:()
marvim#template_store	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! marvim#template_store()$/;"	f	signature:()
marvim_prefix	./VIMPROJ/vimrc/_vimrc	/^let marvim_prefix = 0           " disable default syntax based prefix$/;"	v
marvim_store	./VIMPROJ/vimrc/_vimrc	/^let marvim_store = $VIMPROJ."\/..\/vimfiles\/bundle\/marvim\/examples"$/;"	v
matchit#Match_debug	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! matchit#Match_debug()$/;"	f	signature:()
matchit#Match_wrapper	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^function matchit#Match_wrapper(word, forward, mode) range$/;"	f	signature:(word,forward,mode)
matchit#MultiMatch	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! matchit#MultiMatch(spflag, mode)$/;"	f	signature:(spflag,mode)
matchparen	./vim82/plugin/matchparen.vim	/^augroup matchparen$/;"	a
mb\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mb	:<c-u>call <SID>NetrwBookHistHandler(0,b:netrw_curdir)/;"	m
mc\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mc	:<c-u>call <SID>NetrwMarkFileCopy(0)<cr>$/;"	m
mc\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mc	:<c-u>call <SID>NetrwMarkFileCopy(1)<cr>$/;"	m
md\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> md	:<c-u>call <SID>NetrwMarkFileDiff(0)<cr>$/;"	m
md\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> md	:<c-u>call <SID>NetrwMarkFileDiff(1)<cr>$/;"	m
me\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> me	:<c-u>call <SID>NetrwMarkFileEdit(0)<cr>$/;"	m
me\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> me	:<c-u>call <SID>NetrwMarkFileEdit(1)<cr>$/;"	m
mel_minlines	./vim82/syntax/mel.vim	/^  let mel_minlines=15$/;"	v
menutrans_help_dialog	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let menutrans_help_dialog = ".*rd be a k.*v.*nt sz.*t vagy parancsot:\\n\\n A sz.*vegbeviteli parancs/;"	v
menutrans_help_dialog	./vim82/lang/menu_hu_hu.utf-8.vim	/^let menutrans_help_dialog = "Írd be a kívánt szót vagy parancsot:\\n\\n A szövegbeviteli pa/;"	v
menutrans_help_dialog	./vim82/lang/menu_nl_nl.latin1.vim	/^let menutrans_help_dialog = "Typ een commando of woord om help voor te vinden:\\n\\nVoeg i_ in v/;"	v
menutrans_help_dialog	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let menutrans_help_dialog = "Wprowad.* komend.* lub s.*owo, aby otrzyma.* pomoc o:\\n\\nPrzedrostek /;"	v
menutrans_help_dialog	./vim82/lang/menu_pl_pl.utf-8.vim	/^let menutrans_help_dialog = "Wprowadź komendę lub słowo, aby otrzymać pomoc o:\\n\\nPrzedros/;"	v
menutrans_help_dialog	./vim82/lang/menu_polish_poland.1250.vim	/^let menutrans_help_dialog = "Wprowad.* komend.* lub s.*owo, aby otrzyma.* pomoc o:\\n\\nPrzedrostek /;"	v
menutrans_help_dialog	./vim82/lang/menu_sr_rs.ascii.vim	/^let menutrans_help_dialog = "Unesite naredbu ili rec cije pojasnjenje trazite:\\n\\nDodajte i_ z/;"	v
menutrans_help_dialog	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let menutrans_help_dialog = "Unesite naredbu ili re.* .*ije poja.*njenje tra.*ite:\\n\\nDodajte i_ z/;"	v
menutrans_help_dialog	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let menutrans_help_dialog = ".* .* .* .* .* .* .*:\\n\\n.* i_ .* /;"	v
menutrans_help_dialog	./vim82/lang/menu_sr_rs.utf-8.vim	/^let menutrans_help_dialog = "Унесите наредбу или реч чије појашње/;"	v
menutrans_help_dialog	./vim82/lang/menu_sv_se.latin1.vim	/^let menutrans_help_dialog = "Skriv in ett kommando eller ord som du vill s.*ka hj.*lp p.*:\\n\\nB.*r/;"	v
menutrans_help_dialog	./vim82/lang/menu_uk_ua.cp1251.vim	/^let menutrans_help_dialog = ".* .* .* .* .* .*:\\n\\n.* i_ .* .* .*/;"	v
menutrans_help_dialog	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let menutrans_help_dialog = ".*֦.* .* .* .* .* .*:\\n\\n.* i_ .* .* .*/;"	v
menutrans_no_file	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	./vim82/lang/menu_hu_hu.utf-8.vim	/^let menutrans_no_file = "[Nincs file]"$/;"	v
menutrans_no_file	./vim82/lang/menu_nl_nl.latin1.vim	/^let menutrans_no_file = "[Geen Bestand]"$/;"	v
menutrans_no_file	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	./vim82/lang/menu_pl_pl.utf-8.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	./vim82/lang/menu_polish_poland.1250.vim	/^let menutrans_no_file = "[Brak pliku]"$/;"	v
menutrans_no_file	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let menutrans_no_file = "[.* .*]"$/;"	v
menutrans_no_file	./vim82/lang/menu_ru_ru.vim	/^let menutrans_no_file = "[Нет файла]"$/;"	v
menutrans_no_file	./vim82/lang/menu_sr_rs.ascii.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let menutrans_no_file = "[Nema datoteke]"$/;"	v
menutrans_no_file	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let menutrans_no_file = "[.* .*]"$/;"	v
menutrans_no_file	./vim82/lang/menu_sr_rs.utf-8.vim	/^let menutrans_no_file = "[Нема фајла]"$/;"	v
menutrans_no_file	./vim82/lang/menu_sv_se.latin1.vim	/^let menutrans_no_file = "[Ingen fil]"$/;"	v
menutrans_no_file	./vim82/lang/menu_tr_tr.cp1254.vim	/^let menutrans_no_file = "[Dosya Yok]"$/;"	v
menutrans_no_file	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let menutrans_no_file = "[Dosya Yok]"$/;"	v
menutrans_no_file	./vim82/lang/menu_tr_tr.utf-8.vim	/^let menutrans_no_file = "[Dosya Yok]"$/;"	v
menutrans_no_file	./vim82/lang/menu_uk_ua.cp1251.vim	/^let menutrans_no_file = "[.*\\ .*]"$/;"	v
menutrans_no_file	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let menutrans_no_file = "[.*\\ .*]"$/;"	v
menutrans_no_file	./vim82/lang/menu_vi_vn.vim	/^let menutrans_no_file = "[không có tập tin]"$/;"	v
metadata_elements	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
mf\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mf	:<c-u>call <SID>NetrwMarkFile(0,<SID>NetrwGetWord())<c/;"	m
mf\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mf	:<c-u>call <SID>NetrwMarkFile(1,<SID>NetrwGetWord())<c/;"	m
mg\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mg	:<c-u>call <SID>NetrwMarkFileGrep(0)<cr>$/;"	m
mg\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mg	:<c-u>call <SID>NetrwMarkFileGrep(1)<cr>$/;"	m
mh\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mh	:<c-u>call <SID>NetrwMarkHideSfx(0)<cr>$/;"	m
mh\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mh	:<c-u>call <SID>NetrwMarkHideSfx(1)<cr>$/;"	m
microdata_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'i/;"	v
microdata_attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
mm\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mm	:<c-u>call <SID>NetrwMarkFileMove(0)<cr>$/;"	m
mm\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mm	:<c-u>call <SID>NetrwMarkFileMove(1)<cr>$/;"	m
mp\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mp	:<c-u>call <SID>NetrwMarkFilePrint(0)<cr>$/;"	m
mp\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mp	:<c-u>call <SID>NetrwMarkFilePrint(1)<cr>$/;"	m
mr\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mr	:<c-u>call <SID>NetrwMarkFileRegexp(0)<cr>$/;"	m
mr\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mr	:<c-u>call <SID>NetrwMarkFileRegexp(1)<cr>$/;"	m
ms\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> ms	:<c-u>call <SID>NetrwMarkFileSource(0)<cr>$/;"	m
ms\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> ms	:<c-u>call <SID>NetrwMarkFileSource(1)<cr>$/;"	m
mt\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mt	:<c-u>call <SID>NetrwMarkFileTgt(0)<cr>$/;"	m
mt\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mt	:<c-u>call <SID>NetrwMarkFileTgt(1)<cr>$/;"	m
mu\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mu	:<c-u>call <SID>NetrwUnMarkFile(0)<cr>$/;"	m
mu\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mu	:<c-u>call <SID>NetrwUnMarkFile(1)<cr>$/;"	m
mupad_cmdextversion	./vim82/syntax/mupad.vim	/^  let mupad_cmdextversion = 2$/;"	v
mv\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mv	:<c-u>call <SID>NetrwMarkFileVimCmd(0)<cr>$/;"	m
mv\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mv	:<c-u>call <SID>NetrwMarkFileVimCmd(1)<cr>$/;"	m
mv_DEtools	./vim82/syntax/maple.vim	/^  let mv_DEtools    = 1$/;"	v
mv_Galois	./vim82/syntax/maple.vim	/^  let mv_Galois     = 1$/;"	v
mv_GaussInt	./vim82/syntax/maple.vim	/^  let mv_GaussInt   = 1$/;"	v
mv_LREtools	./vim82/syntax/maple.vim	/^  let mv_LREtools   = 1$/;"	v
mv_combinat	./vim82/syntax/maple.vim	/^  let mv_combinat   = 1$/;"	v
mv_combstruct	./vim82/syntax/maple.vim	/^  let mv_combstruct = 1$/;"	v
mv_difforms	./vim82/syntax/maple.vim	/^  let mv_difforms   = 1$/;"	v
mv_finance	./vim82/syntax/maple.vim	/^  let mv_finance    = 1$/;"	v
mv_genfunc	./vim82/syntax/maple.vim	/^  let mv_genfunc    = 1$/;"	v
mv_geometry	./vim82/syntax/maple.vim	/^  let mv_geometry   = 1$/;"	v
mv_grobner	./vim82/syntax/maple.vim	/^  let mv_grobner    = 1$/;"	v
mv_group	./vim82/syntax/maple.vim	/^  let mv_group      = 1$/;"	v
mv_inttrans	./vim82/syntax/maple.vim	/^  let mv_inttrans   = 1$/;"	v
mv_liesymm	./vim82/syntax/maple.vim	/^  let mv_liesymm    = 1$/;"	v
mv_linalg	./vim82/syntax/maple.vim	/^  let mv_linalg     = 1$/;"	v
mv_logic	./vim82/syntax/maple.vim	/^  let mv_logic      = 1$/;"	v
mv_networks	./vim82/syntax/maple.vim	/^  let mv_networks   = 1$/;"	v
mv_numapprox	./vim82/syntax/maple.vim	/^  let mv_numapprox  = 1$/;"	v
mv_numtheory	./vim82/syntax/maple.vim	/^  let mv_numtheory  = 1$/;"	v
mv_orthopoly	./vim82/syntax/maple.vim	/^  let mv_orthopoly  = 1$/;"	v
mv_padic	./vim82/syntax/maple.vim	/^  let mv_padic      = 1$/;"	v
mv_plots	./vim82/syntax/maple.vim	/^  let mv_plots      = 1$/;"	v
mv_plottools	./vim82/syntax/maple.vim	/^  let mv_plottools  = 1$/;"	v
mv_powseries	./vim82/syntax/maple.vim	/^  let mv_powseries  = 1$/;"	v
mv_process	./vim82/syntax/maple.vim	/^  let mv_process    = 1$/;"	v
mv_simplex	./vim82/syntax/maple.vim	/^  let mv_simplex    = 1$/;"	v
mv_stats	./vim82/syntax/maple.vim	/^  let mv_stats      = 1$/;"	v
mv_student	./vim82/syntax/maple.vim	/^  let mv_student    = 1$/;"	v
mv_sumtools	./vim82/syntax/maple.vim	/^  let mv_sumtools   = 1$/;"	v
mv_tensor	./vim82/syntax/maple.vim	/^  let mv_tensor     = 1$/;"	v
mv_totorder	./vim82/syntax/maple.vim	/^  let mv_totorder   = 1$/;"	v
mx\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mx	:<c-u>call <SID>NetrwMarkFileExe(0,0)<cr>$/;"	m
mx\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mx	:<c-u>call <SID>NetrwMarkFileExe(1,0)<cr>$/;"	m
mz\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mz	:<c-u>call <SID>NetrwMarkFileCompress(0)<cr>$/;"	m
mz\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> mz	:<c-u>call <SID>NetrwMarkFileCompress(1)<cr>$/;"	m
n	./vim82/macros/less.vim	/^    noremap <script> n H0nzt<SID>L$/;"	m
n	./vim82/macros/less.vim	/^    noremap <script> n Hg0nzt<SID>L$/;"	m
n	./vim82/macros/less.vim	/^  noremap <script> n H$nzt<SID>L$/;"	m
n	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap n b$/;"	m
n	./vim82/syntax/xpm.vim	/^	 let n = 1		" n = color index$/;"	v
n	./vim82/syntax/xpm.vim	/^	 let n = n + 1$/;"	v
n	./vim82/syntax/xpm.vim	/^let n      = 0$/;"	v
n	./vim82/syntax/xpm2.vim	/^	let n = 1			" n = color index$/;"	v
n	./vim82/syntax/xpm2.vim	/^	let n = n + 1$/;"	v
n	./vim82/syntax/xpm2.vim	/^  let n      = 0$/;"	v
neocomplete#sources#ultisnips#define	./vimfiles/bundle/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define()$/;"	f	signature:()
nerdtree#checkForBrowse	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f	signature:(dir)
nerdtree#compareBookmarks	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f	signature:(first,second)
nerdtree#compareNodes	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f	signature:(n1,n2)
nerdtree#compareNodesBySortKey	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f	signature:(n1,n2)
nerdtree#completeBookmarks	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f	signature:(A,L,P)
nerdtree#deprecated	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f	signature:(func,...)
nerdtree#echo	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f	signature:(msg)
nerdtree#echoError	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f	signature:(msg)
nerdtree#echoWarning	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f	signature:(msg)
nerdtree#exec	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f	signature:(cmd)
nerdtree#has_opt	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f	signature:(options,name)
nerdtree#loadClassFiles	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f	signature:()
nerdtree#postSourceActions	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f	signature:()
nerdtree#renderView	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f	signature:()
nerdtree#runningWindows	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f	signature:()
nerdtree#ui_glue#bookmarkNode	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f	signature:(...)
nerdtree#ui_glue#chRootCwd	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f	signature:()
nerdtree#ui_glue#clearBookmarks	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f	signature:(bookmarks)
nerdtree#ui_glue#createDefaultBindings	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f	signature:()
nerdtree#ui_glue#invokeKeyMap	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f	signature:(key)
nerdtree#ui_glue#openBookmark	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f	signature:(name)
nerdtree#ui_glue#revealBookmark	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f	signature:(name)
nerdtree#ui_glue#setupCommands	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f	signature:()
nerdtree#ui_glue#upDir	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f	signature:(keepState)
nerdtree#version	./vimfiles/bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f	signature:()
netrw#Access	./vim82/autoload/netrw.vim	/^fun! netrw#Access(ilist)$/;"	f	signature:(ilist)
netrw#BalloonHelp	./vim82/autoload/netrw.vim	/^ fun! netrw#BalloonHelp()$/;"	f	signature:()
netrw#BrowseX	./vim82/autoload/netrw.vim	/^fun! netrw#BrowseX(fname,remote)$/;"	f	signature:(fname,remote)
netrw#BrowseXVis	./vim82/autoload/netrw.vim	/^fun! netrw#BrowseXVis()$/;"	f	signature:()
netrw#Call	./vim82/autoload/netrw.vim	/^fun! netrw#Call(funcname,...)$/;"	f	signature:(funcname,...)
netrw#CheckIfRemote	./vim82/autoload/netrw.vim	/^fun! netrw#CheckIfRemote(...)$/;"	f	signature:(...)
netrw#Clean	./vim82/autoload/netrw.vim	/^fun! netrw#Clean(sys)$/;"	f	signature:(sys)
netrw#ErrorMsg	./vim82/autoload/netrw.vim	/^fun! netrw#ErrorMsg(level,msg,errnum)$/;"	f	signature:(level,msg,errnum)
netrw#Explore	./vim82/autoload/netrw.vim	/^fun! netrw#Explore(indx,dosplit,style,...)$/;"	f	signature:(indx,dosplit,style,...)
netrw#Expose	./vim82/autoload/netrw.vim	/^fun! netrw#Expose(varname)$/;"	f	signature:(varname)
netrw#FileUrlEdit	./vim82/autoload/netrw.vim	/^fun! netrw#FileUrlEdit(fname)$/;"	f	signature:(fname)
netrw#GX	./vim82/autoload/netrw.vim	/^fun! netrw#GX()$/;"	f	signature:()
netrw#Lexplore	./vim82/autoload/netrw.vim	/^fun! netrw#Lexplore(count,rightside,...)$/;"	f	signature:(count,rightside,...)
netrw#LocalBrowseCheck	./vim82/autoload/netrw.vim	/^fun! netrw#LocalBrowseCheck(dirname)$/;"	f	signature:(dirname)
netrw#MakeTgt	./vim82/autoload/netrw.vim	/^fun! netrw#MakeTgt(dname)$/;"	f	signature:(dname)
netrw#Modify	./vim82/autoload/netrw.vim	/^fun! netrw#Modify(varname,newvalue)$/;"	f	signature:(varname,newvalue)
netrw#NetRead	./vim82/autoload/netrw.vim	/^fun! netrw#NetRead(mode,...)$/;"	f	signature:(mode,...)
netrw#NetSource	./vim82/autoload/netrw.vim	/^fun! netrw#NetSource(...)$/;"	f	signature:(...)
netrw#NetWrite	./vim82/autoload/netrw.vim	/^fun! netrw#NetWrite(...) range$/;"	f	signature:(...)
netrw#Nread	./vim82/autoload/netrw.vim	/^fun! netrw#Nread(mode,fname)$/;"	f	signature:(mode,fname)
netrw#Obtain	./vim82/autoload/netrw.vim	/^fun! netrw#Obtain(islocal,fname,...)$/;"	f	signature:(islocal,fname,...)
netrw#RFC2396	./vim82/autoload/netrw.vim	/^fun! netrw#RFC2396(fname)$/;"	f	signature:(fname)
netrw#SetTreetop	./vim82/autoload/netrw.vim	/^fun! netrw#SetTreetop(iscmd,...)$/;"	f	signature:(iscmd,...)
netrw#Shrink	./vim82/autoload/netrw.vim	/^fun! netrw#Shrink()$/;"	f	signature:()
netrw#UserMaps	./vim82/autoload/netrw.vim	/^fun! netrw#UserMaps(islocal)$/;"	f	signature:(islocal)
netrw#WinPath	./vim82/autoload/netrw.vim	/^fun! netrw#WinPath(path)$/;"	f	signature:(path)
netrwFileHandlers#Invoke	./vim82/autoload/netrwFileHandlers.vim	/^fun! netrwFileHandlers#Invoke(exten,fname)$/;"	f	signature:(exten,fname)
netrwSettings#NetrwSettings	./vim82/autoload/netrwSettings.vim	/^fun! netrwSettings#NetrwSettings()$/;"	f	signature:()
netrw_gitignore#Hide	./vim82/autoload/netrw_gitignore.vim	/^function! netrw_gitignore#Hide(...)$/;"	f	signature:(...)
not_supported	./vim82/spell/check_locales.vim	/^let not_supported = []$/;"	v
nqc_minlines	./vim82/syntax/nqc.vim	/^    let nqc_minlines = 15	    " mostly for () constructs$/;"	v
nqc_minlines	./vim82/syntax/nqc.vim	/^    let nqc_minlines = 50	    " #if 0 constructs can be long$/;"	v
o	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap o r$/;"	m
o	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> o             :call <SID>BESelectBuffer()<cr>$/;"	m
o	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> o$/;"	m
o	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> o$/;"	m
o\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> o	:call <SID>NetrwSplit(0)<cr>$/;"	m
o\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> o	:call <SID>NetrwSplit(3)<cr>$/;"	m
omni#common#debug#End	./vimfiles/autoload/omni/common/debug.vim	/^function! omni#common#debug#End()$/;"	f	signature:()
omni#common#debug#Start	./vimfiles/autoload/omni/common/debug.vim	/^function! omni#common#debug#Start()$/;"	f	signature:()
omni#common#debug#Trace	./vimfiles/autoload/omni/common/debug.vim	/^function! omni#common#debug#Trace(szFuncName, ...)$/;"	f	signature:(szFuncName,...)
omni#common#utils#CompareNumber	./vimfiles/autoload/omni/common/utils.vim	/^function! omni#common#utils#CompareNumber(i1, i2)$/;"	f	signature:(i1,i2)
omni#common#utils#GetWordUnderCursor	./vimfiles/autoload/omni/common/utils.vim	/^function! omni#common#utils#GetWordUnderCursor()$/;"	f	signature:()
omni#common#utils#TagList	./vimfiles/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagList(szTagQuery)$/;"	f	signature:(szTagQuery)
omni#common#utils#TagListNoThrow	./vimfiles/autoload/omni/common/utils.vim	/^function! omni#common#utils#TagListNoThrow(szTagQuery)$/;"	f	signature:(szTagQuery)
omni#cpp#complete#Init	./vimfiles/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Init()$/;"	f	signature:()
omni#cpp#complete#Main	./vimfiles/autoload/omni/cpp/complete.vim	/^function! omni#cpp#complete#Main(findstart, base)$/;"	f	signature:(findstart,base)
omni#cpp#includes#Display	./vimfiles/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#Display()$/;"	f	signature:()
omni#cpp#includes#GetList	./vimfiles/autoload/omni/cpp/includes.vim	/^function! omni#cpp#includes#GetList(...)$/;"	f	signature:(...)
omni#cpp#items#Get	./vimfiles/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#Get(tokens, ...)$/;"	f	signature:(tokens,...)
omni#cpp#items#ResolveItemsTypeInfo	./vimfiles/autoload/omni/cpp/items.vim	/^function! omni#cpp#items#ResolveItemsTypeInfo(contextStack, items)$/;"	f	signature:(contextStack,items)
omni#cpp#maycomplete#Arrow	./vimfiles/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Arrow()$/;"	f	signature:()
omni#cpp#maycomplete#Complete	./vimfiles/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Complete()$/;"	f	signature:()
omni#cpp#maycomplete#Dot	./vimfiles/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Dot()$/;"	f	signature:()
omni#cpp#maycomplete#Scope	./vimfiles/autoload/omni/cpp/maycomplete.vim	/^function! omni#cpp#maycomplete#Scope()$/;"	f	signature:()
omni#cpp#namespaces#GetContexts	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetContexts()$/;"	f	signature:()
omni#cpp#namespaces#GetListFromCurrentBuffer	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetListFromCurrentBuffer(...)$/;"	f	signature:(...)
omni#cpp#namespaces#GetMapFromBuffer	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromBuffer(szFilePath, ...)$/;"	f	signature:(szFilePath,...)
omni#cpp#namespaces#GetMapFromCurrentBuffer	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetMapFromCurrentBuffer()$/;"	f	signature:()
omni#cpp#namespaces#GetUsingNamespaces	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#GetUsingNamespaces()$/;"	f	signature:()
omni#cpp#namespaces#ResolveAlias	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAlias(mapNamespaceAlias, szNamespace)$/;"	f	signature:(mapNamespaceAlias,szNamespace)
omni#cpp#namespaces#ResolveAll	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! omni#cpp#namespaces#ResolveAll(namespacesUsed)$/;"	f	signature:(namespacesUsed)
omni#cpp#settings#Init	./vimfiles/autoload/omni/cpp/settings.vim	/^function! omni#cpp#settings#Init()$/;"	f	signature:()
omni#cpp#tokenizer#Tokenize	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^function! omni#cpp#tokenizer#Tokenize(szCode)$/;"	f	signature:(szCode)
omni#cpp#utils#BuildParenthesisGroups	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#BuildParenthesisGroups(tokens)$/;"	f	signature:(tokens)
omni#cpp#utils#CreateTypeInfo	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#CreateTypeInfo(param)$/;"	f	signature:(param)
omni#cpp#utils#ExtractCmdFromTagItem	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractCmdFromTagItem(tagItem)$/;"	f	signature:(tagItem)
omni#cpp#utils#ExtractScope	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractScope(tagItem)$/;"	f	signature:(tagItem)
omni#cpp#utils#ExtractTypeInfoFromTag	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTag(tagItem)$/;"	f	signature:(tagItem)
omni#cpp#utils#ExtractTypeInfoFromTokens	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ExtractTypeInfoFromTokens(tokens)$/;"	f	signature:(tokens)
omni#cpp#utils#GetCastType	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCastType(tokens)$/;"	f	signature:(tokens)
omni#cpp#utils#GetClassInheritanceList	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetClassInheritanceList(namespaces, typeInfo)$/;"	f	signature:(namespaces,typeInfo)
omni#cpp#utils#GetCode	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCode(posStart, posEnd)$/;"	f	signature:(posStart,posEnd)
omni#cpp#utils#GetCodeFromLine	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetCodeFromLine(szSingleLine)$/;"	f	signature:(szSingleLine)
omni#cpp#utils#GetPreviewWindowStringFromTagItem	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetPreviewWindowStringFromTagItem(tagItem)$/;"	f	signature:(tagItem)
omni#cpp#utils#GetResolvedTagItem	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTagItem(namespaces, typeInfo)$/;"	f	signature:(namespaces,typeInfo)
omni#cpp#utils#GetResolvedTags	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetResolvedTags(namespaces, typeInfo)$/;"	f	signature:(namespaces,typeInfo)
omni#cpp#utils#GetTypeInfoString	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#GetTypeInfoString(typeInfo)$/;"	f	signature:(typeInfo)
omni#cpp#utils#IsCursorInCommentOrString	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsCursorInCommentOrString()$/;"	f	signature:()
omni#cpp#utils#IsTypeInfoValid	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#IsTypeInfoValid(typeInfo)$/;"	f	signature:(typeInfo)
omni#cpp#utils#ResolveFilePath	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#ResolveFilePath(szFile)$/;"	f	signature:(szFile)
omni#cpp#utils#SimplifyParenthesis	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyParenthesis(tokens)$/;"	f	signature:(tokens)
omni#cpp#utils#SimplifyScope	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#SimplifyScope(szScope)$/;"	f	signature:(szScope)
omni#cpp#utils#TokenizeCurrentInstruction	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstruction(...)$/;"	f	signature:(...)
omni#cpp#utils#TokenizeCurrentInstructionUntilWord	./vimfiles/autoload/omni/cpp/utils.vim	/^function! omni#cpp#utils#TokenizeCurrentInstructionUntilWord()$/;"	f	signature:()
omni#cpp#utils#expIgnoreComments	./vimfiles/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#expIgnoreComments = 'getline(".") =~ g:omni#cpp#utils#reIgnoreComment'$/;"	v
omni#cpp#utils#reIgnoreComment	./vimfiles/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#reIgnoreComment = escape('\\\/\\\/\\|\\\/\\*\\|\\*\\\/', '*\/\\')$/;"	v
omni#cpp#utils#szEscapedCharacters	./vimfiles/autoload/omni/cpp/utils.vim	/^let omni#cpp#utils#szEscapedCharacters = ' %#'$/;"	v
oneline_comments	./vim82/syntax/spup.vim	/^    let oneline_comments = 2$/;"	v
openbrowser	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^        augroup openbrowser-focuslost$/;"	a
openbrowser	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^  augroup openbrowser-menu$/;"	a
openbrowser#_cmd_open	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#_cmd_open(...) abort$/;"	f	signature:(...)
openbrowser#_cmd_search	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#_cmd_search(...) abort$/;"	f	signature:(...)
openbrowser#_cmd_search_complete	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#_cmd_search_complete(...) abort$/;"	f	signature:(...)
openbrowser#_cmd_smart_search	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#_cmd_smart_search(...) abort$/;"	f	signature:(...)
openbrowser#_keymap_open	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#_keymap_open(...) abort$/;"	f	signature:(...)
openbrowser#_keymap_search	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#_keymap_search(...) abort$/;"	f	signature:(...)
openbrowser#_keymap_smart_search	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#_keymap_smart_search(...) abort$/;"	f	signature:(...)
openbrowser#load	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#load() abort$/;"	f	signature:()
openbrowser#open	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#open(...) abort$/;"	f	signature:(...)
openbrowser#search	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#search(...) abort$/;"	f	signature:(...)
openbrowser#smart_search	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^function! openbrowser#smart_search(...) abort$/;"	f	signature:(...)
optwin	./vim82/optwin.vim	/^augroup optwin$/;"	a
output	./vimfiles/bundle/jedi-vim/test/vspec/jedi_debug_info.vim	/^		let output = split(@a, '\\n')$/;"	v
p	./vim82/macros/less.vim	/^map p %$/;"	m
p	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap p l$/;"	m
p	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> p             :call <SID>BEToggleSplitOutPathName()<cr>$/;"	m
p	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> p$/;"	m
p	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> p$/;"	m
p\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> p	:<c-u>call <SID>NetrwPreview(<SID>NetrwBrowseChgDir(1,</;"	m
parparse#ParseParameters	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! parparse#ParseParameters(line)$/;"	f	signature:(line)
paste#Paste	./vim82/autoload/paste.vim	/^func! paste#Paste()$/;"	f	signature:()
paste#paste_cmd	./vim82/autoload/paste.vim	/^let paste#paste_cmd = {'n': ":call paste#Paste()<CR>"}$/;"	v
paste#paste_cmd	./vim82/autoload/paste.vim	/^let paste#paste_cmd['i'] = "\\<c-\\>\\<c-o>\\"+gP"$/;"	v
paste#paste_cmd	./vim82/autoload/paste.vim	/^let paste#paste_cmd['v'] = '"-c<Esc>' . paste#paste_cmd['n']$/;"	v
pathogen#cycle_filetype	./vimfiles/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f	signature:()
pathogen#glob	./vimfiles/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f	signature:(pattern)
pathogen#glob_directories	./vimfiles/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f	signature:(pattern)
pathogen#helptags	./vimfiles/autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f	signature:()
pathogen#infect	./vimfiles/autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f	signature:(...)
pathogen#is_disabled	./vimfiles/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f	signature:(path)
pathogen#join	./vimfiles/autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f	signature:(...)
pathogen#legacyjoin	./vimfiles/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f	signature:(...)
pathogen#rtpfindfile	./vimfiles/autoload/pathogen.vim	/^function! pathogen#rtpfindfile(file,count) "{{{1$/;"	f	signature:(file,count)
pathogen#runtime_append_all_bundles	./vimfiles/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f	signature:(...)
pathogen#runtime_prepend_subdirectories	./vimfiles/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f	signature:(path)
pathogen#separator	./vimfiles/autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f	signature:()
pathogen#split	./vimfiles/autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f	signature:(path)
pathogen#uniq	./vimfiles/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f	signature:(list)
pdv#DocumentCurrentLine	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#DocumentCurrentLine()$/;"	f	signature:()
pdv#DocumentLine	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#DocumentLine(lineno)$/;"	f	signature:(lineno)
pdv#DocumentWithSnip	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#DocumentWithSnip()$/;"	f	signature:()
pdv#ParseAttributeData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#ParseAttributeData(line)$/;"	f	signature:(line)
pdv#ParseClassData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#ParseClassData(line)$/;"	f	signature:(line)
pdv#ParseConstData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#ParseConstData(line)$/;"	f	signature:(line)
pdv#ParseFunctionData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#ParseFunctionData(line)$/;"	f	signature:(line)
pdv#ParseInterfaceData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#ParseInterfaceData(line)$/;"	f	signature:(line)
pdv#ParseTraitData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! pdv#ParseTraitData(line)$/;"	f	signature:(line)
pdv#PhpDoc	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDoc()$/;"	f	signature:()
pdv#PhpDocClass	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocClass()$/;"	f	signature:()
pdv#PhpDocDefault	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocDefault()$/;"	f	signature:()
pdv#PhpDocFunc	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocFunc()$/;"	f	signature:()
pdv#PhpDocRange	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocRange() range$/;"	f	signature:()
pdv#PhpDocScope	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocScope(modifiers, identifier)$/;"	f	signature:(modifiers,identifier)
pdv#PhpDocSingle	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocSingle()$/;"	f	signature:()
pdv#PhpDocType	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocType(typeString)$/;"	f	signature:(typeString)
pdv#PhpDocVar	./vimfiles/bundle/pdv/autoload/pdv_old.vim	/^func! pdv#PhpDocVar()$/;"	f	signature:()
perlpath	./vim82/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	./vim82/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	./vim82/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	./vim82/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	./vim82/ftplugin/perl6.vim	/^                let perlpath = system("perl6 -e  '@*INC.join(q\/,\/).say'")$/;"	v
perlpath	./vim82/ftplugin/perl6.vim	/^                let perlpath = system('perl6 -e  "@*INC.join(q\/,\/).say"')$/;"	v
perlpath	./vim82/ftplugin/perl6.vim	/^            let perlpath = ".,,"$/;"	v
perlpath	./vim82/ftplugin/perl6.vim	/^            let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
perlpath	./vim82/ftplugin/perl6.vim	/^        let perlpath = ".,,"$/;"	v
php_alt_assignByReference	./vim82/syntax/php.vim	/^  let php_alt_assignByReference = 1$/;"	v
php_alt_comparisons	./vim82/syntax/php.vim	/^  let php_alt_comparisons = 1$/;"	v
php_parent_error_close	./vim82/syntax/php.vim	/^  let php_parent_error_close=1$/;"	v
php_parent_error_open	./vim82/syntax/php.vim	/^  let php_parent_error_open=1$/;"	v
php_special_functions	./vim82/syntax/php.vim	/^  let php_special_functions = 1$/;"	v
php_sync_method	./vim82/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	./vim82/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
phpcomplete#ClearCachedClassContents	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#ClearCachedClassContents(full_file_path) " {{{$/;"	f	signature:(full_file_path)
phpcomplete#ClearCachedClassContents	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#ClearCachedClassContents(full_file_path) " {{{$/;"	f	signature:(full_file_path)
phpcomplete#CompareCompletionRow	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompareCompletionRow(i1, i2) " {{{$/;"	f	signature:(i1,i2)
phpcomplete#CompareCompletionRow	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompareCompletionRow(i1, i2) " {{{$/;"	f	signature:(i1,i2)
phpcomplete#CompleteBuiltInClass	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteBuiltInClass(context, classname, base) " {{{$/;"	f	signature:(context,classname,base)
phpcomplete#CompleteBuiltInClass	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteBuiltInClass(context, classname, base) " {{{$/;"	f	signature:(context,classname,base)
phpcomplete#CompleteClassName	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteClassName(base, kinds, current_namespace, imports) " {{{$/;"	f	signature:(base,kinds,current_namespace,imports)
phpcomplete#CompleteClassName	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteClassName(base, kinds, current_namespace, imports) " {{{$/;"	f	signature:(base,kinds,current_namespace,imports)
phpcomplete#CompleteGeneral	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteGeneral(base, current_namespace, imports) " {{{$/;"	f	signature:(base,current_namespace,imports)
phpcomplete#CompleteGeneral	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteGeneral(base, current_namespace, imports) " {{{$/;"	f	signature:(base,current_namespace,imports)
phpcomplete#CompletePHP	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompletePHP(findstart, base) " {{{$/;"	f	signature:(findstart,base)
phpcomplete#CompletePHP	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompletePHP(findstart, base) " {{{$/;"	f	signature:(findstart,base)
phpcomplete#CompleteUnknownClass	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteUnknownClass(base, context) " {{{$/;"	f	signature:(base,context)
phpcomplete#CompleteUnknownClass	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteUnknownClass(base, context) " {{{$/;"	f	signature:(base,context)
phpcomplete#CompleteUse	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteUse(base) " {{{$/;"	f	signature:(base)
phpcomplete#CompleteUse	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteUse(base) " {{{$/;"	f	signature:(base)
phpcomplete#CompleteUserClass	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteUserClass(context, base, sccontent, visibility) " {{{$/;"	f	signature:(context,base,sccontent,visibility)
phpcomplete#CompleteUserClass	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteUserClass(context, base, sccontent, visibility) " {{{$/;"	f	signature:(context,base,sccontent,visibility)
phpcomplete#CompleteVariable	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteVariable(base) " {{{$/;"	f	signature:(base)
phpcomplete#CompleteVariable	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#CompleteVariable(base) " {{{$/;"	f	signature:(base)
phpcomplete#EvaluateModifiers	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#EvaluateModifiers(modifiers, required_modifiers, prohibited_modifiers) " {/;"	f	signature:(modifiers,required_modifiers,prohibited_modifiers)
phpcomplete#EvaluateModifiers	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#EvaluateModifiers(modifiers, required_modifiers, prohibited_modifiers) " {/;"	f	signature:(modifiers,required_modifiers,prohibited_modifiers)
phpcomplete#ExpandClassName	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#ExpandClassName(classname, current_namespace, imports) " {{{$/;"	f	signature:(classname,current_namespace,imports)
phpcomplete#ExpandClassName	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#ExpandClassName(classname, current_namespace, imports) " {{{$/;"	f	signature:(classname,current_namespace,imports)
phpcomplete#FormatDocBlock	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#FormatDocBlock(info) " {{{$/;"	f	signature:(info)
phpcomplete#FormatDocBlock	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#FormatDocBlock(info) " {{{$/;"	f	signature:(info)
phpcomplete#GenerateBuiltinClassStub	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GenerateBuiltinClassStub(type, class_info) " {{{$/;"	f	signature:(type,class_info)
phpcomplete#GenerateBuiltinClassStub	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GenerateBuiltinClassStub(class_info) " {{{$/;"	f	signature:(class_info)
phpcomplete#GetCachedClassContents	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetCachedClassContents(classlocation, class_name) " {{{$/;"	f	signature:(classlocation,class_name)
phpcomplete#GetCachedClassContents	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetCachedClassContents(classlocation, class_name) " {{{$/;"	f	signature:(classlocation,class_name)
phpcomplete#GetCallChainReturnType	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetCallChainReturnType(classname_candidate, class_candidate_namespace, imp/;"	f	signature:(classname_candidate,class_candidate_namespace,imports,methodstack)
phpcomplete#GetCallChainReturnType	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetCallChainReturnType(classname_candidate, class_candidate_namespace, imp/;"	f	signature:(classname_candidate,class_candidate_namespace,imports,methodstack)
phpcomplete#GetClassContents	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassContents(classlocation, class_name) " {{{$/;"	f	signature:(classlocation,class_name)
phpcomplete#GetClassContents	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassContents(classlocation, class_name) " {{{$/;"	f	signature:(classlocation,class_name)
phpcomplete#GetClassContentsStructure	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassContentsStructure(file_path, file_lines, class_name) " {{{$/;"	f	signature:(file_path,file_lines,class_name)
phpcomplete#GetClassContentsStructure	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassContentsStructure(file_path, file_lines, class_name) " {{{$/;"	f	signature:(file_path,file_lines,class_name)
phpcomplete#GetClassLocation	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassLocation(classname, namespace) " {{{$/;"	f	signature:(classname,namespace)
phpcomplete#GetClassLocation	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassLocation(classname, namespace) " {{{$/;"	f	signature:(classname,namespace)
phpcomplete#GetClassName	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassName(start_line, context, current_namespace, imports) " {{{$/;"	f	signature:(start_line,context,current_namespace,imports)
phpcomplete#GetClassName	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetClassName(start_line, context, current_namespace, imports) " {{{$/;"	f	signature:(start_line,context,current_namespace,imports)
phpcomplete#GetCurrentFunctionBoundaries	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetCurrentFunctionBoundaries() " {{{$/;"	f	signature:()
phpcomplete#GetCurrentFunctionBoundaries	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetCurrentFunctionBoundaries() " {{{$/;"	f	signature:()
phpcomplete#GetCurrentInstruction	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetCurrentInstruction(line_number, col_number, phpbegin) " {{{$/;"	f	signature:(line_number,col_number,phpbegin)
phpcomplete#GetCurrentInstruction	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetCurrentInstruction(line_number, col_number, phpbegin) " {{{$/;"	f	signature:(line_number,col_number,phpbegin)
phpcomplete#GetCurrentNameSpace	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetCurrentNameSpace(file_lines) " {{{$/;"	f	signature:(file_lines)
phpcomplete#GetCurrentNameSpace	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetCurrentNameSpace(file_lines) " {{{$/;"	f	signature:(file_lines)
phpcomplete#GetCurrentSymbolWithContext	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetCurrentSymbolWithContext() " {{{$/;"	f	signature:()
phpcomplete#GetDocBlock	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetDocBlock(sccontent, search) " {{{$/;"	f	signature:(sccontent,search)
phpcomplete#GetDocBlock	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetDocBlock(sccontent, search) " {{{$/;"	f	signature:(sccontent,search)
phpcomplete#GetFunctionLocation	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetFunctionLocation(function_name, namespace) " {{{$/;"	f	signature:(function_name,namespace)
phpcomplete#GetFunctionLocation	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetFunctionLocation(function_name, namespace) " {{{$/;"	f	signature:(function_name,namespace)
phpcomplete#GetFunctionReturnTypeHint	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetFunctionReturnTypeHint(sccontent, search)$/;"	f	signature:(sccontent,search)
phpcomplete#GetMethodStack	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetMethodStack(line) " {{{$/;"	f	signature:(line)
phpcomplete#GetMethodStack	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetMethodStack(line) " {{{$/;"	f	signature:(line)
phpcomplete#GetTaglist	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetTaglist(pattern) " {{{$/;"	f	signature:(pattern)
phpcomplete#GetTaglist	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetTaglist(pattern) " {{{$/;"	f	signature:(pattern)
phpcomplete#GetTypeFromDocBlockParam	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#GetTypeFromDocBlockParam(docblock_type) " {{{$/;"	f	signature:(docblock_type)
phpcomplete#GetTypeFromDocBlockParam	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#GetTypeFromDocBlockParam(docblock_type) " {{{$/;"	f	signature:(docblock_type)
phpcomplete#JumpToDefinition	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#JumpToDefinition(mode) " {{{$/;"	f	signature:(mode)
phpcomplete#LoadData	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#LoadData() " {{{$/;"	f	signature:()
phpcomplete#LoadData	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#LoadData() " {{{$/;"	f	signature:()
phpcomplete#LocateSymbol	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#LocateSymbol(symbol, symbol_context, symbol_namespace, current_imports) " /;"	f	signature:(symbol,symbol_context,symbol_namespace,current_imports)
phpcomplete#ParseDocBlock	./vim82/autoload/phpcomplete.vim	/^function! phpcomplete#ParseDocBlock(docblock) " {{{$/;"	f	signature:(docblock)
phpcomplete#ParseDocBlock	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! phpcomplete#ParseDocBlock(docblock) " {{{$/;"	f	signature:(docblock)
phrasing_elements	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'co/;"	v
postscr_level	./vim82/syntax/postscr.vim	/^  let postscr_level = 2$/;"	v
ppwiz_highlight_defs	./vim82/syntax/ppwiz.vim	/^    let ppwiz_highlight_defs = 1$/;"	v
ppwiz_with_html	./vim82/syntax/ppwiz.vim	/^    let ppwiz_with_html = 1$/;"	v
previm#cleanup_preview	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#cleanup_preview(dir)$/;"	f	signature:(dir)
previm#convert_to_content	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#convert_to_content(lines) abort$/;"	f	signature:(lines)
previm#fetch_imgpath_elements	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#fetch_imgpath_elements(text) abort$/;"	f	signature:(text)
previm#make_preview_file_path	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#make_preview_file_path(path) abort$/;"	f	signature:(path)
previm#open	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#open(preview_html_file) abort$/;"	f	signature:(preview_html_file)
previm#refresh	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#refresh() abort$/;"	f	signature:()
previm#refresh_css	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#refresh_css() abort$/;"	f	signature:()
previm#refresh_js	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#refresh_js() abort$/;"	f	signature:()
previm#relative_to_absolute_imgpath	./vimfiles/bundle/previm/autoload/previm.vim	/^function! previm#relative_to_absolute_imgpath(text, mkd_dir) abort$/;"	f	signature:(text,mkd_dir)
prior_isk	./vim82/syntax/rst.vim	/^    let prior_isk = &l:iskeyword$/;"	v
process.async.get	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^  function! a:process.async.get(process) abort$/;"	f	signature:(process)
process.async.job_handler	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^  function! a:process.async.job_handler(data) abort$/;"	f	signature:(data)
process.async.on_exit	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^  function! a:process.async.on_exit(exitval) abort$/;"	f	signature:(exitval)
project_path	./vimfiles/bundle/python-mode/t/rope.vim	/^        let project_path = getcwd() . '\/.ropeproject'$/;"	v
pymatcher#PyMatch	./vimfiles/bundle/ctrlp-py-matcher.vim/autoload/pymatcher.vim	/^function! pymatcher#PyMatch(items, str, limit, mmode, ispath, crfile, regex)$/;"	f	signature:(items,str,limit,mmode,ispath,crfile,regex)
pymatcher#ShouldHideCurrentFile	./vimfiles/bundle/ctrlp-py-matcher.vim/autoload/pymatcher.vim	/^function! pymatcher#ShouldHideCurrentFile(ispath, crfile)$/;"	f	signature:(ispath,crfile)
pymode	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^    augroup pymode$/;"	a
pymode	./vimfiles/bundle/python-mode/plugin/pymode.vim	/^augroup pymode$/;"	a
pymode#breakpoint#init	./vimfiles/bundle/python-mode/autoload/pymode/breakpoint.vim	/^fun! pymode#breakpoint#init() "{{{$/;"	f	signature:()
pymode#breakpoint#operate	./vimfiles/bundle/python-mode/autoload/pymode/breakpoint.vim	/^fun! pymode#breakpoint#operate(lnum) "{{{$/;"	f	signature:(lnum)
pymode#buffer_post_write	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#buffer_post_write() "{{{$/;"	f	signature:()
pymode#buffer_pre_write	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#buffer_pre_write() "{{{$/;"	f	signature:()
pymode#debug	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#debug(msg) "{{{$/;"	f	signature:(msg)
pymode#default	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#default(name, default) "{{{$/;"	f	signature:(name,default)
pymode#doc#find	./vimfiles/bundle/python-mode/autoload/pymode/doc.vim	/^fun! pymode#doc#find() "{{{$/;"	f	signature:()
pymode#doc#show	./vimfiles/bundle/python-mode/autoload/pymode/doc.vim	/^fun! pymode#doc#show(word) "{{{$/;"	f	signature:(word)
pymode#error	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#error(msg) "{{{$/;"	f	signature:(msg)
pymode#folding#expr	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^fun! pymode#folding#expr(lnum) "{{{$/;"	f	signature:(lnum)
pymode#folding#text	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^fun! pymode#folding#text() " {{{$/;"	f	signature:()
pymode#indent#get_indent	./vimfiles/bundle/python-mode/autoload/pymode/indent.vim	/^function! pymode#indent#get_indent(lnum)$/;"	f	signature:(lnum)
pymode#init	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#init(plugin_root, paths) "{{{$/;"	f	signature:(plugin_root,paths)
pymode#lint#auto	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^fun! pymode#lint#auto() "{{{$/;"	f	signature:()
pymode#lint#check	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^fun! pymode#lint#check() "{{{$/;"	f	signature:()
pymode#lint#show_errormessage	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^fun! pymode#lint#show_errormessage() "{{{$/;"	f	signature:()
pymode#lint#start	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^fun! pymode#lint#start() "{{{$/;"	f	signature:()
pymode#lint#stop	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^fun! pymode#lint#stop() "{{{$/;"	f	signature:()
pymode#lint#tick_queue	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^fun! pymode#lint#tick_queue() "{{{$/;"	f	signature:()
pymode#lint#toggle	./vimfiles/bundle/python-mode/autoload/pymode/lint.vim	/^fun! pymode#lint#toggle() "{{{$/;"	f	signature:()
pymode#motion#move	./vimfiles/bundle/python-mode/autoload/pymode/motion.vim	/^fun! pymode#motion#move(pattern, flags, ...) "{{{$/;"	f	signature:(pattern,flags,...)
pymode#motion#pos_le	./vimfiles/bundle/python-mode/autoload/pymode/motion.vim	/^fun! pymode#motion#pos_le(pos1, pos2) "{{{$/;"	f	signature:(pos1,pos2)
pymode#motion#select	./vimfiles/bundle/python-mode/autoload/pymode/motion.vim	/^fun! pymode#motion#select(pattern, inner) "{{{$/;"	f	signature:(pattern,inner)
pymode#motion#vmove	./vimfiles/bundle/python-mode/autoload/pymode/motion.vim	/^fun! pymode#motion#vmove(pattern, flags) range "{{{$/;"	f	signature:(pattern,flags)
pymode#quickfix_open	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#quickfix_open(onlyRecognized, maxHeight, minHeight, jumpError) "{{{$/;"	f	signature:(onlyRecognized,maxHeight,minHeight,jumpError)
pymode#quit	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#quit() "{{{$/;"	f	signature:()
pymode#reload_buf_by_nr	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#reload_buf_by_nr(nr) "{{{$/;"	f	signature:(nr)
pymode#rope#autoimport	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#autoimport(word) "{{{$/;"	f	signature:(word)
pymode#rope#complete	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#complete(dot)$/;"	f	signature:(dot)
pymode#rope#complete_on_dot	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#complete_on_dot() "{{{$/;"	f	signature:()
pymode#rope#completions	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#completions(findstart, base)$/;"	f	signature:(findstart,base)
pymode#rope#extract_method	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#extract_method() range "{{{$/;"	f	signature:()
pymode#rope#extract_variable	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#extract_variable() range "{{{$/;"	f	signature:()
pymode#rope#find_it	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#find_it()$/;"	f	signature:()
pymode#rope#generate_class	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#generate_class() "{{{$/;"	f	signature:()
pymode#rope#generate_function	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#generate_function() "{{{$/;"	f	signature:()
pymode#rope#generate_package	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#generate_package() "{{{$/;"	f	signature:()
pymode#rope#goto_definition	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#goto_definition()$/;"	f	signature:()
pymode#rope#inline	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#inline() "{{{$/;"	f	signature:()
pymode#rope#module_to_package	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#module_to_package() "{{{$/;"	f	signature:()
pymode#rope#move	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#move() "{{{$/;"	f	signature:()
pymode#rope#new	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#new(...) "{{{$/;"	f	signature:(...)
pymode#rope#organize_imports	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#organize_imports()$/;"	f	signature:()
pymode#rope#redo	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#redo() "{{{$/;"	f	signature:()
pymode#rope#regenerate	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#regenerate() "{{{$/;"	f	signature:()
pymode#rope#rename	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#rename() "{{{$/;"	f	signature:()
pymode#rope#rename_module	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#rename_module() "{{{$/;"	f	signature:()
pymode#rope#show_doc	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#show_doc()$/;"	f	signature:()
pymode#rope#signature	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#signature() "{{{$/;"	f	signature:()
pymode#rope#undo	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#undo() "{{{$/;"	f	signature:()
pymode#rope#use_function	./vimfiles/bundle/python-mode/autoload/pymode/rope.vim	/^fun! pymode#rope#use_function() "{{{$/;"	f	signature:()
pymode#run#code_run	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^fun! pymode#run#code_run(line1, line2) "{{{$/;"	f	signature:(line1,line2)
pymode#save	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#save() "{{{$/;"	f	signature:()
pymode#tempbuffer_open	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#tempbuffer_open(name) "{{{$/;"	f	signature:(name)
pymode#tools#loclist#init	./vimfiles/bundle/python-mode/autoload/pymode/tools/loclist.vim	/^fun! pymode#tools#loclist#init() "{{{$/;"	f	signature:()
pymode#tools#signs#init	./vimfiles/bundle/python-mode/autoload/pymode/tools/signs.vim	/^fun! pymode#tools#signs#init() "{{{$/;"	f	signature:()
pymode#trim_whitespaces	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#trim_whitespaces() "{{{$/;"	f	signature:()
pymode#troubleshooting#test	./vimfiles/bundle/python-mode/autoload/pymode/troubleshooting.vim	/^fun! pymode#troubleshooting#test() "{{{$/;"	f	signature:()
pymode#virtualenv#activate	./vimfiles/bundle/python-mode/autoload/pymode/virtualenv.vim	/^fun! pymode#virtualenv#activate(path) "{{{$/;"	f	signature:(path)
pymode#virtualenv#init	./vimfiles/bundle/python-mode/autoload/pymode/virtualenv.vim	/^fun! pymode#virtualenv#init() "{{{$/;"	f	signature:()
pymode#wide_message	./vimfiles/bundle/python-mode/autoload/pymode.vim	/^fun! pymode#wide_message(msg) "{{{$/;"	f	signature:(msg)
python3complete#Complete	./vim82/autoload/python3complete.vim	/^function! python3complete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
python_no_doctest_code_highlight	./vim82/syntax/python.vim	/^  let python_no_doctest_code_highlight = 1$/;"	v
python_space_error_highlight	./vim82/syntax/python.vim	/^  let python_space_error_highlight = 1$/;"	v
pythoncomplete#Complete	./vim82/autoload/pythoncomplete.vim	/^function! pythoncomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
q	./vim82/ftplugin/gitcommit.vim	/^  nnoremap <buffer> <silent> q :q<CR>$/;"	m
q	./vim82/ftplugin/man.vim	/^    nnoremap <buffer> <silent> q :q<CR>$/;"	m
q	./vim82/macros/hanoi/hanoi.vim	/^map q tllD$/;"	m
q	./vim82/macros/less.vim	/^noremap q :q<CR>$/;"	m
q	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap q '$/;"	m
q	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^    nnoremap <buffer> q ZQ$/;"	m
q	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> q             :call <SID>BEClose("quit")<cr>$/;"	m
q	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> q    <C-o>:close<CR>$/;"	m
q	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> q :close<CR>$/;"	m
qF\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> qF	:<c-u>call <SID>NetrwMarkFileQFEL(0,getqflist())<cr>$/;"	m
qF\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> qF	:<c-u>call <SID>NetrwMarkFileQFEL(1,getqflist())<cr>$/;"	m
qL\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> qL	:<c-u>call <SID>NetrwMarkFileQFEL(0,getloclist(v:count/;"	m
qL\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> qL	:<c-u>call <SID>NetrwMarkFileQFEL(1,getloclist(v:count/;"	m
qb\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> qb	:<c-u>call <SID>NetrwBookHistHandler(2,b:netrw_curdir)/;"	m
qf\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> qf	:<c-u>call <SID>NetrwFileInfo(0,<SID>NetrwGetWord())<c/;"	m
qf\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> qf	:<c-u>call <SID>NetrwFileInfo(1,<SID>NetrwGetWord())<c/;"	m
r	./vim82/macros/less.vim	/^noremap <script> r <C-L><SID>L$/;"	m
r	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap r p$/;"	m
r	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> r             :call <SID>BESortReverse()<cr>$/;"	m
r\t:<c-u>let	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> r	:<c-u>let g:netrw_sort_direction= (g:netrw_sort_directi/;"	m
rdfa_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': /;"	v
rdfa_attributes_value	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
referrerpolicy	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let referrerpolicy = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'str/;"	v
regex_extra	./vim82/ftplugin/sql.vim	/^                let regex_extra = '\\\\w*'$/;"	v
regex_extra	./vim82/ftplugin/sql.vim	/^        let regex_extra = ''$/;"	v
relationship_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let relationship_attributes = {$/;"	v
relrev	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'inde/;"	v
removed	./vim82/syntax/2html.vim	/^	  let removed = 1$/;"	v
removed	./vim82/syntax/2html.vim	/^	let removed = 1$/;"	v
removed	./vim82/syntax/2html.vim	/^    let removed = 0$/;"	v
result	./vimfiles/bundle/vmustache/tests/test011_render_negative_section.vim	/^let result = vmustache#Render(template, data_not_rendered)$/;"	v
role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(role, dpub_role)$/;"	v
role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(role, graphic_role)$/;"	v
role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(role, dpub_role)$/;"	v
role	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['cell'] = abstract_role['section'] + ['aria-colindex', 'aria-colspan', 'aria/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['feed'] = role_attributes['list']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['figure'] = abstract_role['section'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-le/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-mult/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbo/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['ra/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['none'] = role_attributes['presentation']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin'/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation'/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['searchbox'] = role_attributes['textbox']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'ari/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['switch'] = role_attributes['checkbox']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-sel/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['table'] = abstract_role['section'] + ['aria-colcount', 'aria-rowcount']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['term'] = abstract_role['section']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline'/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required'/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
ruby_minlines	./vim82/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
rubycomplete#Complete	./vim82/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
rubycomplete#Init	./vim82/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f	signature:()
rust	./vim82/ftplugin/rust.vim	/^augroup rust.vim$/;"	a
rust#AppendCmdLine	./vim82/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f	signature:(text)
rust#CompleteExpand	./vim82/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f	signature:(lead,line,pos)
rust#Emit	./vim82/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f	signature:(type,args)
rust#Expand	./vim82/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f	signature:(bang,args)
rust#Jump	./vim82/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f	signature:(mode,function)
rust#Play	./vim82/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f	signature:(count,line1,line2,...)
rust#Run	./vim82/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f	signature:(bang,args)
rustfmt#Format	./vim82/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f	signature:()
rustfmt#FormatRange	./vim82/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f	signature:(line1,line2)
s	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap s o$/;"	m
s	./vim82/syntax/xpm.vim	/^	 let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	./vim82/syntax/xpm.vim	/^   let s = matchstr(getline(i), '".\\{-1,}"')$/;"	v
s	./vim82/syntax/xpm2.vim	/^	let s = escape(s, '\/\\*^$.~[]')$/;"	v
s	./vim82/syntax/xpm2.vim	/^	let s = substitute(s, "[ \\t][ \\t]*", "\\\\\\\\s\\\\\\\\+", "g")$/;"	v
s	./vim82/syntax/xpm2.vim	/^      let s = matchstr(s, "^[^\\!]*")$/;"	v
s	./vim82/syntax/xpm2.vim	/^    let s = getline(i)$/;"	v
s	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> s             :call <SID>BESortSelect()<cr>$/;"	m
s	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> s$/;"	m
s	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> s$/;"	m
s:ABBR_SNIP_MASK	./vimfiles/autoload/fuf.vim	/^let s:ABBR_SNIP_MASK = '...'$/;"	v
s:ARRAY_TYPE	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^let s:ARRAY_TYPE = type([])$/;"	v
s:ASYNC_PY_PATH	./vimfiles/autoload/l9/async.vim	/^let s:ASYNC_PY_PATH = fnamemodify(expand('<sfile>:p:h'), ':p') . 'async.py'$/;"	v
s:Abs	./vimfiles/autoload/DrawIt.vim	/^fun! s:Abs(val)$/;"	f	signature:(val)
s:Accents	./vim82/syntax/tex.vim	/^   fun! s:Accents(chr,...)$/;"	f	signature:(chr,...)
s:AcceptSelection	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:AcceptSelection(action)$/;"	f	signature:(action)
s:AccessModifier	./vim82/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f	signature:(cline_info)
s:AdaBlockStart	./vim82/indent/ada.vim	/^   let s:AdaBlockStart = '^\\s*\\(if\\>\\|while\\>\\|else\\>\\|elsif\\>\\|loop\\>\\|for\\>.*\\<\\/;"	v
s:Add	./vim82/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f	signature:(name)
s:AddBlockTag	./vim82/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f	signature:(tag,id,...)
s:AddBlockTag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f	signature:(tag,id,...)
s:AddITags	./vim82/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f	signature:(tags,taglist)
s:AddITags	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f	signature:(tags,taglist)
s:AfterAccessModifier	./vim82/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f	signature:(pline_info)
s:AfterBlockOpening	./vim82/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f	signature:(pline_info)
s:AfterEndKeyword	./vim82/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f	signature:(pline_info)
s:AfterFTPlugin	./VIMPROJ/3rd/dein.vim/.dein/ftplugin.vim	/^function! s:AfterFTPlugin()$/;"	f	signature:()
s:AfterFTPlugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/ftplugin.vim	/^function! s:AfterFTPlugin()$/;"	f	signature:()
s:AfterHangingSplat	./vim82/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f	signature:(pline_info)
s:AfterIndentKeyword	./vim82/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f	signature:(pline_info)
s:AfterLeadingOperator	./vim82/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f	signature:(pline_info)
s:AfterUnbalancedBracket	./vim82/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f	signature:(pline_info)
s:Alien2	./vim82/indent/html.vim	/^func! s:Alien2()$/;"	f	signature:()
s:Alien2	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:Alien2()$/;"	f	signature:()
s:Alien3	./vim82/indent/html.vim	/^func! s:Alien3()$/;"	f	signature:()
s:Alien3	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:Alien3()$/;"	f	signature:()
s:Alien4	./vim82/indent/html.vim	/^func! s:Alien4()$/;"	f	signature:()
s:Alien4	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:Alien4()$/;"	f	signature:()
s:Alien5	./vim82/indent/html.vim	/^func! s:Alien5()$/;"	f	signature:()
s:Alien5	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:Alien5()$/;"	f	signature:()
s:Alien6	./vim82/indent/html.vim	/^func! s:Alien6()$/;"	f	signature:()
s:Alien6	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:Alien6()$/;"	f	signature:()
s:AllowedToCompleteInBuffer	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:AllowedToCompleteInBuffer( buffer )$/;"	f	signature:( buffer )
s:AllowedToCompleteInCurrentBuffer	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:AllowedToCompleteInCurrentBuffer()$/;"	f	signature:()
s:AlternatePair	./vim82/indent/javascript.vim	/^function s:AlternatePair()$/;"	f	signature:()
s:Animate	./vimfiles/plugin/matrix.vim	/^function! s:Animate()$/;"	f	signature:()
s:AnyMark	./vimfiles/autoload/mark.vim	/^function! s:AnyMark()$/;"	f	signature:()
s:AppendNewLine	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:AppendNewLine()$/;"	f	signature:()
s:ApplyIndent	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:ApplyIndent(text, indent)$/;"	f	signature:(text,indent)
s:Arrow	./vimfiles/autoload/DrawIt.vim	/^fun! s:Arrow(x0, y0, x1, y1)$/;"	f	signature:(x0,y0,x1,y1)
s:AutoCanvas	./vimfiles/autoload/DrawIt.vim	/^fun! s:AutoCanvas(linestart,linestop,cols)$/;"	f	signature:(linestart,linestop,cols)
s:AutoLoadMarks	./vimfiles/plugin/mark.vim	/^	function! s:AutoLoadMarks()$/;"	f	signature:()
s:BEActivateBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEActivateBuffer()$/;"	f	signature:()
s:BEAddBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEAddBuffer()$/;"	f	signature:()
s:BEBuildBufferList	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEBuildBufferList()$/;"	f	signature:()
s:BECleanup	./vimfiles/plugin/bufexplorer.vim	/^function! s:BECleanup()$/;"	f	signature:()
s:BEClose	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEClose(mode)$/;"	f	signature:(mode)
s:BECreateHelp	./vimfiles/plugin/bufexplorer.vim	/^function! s:BECreateHelp()$/;"	f	signature:()
s:BEDeactivateBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEDeactivateBuffer(remove)$/;"	f	signature:(remove)
s:BEDeleteBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEDeleteBuffer(bufNbr, mode)$/;"	f	signature:(bufNbr,mode)
s:BEDeleteBufferListing	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEDeleteBufferListing(buf)$/;"	f	signature:(buf)
s:BEDisplayBufferList	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEDisplayBufferList()$/;"	f	signature:()
s:BEError	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEError(msg)$/;"	f	signature:(msg)
s:BEGetBufferInfo	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEGetBufferInfo(bufnr)$/;"	f	signature:(bufnr)
s:BEGetHelpStatus	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEGetHelpStatus()$/;"	f	signature:()
s:BEGetTabNbr	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEGetTabNbr(bufNbr)$/;"	f	signature:(bufNbr)
s:BEGetWinNbr	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEGetWinNbr(tabNbr, bufNbr)$/;"	f	signature:(tabNbr,bufNbr)
s:BEIgnoreBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEIgnoreBuffer(buf)$/;"	f	signature:(buf)
s:BEInitialize	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEInitialize()$/;"	f	signature:()
s:BEMRUCmp	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEMRUCmp(line1, line2)$/;"	f	signature:(line1,line2)
s:BEMRUListShow	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEMRUListShow()$/;"	f	signature:()
s:BEMRUPop	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEMRUPop(buf)$/;"	f	signature:(buf)
s:BEMRUPush	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEMRUPush(buf)$/;"	f	signature:(buf)
s:BEMapKeys	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEMapKeys()$/;"	f	signature:()
s:BEReSortListing	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEReSortListing()$/;"	f	signature:()
s:BERebuildBufferList	./vimfiles/plugin/bufexplorer.vim	/^function! s:BERebuildBufferList(...)$/;"	f	signature:(...)
s:BERemoveBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BERemoveBuffer(type, mode) range$/;"	f	signature:(type,mode)
s:BEReset	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEReset()$/;"	f	signature:()
s:BEReverseSortSelect	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEReverseSortSelect()$/;"	f	signature:()
s:BESelectBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BESelectBuffer(...)$/;"	f	signature:(...)
s:BESet	./vimfiles/plugin/bufexplorer.vim	/^function! s:BESet(var, default)$/;"	f	signature:(var,default)
s:BESetup	./vimfiles/plugin/bufexplorer.vim	/^function! s:BESetup()$/;"	f	signature:()
s:BESetupSyntax	./vimfiles/plugin/bufexplorer.vim	/^function! s:BESetupSyntax()$/;"	f	signature:()
s:BESortListing	./vimfiles/plugin/bufexplorer.vim	/^function! s:BESortListing()$/;"	f	signature:()
s:BESortReverse	./vimfiles/plugin/bufexplorer.vim	/^function! s:BESortReverse()$/;"	f	signature:()
s:BESortSelect	./vimfiles/plugin/bufexplorer.vim	/^function! s:BESortSelect()$/;"	f	signature:()
s:BETabEnter	./vimfiles/plugin/bufexplorer.vim	/^function! s:BETabEnter()$/;"	f	signature:()
s:BEToggleFindActive	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEToggleFindActive()$/;"	f	signature:()
s:BEToggleHelp	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEToggleHelp()$/;"	f	signature:()
s:BEToggleOnlyOneTab	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEToggleOnlyOneTab()$/;"	f	signature:()
s:BEToggleShowRelativePath	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEToggleShowRelativePath()$/;"	f	signature:()
s:BEToggleShowTabBuffer	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEToggleShowTabBuffer()$/;"	f	signature:()
s:BEToggleShowUnlisted	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEToggleShowUnlisted()$/;"	f	signature:()
s:BEToggleSplitOutPathName	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEToggleSplitOutPathName()$/;"	f	signature:()
s:BEUpdateHelpStatus	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEUpdateHelpStatus()$/;"	f	signature:()
s:BEWarning	./vimfiles/plugin/bufexplorer.vim	/^function! s:BEWarning(msg)$/;"	f	signature:(msg)
s:BMAdd	./vim82/menu.vim	/^func s:BMAdd()$/;"	f	signature:()
s:BMCanAdd	./vim82/menu.vim	/^func s:BMCanAdd(name, num)$/;"	f	signature:(name,num)
s:BMFilename	./vim82/menu.vim	/^func s:BMFilename(name, num)$/;"	f	signature:(name,num)
s:BMHash	./vim82/menu.vim	/^func s:BMHash(name)$/;"	f	signature:(name)
s:BMHash2	./vim82/menu.vim	/^func s:BMHash2(name)$/;"	f	signature:(name)
s:BMMunge	./vim82/menu.vim	/^func s:BMMunge(fname, bnum)$/;"	f	signature:(fname,bnum)
s:BMRemove	./vim82/menu.vim	/^func s:BMRemove()$/;"	f	signature:()
s:BMShow	./vim82/menu.vim	/^func s:BMShow(...)$/;"	f	signature:(...)
s:BMTruncName	./vim82/menu.vim	/^func s:BMTruncName(fname)$/;"	f	signature:(fname)
s:Backward	./vim82/macros/less.vim	/^fun! s:Backward()$/;"	f	signature:()
s:Balanced	./vim82/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f	signature:(lnum,line)
s:BeginElementFound	./vim82/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f	signature:(stack,token,curr_vcol,stored_vcol,end_token,sw)
s:BeginElementFoundIfEmpty	./vim82/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f	signature:(stack,token,curr_vcol,stored_vcol,sw)
s:BeginningOfClauseFound	./vim82/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol)$/;"	f	signature:(stack,token,stored_vcol)
s:BeyondEndOfLine	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! s:BeyondEndOfLine(context)$/;"	f	signature:(context)
s:Bin2Dec	./vimfiles/autoload/visincr.vim	/^fun! s:Bin2Dec(bin)$/;"	f	signature:(bin)
s:BinSearchToAppend	./vimfiles/autoload/genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f	signature:(start,end,line,cmp,direction)
s:BinSearchToAppend2	./vimfiles/autoload/genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f	signature:(start,end,line,cmp,direction,accessor,context)
s:BlockComment	./vim82/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f	signature:(cline_info)
s:BlockEnd	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^fun! s:BlockEnd(lnum) "{{{$/;"	f	signature:(lnum)
s:BlockEnd	./vimfiles/bundle/python-mode/autoload/pymode/motion.vim	/^fun! s:BlockEnd(lnum, ...) "{{{$/;"	f	signature:(lnum,...)
s:BlockStart	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^fun! s:BlockStart(lnum) "{{{$/;"	f	signature:(lnum)
s:BlockStart	./vimfiles/bundle/python-mode/autoload/pymode/motion.vim	/^fun! s:BlockStart(lnum, ...) "{{{$/;"	f	signature:(lnum,...)
s:BlockStarter	./vimfiles/bundle/python-mode/autoload/pymode/indent.vim	/^function! s:BlockStarter(lnum, block_start_re) " {{{$/;"	f	signature:(lnum,block_start_re)
s:Block_pattern	./vim82/ftplugin/ocaml.vim	/^    function! s:Block_pattern(lin1,lin2,col1,col2)$/;"	f	signature:(lin1,lin2,col1,col2)
s:Bookmark	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark.AddBookmark	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f	signature:(name,path)
s:Bookmark.BookmarkExistsFor	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f	signature:(name)
s:Bookmark.BookmarkFor	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f	signature:(name)
s:Bookmark.BookmarkNames	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f	signature:()
s:Bookmark.Bookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f	signature:()
s:Bookmark.CacheBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f	signature:(silent)
s:Bookmark.ClearAll	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f	signature:()
s:Bookmark.GetNodeForName	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f	signature:(name,searchFromAbsoluteRoot,nerdtree)
s:Bookmark.GetSelected	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f	signature:()
s:Bookmark.InvalidBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f	signature:()
s:Bookmark.New	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f	signature:(name,path)
s:Bookmark.Sort	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f	signature:()
s:Bookmark.ToRoot	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f	signature:(name,nerdtree)
s:Bookmark.Write	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f	signature:()
s:Bookmark.activate	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f	signature:(nerdtree,...)
s:Bookmark.compareTo	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f	signature:(otherbookmark)
s:Bookmark.delete	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f	signature:()
s:Bookmark.getNode	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f	signature:(nerdtree,searchFromAbsoluteRoot)
s:Bookmark.mustExist	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f	signature:()
s:Bookmark.open	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f	signature:(nerdtree,...)
s:Bookmark.openInNewTab	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f	signature:(options)
s:Bookmark.setPath	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f	signature:(path)
s:Bookmark.str	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f	signature:()
s:Bookmark.toRoot	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f	signature:(nerdtree)
s:Bookmark.validate	./vimfiles/bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f	signature:()
s:Breakpoint2SignNumber	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:Breakpoint2SignNumber(id, subid)$/;"	f	signature:(id,subid)
s:BreakpointSigns	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:BreakpointSigns = []$/;"	v
s:BufLineAccessor	./vimfiles/autoload/genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f	signature:(line,context)
s:BufLineMover	./vimfiles/autoload/genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f	signature:(from,to,context)
s:BufLineSwapper	./vimfiles/autoload/genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f	signature:(line1,line2,context)
s:BufRead	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:BufRead()$/;"	f	signature:()
s:BufUnloaded	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:BufUnloaded()$/;"	f	signature:()
s:BuildContextStack	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:BuildContextStack(namespaces, szCurrentScope)$/;"	f	signature:(namespaces,szCurrentScope)
s:BuildPrompt	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:BuildPrompt(upd)$/;"	f	signature:(upd)
s:BuildTabStops	./vimfiles/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f	signature:(snip,lnum,col,indent)
s:C	./vimfiles/autoload/genutils.vim	/^let s:C = 100$/;"	v
s:CACHE_DEBUG_TRACE	./vimfiles/autoload/omni/common/debug.vim	/^let s:CACHE_DEBUG_TRACE = []$/;"	v
s:CACHE_OVERLOADED_FUNCTIONS	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:CACHE_OVERLOADED_FUNCTIONS = {}$/;"	v
s:CACHE_TAG_ENV	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_ENV = ''$/;"	v
s:CACHE_TAG_FILES	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_FILES = {}$/;"	v
s:CACHE_TAG_POPUP_ITEMS	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:CACHE_TAG_POPUP_ITEMS = {}$/;"	v
s:CIfDef	./vimfiles/after/syntax/ifdef.vim	/^function! s:CIfDef(force)$/;"	f	signature:(force)
s:CLeftDrag	./vimfiles/autoload/DrawIt.vim	/^fun! s:CLeftDrag()$/;"	f	signature:()
s:CLeftRelease	./vimfiles/autoload/DrawIt.vim	/^fun! s:CLeftRelease()$/;"	f	signature:()
s:CLeftStart	./vimfiles/autoload/DrawIt.vim	/^fun! s:CLeftStart()$/;"	f	signature:()
s:CONCEAL_ID	./vim82/syntax/2html.vim	/^  let s:CONCEAL_ID = hlID('Conceal')    | lockvar s:CONCEAL_ID$/;"	v
s:CSS1	./vim82/syntax/2html.vim	/^function! s:CSS1(id)$/;"	f	signature:(id)
s:CSS1	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^function! s:CSS1(id)$/;"	f	signature:(id)
s:CSSIndent	./vim82/indent/html.vim	/^func! s:CSSIndent()$/;"	f	signature:()
s:CSSIndent	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CSSIndent()$/;"	f	signature:()
s:CacheRstFold	./vim82/autoload/RstFold.vim	/^function s:CacheRstFold()$/;"	f	signature:()
s:CalcVCol	./vim82/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f	signature:(line,first_index,last_index,vcol,tabstop)
s:CallBox	./vimfiles/autoload/DrawIt.vim	/^fun! s:CallBox(func_name)$/;"	f	signature:(func_name)
s:CanUseOmnicompletion	./vimfiles/autoload/omni/cpp/maycomplete.vim	/^function! s:CanUseOmnicompletion()$/;"	f	signature:()
s:Canvas	./vimfiles/autoload/DrawIt.vim	/^fun! s:Canvas()$/;"	f	signature:()
s:CaptureKeyPresses	./vimfiles/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f	signature:()
s:Char2Num	./vimfiles/autoload/genutils.vim	/^function! s:Char2Num(c)$/;"	f	signature:(c)
s:CheckBlockTag	./vim82/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f	signature:(blocktag,ind)
s:CheckBlockTag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f	signature:(blocktag,ind)
s:CheckCustomTag	./vim82/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f	signature:(ctag)
s:CheckCustomTag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f	signature:(ctag)
s:CheckDirForFile	./vimfiles/after/syntax/ifdef.vim	/^function! s:CheckDirForFile(directory,file)$/;"	f	signature:(directory,file)
s:CheckIfKde	./vim82/autoload/netrw.vim	/^fun! s:CheckIfKde()$/;"	f	signature:()
s:CheckPairedIsLastCharacter	./vim82/indent/tex.vim	/^function! s:CheckPairedIsLastCharacter(lnum, col) "{{{$/;"	f	signature:(lnum,col)
s:CheckTag	./vim82/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f	signature:(itag)
s:CheckTag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f	signature:(itag)
s:CheckToIgnoreRightParan	./vim82/indent/sqlanywhere.vim	/^function! s:CheckToIgnoreRightParan( prev_lnum, num_levels )$/;"	f	signature:( prev_lnum,num_levels )
s:ChgDir	./vim82/autoload/vimball.vim	/^fun! s:ChgDir(newdir)$/;"	f	signature:(newdir)
s:ChgDir	./vim82/autoload/zip.vim	/^fun! s:ChgDir(newdir,errlvl,errmsg)$/;"	f	signature:(newdir,errlvl,errmsg)
s:Choose	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f	signature:(patterns,string,comma,branch,prefix,suffix,...)
s:ChooseSnippet	./vimfiles/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f	signature:(scope,trigger)
s:CleanUp	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:CleanUp(options, mode, startpos, ...)$/;"	f	signature:(options,mode,startpos,...)
s:Cleanup	./vimfiles/plugin/matrix.vim	/^function! s:Cleanup()$/;"	f	signature:()
s:ClearBreakpoint	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:ClearBreakpoint()$/;"	f	signature:()
s:ClearTokenCacheIfNeeded	./vim82/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f	signature:()
s:Clearstack	./vim82/autoload/xmlcomplete.vim	/^function! s:Clearstack(sname)$/;"	f	signature:(sname)
s:Close	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Close()$/;"	f	signature:()
s:CloseBuffers	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:CloseBuffers()$/;"	f	signature:()
s:CloseCompletionMenu	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:CloseCompletionMenu()$/;"	f	signature:()
s:CloseCustomFuncs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CloseCustomFuncs()$/;"	f	signature:()
s:ClosePreview	./vimfiles/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f	signature:()
s:ClosePreviewWindowIfNeeded	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:ClosePreviewWindowIfNeeded()$/;"	f	signature:()
s:ClosingBracketOnEmptyLine	./vim82/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f	signature:(cline_info)
s:ClosingHeredocDelimiter	./vim82/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f	signature:(cline_info)
s:ColonEnd	./vim82/indent/occam.vim	/^let s:ColonEnd = '\\(--.*\\)\\@<!:\\s*\\(--.*\\)\\=$'$/;"	v
s:ColonIndent	./vim82/indent/occam.vim	/^let s:ColonIndent = '\\(--.*\\)\\@<!\\<PROC\\>'$/;"	v
s:ColonNonColonEndIndent	./vim82/indent/occam.vim	/^let s:ColonNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\)\\s\\/;"	v
s:ColonStart	./vim82/indent/occam.vim	/^let s:ColonStart = '^\\s*:\\s*\\(--.*\\)\\=$'$/;"	v
s:CommOutput	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:CommOutput(chan, msg)$/;"	f	signature:(chan,msg)
s:CommandLineCompletion	./vimfiles/plugin/supertab.vim	/^function! s:CommandLineCompletion()$/;"	f	signature:()
s:Comment	./vim82/ftplugin/cobol.vim	/^function! s:Comment(arg)$/;"	f	signature:(arg)
s:CommentLine	./vim82/indent/occam.vim	/^let s:CommentLine = '^\\s*--'$/;"	v
s:CommentOrString	./vim82/indent/mp.vim	/^function! s:CommentOrString(line, pos)$/;"	f	signature:(line,pos)
s:Complete	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:Complete()$/;"	f	signature:()
s:CompleterCommand	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:CompleterCommand( mods, count, line1, line2, ... )$/;"	f	signature:( mods,count,line1,line2,... )
s:CompletionReset	./vimfiles/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f	signature:(char)
s:ComposePath	./vim82/autoload/netrw.vim	/^fun! s:ComposePath(base,subdir)$/;"	f	signature:(base,subdir)
s:ContainedGroup	./vim82/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f	signature:()
s:ContainedGroup	./vim82/syntax/zsh.vim	/^function! s:ContainedGroup()$/;"	f	signature:()
s:ContextCompletion	./vimfiles/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f	signature:()
s:ContextDiscover	./vimfiles/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f	signature:()
s:ContextText	./vimfiles/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f	signature:()
s:ContinuedHangingOperator	./vim82/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f	signature:(msl_info)
s:ContinuedLine	./vim82/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f	signature:(pline_info)
s:Continues	./vim82/indent/javascript.vim	/^function s:Continues()$/;"	f	signature:()
s:Count	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f	signature:(string,pattern,...)
s:Count	./vimfiles/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f	signature:(haystack,needle)
s:CountITags	./vim82/indent/html.vim	/^func! s:CountITags(text)$/;"	f	signature:(text)
s:CountITags	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CountITags(text)$/;"	f	signature:(text)
s:CountTagsAndState	./vim82/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f	signature:(text)
s:CountTagsAndState	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f	signature:(text)
s:CountUnbalancedParan	./vim82/indent/sqlanywhere.vim	/^function! s:CountUnbalancedParan( line, paran_to_check )$/;"	f	signature:( line,paran_to_check )
s:Cpath	./vim82/syntax/lex.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	./vim82/syntax/lex.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h")."\/cpp.vim")$/;"	v
s:Cpath	./vim82/syntax/yacc.vim	/^   let s:Cpath= fnameescape(s:Cpath)$/;"	v
s:Cpath	./vim82/syntax/yacc.vim	/^let s:Cpath= fnameescape(expand("<sfile>:p:h").(exists("g:yacc_uses_cpp")? "\/cpp.vim" : "\/c.vi/;"	v
s:CreateBreakpoint	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:CreateBreakpoint(id, subid)$/;"	f	signature:(id,subid)
s:CreateNewFile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CreateNewFile(...)$/;"	f	signature:(...)
s:CreateObject	./vimfiles/plugin/matrix.vim	/^function! s:CreateObject(i)$/;"	f	signature:(i)
s:CreateSectionNode	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:CreateSectionNode(starttoken, children)$/;"	f	signature:(starttoken,children)
s:CreateTemplateNode	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:CreateTemplateNode()$/;"	f	signature:()
s:CreateToken	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:CreateToken(type, value)$/;"	f	signature:(type,value)
s:CreateVariableNode	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:CreateVariableNode(name)$/;"	f	signature:(name)
s:Creator	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Creator.BufNamePrefix	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f	signature:()
s:Creator.CreateMirror	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f	signature:()
s:Creator.CreateTabTree	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f	signature:(name)
s:Creator.CreateWindowTree	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f	signature:(dir)
s:Creator.New	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f	signature:()
s:Creator.ToggleTabTree	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f	signature:(dir)
s:Creator._bindMappings	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f	signature:()
s:Creator._broadcastInitEvent	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f	signature:()
s:Creator._createNERDTree	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f	signature:(path,type)
s:Creator._createTreeWin	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f	signature:()
s:Creator._isBufHidden	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f	signature:(nr)
s:Creator._nextBufferName	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f	signature:()
s:Creator._nextBufferNumber	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f	signature:()
s:Creator._pathForString	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f	signature:(str)
s:Creator._removeTreeBufForTab	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f	signature:()
s:Creator._setCommonBufOptions	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f	signature:()
s:Creator._setupStatusline	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f	signature:()
s:Creator._tabpagevar	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f	signature:(tabnr,var)
s:Creator._uniq	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f	signature:(list)
s:Creator.createMirror	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f	signature:()
s:Creator.createTabTree	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f	signature:(name)
s:Creator.createWindowTree	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f	signature:(dir)
s:Creator.toggleTabTree	./vimfiles/bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f	signature:(dir)
s:CssFirstUnfinished	./vim82/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f	signature:(lnum,min_lnum)
s:CssFirstUnfinished	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f	signature:(lnum,min_lnum)
s:CssPrevNonComment	./vim82/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f	signature:(lnum,stopline)
s:CssPrevNonComment	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f	signature:(lnum,stopline)
s:CssUnfinished	./vim82/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f	signature:(text)
s:CssUnfinished	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f	signature:(text)
s:CurTypeName	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:CurTypeName()$/;"	f	signature:()
s:Cycle	./vimfiles/autoload/mark.vim	/^function! s:Cycle( ... )$/;"	f	signature:( ... )
s:D	./vimfiles/autoload/genutils.vim	/^let s:D = 500$/;"	v
s:DATA_FILE_VERSION	./vimfiles/autoload/fuf.vim	/^let s:DATA_FILE_VERSION = 400$/;"	v
s:DIFF_A_ID	./vim82/syntax/2html.vim	/^  let s:DIFF_A_ID  = hlID("DiffAdd")    | lockvar s:DIFF_A_ID$/;"	v
s:DIFF_C_ID	./vim82/syntax/2html.vim	/^  let s:DIFF_C_ID  = hlID("DiffChange") | lockvar s:DIFF_C_ID$/;"	v
s:DIFF_D_ID	./vim82/syntax/2html.vim	/^  let s:DIFF_D_ID  = hlID("DiffDelete") | lockvar s:DIFF_D_ID$/;"	v
s:DIFF_T_ID	./vim82/syntax/2html.vim	/^  let s:DIFF_T_ID  = hlID("DiffText")   | lockvar s:DIFF_T_ID$/;"	v
s:DI_FillAdjacent	./vimfiles/autoload/DrawIt.vim	/^fun! s:DI_FillAdjacent(frow,fcolL,fcolR)$/;"	f	signature:(frow,fcolL,fcolR)
s:DI_FillLeft	./vimfiles/autoload/DrawIt.vim	/^fun! s:DI_FillLeft(frow,fcol)$/;"	f	signature:(frow,fcol)
s:DI_FillRight	./vimfiles/autoload/DrawIt.vim	/^fun! s:DI_FillRight(frow,fcol)$/;"	f	signature:(frow,fcol)
s:DI_Flood	./vimfiles/autoload/DrawIt.vim	/^fun! s:DI_Flood(frow,fcol)$/;"	f	signature:(frow,fcol)
s:DebugInfo	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:DebugInfo()$/;"	f	signature:()
s:Dec2Bin	./vimfiles/autoload/visincr.vim	/^fun! s:Dec2Bin(b10)$/;"	f	signature:(b10)
s:Dec2Hex	./vimfiles/autoload/visincr.vim	/^fun! s:Dec2Hex(b10)$/;"	f	signature:(b10)
s:Dec2Oct	./vimfiles/autoload/visincr.vim	/^fun! s:Dec2Oct(b10)$/;"	f	signature:(b10)
s:Dec2Rom	./vimfiles/autoload/visincr.vim	/^fun! s:Dec2Rom(dec)$/;"	f	signature:(dec)
s:DecodeMessage	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:DecodeMessage(quotedText)$/;"	f	signature:(quotedText)
s:DecreaseFunc	./vim82/ftplugin/cobol.vim	/^function! s:DecreaseFunc(type)$/;"	f	signature:(type)
s:DecreaseIndent	./vim82/autoload/xmlformat.vim	/^func! s:DecreaseIndent() abort$/;"	f	signature:()
s:DecreaseIndent	./vim82/ftplugin/cobol.vim	/^function! s:DecreaseIndent()$/;"	f	signature:()
s:DecreaseIndentOnClosingTag	./vim82/indent/mp.vim	/^function! s:DecreaseIndentOnClosingTag(curr_indent)$/;"	f	signature:(curr_indent)
s:Dedented	./vim82/indent/python.vim	/^function s:Dedented(lnum, expected)$/;"	f	signature:(lnum,expected)
s:DefPython	./vim82/autoload/python3complete.vim	/^function! s:DefPython()$/;"	f	signature:()
s:DefPython	./vim82/autoload/pythoncomplete.vim	/^function! s:DefPython()$/;"	f	signature:()
s:DefRuby	./vim82/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f	signature:()
s:DefaultHighlightings	./vimfiles/plugin/mark.vim	/^function! s:DefaultHighlightings()$/;"	f	signature:()
s:DefaultPatternSet	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^let s:DefaultPatternSet = {'_cache': {}}$/;"	v
s:DefaultPatternSet.dec_octet	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.dec_octet() abort$/;"	f	signature:()
s:DefaultPatternSet.fragment	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.fragment() abort$/;"	f	signature:()
s:DefaultPatternSet.get	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.get(component, ...) abort$/;"	f	signature:(component,...)
s:DefaultPatternSet.h16	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.h16() abort$/;"	f	signature:()
s:DefaultPatternSet.host	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.host() abort$/;"	f	signature:()
s:DefaultPatternSet.ip_literal	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.ip_literal() abort$/;"	f	signature:()
s:DefaultPatternSet.ipv4address	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.ipv4address() abort$/;"	f	signature:()
s:DefaultPatternSet.ipv6address	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.ipv6address() abort$/;"	f	signature:()
s:DefaultPatternSet.ipv_future	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.ipv_future() abort$/;"	f	signature:()
s:DefaultPatternSet.ls32	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.ls32() abort$/;"	f	signature:()
s:DefaultPatternSet.path	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.path() abort$/;"	f	signature:()
s:DefaultPatternSet.path_abempty	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.path_abempty() abort$/;"	f	signature:()
s:DefaultPatternSet.path_absolute	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.path_absolute() abort$/;"	f	signature:()
s:DefaultPatternSet.path_noscheme	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.path_noscheme() abort$/;"	f	signature:()
s:DefaultPatternSet.path_rootless	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.path_rootless() abort$/;"	f	signature:()
s:DefaultPatternSet.pchar	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.pchar() abort$/;"	f	signature:()
s:DefaultPatternSet.pct_encoded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.pct_encoded() abort$/;"	f	signature:()
s:DefaultPatternSet.port	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.port() abort$/;"	f	signature:()
s:DefaultPatternSet.query	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.query() abort$/;"	f	signature:()
s:DefaultPatternSet.reg_name	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.reg_name() abort$/;"	f	signature:()
s:DefaultPatternSet.scheme	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.scheme() abort$/;"	f	signature:()
s:DefaultPatternSet.segment	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.segment() abort$/;"	f	signature:()
s:DefaultPatternSet.segment_nz	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.segment_nz() abort$/;"	f	signature:()
s:DefaultPatternSet.segment_nz_nc	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.segment_nz_nc() abort$/;"	f	signature:()
s:DefaultPatternSet.sub_delims	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.sub_delims() abort$/;"	f	signature:()
s:DefaultPatternSet.unreserved	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.unreserved() abort$/;"	f	signature:()
s:DefaultPatternSet.userinfo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:DefaultPatternSet.userinfo() abort$/;"	f	signature:()
s:DefineInlineMarkup	./vim82/syntax/rst.vim	/^function! s:DefineInlineMarkup(name, start, middle, end)$/;"	f	signature:(name,start,middle,end)
s:DefineOneInlineMarkup	./vim82/syntax/rst.vim	/^function! s:DefineOneInlineMarkup(name, start, middle, end, char_left, char_right)$/;"	f	signature:(name,start,middle,end,char_left,char_right)
s:DefineSnips	./vimfiles/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f	signature:(dir,aliasft,realft)
s:DeindentingKeyword	./vim82/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f	signature:(cline_info)
s:DeleteBookmark	./vim82/autoload/netrw.vim	/^fun! s:DeleteBookmark(fname)$/;"	f	signature:(fname)
s:DeleteCommands	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:DeleteCommands()$/;"	f	signature:()
s:DetectFileType	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:DetectFileType(type, ft)$/;"	f	signature:(type,ft)
s:DetermineParseConfig	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:DetermineParseConfig(line)$/;"	f	signature:(line)
s:Dict2info	./vim82/autoload/ccomplete.vim	/^function! s:Dict2info(dict)$/;"	f	signature:(dict)
s:DisableOnLargeFile	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:DisableOnLargeFile( buffer )$/;"	f	signature:( buffer )
s:DisplayIncludeTree	./vimfiles/autoload/omni/cpp/includes.vim	/^function! s:DisplayIncludeTree(szFilePath, indent, ...)$/;"	f	signature:(szFilePath,indent,...)
s:DoDefines	./vimfiles/after/syntax/ifdef.vim	/^fun! s:DoDefines( define, defines)$/;"	f	signature:( define,defines)
s:DoFeatureMotion	./vim82/ftplugin/eiffel.vim	/^  function! s:DoFeatureMotion(count, flags)$/;"	f	signature:(count,flags)
s:DoJoin	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:DoJoin(next_leader)$/;"	f	signature:(next_leader)
s:DoJoinRange	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:DoJoinRange(start_lnum, end_lnum)$/;"	f	signature:(start_lnum,end_lnum)
s:DoMatchParen	./vim82/plugin/matchparen.vim	/^func s:DoMatchParen()$/;"	f	signature:()
s:DoMotion	./vim82/ftplugin/eiffel.vim	/^  function! s:DoMotion(pattern, count, flags) abort$/;"	f	signature:(pattern,count,flags)
s:DoRangeJoin	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:DoRangeJoin(next_leader) range$/;"	f	signature:(next_leader)
s:DoWhile	./vim82/indent/javascript.vim	/^function s:DoWhile()$/;"	f	signature:()
s:Doxygen_Hilights	./vim82/syntax/doxygen.vim	/^    fun! s:Doxygen_Hilights()$/;"	f	signature:()
s:Doxygen_Hilights_Base	./vim82/syntax/doxygen.vim	/^    fun! s:Doxygen_Hilights_Base()$/;"	f	signature:()
s:DrawBox	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawBox(x0, y0, x1, y1)$/;"	f	signature:(x0,y0,x1,y1)
s:DrawDown	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawDown()$/;"	f	signature:()
s:DrawEllipse	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawEllipse(x0,y0,x1,y1)$/;"	f	signature:(x0,y0,x1,y1)
s:DrawErase	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawErase()$/;"	f	signature:()
s:DrawFatDArrow	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawFatDArrow()$/;"	f	signature:()
s:DrawFatLArrow	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawFatLArrow()$/;"	f	signature:()
s:DrawFatRArrow	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawFatRArrow()$/;"	f	signature:()
s:DrawFatUArrow	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawFatUArrow()$/;"	f	signature:()
s:DrawFour	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawFour(x,y,xoff,yoff,a,b)$/;"	f	signature:(x,y,xoff,yoff,a,b)
s:DrawLeft	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawLeft()$/;"	f	signature:()
s:DrawLine	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawLine(x0, y0, x1, y1, horiz)$/;"	f	signature:(x0,y0,x1,y1,horiz)
s:DrawObject	./vimfiles/plugin/matrix.vim	/^function! s:DrawObject(i)$/;"	f	signature:(i)
s:DrawPlainLine	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawPlainLine(x0,y0,x1,y1)$/;"	f	signature:(x0,y0,x1,y1)
s:DrawRight	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawRight()$/;"	f	signature:()
s:DrawSlantDownLeft	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawSlantDownLeft()$/;"	f	signature:()
s:DrawSlantDownRight	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawSlantDownRight()$/;"	f	signature:()
s:DrawSlantUpLeft	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawSlantUpLeft()$/;"	f	signature:()
s:DrawSlantUpRight	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawSlantUpRight()$/;"	f	signature:()
s:DrawSpace	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawSpace(chr,dir)$/;"	f	signature:(chr,dir)
s:DrawUp	./vimfiles/autoload/DrawIt.vim	/^fun! s:DrawUp()$/;"	f	signature:()
s:DumpChildren	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:DumpChildren(children, indent)$/;"	f	signature:(children,indent)
s:DumpNode	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:DumpNode(node, indent)$/;"	f	signature:(node,indent)
s:DumpText	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:DumpText(text, indent)$/;"	f	signature:(text,indent)
s:DxyCreateSmallSpecial	./vim82/syntax/doxygen.vim	/^  fun! s:DxyCreateSmallSpecial( kword, name )$/;"	f	signature:( kword,name )
s:ERROR	./vim82/autoload/netrw.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	./vim82/autoload/vimball.vim	/^ let s:ERROR   = 2$/;"	v
s:ERROR	./vim82/autoload/zip.vim	/^let s:ERROR          = 2$/;"	v
s:ES	./vim82/indent/vhdl.vim	/^let s:ES = '\\s*\\%(--.*\\)\\=$'$/;"	v
s:EchoSearchPattern	./vimfiles/autoload/mark.vim	/^	function! s:EchoSearchPattern( searchType, searchPattern, isBackward )$/;"	f	signature:( searchType,searchPattern,isBackward )
s:EditElsewhere	./vim82/pack/dist/opt/editexisting/plugin/editexisting.vim	/^func s:EditElsewhere(filename)$/;"	f	signature:(filename)
s:EditVimrc	./vim82/menu.vim	/^fun! s:EditVimrc()$/;"	f	signature:()
s:Emit	./vim82/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f	signature:(dict,type,args)
s:EmptyInsideString	./vim82/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f	signature:(pline_info)
s:EmptyTag	./vim82/autoload/xmlformat.vim	/^func! s:EmptyTag(tag) abort$/;"	f	signature:(tag)
s:EmptystackP	./vim82/autoload/xmlcomplete.vim	/^function! s:EmptystackP(sname)$/;"	f	signature:(sname)
s:EnableAndMarkScope	./vimfiles/autoload/mark.vim	/^function! s:EnableAndMarkScope( indices, expr )$/;"	f	signature:( indices,expr )
s:EnableLongestEnhancement	./vimfiles/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f	signature:()
s:End	./vim82/macros/less.vim	/^fun! s:End()$/;"	f	signature:()
s:EndBlockIndent	./vim82/indent/ada.vim	/^function s:EndBlockIndent( prev_indent, prev_lnum, blockstart, blockend )$/;"	f	signature:( prev_indent,prev_lnum,blockstart,blockend )
s:EndDebugCommon	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:EndDebugCommon()$/;"	f	signature:()
s:EndPromptDebug	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:EndPromptDebug(job, status)$/;"	f	signature:(job,status)
s:EndTag	./vim82/autoload/xmlformat.vim	/^func! s:EndTag(tag) abort$/;"	f	signature:(tag)
s:EndTermDebug	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:EndTermDebug(job, status)$/;"	f	signature:(job,status)
s:Enter_annotation_buffer	./vim82/ftplugin/ocaml.vim	/^    function! s:Enter_annotation_buffer(annot_file_path)$/;"	f	signature:(annot_file_path)
s:ErlangCalcIndent	./vim82/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f	signature:(lnum,stack)
s:ErlangCalcIndent2	./vim82/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f	signature:(lnum,stack)
s:ErrMsg	./vim82/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f	signature:(msg)
s:ErrorMessage	./vimfiles/autoload/mark.vim	/^function! s:ErrorMessage( searchType, searchPattern, isBackward )$/;"	f	signature:( searchType,searchPattern,isBackward )
s:Escape	./vim82/autoload/zip.vim	/^fun! s:Escape(fname,isfilt)$/;"	f	signature:(fname,isfilt)
s:EscapeText	./vimfiles/autoload/mark.vim	/^function! s:EscapeText( text )$/;"	f	signature:( text )
s:Evaluate	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:Evaluate(range, arg)$/;"	f	signature:(range,arg)
s:Event	./vimfiles/bundle/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:Event.New	./vimfiles/bundle/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f	signature:(nerdtree,subject,action,params)
s:ExecWinCmdNoEa	./vimfiles/autoload/genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f	signature:(winCmd)
s:ExitIfSingleCandidate	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ExitIfSingleCandidate()$/;"	f	signature:()
s:Exit_annotation_buffer	./vim82/ftplugin/ocaml.vim	/^    function! s:Exit_annotation_buffer()$/;"	f	signature:()
s:ExitingOneLineScope	./vim82/indent/typescript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f	signature:(lnum)
s:Expand	./vim82/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f	signature:(dict,pretty,args)
s:ExpandMap	./vimfiles/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f	signature:(map)
s:ExplorePatHls	./vim82/autoload/netrw.vim	/^fun! s:ExplorePatHls(pattern)$/;"	f	signature:(pattern)
s:ExprCol	./vim82/indent/javascript.vim	/^function s:ExprCol()$/;"	f	signature:()
s:ExtendTagItemToPopupItem	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:ExtendTagItemToPopupItem(tagItem, szTypeName)$/;"	f	signature:(tagItem,szTypeName)
s:ExtraBrackets	./vim82/indent/falcon.vim	/^function s:ExtraBrackets(lnum)$/;"	f	signature:(lnum)
s:ExtraBrackets	./vim82/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f	signature:(lnum)
s:ExtractScopeFromTypeInfo	./vimfiles/autoload/omni/cpp/utils.vim	/^function! s:ExtractScopeFromTypeInfo(szTypeInfo)$/;"	f	signature:(szTypeInfo)
s:ExtractTagToken	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ExtractTagToken(text, start, end)$/;"	f	signature:(text,start,end)
s:ExtractTextToken	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ExtractTextToken(text, start, end)$/;"	f	signature:(text,start,end)
s:ExtractToken	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ExtractToken(text, start, end)$/;"	f	signature:(text,start,end)
s:ExtractTypeInfoFromDecl	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:ExtractTypeInfoFromDecl(tokens)$/;"	f	signature:(tokens)
s:Extract_type_data	./vim82/ftplugin/ocaml.vim	/^    function! s:Extract_type_data(block_pattern, annot_file_name)$/;"	f	signature:(block_pattern,annot_file_name)
s:FOLDED_ID	./vim82/syntax/2html.vim	/^  let s:FOLDED_ID  = hlID("Folded")     | lockvar s:FOLDED_ID$/;"	v
s:FOLD_C_ID	./vim82/syntax/2html.vim	/^  let s:FOLD_C_ID  = hlID("FoldColumn") | lockvar s:FOLD_C_ID$/;"	v
s:FUF_BUF_NAME	./vimfiles/autoload/fuf.vim	/^let s:FUF_BUF_NAME = '[fuf]'$/;"	v
s:FUNCTION_DESCS	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^let s:FUNCTION_DESCS = [$/;"	v
s:File	./vimfiles/bundle/previm/autoload/previm.vim	/^let s:File = vital#previm#import('System.File')$/;"	v
s:FileFormat	./vim82/menu.vim	/^fun! s:FileFormat()$/;"	f	signature:()
s:FileReadable	./vim82/autoload/netrw.vim	/^fun! s:FileReadable(fname)$/;"	f	signature:(fname)
s:FilterClassMembers	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:FilterClassMembers(tagPopupList, szAccessFilter)$/;"	f	signature:(tagPopupList,szAccessFilter)
s:FilterClassScopeMembers	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:FilterClassScopeMembers(tagPopupList, szAccessFilter)$/;"	f	signature:(tagPopupList,szAccessFilter)
s:FilterNamespaceScopeMembers	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:FilterNamespaceScopeMembers(tagPopupList)$/;"	f	signature:(tagPopupList)
s:FilterOverloadedFunctions	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:FilterOverloadedFunctions(tagPopupList)$/;"	f	signature:(tagPopupList)
s:FilterStaticClassMembers	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:FilterStaticClassMembers(tagPopupList, szAccessFilter)$/;"	f	signature:(tagPopupList,szAccessFilter)
s:FindBufferForName	./vimfiles/autoload/genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f	signature:(fileName)
s:FindContainingClass	./vim82/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f	signature:()
s:FindIndToken	./vim82/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f	signature:(lnum,dir)
s:FindLet	./vim82/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f	signature:(pstart,pmid,pend)
s:FindLet	./vim82/indent/sml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f	signature:(pstart,pmid,pend)
s:FindPair	./vim82/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f	signature:(pstart,pmid,pend)
s:FindPair	./vim82/indent/sml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f	signature:(pstart,pmid,pend)
s:FindPrevLEIndentedLineMatchingRegex	./vim82/indent/yaml.vim	/^function s:FindPrevLEIndentedLineMatchingRegex(lnum, regex)$/;"	f	signature:(lnum,regex)
s:FindPrevLessIndentedLine	./vim82/indent/yaml.vim	/^function s:FindPrevLessIndentedLine(lnum, ...)$/;"	f	signature:(lnum,...)
s:FindPreviousNonCompilerDirectiveLine	./vim82/indent/cs.vim	/^function! s:FindPreviousNonCompilerDirectiveLine(start_lnum)$/;"	f	signature:(start_lnum)
s:FindStartPositionOfCompletion	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:FindStartPositionOfCompletion()$/;"	f	signature:()
s:Find_common_path	./vim82/ftplugin/ocaml.vim	/^  function! s:Find_common_path (p1,p2)$/;"	f	signature:(p1,p2)
s:Findcomplete	./vimfiles/autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f	signature:(A,L,P)
s:FirstLevelIndent	./vim82/indent/occam.vim	/^let s:FirstLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\|PAR\\|SEQ\\|PRI\\s\\+PAR\\|WHILE\\/;"	v
s:FirstLevelNonColonEndIndent	./vim82/indent/occam.vim	/^let s:FirstLevelNonColonEndIndent = '^\\C\\s*PROTOCOL\\>\\|\\(--.*\\)\\@<!\\<\\(\\(CHAN\\|DATA\\/;"	v
s:First_word_len	./vim82/indent/awk.vim	/^function! s:First_word_len( line )$/;"	f	signature:( line )
s:FixFText	./vim82/menu.vim	/^fun! s:FixFText()$/;"	f	signature:()
s:FlagSet	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:FlagSet.New	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f	signature:()
s:FlagSet._flagsForScope	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f	signature:(scope)
s:FlagSet.addFlag	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f	signature:(scope,flag)
s:FlagSet.clearFlags	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f	signature:(scope)
s:FlagSet.removeFlag	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f	signature:(scope,flag)
s:FlagSet.renderToString	./vimfiles/bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f	signature:()
s:Flood	./vimfiles/autoload/DrawIt.vim	/^fun! s:Flood()$/;"	f	signature:()
s:FmtCheckPar	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:FmtCheckPar(leader)$/;"	f	signature:(leader)
s:FnameEscape	./vim82/menu.vim	/^func s:FnameEscape(fname)$/;"	f	signature:(fname)
s:Fnameescape	./vim82/ftplugin/ocaml.vim	/^  function! s:Fnameescape(s)$/;"	f	signature:(s)
s:FoldColumn_build	./vim82/syntax/2html.vim	/^    function! s:FoldColumn_build(char, len, numfill, char2, class, click)$/;"	f	signature:(char,len,numfill,char2,class,click)
s:FoldColumn_build	./vim82/syntax/2html.vim	/^  function! s:FoldColumn_build(char, len, numfill, char2, class, click)$/;"	f	signature:(char,len,numfill,char2,class,click)
s:FoldColumn_fill	./vim82/syntax/2html.vim	/^    function! s:FoldColumn_fill()$/;"	f	signature:()
s:FoldColumn_fill	./vim82/syntax/2html.vim	/^  function! s:FoldColumn_fill()$/;"	f	signature:()
s:FoldCompare	./vim82/syntax/2html.vim	/^  function! s:FoldCompare(f1, f2)$/;"	f	signature:(f1,f2)
s:Fold_Collate	./vim82/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<begin\\>$\\|'$/;"	v
s:Fold_Collate	./vim82/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<exception\\>$\\|'$/;"	v
s:Fold_Collate	./vim82/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<is\\>$\\|'$/;"	v
s:Fold_Collate	./vim82/autoload/ada.vim	/^      let s:Fold_Collate .= '\\s\\+\\<private\\>$\\|'$/;"	v
s:Fold_Collate	./vim82/autoload/ada.vim	/^   let s:Fold_Collate .= '--\\)'$/;"	v
s:Fold_Collate	./vim82/autoload/ada.vim	/^   let s:Fold_Collate = '^\\([;)]*$\\|'$/;"	v
s:ForceCompileAndDiagnostics	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:ForceCompileAndDiagnostics()$/;"	f	signature:()
s:ForceUpdate	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ForceUpdate()$/;"	f	signature:()
s:Format	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:Format(start_lnum, end_lnum)$/;"	f	signature:(start_lnum,end_lnum)
s:FormatContent	./vim82/autoload/xmlformat.vim	/^func! s:FormatContent(list) abort$/;"	f	signature:(list)
s:FormatLine	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:FormatLine(second_indent)$/;"	f	signature:(second_indent)
s:FormatWorkhorse	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:FormatWorkhorse(motion)$/;"	f	signature:(motion)
s:Forward	./vim82/macros/less.vim	/^fun! s:Forward()$/;"	f	signature:()
s:ForwardBack	./vimfiles/plugin/supertab.vim	/^  function! s:ForwardBack(command, map)$/;"	f	signature:(command,map)
s:FreshState	./vim82/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f	signature:(lnum)
s:FreshState	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f	signature:(lnum)
s:GdbOutCallback	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:GdbOutCallback(channel, text)$/;"	f	signature:(channel,text)
s:GenerateDocumentation	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:GenerateDocumentation(config, data)$/;"	f	signature:(config,data)
s:GetAbstract	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:GetAbstract( modifiers )$/;"	f	signature:( modifiers )
s:GetAccessFilter	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:GetAccessFilter(szFilter, szAccessFilter)$/;"	f	signature:(szFilter,szAccessFilter)
s:GetAddition	./vim82/autoload/ccomplete.vim	/^function! s:GetAddition(line, match, memarg, bracket)$/;"	f	signature:(line,match,memarg,bracket)
s:GetAllUsingNamespaceMapFromCurrentBuffer	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromCurrentBuffer(...)$/;"	f	signature:(...)
s:GetAllUsingNamespaceMapFromFile	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetAllUsingNamespaceMapFromFile(szFilePath, ...)$/;"	f	signature:(szFilePath,...)
s:GetBufferRubyClass	./vim82/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f	signature:(name,...)
s:GetBufferRubyEntity	./vim82/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f	signature:( name,type,... )
s:GetBufferRubyModule	./vim82/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f	signature:(name,...)
s:GetBufferRubySingletonMethods	./vim82/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f	signature:(name)
s:GetCharUnderCursor	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:GetCharUnderCursor()$/;"	f	signature:()
s:GetClassScopeAtCursor	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetClassScopeAtCursor()$/;"	f	signature:()
s:GetEndIndentation	./vim82/indent/tex.vim	/^function! s:GetEndIndentation(lnum) " {{{$/;"	f	signature:(lnum)
s:GetFinal	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:GetFinal( modifiers )$/;"	f	signature:( modifiers )
s:GetFullname	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:GetFullname(msg)$/;"	f	signature:(msg)
s:GetIncludeListFromCurrentBuffer	./vimfiles/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromCurrentBuffer()$/;"	f	signature:()
s:GetIncludeListFromFile	./vimfiles/autoload/omni/cpp/includes.vim	/^function! s:GetIncludeListFromFile(szFilePath, bUpdate) $/;"	f	signature:(szFilePath,bUpdate)
s:GetInd	./vim82/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f	signature:(lnum,pat,lim)
s:GetInd	./vim82/indent/sml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f	signature:(lnum,pat,lim)
s:GetIndtokenAtCol	./vim82/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f	signature:(indtokens,col)
s:GetLastBeginIndentation	./vim82/indent/tex.vim	/^function! s:GetLastBeginIndentation(lnum) " {{{$/;"	f	signature:(lnum)
s:GetLeader	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:GetLeader(...)$/;"	f	signature:(...)
s:GetLineWithoutFullComment	./vim82/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f	signature:(lnum)
s:GetMSL	./vim82/indent/falcon.vim	/^function s:GetMSL(lnum)$/;"	f	signature:(lnum)
s:GetMSL	./vim82/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f	signature:(lnum)
s:GetMSL	./vim82/indent/typescript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f	signature:(lnum,in_one_line_scope)
s:GetMdIndent	./vim82/indent/rmd.vim	/^function s:GetMdIndent()$/;"	f	signature:()
s:GetModelines	./vimfiles/after/syntax/ifdef.vim	/^fun! s:GetModelines( l1, l2)$/;"	f	signature:( l1,l2)
s:GetNamespaceAliasListFromLine	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasListFromLine(szLine)$/;"	f	signature:(szLine)
s:GetNamespaceAliasMap	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceAliasMap()$/;"	f	signature:()
s:GetNamespaceListFromLine	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetNamespaceListFromLine(szLine)$/;"	f	signature:(szLine)
s:GetNext	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! s:GetNext(context)$/;"	f	signature:(context)
s:GetNextWinnrInStack	./vimfiles/autoload/genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f	signature:(dir)
s:GetOffsetOf	./vim82/indent/config.vim	/^function s:GetOffsetOf(line, regexp)$/;"	f	signature:(line,regexp)
s:GetOneScript	./vim82/autoload/getscript.vim	/^fun! s:GetOneScript(...)$/;"	f	signature:(...)
s:GetOpenCloseCount	./vim82/indent/matlab.vim	/^function! s:GetOpenCloseCount(lnum, pattern, ...)$/;"	f	signature:(lnum,pattern,...)
s:GetPair	./vim82/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f	signature:(start,end,flags,skip)
s:GetPrevNonCommentLineNum	./vim82/indent/pascal.vim	/^function! s:GetPrevNonCommentLineNum( line_num )$/;"	f	signature:( line_num )
s:GetRelVer	./vim82/ftplugin/spec.vim	/^	function! s:GetRelVer()$/;"	f	signature:()
s:GetRubyVarType	./vim82/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f	signature:(v)
s:GetScope	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:GetScope( modifiers )$/;"	f	signature:( modifiers )
s:GetScriptType	./vim82/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f	signature:(str)
s:GetScriptType	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f	signature:(str)
s:GetSnippet	./vimfiles/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f	signature:(word,scope)
s:GetStatic	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:GetStatic( modifiers )$/;"	f	signature:( modifiers )
s:GetStmtStarterIndent	./vim82/indent/sqlanywhere.vim	/^function! s:GetStmtStarterIndent( keyword, curr_lnum )$/;"	f	signature:( keyword,curr_lnum )
s:GetStopPositionForLocalSearch	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetStopPositionForLocalSearch()$/;"	f	signature:()
s:GetSymbol	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:GetSymbol(tokens)$/;"	f	signature:(tokens)
s:GetTagOfSameScope	./vimfiles/autoload/omni/cpp/utils.vim	/^function! s:GetTagOfSameScope(listTags, szScopeToMatch)$/;"	f	signature:(listTags,szScopeToMatch)
s:GetTempfile	./vim82/autoload/netrw.vim	/^fun! s:GetTempfile(fname)$/;"	f	signature:(fname)
s:GetTemplate	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:GetTemplate(filename)$/;"	f	signature:(filename)
s:GetTokensFromLine	./vim82/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f	signature:(line,string_continuation,atom_continuation,tabstop)
s:GetTypeInfoOfReturnedType	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfReturnedType(contextStack, szFunctionName)$/;"	f	signature:(contextStack,szFunctionName)
s:GetTypeInfoOfVariable	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:GetTypeInfoOfVariable(contextStack, szVariable, bSearchDecl)$/;"	f	signature:(contextStack,szVariable,bSearchDecl)
s:GetUsingNamespaceListFromMap	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:GetUsingNamespaceListFromMap(namespaceMap, ...)$/;"	f	signature:(namespaceMap,...)
s:GetVarIndent	./vim82/indent/typescript.vim	/^function s:GetVarIndent(lnum)$/;"	f	signature:(lnum)
s:GetVars	./vim82/indent/javascript.vim	/^function s:GetVars()$/;"	f	signature:()
s:GetWidth	./vim82/indent/objc.vim	/^function s:GetWidth(line, regexp)$/;"	f	signature:(line,regexp)
s:GetWidth	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:GetWidth()$/;"	f	signature:()
s:GetWinDim	./vimfiles/autoload/genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f	signature:(dir,win)
s:GetYamlIndent	./vim82/indent/rmd.vim	/^function s:GetYamlIndent()$/;"	f	signature:()
s:Get_brace_balance	./vim82/indent/awk.vim	/^function! s:Get_brace_balance( line, b_open, b_close )$/;"	f	signature:( line,b_open,b_close )
s:Get_last_paren_idx	./vim82/indent/r.vim	/^function! s:Get_last_paren_idx(line, o, c, pb)$/;"	f	signature:(line,o,c,pb)
s:Get_matching_brace	./vim82/indent/r.vim	/^function! s:Get_matching_brace(linenr, o, c, delbrace)$/;"	f	signature:(linenr,o,c,delbrace)
s:Get_matching_if	./vim82/indent/r.vim	/^function! s:Get_matching_if(linenr, delif)$/;"	f	signature:(linenr,delif)
s:Get_paren_balance	./vim82/indent/r.vim	/^function! s:Get_paren_balance(line, o, c)$/;"	f	signature:(line,o,c)
s:Get_prev_line	./vim82/indent/awk.vim	/^function! s:Get_prev_line( lineno )$/;"	f	signature:( lineno )
s:Get_prev_line	./vim82/indent/r.vim	/^function s:Get_prev_line(lineno)$/;"	f	signature:(lineno)
s:Get_type	./vim82/ftplugin/ocaml.vim	/^    function! s:Get_type(mode, annot_file_name)$/;"	f	signature:(mode,annot_file_name)
s:GlobPath	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:GlobPath(dirs, depth)$/;"	f	signature:(dirs,depth)
s:GotoProgram	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:GotoProgram()$/;"	f	signature:()
s:GotoSourcewinOrCreateIt	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:GotoSourcewinOrCreateIt()$/;"	f	signature:()
s:Greek	./vim82/syntax/tex.vim	/^  fun! s:Greek(group,pat,cchar)$/;"	f	signature:(group,pat,cchar)
s:GuessType	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:GuessType( typeString )$/;"	f	signature:( typeString )
s:HTTP	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTPS.vim	/^let s:HTTP = {}$/;"	v
s:HandleBreakpointDelete	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:HandleBreakpointDelete(msg)$/;"	f	signature:(msg)
s:HandleCursor	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:HandleCursor(msg)$/;"	f	signature:(msg)
s:HandleError	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:HandleError(msg)$/;"	f	signature:(msg)
s:HandleEvaluate	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:HandleEvaluate(msg)$/;"	f	signature:(msg)
s:HandleNewBreakpoint	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:HandleNewBreakpoint(msg)$/;"	f	signature:(msg)
s:HandleProgramRun	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:HandleProgramRun(msg)$/;"	f	signature:(msg)
s:HasATagFileOrTagEnvChanged	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:HasATagFileOrTagEnvChanged()$/;"	f	signature:()
s:HasFormatOptions	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:HasFormatOptions(x)$/;"	f	signature:(x)
s:HasTagEnvChanged	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:HasTagEnvChanged()$/;"	f	signature:()
s:HashIndent	./vim82/ftplugin/markdown.vim	/^function! s:HashIndent(lnum) abort$/;"	f	signature:(lnum)
s:Help	./vim82/macros/less.vim	/^fun! s:Help()$/;"	f	signature:()
s:Helpfind	./vim82/menu.vim	/^fun! s:Helpfind()$/;"	f	signature:()
s:Hex2Dec	./vimfiles/autoload/visincr.vim	/^fun! s:Hex2Dec(hex)$/;"	f	signature:(hex)
s:HideSymbol	./vim82/syntax/rhelp.vim	/^function s:HideSymbol(pat, cchar, hide)$/;"	f	signature:(pat,cchar,hide)
s:Highlight	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:Highlight(init, old, new)$/;"	f	signature:(init,old,new)
s:Highlight_Matching_Pair	./vim82/plugin/matchparen.vim	/^func s:Highlight_Matching_Pair()$/;"	f	signature:()
s:HtmlClosing	./vim82/syntax/2html.vim	/^  function! s:HtmlClosing(id, has_extra_attrs)$/;"	f	signature:(id,has_extra_attrs)
s:HtmlClosing	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  function s:HtmlClosing(id)$/;"	f	signature:(id)
s:HtmlColor	./vim82/syntax/2html.vim	/^  function! s:HtmlColor(color)$/;"	f	signature:(color)
s:HtmlColor	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  function! s:HtmlColor(color)$/;"	f	signature:(color)
s:HtmlEndline	./vim82/syntax/2html.vim	/^  let s:HtmlEndline = '<br' . s:tag_close$/;"	v
s:HtmlEndline	./vim82/syntax/2html.vim	/^let s:HtmlEndline = ''$/;"	v
s:HtmlFormat	./vim82/syntax/2html.vim	/^function! s:HtmlFormat(text, style_id, diff_style_id, extra_attrs, make_unselectable)$/;"	f	signature:(text,style_id,diff_style_id,extra_attrs,make_unselectable)
s:HtmlFormat_d	./vim82/syntax/2html.vim	/^  function! s:HtmlFormat_d(text, style_id, diff_style_id)$/;"	f	signature:(text,style_id,diff_style_id)
s:HtmlFormat_n	./vim82/syntax/2html.vim	/^      function! s:HtmlFormat_n(text, style_id, diff_style_id, lnr)$/;"	f	signature:(text,style_id,diff_style_id,lnr)
s:HtmlFormat_n	./vim82/syntax/2html.vim	/^    function! s:HtmlFormat_n(text, style_id, diff_style_id, lnr)$/;"	f	signature:(text,style_id,diff_style_id,lnr)
s:HtmlFormat_t	./vim82/syntax/2html.vim	/^    function! s:HtmlFormat_t(text, style_id, diff_style_id)$/;"	f	signature:(text,style_id,diff_style_id)
s:HtmlFormat_t	./vim82/syntax/2html.vim	/^  function! s:HtmlFormat_t(text, style_id, diff_style_id)$/;"	f	signature:(text,style_id,diff_style_id)
s:HtmlOpening	./vim82/syntax/2html.vim	/^  function! s:HtmlOpening(id, extra_attrs)$/;"	f	signature:(id,extra_attrs)
s:HtmlOpening	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  function! s:HtmlOpening(id)$/;"	f	signature:(id)
s:HtmlSpace	./vim82/syntax/2html.vim	/^  let s:HtmlSpace = '\\' . s:LeadingSpace$/;"	v
s:HtmlSpace	./vim82/syntax/2html.vim	/^let s:HtmlSpace = ' '$/;"	v
s:I	./vimfiles/autoload/genutils.vim	/^let s:I = 1$/;"	v
s:I	./vimfiles/autoload/visincr.vim	/^let s:I      = 0 $/;"	v
s:I	./vimfiles/plugin/visincrPlugin.vim	/^let s:I      = 0 $/;"	v
s:IA	./vimfiles/autoload/visincr.vim	/^let s:IA     = 7 $/;"	v
s:IA	./vimfiles/plugin/visincrPlugin.vim	/^let s:IA     = 7 $/;"	v
s:IB	./vimfiles/autoload/visincr.vim	/^let s:IB     = 10$/;"	v
s:IB	./vimfiles/plugin/visincrPlugin.vim	/^let s:IB     = 10$/;"	v
s:ID	./vimfiles/autoload/visincr.vim	/^let s:ID     = 5 $/;"	v
s:ID	./vimfiles/plugin/visincrPlugin.vim	/^let s:ID     = 5 $/;"	v
s:IDMY	./vimfiles/autoload/visincr.vim	/^let s:IDMY   = 4 $/;"	v
s:IDMY	./vimfiles/plugin/visincrPlugin.vim	/^let s:IDMY   = 4 $/;"	v
s:II	./vimfiles/autoload/visincr.vim	/^let s:II     = 1 $/;"	v
s:II	./vimfiles/plugin/visincrPlugin.vim	/^let s:II     = 1 $/;"	v
s:IIB	./vimfiles/autoload/visincr.vim	/^let s:IIB    = 11$/;"	v
s:IIB	./vimfiles/plugin/visincrPlugin.vim	/^let s:IIB    = 11$/;"	v
s:IIO	./vimfiles/autoload/visincr.vim	/^let s:IIO    = 13$/;"	v
s:IIO	./vimfiles/plugin/visincrPlugin.vim	/^let s:IIO    = 13$/;"	v
s:IIPOW	./vimfiles/autoload/visincr.vim	/^let s:IIPOW  = 17$/;"	v
s:IIPOW	./vimfiles/plugin/visincrPlugin.vim	/^let s:IIPOW  = 17$/;"	v
s:IIR	./vimfiles/autoload/visincr.vim	/^let s:IIR    = 15$/;"	v
s:IIR	./vimfiles/plugin/visincrPlugin.vim	/^let s:IIR    = 15$/;"	v
s:IIX	./vimfiles/autoload/visincr.vim	/^let s:IIX    = 9 $/;"	v
s:IIX	./vimfiles/plugin/visincrPlugin.vim	/^let s:IIX    = 9 $/;"	v
s:IM	./vimfiles/autoload/visincr.vim	/^let s:IM     = 6 $/;"	v
s:IM	./vimfiles/plugin/visincrPlugin.vim	/^let s:IM     = 6 $/;"	v
s:IMDY	./vimfiles/autoload/visincr.vim	/^let s:IMDY   = 2 $/;"	v
s:IMDY	./vimfiles/plugin/visincrPlugin.vim	/^let s:IMDY   = 2 $/;"	v
s:IO	./vimfiles/autoload/visincr.vim	/^let s:IO     = 12$/;"	v
s:IO	./vimfiles/plugin/visincrPlugin.vim	/^let s:IO     = 12$/;"	v
s:IPOW	./vimfiles/autoload/visincr.vim	/^let s:IPOW   = 16$/;"	v
s:IPOW	./vimfiles/plugin/visincrPlugin.vim	/^let s:IPOW   = 16$/;"	v
s:IR	./vimfiles/autoload/visincr.vim	/^let s:IR     = 14$/;"	v
s:IR	./vimfiles/plugin/visincrPlugin.vim	/^let s:IR     = 14$/;"	v
s:IX	./vimfiles/autoload/visincr.vim	/^let s:IX     = 8 $/;"	v
s:IX	./vimfiles/plugin/visincrPlugin.vim	/^let s:IX     = 8 $/;"	v
s:IYMD	./vimfiles/autoload/visincr.vim	/^let s:IYMD   = 3 $/;"	v
s:IYMD	./vimfiles/plugin/visincrPlugin.vim	/^let s:IYMD   = 3 $/;"	v
s:IdentifierFinishedOperations	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:IdentifierFinishedOperations()$/;"	f	signature:()
s:InComment	./vim82/autoload/xmlcomplete.vim	/^function! s:InComment()$/;"	f	signature:()
s:InCommentAt	./vim82/autoload/xmlcomplete.vim	/^function! s:InCommentAt(line, col)$/;"	f	signature:(line,col)
s:InMultiVarStatement	./vim82/indent/typescript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f	signature:(lnum)
s:InOneLineScope	./vim82/indent/typescript.vim	/^function s:InOneLineScope(lnum)$/;"	f	signature:(lnum)
s:IncreaseFunc	./vim82/ftplugin/cobol.vim	/^function! s:IncreaseFunc(type)$/;"	f	signature:(type)
s:IncreaseIndent	./vim82/ftplugin/cobol.vim	/^function! s:IncreaseIndent()$/;"	f	signature:()
s:Indent	./vim82/autoload/xmlformat.vim	/^func! s:Indent(item) abort$/;"	f	signature:(item)
s:IndentError	./vim82/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f	signature:(msg,token,stack)
s:IndentWithContinuation	./vim82/indent/typescript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f	signature:(lnum,ind,width)
s:IndentingKeywordInMSL	./vim82/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f	signature:(msl_info)
s:Init	./vimfiles/plugin/matrix.vim	/^function! s:Init()$/;"	f	signature:()
s:Init	./vimfiles/plugin/supertab.vim	/^function! s:Init()$/;"	f	signature:()
s:InitBuffer	./vimfiles/plugin/supertab.vim	/^function! s:InitBuffer()$/;"	f	signature:()
s:InitComplete	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:InitComplete()$/;"	f	signature:()
s:InitCustomFuncs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:InitCustomFuncs()$/;"	f	signature:()
s:InsertNewLine	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:InsertNewLine()$/;"	f	signature:()
s:InsertRefs	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f	signature:(groupBR,prefix,group,suffix,matchline)
s:InsideCommentOrString	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:InsideCommentOrString()$/;"	f	signature:()
s:InsideCommentOrStringAndShouldStop	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:InsideCommentOrStringAndShouldStop()$/;"	f	signature:()
s:InsideTag	./vim82/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f	signature:(foundHtmlString)
s:InsideTag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f	signature:(foundHtmlString)
s:Instack	./vim82/autoload/xmlcomplete.vim	/^function! s:Instack(el, sname)$/;"	f	signature:(el,sname)
s:InstallCommands	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:InstallCommands()$/;"	f	signature:()
s:InstallWinbar	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:InstallWinbar()$/;"	f	signature:()
s:InvokeCompletion	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:InvokeCompletion()$/;"	f	signature:()
s:InvokeFuncs	./vimfiles/autoload/genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f	signature:(funcList)
s:InvokeSemanticCompletion	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:InvokeSemanticCompletion()$/;"	f	signature:()
s:IsAssignment	./vim82/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f	signature:(str,pos)
s:IsAttributeLine	./vim82/indent/cs.vim	/^function! s:IsAttributeLine(line)$/;"	f	signature:(line)
s:IsBlock	./vim82/indent/javascript.vim	/^function s:IsBlock()$/;"	f	signature:()
s:IsBoundary	./vimfiles/autoload/DrawIt.vim	/^fun! s:IsBoundary(row,col)$/;"	f	signature:(row,col)
s:IsBuiltin	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:IsBuiltin()$/;"	f	signature:()
s:IsCached	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:IsCached(cache, szKey1, szKey2)$/;"	f	signature:(cache,szKey1,szKey2)
s:IsCatchStandalone	./vim82/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f	signature:(lnum,i)
s:IsColComment	./vim82/indent/sqlanywhere.vim	/^function! s:IsColComment(lnum, cnum)$/;"	f	signature:(lnum,cnum)
s:IsComment	./vim82/autoload/xmlformat.vim	/^func! s:IsComment(tag) abort$/;"	f	signature:(tag)
s:IsCommentOrString	./vim82/indent/matlab.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f	signature:(lnum,col)
s:IsCompilerDirective	./vim82/indent/cs.vim	/^function! s:IsCompilerDirective(line)$/;"	f	signature:(line)
s:IsContOne	./vim82/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f	signature:(cont)
s:IsEndOfFile	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! s:IsEndOfFile(context)$/;"	f	signature:(context)
s:IsEndOfParamList	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! s:IsEndOfParamList(context)$/;"	f	signature:(context)
s:IsInBlock	./vim82/indent/hog.vim	/^function s:IsInBlock(lnum)$/;"	f	signature:(lnum)
s:IsInClassDef	./vim82/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f	signature:()
s:IsInComment	./vim82/autoload/rubycomplete.vim	/^function! s:IsInComment(pos)$/;"	f	signature:(pos)
s:IsInMultilineComment	./vim82/indent/typescript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f	signature:(lnum,col)
s:IsInRubyGroup	./vim82/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f	signature:(groups,lnum,col)
s:IsInString	./vim82/indent/falcon.vim	/^function s:IsInString(lnum, col)$/;"	f	signature:(lnum,col)
s:IsInString	./vim82/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f	signature:(lnum,col)
s:IsInString	./vim82/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f	signature:(lnum,col)
s:IsInString	./vim82/indent/typescript.vim	/^function s:IsInString(lnum, col)$/;"	f	signature:(lnum,col)
s:IsInStringDelimiter	./vim82/indent/falcon.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f	signature:(lnum,col)
s:IsInStringDelimiter	./vim82/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f	signature:(lnum,col)
s:IsInStringOrComment	./vim82/indent/falcon.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f	signature:(lnum,col)
s:IsInStringOrComment	./vim82/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f	signature:(lnum,col)
s:IsInStringOrComment	./vim82/indent/typescript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f	signature:(lnum,col)
s:IsInStringOrDocumentation	./vim82/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f	signature:(lnum,col)
s:IsLineAtomContinuation	./vim82/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f	signature:(lnum)
s:IsLineComment	./vim82/indent/sqlanywhere.vim	/^function! s:IsLineComment(lnum)$/;"	f	signature:(lnum)
s:IsLineComment	./vim82/indent/typescript.vim	/^function s:IsLineComment(lnum, col)$/;"	f	signature:(lnum,col)
s:IsLineContinuation	./vim82/indent/matlab.vim	/^function! s:IsLineContinuation(lnum)$/;"	f	signature:(lnum)
s:IsLineStringContinuation	./vim82/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f	signature:(lnum)
s:IsPosInClassDef	./vim82/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f	signature:(pos)
s:IsSwitch	./vim82/indent/javascript.vim	/^function s:IsSwitch()$/;"	f	signature:()
s:IsTag	./vim82/autoload/xmlformat.vim	/^func! s:IsTag(tag) abort$/;"	f	signature:(tag)
s:IsTypeInfoResolved	./vimfiles/autoload/omni/cpp/utils.vim	/^function! s:IsTypeInfoResolved(szTypeInfo)$/;"	f	signature:(szTypeInfo)
s:IsUnnamedType	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:IsUnnamedType(tagItem)$/;"	f	signature:(tagItem)
s:IsXMLDecl	./vim82/autoload/xmlformat.vim	/^func! s:IsXMLDecl(tag) abort$/;"	f	signature:(tag)
s:Is_opening_folding	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^function! s:Is_opening_folding(lnum) "{{{$/;"	f	signature:(lnum)
s:Jump_Back	./vim82/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f	signature:()
s:Jump_Forward	./vim82/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f	signature:()
s:KILL_TIMEOUT_MS	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^let s:KILL_TIMEOUT_MS = 2000$/;"	v
s:KeyLoop	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:KeyLoop()$/;"	f	signature:()
s:KeyMap	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap.Add	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f	signature:(keymap)
s:KeyMap.All	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f	signature:()
s:KeyMap.BindAll	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f	signature:()
s:KeyMap.Create	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f	signature:(options)
s:KeyMap.FindFor	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f	signature:(key,scope)
s:KeyMap.Invoke	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f	signature:(key)
s:KeyMap.Remove	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f	signature:(key,scope)
s:KeyMap.bind	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f	signature:()
s:KeyMap.invoke	./vimfiles/bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f	signature:(...)
s:L	./vimfiles/autoload/genutils.vim	/^let s:L = 50$/;"	v
s:L9_VERSION_CURRENT	./vimfiles/autoload/l9.vim	/^let s:L9_VERSION_CURRENT  = 101$/;"	v
s:L9_VERSION_PASSABLE	./vimfiles/autoload/l9.vim	/^let s:L9_VERSION_PASSABLE = 101$/;"	v
s:LINENR_ID	./vim82/syntax/2html.vim	/^  let s:LINENR_ID  = hlID('LineNr')     | lockvar s:LINENR_ID$/;"	v
s:LP_And	./vim82/plugin/logiPat.vim	/^fun! s:LP_And(pat1,pat2)$/;"	f	signature:(pat1,pat2)
s:LP_Execute	./vim82/plugin/logiPat.vim	/^fun! s:LP_Execute(preclvl)$/;"	f	signature:(preclvl)
s:LP_Not	./vim82/plugin/logiPat.vim	/^fun! s:LP_Not(pat)$/;"	f	signature:(pat)
s:LP_OpPush	./vim82/plugin/logiPat.vim	/^fun! s:LP_OpPush(op)$/;"	f	signature:(op)
s:LP_Or	./vim82/plugin/logiPat.vim	/^fun! s:LP_Or(pat1,pat2)$/;"	f	signature:(pat1,pat2)
s:LP_PatPop	./vim82/plugin/logiPat.vim	/^fun! s:LP_PatPop(lookup)$/;"	f	signature:(lookup)
s:LP_PatPush	./vim82/plugin/logiPat.vim	/^fun! s:LP_PatPush(pat)$/;"	f	signature:(pat)
s:LastTagIsOpen	./vim82/indent/mp.vim	/^function! s:LastTagIsOpen(line)$/;"	f	signature:(line)
s:LastValidMatchEnd	./vim82/indent/mp.vim	/^function! s:LastValidMatchEnd(line, pat, start)$/;"	f	signature:(line,pat,start)
s:LeadingOperator	./vim82/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f	signature:(cline_info)
s:LeadingSpace	./vim82/syntax/2html.vim	/^  let s:LeadingSpace = s:settings.use_xhtml ? '&#160;' : '&nbsp;'$/;"	v
s:LeadingSpace	./vim82/syntax/2html.vim	/^let s:LeadingSpace = ' '$/;"	v
s:LeadingWhiteSpace	./vim82/indent/objc.vim	/^function s:LeadingWhiteSpace(line)$/;"	f	signature:(line)
s:LeftRelease	./vimfiles/autoload/DrawIt.vim	/^fun! s:LeftRelease()$/;"	f	signature:()
s:LeftStart	./vimfiles/autoload/DrawIt.vim	/^fun! s:LeftStart()$/;"	f	signature:()
s:LineHasOpeningBrackets	./vim82/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f	signature:(lnum)
s:LineHasOpeningBrackets	./vim82/indent/typescript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f	signature:(lnum)
s:LoadFTPlugin	./VIMPROJ/3rd/dein.vim/.dein/ftplugin.vim	/^  func! s:LoadFTPlugin()$/;"	f	signature:()
s:LoadFTPlugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/ftplugin.vim	/^  func! s:LoadFTPlugin()$/;"	f	signature:()
s:LoadFTPlugin	./vim82/ftplugin.vim	/^  func! s:LoadFTPlugin()$/;"	f	signature:()
s:LoadIndent	./vim82/indent.vim	/^  func! s:LoadIndent()$/;"	f	signature:()
s:LoadVimSesn	./vim82/menu.vim	/^fun! s:LoadVimSesn()$/;"	f	signature:()
s:Load_annotation	./vim82/ftplugin/ocaml.vim	/^    function! s:Load_annotation(annot_file_name)$/;"	f	signature:(annot_file_name)
s:LocalBrowse	./vim82/plugin/netrwPlugin.vim	/^fun! s:LocalBrowse(dirname)$/;"	f	signature:(dirname)
s:LocalBrowseRefresh	./vim82/autoload/netrw.vim	/^fun! s:LocalBrowseRefresh()$/;"	f	signature:()
s:LocalFastBrowser	./vim82/autoload/netrw.vim	/^fun! s:LocalFastBrowser()$/;"	f	signature:()
s:LocalListing	./vim82/autoload/netrw.vim	/^fun! s:LocalListing()$/;"	f	signature:()
s:LocalSearchDecl	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:LocalSearchDecl(name)$/;"	f	signature:(name)
s:Locate_annotation	./vim82/ftplugin/ocaml.vim	/^  function! s:Locate_annotation()$/;"	f	signature:()
s:Log	./vim82/indent/erlang.vim	/^function! s:Log(s)$/;"	f	signature:(s)
s:LookingAt	./vim82/indent/javascript.vim	/^function s:LookingAt()$/;"	f	signature:()
s:LoosePatternSet	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^let s:LoosePatternSet = {}$/;"	v
s:LoosePatternSet.sub_delims	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^  function! s:LoosePatternSet.sub_delims() abort$/;"	f	signature:()
s:M	./vimfiles/autoload/genutils.vim	/^let s:M = 1000$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/bookmarkdir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/bookmarkfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/buffer.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/buffertag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/callbackfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/callbackitem.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/changelist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/coveragefile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/dir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/file.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/givencmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/givendir.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/givenfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/help.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/jumplist.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/line.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/mrucmd.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/mrufile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/quickfix.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/tag.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MODE_NAME	./vimfiles/autoload/fuf/taggedfile.vim	/^let s:MODE_NAME = expand('<sfile>:t:r')$/;"	v
s:MRU_Exclude_List	./vimfiles/plugin/bufexplorer.vim	/^let s:MRU_Exclude_List = ["[BufExplorer]","__MRU_Files__"]$/;"	v
s:MainBlockIndent	./vim82/indent/ada.vim	/^function s:MainBlockIndent (prev_indent, prev_lnum, blockstart, stop_at)$/;"	f	signature:(prev_indent,prev_lnum,blockstart,stop_at)
s:MakeBookmark	./vim82/autoload/netrw.vim	/^fun! s:MakeBookmark(fname)$/;"	f	signature:(fname)
s:MakeSshCmd	./vim82/autoload/netrw.vim	/^fun! s:MakeSshCmd(sshcmd)$/;"	f	signature:(sshcmd)
s:ManPager	./vim82/plugin/manpager.vim	/^function! s:ManPager()$/;"	f	signature:()
s:ManualCompletionEnter	./vimfiles/plugin/supertab.vim	/^function! s:ManualCompletionEnter()$/;"	f	signature:()
s:MapNorms	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapNorms()$/;"	f	signature:()
s:MapSpecs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MapSpecs()$/;"	f	signature:()
s:MarkEnable	./vimfiles/autoload/mark.vim	/^function! s:MarkEnable( enable, ...)$/;"	f	signature:( enable,...)
s:MarkMatch	./vimfiles/autoload/mark.vim	/^function! s:MarkMatch( indices, expr )$/;"	f	signature:( indices,expr )
s:MarkScope	./vimfiles/autoload/mark.vim	/^function! s:MarkScope( indices, expr )$/;"	f	signature:( indices,expr )
s:MarkToOpen	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MarkToOpen()$/;"	f	signature:()
s:Match	./vim82/indent/falcon.vim	/^function s:Match(lnum, regex)$/;"	f	signature:(lnum,regex)
s:Match	./vim82/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f	signature:(lnum,regex)
s:Match	./vim82/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f	signature:(lnum,regex)
s:Match	./vim82/indent/typescript.vim	/^function s:Match(lnum, regex)$/;"	f	signature:(lnum,regex)
s:Match	./vimfiles/autoload/genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f	signature:(expr,pat,start)
s:MatchCount	./vim82/indent/pov.vim	/^function! s:MatchCount(line, rexp)$/;"	f	signature:(line,rexp)
s:MatchIt	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchIt(items, pat, limit, exc)$/;"	f	signature:(items,pat,limit,exc)
s:MatchLast	./vim82/indent/falcon.vim	/^function s:MatchLast(lnum, regex)$/;"	f	signature:(lnum,regex)
s:Match_borders	./vim82/ftplugin/ocaml.vim	/^    function! s:Match_borders(mode)$/;"	f	signature:(mode)
s:Match_data	./vim82/ftplugin/ocaml.vim	/^    function! s:Match_data()$/;"	f	signature:()
s:MatchedItems	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:MatchedItems(items, pat, limit)$/;"	f	signature:(items,pat,limit)
s:MenuController	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuController.New	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f	signature:(menuItems)
s:MenuController._allIndexesFor	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f	signature:(shortcut)
s:MenuController._current	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f	signature:()
s:MenuController._cursorDown	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f	signature:()
s:MenuController._cursorUp	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f	signature:()
s:MenuController._echoPrompt	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f	signature:()
s:MenuController._handleKeypress	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f	signature:(key)
s:MenuController._nextIndexFor	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f	signature:(shortcut)
s:MenuController._restoreOptions	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f	signature:()
s:MenuController._saveOptions	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f	signature:()
s:MenuController._setCmdheight	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f	signature:()
s:MenuController.showMenu	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f	signature:()
s:MenuItem	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem.All	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f	signature:()
s:MenuItem.AllEnabled	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f	signature:()
s:MenuItem.Create	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f	signature:(options)
s:MenuItem.CreateSeparator	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f	signature:(options)
s:MenuItem.CreateSubmenu	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f	signature:(options)
s:MenuItem.enabled	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f	signature:()
s:MenuItem.execute	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f	signature:()
s:MenuItem.isSeparator	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f	signature:()
s:MenuItem.isSubmenu	./vimfiles/bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f	signature:()
s:MergeBookmarks	./vim82/autoload/netrw.vim	/^fun! s:MergeBookmarks()$/;"	f	signature:()
s:ModuloIndent	./vim82/indent/sqlanywhere.vim	/^function! s:ModuloIndent(ind)$/;"	f	signature:(ind)
s:MoveDown	./vimfiles/autoload/DrawIt.vim	/^fun! s:MoveDown()$/;"	f	signature:()
s:MoveLeft	./vimfiles/autoload/DrawIt.vim	/^fun! s:MoveLeft()$/;"	f	signature:()
s:MoveRight	./vimfiles/autoload/DrawIt.vim	/^fun! s:MoveRight()$/;"	f	signature:()
s:MoveToFirstWordEnd	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:MoveToFirstWordEnd(leader_width)$/;"	f	signature:(leader_width)
s:MoveToWordBegin	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:MoveToWordBegin()$/;"	f	signature:()
s:MoveToWordEnd	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:MoveToWordEnd()$/;"	f	signature:()
s:MoveUp	./vimfiles/autoload/DrawIt.vim	/^fun! s:MoveUp()$/;"	f	signature:()
s:MultilineStringOrLineComment	./vim82/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f	signature:(cline_info)
s:NC	./vim82/indent/vhdl.vim	/^let s:NC = '\\%(--.*\\)\\@<!'$/;"	v
s:NE	./vim82/indent/vhdl.vim	/^let s:NE = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:NERDTree	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTree.AddPathFilter	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f	signature:(callback)
s:NERDTree.Close	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f	signature:()
s:NERDTree.CloseIfQuitOnOpen	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f	signature:()
s:NERDTree.CursorToBookmarkTable	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f	signature:()
s:NERDTree.CursorToTreeWin	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f	signature:()
s:NERDTree.ExistsForBuf	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f	signature:()
s:NERDTree.ExistsForTab	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f	signature:()
s:NERDTree.ForCurrentBuf	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f	signature:()
s:NERDTree.ForCurrentTab	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f	signature:()
s:NERDTree.GetWinNum	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f	signature:()
s:NERDTree.IsOpen	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f	signature:()
s:NERDTree.MustBeOpen	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f	signature:()
s:NERDTree.New	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f	signature:(path,type)
s:NERDTree.PathFilters	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f	signature:()
s:NERDTree.changeRoot	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f	signature:(node)
s:NERDTree.getRoot	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f	signature:()
s:NERDTree.isTabTree	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f	signature:()
s:NERDTree.isWinTree	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f	signature:()
s:NERDTree.previousBuf	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f	signature:()
s:NERDTree.render	./vimfiles/bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f	signature:()
s:NERDTreeSortStarIndex	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NFH_bmp	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_bmp(bmpfile)$/;"	f	signature:(bmpfile)
s:NFH_doc	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_doc(doc)$/;"	f	signature:(doc)
s:NFH_eps	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_eps(eps)$/;"	f	signature:(eps)
s:NFH_fig	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_fig(fig)$/;"	f	signature:(fig)
s:NFH_gif	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_gif(giffile)$/;"	f	signature:(giffile)
s:NFH_htm	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_htm(pagefile)$/;"	f	signature:(pagefile)
s:NFH_html	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_html(pagefile)$/;"	f	signature:(pagefile)
s:NFH_jpg	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_jpg(jpgfile)$/;"	f	signature:(jpgfile)
s:NFH_obj	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_obj(obj)$/;"	f	signature:(obj)
s:NFH_pdf	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_pdf(pdf)$/;"	f	signature:(pdf)
s:NFH_png	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_png(pngfile)$/;"	f	signature:(pngfile)
s:NFH_pnm	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_pnm(pnmfile)$/;"	f	signature:(pnmfile)
s:NFH_ps	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_ps(ps)$/;"	f	signature:(ps)
s:NFH_sxw	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_sxw(sxw)$/;"	f	signature:(sxw)
s:NFH_xls	./vim82/autoload/netrwFileHandlers.vim	/^fun! s:NFH_xls(xls)$/;"	f	signature:(xls)
s:NONE	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^let s:NONE = []$/;"	v
s:NONE	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/URIExtractor.vim	/^let s:NONE = []$/;"	v
s:NONE	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^let s:NONE = []$/;"	v
s:NOTE	./vim82/autoload/netrw.vim	/^ let s:NOTE    = 0$/;"	v
s:NOTE	./vim82/autoload/zip.vim	/^let s:NOTE           = 0$/;"	v
s:Nat	./vim82/indent/javascript.vim	/^function s:Nat(int)$/;"	f	signature:(int)
s:NetSortSequence	./vim82/autoload/netrw.vim	/^fun! s:NetSortSequence(islocal)$/;"	f	signature:(islocal)
s:NetrwBMShow	./vim82/autoload/netrw.vim	/^fun! s:NetrwBMShow()$/;"	f	signature:()
s:NetrwBadd	./vim82/autoload/netrw.vim	/^fun! s:NetrwBadd(islocal,bl2mf)$/;"	f	signature:(islocal,bl2mf)
s:NetrwBannerCtrl	./vim82/autoload/netrw.vim	/^fun! s:NetrwBannerCtrl(islocal)$/;"	f	signature:(islocal)
s:NetrwBookHistHandler	./vim82/autoload/netrw.vim	/^fun! s:NetrwBookHistHandler(chg,curdir)$/;"	f	signature:(chg,curdir)
s:NetrwBookHistRead	./vim82/autoload/netrw.vim	/^fun! s:NetrwBookHistRead()$/;"	f	signature:()
s:NetrwBookHistSave	./vim82/autoload/netrw.vim	/^fun! s:NetrwBookHistSave()$/;"	f	signature:()
s:NetrwBookmark	./vim82/autoload/netrw.vim	/^fun! s:NetrwBookmark(del,...)$/;"	f	signature:(del,...)
s:NetrwBookmarkMenu	./vim82/autoload/netrw.vim	/^fun! s:NetrwBookmarkMenu()$/;"	f	signature:()
s:NetrwBrowse	./vim82/autoload/netrw.vim	/^fun! s:NetrwBrowse(islocal,dirname)$/;"	f	signature:(islocal,dirname)
s:NetrwBrowseChgDir	./vim82/autoload/netrw.vim	/^fun! s:NetrwBrowseChgDir(islocal,newdir,...)$/;"	f	signature:(islocal,newdir,...)
s:NetrwBrowseUpDir	./vim82/autoload/netrw.vim	/^fun! s:NetrwBrowseUpDir(islocal)$/;"	f	signature:(islocal)
s:NetrwBufRename	./vim82/autoload/netrw.vim	/^fun! s:NetrwBufRename(newname)$/;"	f	signature:(newname)
s:NetrwCLeftmouse	./vim82/autoload/netrw.vim	/^fun! s:NetrwCLeftmouse(islocal)$/;"	f	signature:(islocal)
s:NetrwChgPerm	./vim82/autoload/netrw.vim	/^fun! s:NetrwChgPerm(islocal,curdir)$/;"	f	signature:(islocal,curdir)
s:NetrwClearExplore	./vim82/autoload/netrw.vim	/^fun! s:NetrwClearExplore()$/;"	f	signature:()
s:NetrwCommands	./vim82/autoload/netrw.vim	/^fun! s:NetrwCommands(islocal)$/;"	f	signature:(islocal)
s:NetrwCursor	./vim82/autoload/netrw.vim	/^fun! s:NetrwCursor()$/;"	f	signature:()
s:NetrwDelete	./vim82/autoload/netrw.vim	/^fun! s:NetrwDelete(path)$/;"	f	signature:(path)
s:NetrwEnew	./vim82/autoload/netrw.vim	/^fun! s:NetrwEnew(...)$/;"	f	signature:(...)
s:NetrwExe	./vim82/autoload/netrw.vim	/^fun! s:NetrwExe(cmd)$/;"	f	signature:(cmd)
s:NetrwExploreListUniq	./vim82/autoload/netrw.vim	/^fun! s:NetrwExploreListUniq(explist)$/;"	f	signature:(explist)
s:NetrwFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwFile(fname)$/;"	f	signature:(fname)
s:NetrwFileInfo	./vim82/autoload/netrw.vim	/^fun! s:NetrwFileInfo(islocal,fname)$/;"	f	signature:(islocal,fname)
s:NetrwForceChgDir	./vim82/autoload/netrw.vim	/^fun! s:NetrwForceChgDir(islocal,newdir)$/;"	f	signature:(islocal,newdir)
s:NetrwForceFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwForceFile(islocal,newfile)$/;"	f	signature:(islocal,newfile)
s:NetrwFullPath	./vim82/autoload/netrw.vim	/^fun! s:NetrwFullPath(filename)$/;"	f	signature:(filename)
s:NetrwGetBuffer	./vim82/autoload/netrw.vim	/^fun! s:NetrwGetBuffer(islocal,dirname)$/;"	f	signature:(islocal,dirname)
s:NetrwGetCurdir	./vim82/autoload/netrw.vim	/^fun! s:NetrwGetCurdir(islocal)$/;"	f	signature:(islocal)
s:NetrwGetFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwGetFile(readcmd, tfile, method)$/;"	f	signature:(readcmd,tfile,method)
s:NetrwGetWord	./vim82/autoload/netrw.vim	/^fun! s:NetrwGetWord()$/;"	f	signature:()
s:NetrwGetcwd	./vim82/autoload/netrw.vim	/^fun! s:NetrwGetcwd(doesc)$/;"	f	signature:(doesc)
s:NetrwGlob	./vim82/autoload/netrw.vim	/^fun! s:NetrwGlob(direntry,expr,pare)$/;"	f	signature:(direntry,expr,pare)
s:NetrwHidden	./vim82/autoload/netrw.vim	/^fun! s:NetrwHidden(islocal)$/;"	f	signature:(islocal)
s:NetrwHide	./vim82/autoload/netrw.vim	/^fun! s:NetrwHide(islocal)$/;"	f	signature:(islocal)
s:NetrwHideEdit	./vim82/autoload/netrw.vim	/^fun! s:NetrwHideEdit(islocal)$/;"	f	signature:(islocal)
s:NetrwHome	./vim82/autoload/netrw.vim	/^fun! s:NetrwHome()$/;"	f	signature:()
s:NetrwHumanReadable	./vim82/autoload/netrw.vim	/^fun! s:NetrwHumanReadable(sz)$/;"	f	signature:(sz)
s:NetrwInit	./vim82/autoload/netrw.vim	/^fun s:NetrwInit(varname,value)$/;"	f	signature:(varname,value)
s:NetrwInsureWinVars	./vim82/autoload/netrw.vim	/^fun! s:NetrwInsureWinVars()$/;"	f	signature:()
s:NetrwLcd	./vim82/autoload/netrw.vim	/^fun! s:NetrwLcd(newdir)$/;"	f	signature:(newdir)
s:NetrwLeftmouse	./vim82/autoload/netrw.vim	/^fun! s:NetrwLeftmouse(islocal)$/;"	f	signature:(islocal)
s:NetrwListHide	./vim82/autoload/netrw.vim	/^fun! s:NetrwListHide()$/;"	f	signature:()
s:NetrwListSettings	./vim82/autoload/netrw.vim	/^fun! s:NetrwListSettings(islocal)$/;"	f	signature:(islocal)
s:NetrwListStyle	./vim82/autoload/netrw.vim	/^fun! s:NetrwListStyle(islocal)$/;"	f	signature:(islocal)
s:NetrwLocalExecute	./vim82/autoload/netrw.vim	/^fun! s:NetrwLocalExecute(cmd)$/;"	f	signature:(cmd)
s:NetrwLocalRename	./vim82/autoload/netrw.vim	/^fun! s:NetrwLocalRename(path) range$/;"	f	signature:(path)
s:NetrwLocalRm	./vim82/autoload/netrw.vim	/^fun! s:NetrwLocalRm(path) range$/;"	f	signature:(path)
s:NetrwLocalRmFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwLocalRmFile(path,fname,all)$/;"	f	signature:(path,fname,all)
s:NetrwMakeDir	./vim82/autoload/netrw.vim	/^fun! s:NetrwMakeDir(usrhost)$/;"	f	signature:(usrhost)
s:NetrwMaps	./vim82/autoload/netrw.vim	/^fun! s:NetrwMaps(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFile(islocal,fname)$/;"	f	signature:(islocal,fname)
s:NetrwMarkFileArgList	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileArgList(islocal,tomflist)$/;"	f	signature:(islocal,tomflist)
s:NetrwMarkFileCompress	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileCompress(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileCopy	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileCopy(islocal,...)$/;"	f	signature:(islocal,...)
s:NetrwMarkFileDiff	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileDiff(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileEdit	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileEdit(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileExe	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileExe(islocal,enbloc)$/;"	f	signature:(islocal,enbloc)
s:NetrwMarkFileGrep	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileGrep(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileMove	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileMove(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFilePrint	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFilePrint(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileQFEL	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileQFEL(islocal,qfel)$/;"	f	signature:(islocal,qfel)
s:NetrwMarkFileRegexp	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileRegexp(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileSource	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileSource(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileTag	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileTag(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileTgt	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileTgt(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFileVimCmd	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFileVimCmd(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkFiles	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkFiles(islocal,...)$/;"	f	signature:(islocal,...)
s:NetrwMarkHideSfx	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkHideSfx(islocal)$/;"	f	signature:(islocal)
s:NetrwMarkTarget	./vim82/autoload/netrw.vim	/^fun! s:NetrwMarkTarget(...)$/;"	f	signature:(...)
s:NetrwMenu	./vim82/autoload/netrw.vim	/^fun! s:NetrwMenu(domenu)$/;"	f	signature:(domenu)
s:NetrwMethod	./vim82/autoload/netrw.vim	/^fun! s:NetrwMethod(choice)$/;"	f	signature:(choice)
s:NetrwObtain	./vim82/autoload/netrw.vim	/^fun! s:NetrwObtain(islocal)$/;"	f	signature:(islocal)
s:NetrwOpenFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwOpenFile(islocal)$/;"	f	signature:(islocal)
s:NetrwOptionsRestore	./vim82/autoload/netrw.vim	/^fun! s:NetrwOptionsRestore(vt)$/;"	f	signature:(vt)
s:NetrwOptionsSafe	./vim82/autoload/netrw.vim	/^fun! s:NetrwOptionsSafe(islocal)$/;"	f	signature:(islocal)
s:NetrwOptionsSave	./vim82/autoload/netrw.vim	/^fun! s:NetrwOptionsSave(vt)$/;"	f	signature:(vt)
s:NetrwPrevWinOpen	./vim82/autoload/netrw.vim	/^fun! s:NetrwPrevWinOpen(islocal)$/;"	f	signature:(islocal)
s:NetrwPreview	./vim82/autoload/netrw.vim	/^fun! s:NetrwPreview(path) range$/;"	f	signature:(path)
s:NetrwRefresh	./vim82/autoload/netrw.vim	/^fun! s:NetrwRefresh(islocal,dirname)$/;"	f	signature:(islocal,dirname)
s:NetrwRefreshDir	./vim82/autoload/netrw.vim	/^fun! s:NetrwRefreshDir(islocal,dirname)$/;"	f	signature:(islocal,dirname)
s:NetrwRefreshTreeDict	./vim82/autoload/netrw.vim	/^fun! s:NetrwRefreshTreeDict(dir)$/;"	f	signature:(dir)
s:NetrwRemoteFtpCmd	./vim82/autoload/netrw.vim	/^fun! s:NetrwRemoteFtpCmd(path,listcmd)$/;"	f	signature:(path,listcmd)
s:NetrwRemoteListing	./vim82/autoload/netrw.vim	/^fun! s:NetrwRemoteListing()$/;"	f	signature:()
s:NetrwRemoteRename	./vim82/autoload/netrw.vim	/^fun! s:NetrwRemoteRename(usrhost,path) range$/;"	f	signature:(usrhost,path)
s:NetrwRemoteRm	./vim82/autoload/netrw.vim	/^fun! s:NetrwRemoteRm(usrhost,path) range$/;"	f	signature:(usrhost,path)
s:NetrwRemoteRmFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwRemoteRmFile(path,rmfile,all)$/;"	f	signature:(path,rmfile,all)
s:NetrwRestoreSetting	./vim82/autoload/netrw.vim	/^fun! s:NetrwRestoreSetting(keepvar,setting)$/;"	f	signature:(keepvar,setting)
s:NetrwRestoreWordPosn	./vim82/autoload/netrw.vim	/^fun! s:NetrwRestoreWordPosn()$/;"	f	signature:()
s:NetrwRexplore	./vim82/autoload/netrw.vim	/^fun! s:NetrwRexplore(islocal,dirname)$/;"	f	signature:(islocal,dirname)
s:NetrwSLeftdrag	./vim82/autoload/netrw.vim	/^fun! s:NetrwSLeftdrag(islocal)$/;"	f	signature:(islocal)
s:NetrwSLeftmouse	./vim82/autoload/netrw.vim	/^fun! s:NetrwSLeftmouse(islocal)$/;"	f	signature:(islocal)
s:NetrwSLeftrelease	./vim82/autoload/netrw.vim	/^fun! s:NetrwSLeftrelease(islocal)$/;"	f	signature:(islocal)
s:NetrwSaveWordPosn	./vim82/autoload/netrw.vim	/^fun! s:NetrwSaveWordPosn()$/;"	f	signature:()
s:NetrwServerEdit	./vim82/autoload/netrw.vim	/^fun! s:NetrwServerEdit(islocal,fname)$/;"	f	signature:(islocal,fname)
s:NetrwSetChgwin	./vim82/autoload/netrw.vim	/^fun! s:NetrwSetChgwin(...)$/;"	f	signature:(...)
s:NetrwSetSafeSetting	./vim82/autoload/netrw.vim	/^fun! s:NetrwSetSafeSetting(setting,safesetting)$/;"	f	signature:(setting,safesetting)
s:NetrwSetSort	./vim82/autoload/netrw.vim	/^fun! s:NetrwSetSort()$/;"	f	signature:()
s:NetrwSetTgt	./vim82/autoload/netrw.vim	/^fun! s:NetrwSetTgt(islocal,bookhist,choice)$/;"	f	signature:(islocal,bookhist,choice)
s:NetrwSortStyle	./vim82/autoload/netrw.vim	/^fun! s:NetrwSortStyle(islocal)$/;"	f	signature:(islocal)
s:NetrwSplit	./vim82/autoload/netrw.vim	/^fun! s:NetrwSplit(mode)$/;"	f	signature:(mode)
s:NetrwTgtMenu	./vim82/autoload/netrw.vim	/^fun! s:NetrwTgtMenu()$/;"	f	signature:()
s:NetrwTreeDir	./vim82/autoload/netrw.vim	/^fun! s:NetrwTreeDir(islocal)$/;"	f	signature:(islocal)
s:NetrwTreeDisplay	./vim82/autoload/netrw.vim	/^fun! s:NetrwTreeDisplay(dir,depth)$/;"	f	signature:(dir,depth)
s:NetrwTreeListing	./vim82/autoload/netrw.vim	/^fun! s:NetrwTreeListing(dirname)$/;"	f	signature:(dirname)
s:NetrwTreePath	./vim82/autoload/netrw.vim	/^fun! s:NetrwTreePath(treetop)$/;"	f	signature:(treetop)
s:NetrwUnMarkFile	./vim82/autoload/netrw.vim	/^fun! s:NetrwUnMarkFile(islocal)$/;"	f	signature:(islocal)
s:NetrwUnmarkAll	./vim82/autoload/netrw.vim	/^fun! s:NetrwUnmarkAll()$/;"	f	signature:()
s:NetrwUnmarkAll2	./vim82/autoload/netrw.vim	/^fun! s:NetrwUnmarkAll2()$/;"	f	signature:()
s:NetrwUnmarkList	./vim82/autoload/netrw.vim	/^fun! s:NetrwUnmarkList(curbufnr,curdir)$/;"	f	signature:(curbufnr,curdir)
s:NetrwUpload	./vim82/autoload/netrw.vim	/^fun! s:NetrwUpload(fname,tgt,...)$/;"	f	signature:(fname,tgt,...)
s:NetrwWideListing	./vim82/autoload/netrw.vim	/^fun! s:NetrwWideListing()$/;"	f	signature:()
s:NextIndToken	./vim82/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f	signature:(lnum,i)
s:NextPage	./vim82/macros/less.vim	/^fun! s:NextPage()$/;"	f	signature:()
s:Nextitem	./vim82/autoload/ccomplete.vim	/^function! s:Nextitem(lead, items, depth, all)$/;"	f	signature:(lead,items,depth,all)
s:NoMatchParen	./vim82/plugin/matchparen.vim	/^func s:NoMatchParen()$/;"	f	signature:()
s:NoTeXIndent	./vim82/indent/rnoweb.vim	/^function! s:NoTeXIndent()$/;"	f	signature:()
s:Nosynonly	./vim82/synmenu.vim	/^fun! s:Nosynonly()$/;"	f	signature:()
s:NotCodeBlock	./vim82/ftplugin/markdown.vim	/^function! s:NotCodeBlock(lnum) abort$/;"	f	signature:(lnum)
s:Notifier	./vimfiles/bundle/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Notifier.AddListener	./vimfiles/bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f	signature:(event,funcname)
s:Notifier.GetListenersForEvent	./vimfiles/bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f	signature:(name)
s:Notifier.GetListenersMap	./vimfiles/bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f	signature:()
s:Notifier.NotifyListeners	./vimfiles/bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f	signature:(event,path,nerdtree,params)
s:OPEN_TYPE_CURRENT	./vimfiles/autoload/fuf.vim	/^let s:OPEN_TYPE_CURRENT = 1$/;"	v
s:OPEN_TYPE_DELETE	./vimfiles/autoload/fuf/bookmarkdir.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	./vimfiles/autoload/fuf/bookmarkfile.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	./vimfiles/autoload/fuf/buffer.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_DELETE	./vimfiles/autoload/fuf/line.vim	/^let s:OPEN_TYPE_DELETE = -1$/;"	v
s:OPEN_TYPE_EXPAND	./vimfiles/autoload/fuf/mrufile.vim	/^let s:OPEN_TYPE_EXPAND = -1$/;"	v
s:OPEN_TYPE_SPLIT	./vimfiles/autoload/fuf.vim	/^let s:OPEN_TYPE_SPLIT   = 2$/;"	v
s:OPEN_TYPE_TAB	./vimfiles/autoload/fuf.vim	/^let s:OPEN_TYPE_TAB     = 4$/;"	v
s:OPEN_TYPE_VSPLIT	./vimfiles/autoload/fuf.vim	/^let s:OPEN_TYPE_VSPLIT  = 3$/;"	v
s:OcpGrep	./vim82/ftplugin/ocaml.vim	/^function! s:OcpGrep(bang,args) abort$/;"	f	signature:(bang,args)
s:Oct2Dec	./vimfiles/autoload/visincr.vim	/^fun! s:Oct2Dec(oct)$/;"	f	signature:(oct)
s:OmniCpp_ShowAccess	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowAccess = g:OmniCpp_ShowAccess$/;"	v
s:OmniCpp_ShowPrototypeInAbbr	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowPrototypeInAbbr = g:OmniCpp_ShowPrototypeInAbbr$/;"	v
s:OmniCpp_ShowScopeInAbbr	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:OmniCpp_ShowScopeInAbbr = g:OmniCpp_ShowScopeInAbbr$/;"	v
s:OnBlankLine	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnBlankLine()$/;"	f	signature:()
s:OnBufferEnter	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnBufferEnter()$/;"	f	signature:()
s:OnBufferUnload	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnBufferUnload()$/;"	f	signature:()
s:OnCompleteDone	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnCompleteDone()$/;"	f	signature:()
s:OnCursorMovedNormalMode	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnCursorMovedNormalMode()$/;"	f	signature:()
s:OnDeleteChar	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnDeleteChar( key )$/;"	f	signature:( key )
s:OnFileReadyToParse	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnFileReadyToParse( ... )$/;"	f	signature:( ... )
s:OnFileTypeSet	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnFileTypeSet()$/;"	f	signature:()
s:OnInsertChar	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnInsertChar()$/;"	f	signature:()
s:OnInsertLeave	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnInsertLeave()$/;"	f	signature:()
s:OnTextChangedInsertMode	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnTextChangedInsertMode()$/;"	f	signature:()
s:OnTextChangedNormalMode	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnTextChangedNormalMode()$/;"	f	signature:()
s:OnVimLeave	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:OnVimLeave()$/;"	f	signature:()
s:OneScope	./vim82/indent/javascript.vim	/^function s:OneScope()$/;"	f	signature:()
s:Open	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Open()$/;"	f	signature:()
s:OpenBrowser	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^let s:OpenBrowser = s:V.import('OpenBrowser').new($/;"	v
s:OpenMulti	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenMulti(...)$/;"	f	signature:(...)
s:OpenNoMarks	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:OpenNoMarks(md, line)$/;"	f	signature:(md,line)
s:Opener	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Opener.New	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f	signature:(path,opts)
s:Opener._bufInWindows	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f	signature:(bnum)
s:Opener._checkToCloseTree	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f	signature:(newtab)
s:Opener._firstUsableWindow	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f	signature:()
s:Opener._gotoTargetWin	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f	signature:()
s:Opener._isWindowUsable	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f	signature:(winnumber)
s:Opener._newSplit	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f	signature:()
s:Opener._newVSplit	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f	signature:()
s:Opener._openDirectory	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f	signature:(node)
s:Opener._openFile	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f	signature:()
s:Opener._previousWindow	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f	signature:()
s:Opener._restoreCursorPos	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f	signature:()
s:Opener._reuseWindow	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f	signature:()
s:Opener._saveCursorPos	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f	signature:()
s:Opener.open	./vimfiles/bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f	signature:(target)
s:PHP_startindenttag	./vim82/indent/php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:PHP_validVariable	./vim82/indent/php.vim	/^let s:PHP_validVariable = '[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*'$/;"	v
s:ParseBasicFunctionData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:ParseBasicFunctionData(text)$/;"	f	signature:(text)
s:ParseCino	./vim82/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f	signature:(f)
s:ParseDocData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:ParseDocData(docline, config)$/;"	f	signature:(docline,config)
s:ParseExtendsImplements	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:ParseExtendsImplements(data, text)$/;"	f	signature:(data,text)
s:ParseParameterData	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:ParseParameterData(text)$/;"	f	signature:(text)
s:ParseRpmVars	./vim82/ftplugin/spec.vim	/^    function s:ParseRpmVars(str, strline)$/;"	f	signature:(str,strline)
s:ParseSkip	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f	signature:(str)
s:ParseTagline	./vim82/autoload/ccomplete.vim	/^function! s:ParseTagline(line)$/;"	f	signature:(line)
s:ParseWords	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f	signature:(groups)
s:Path	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:Path.AbsolutePathFor	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f	signature:(str)
s:Path.CopyingSupported	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f	signature:()
s:Path.Create	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f	signature:(fullpath)
s:Path.JoinPathStrings	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f	signature:(...)
s:Path.New	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f	signature:(path)
s:Path.Resolve	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f	signature:(path)
s:Path.Slash	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f	signature:()
s:Path.WinToUnixPath	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f	signature:(pathstr)
s:Path._escChars	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f	signature:()
s:Path._ignorePatternMatches	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f	signature:(pattern)
s:Path._str	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f	signature:()
s:Path._strForCd	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f	signature:()
s:Path._strForEdit	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f	signature:()
s:Path._strForGlob	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f	signature:()
s:Path._strForUI	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f	signature:()
s:Path.bookmarkNames	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f	signature:()
s:Path.cacheDisplayString	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f	signature:()
s:Path.changeToDir	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f	signature:()
s:Path.compareTo	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f	signature:(path)
s:Path.copy	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f	signature:(dest)
s:Path.copyingWillOverwrite	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f	signature:(dest)
s:Path.createParentDirectories	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f	signature:(path)
s:Path.delete	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f	signature:()
s:Path.displayString	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f	signature:()
s:Path.edit	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f	signature:()
s:Path.equals	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f	signature:(path)
s:Path.exists	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f	signature:()
s:Path.extractDriveLetter	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f	signature:(fullpath)
s:Path.getDir	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f	signature:()
s:Path.getLastPathComponent	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f	signature:(dirSlash)
s:Path.getParent	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f	signature:()
s:Path.getSortKey	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f	signature:()
s:Path.getSortOrderIndex	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f	signature:()
s:Path.ignore	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f	signature:(nerdtree)
s:Path.isAncestor	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f	signature:(path)
s:Path.isUnder	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f	signature:(path)
s:Path.isUnixHiddenFile	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f	signature:()
s:Path.isUnixHiddenPath	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f	signature:()
s:Path.readInfoFromDisk	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f	signature:(fullpath)
s:Path.refresh	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f	signature:(nerdtree)
s:Path.refreshFlags	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f	signature:(nerdtree)
s:Path.rename	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f	signature:(newPath)
s:Path.str	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f	signature:(...)
s:Path.strTrunk	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f	signature:()
s:Path.tabnr	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f	signature:()
s:Peekstack	./vim82/autoload/xmlcomplete.vim	/^function! s:Peekstack(sname)$/;"	f	signature:(sname)
s:PerformListing	./vim82/autoload/netrw.vim	/^fun! s:PerformListing(islocal)$/;"	f	signature:(islocal)
s:PersistentVarName	./vimfiles/autoload/genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f	signature:(pluginName,persistentVar)
s:PlaceSign	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:PlaceSign(id, subid, entry)$/;"	f	signature:(id,subid,entry)
s:PollCompletion	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:PollCompletion( ... )$/;"	f	signature:( ... )
s:PollFileParseResponse	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:PollFileParseResponse( ... )$/;"	f	signature:( ... )
s:PollServerReady	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:PollServerReady( timer_id )$/;"	f	signature:( timer_id )
s:Pop	./vim82/autoload/xmlcomplete.vim	/^function! s:Pop(sname)$/;"	f	signature:(sname)
s:Pop	./vim82/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f	signature:(stack)
s:PrevIndToken	./vim82/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f	signature:(lnum,i)
s:PrevMatch	./vim82/indent/sas.vim	/^function! s:PrevMatch(lnum, regex)$/;"	f	signature:(lnum,regex)
s:PrevNonBlankNonComment	./vim82/indent/mp.vim	/^function! s:PrevNonBlankNonComment(lnum)$/;"	f	signature:(lnum)
s:PrevNonBlankNonString	./vim82/indent/falcon.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f	signature:(lnum)
s:PrevNonBlankNonString	./vim82/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f	signature:(lnum)
s:PrevNonBlankNonString	./vim82/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f	signature:(lnum)
s:PrevNonBlankNonString	./vim82/indent/typescript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f	signature:(lnum)
s:PreviousNotMSL	./vim82/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f	signature:(msl_info)
s:PreviousToken	./vim82/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f	signature:(...)
s:ProcessFile	./vimfiles/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f	signature:(file,ft,...)
s:ProcessSnippet	./vimfiles/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f	signature:(snip)
s:ProcessTemplate	./vimfiles/bundle/pdv/autoload/pdv.vim	/^func! s:ProcessTemplate(file, data)$/;"	f	signature:(file,data)
s:ProgressBar	./vim82/syntax/2html.vim	/^  func! s:ProgressBar(title, max_value, winnr)$/;"	f	signature:(title,max_value,winnr)
s:PromptCallback	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:PromptCallback(text)$/;"	f	signature:(text)
s:PromptInterrupt	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:PromptInterrupt()$/;"	f	signature:()
s:PrtAdd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtAdd(char)$/;"	f	signature:(char)
s:PrtBS	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtBS()$/;"	f	signature:()
s:PrtClear	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClear()$/;"	f	signature:()
s:PrtClearCache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtClearCache()$/;"	f	signature:()
s:PrtCurEnd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurEnd()$/;"	f	signature:()
s:PrtCurLeft	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurLeft()$/;"	f	signature:()
s:PrtCurRight	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurRight()$/;"	f	signature:()
s:PrtCurStart	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtCurStart()$/;"	f	signature:()
s:PrtDelete	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDelete()$/;"	f	signature:()
s:PrtDeleteEnt	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteEnt()$/;"	f	signature:()
s:PrtDeleteMRU	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteMRU()$/;"	f	signature:()
s:PrtDeleteWord	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtDeleteWord()$/;"	f	signature:()
s:PrtExit	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExit()$/;"	f	signature:()
s:PrtExpandDir	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtExpandDir()$/;"	f	signature:()
s:PrtFocusMap	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtFocusMap(char)$/;"	f	signature:(char)
s:PrtHistory	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtHistory(...)$/;"	f	signature:(...)
s:PrtInsert	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtInsert(...)$/;"	f	signature:(...)
s:PrtSelectJump	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectJump(char)$/;"	f	signature:(char)
s:PrtSelectMove	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSelectMove(dir)$/;"	f	signature:(dir)
s:PrtSwitcher	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:PrtSwitcher()$/;"	f	signature:()
s:Pure	./vim82/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f	signature:(f,...)
s:PurifyCode	./vim82/indent/pascal.vim	/^function! s:PurifyCode( line_num )$/;"	f	signature:( line_num )
s:Push	./vim82/autoload/xmlcomplete.vim	/^function! s:Push(el, sname)$/;"	f	signature:(el,sname)
s:Push	./vim82/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f	signature:(stack,token)
s:PutBlock	./vimfiles/autoload/DrawIt.vim	/^fun! s:PutBlock(block,replace)$/;"	f	signature:(block,replace)
s:Pyeval	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:Pyeval( eval_string )$/;"	f	signature:( eval_string )
s:QSortR	./vimfiles/autoload/genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f	signature:(start,end,cmp,direction,accessor,swapper,context)
s:Qf_filter	./vim82/pack/dist/opt/cfilter/plugin/cfilter.vim	/^func s:Qf_filter(qf, searchpat, bang)$/;"	f	signature:(qf,searchpat,bang)
s:QuickHelp	./vim82/autoload/netrw.vim	/^let s:QuickHelp= ["-:go up dir  D:delete  R:rename  s:sort-by  x:special",$/;"	v
s:RDelete_parens	./vim82/indent/r.vim	/^function s:RDelete_parens(line)$/;"	f	signature:(line)
s:RDelete_quotes	./vim82/indent/r.vim	/^function s:RDelete_quotes(line)$/;"	f	signature:(line)
s:RI	./vimfiles/autoload/visincr.vim	/^let s:RI     = 18$/;"	v
s:RI	./vimfiles/plugin/visincrPlugin.vim	/^let s:RI     = 18$/;"	v
s:RIA	./vimfiles/autoload/visincr.vim	/^let s:RIA    = 25$/;"	v
s:RIA	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIA    = 25$/;"	v
s:RIB	./vimfiles/autoload/visincr.vim	/^let s:RIB    = 28$/;"	v
s:RIB	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIB    = 28$/;"	v
s:RID	./vimfiles/autoload/visincr.vim	/^let s:RID    = 23$/;"	v
s:RID	./vimfiles/plugin/visincrPlugin.vim	/^let s:RID    = 23$/;"	v
s:RIDMY	./vimfiles/autoload/visincr.vim	/^let s:RIDMY  = 22$/;"	v
s:RIDMY	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIDMY  = 22$/;"	v
s:RII	./vimfiles/autoload/visincr.vim	/^let s:RII    = 19$/;"	v
s:RII	./vimfiles/plugin/visincrPlugin.vim	/^let s:RII    = 19$/;"	v
s:RIIB	./vimfiles/autoload/visincr.vim	/^let s:RIIB   = 29$/;"	v
s:RIIB	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIIB   = 29$/;"	v
s:RIIO	./vimfiles/autoload/visincr.vim	/^let s:RIIO   = 31$/;"	v
s:RIIO	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIIO   = 31$/;"	v
s:RIIPOW	./vimfiles/autoload/visincr.vim	/^let s:RIIPOW = 35$/;"	v
s:RIIPOW	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIIPOW = 35$/;"	v
s:RIIR	./vimfiles/autoload/visincr.vim	/^let s:RIIR   = 33$/;"	v
s:RIIR	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIIR   = 33$/;"	v
s:RIIX	./vimfiles/autoload/visincr.vim	/^let s:RIIX   = 27$/;"	v
s:RIIX	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIIX   = 27$/;"	v
s:RIM	./vimfiles/autoload/visincr.vim	/^let s:RIM    = 24$/;"	v
s:RIM	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIM    = 24$/;"	v
s:RIMDY	./vimfiles/autoload/visincr.vim	/^let s:RIMDY  = 20$/;"	v
s:RIMDY	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIMDY  = 20$/;"	v
s:RIO	./vimfiles/autoload/visincr.vim	/^let s:RIO    = 30$/;"	v
s:RIO	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIO    = 30$/;"	v
s:RIPOW	./vimfiles/autoload/visincr.vim	/^let s:RIPOW  = 34$/;"	v
s:RIPOW	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIPOW  = 34$/;"	v
s:RIR	./vimfiles/autoload/visincr.vim	/^let s:RIR    = 32$/;"	v
s:RIR	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIR    = 32$/;"	v
s:RIX	./vimfiles/autoload/visincr.vim	/^let s:RIX    = 26$/;"	v
s:RIX	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIX    = 26$/;"	v
s:RIYMD	./vimfiles/autoload/visincr.vim	/^let s:RIYMD  = 21$/;"	v
s:RIYMD	./vimfiles/plugin/visincrPlugin.vim	/^let s:RIYMD  = 21$/;"	v
s:RIndent	./vim82/indent/rhelp.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	./vim82/indent/rmd.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	./vim82/indent/rnoweb.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:RIndent	./vim82/indent/rrst.vim	/^let s:RIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:Rand	./vimfiles/plugin/matrix.vim	/^function! s:Rand()$/;"	f	signature:()
s:ReadDefineModeline	./vimfiles/after/syntax/ifdef.vim	/^fun! s:ReadDefineModeline()$/;"	f	signature:()
s:ReadFile	./vimfiles/after/syntax/ifdef.vim	/^fun! s:ReadFile( dir, filename)$/;"	f	signature:( dir,filename)
s:ReceiveMessages	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:ReceiveMessages( timer_id )$/;"	f	signature:( timer_id )
s:RecordBracket	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! s:RecordBracket(char, context)$/;"	f	signature:(char,context)
s:RecordInFile	./vim82/autoload/vimball.vim	/^fun! s:RecordInFile(home)$/;"	f	signature:(home)
s:RecordInVar	./vim82/autoload/vimball.vim	/^fun! s:RecordInVar(home,cmd)$/;"	f	signature:(home,cmd)
s:ReduceComment	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ReduceComment(stack)$/;"	f	signature:(stack)
s:ReduceFunction	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ReduceFunction(stack)$/;"	f	signature:(stack)
s:ReduceParameter	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! s:ReduceParameter(context)$/;"	f	signature:(context)
s:ReduceSection	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ReduceSection(stack)$/;"	f	signature:(stack)
s:ReduceTemplate	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ReduceTemplate(stack)$/;"	f	signature:(stack)
s:ReduceVariable	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:ReduceVariable(stack)$/;"	f	signature:(stack)
s:Ref	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f	signature:(string,d,...)
s:ReferenceName	./vim82/syntax/rst.vim	/^let s:ReferenceName = '[[:alnum:]]\\%([-_.:+]\\?[[:alnum:]]\\+\\)*'$/;"	v
s:ReleaseKeyPresses	./vimfiles/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f	signature:()
s:RemotePathAnalysis	./vim82/autoload/netrw.vim	/^fun! s:RemotePathAnalysis(dirname)$/;"	f	signature:(dirname)
s:RemoteSystem	./vim82/autoload/netrw.vim	/^fun! s:RemoteSystem(cmd)$/;"	f	signature:(cmd)
s:RemoveCComments	./vimfiles/autoload/omni/cpp/utils.vim	/^function! s:RemoveCComments(szLine)$/;"	f	signature:(szLine)
s:RemoveITags	./vim82/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f	signature:(tags,taglist)
s:RemoveITags	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f	signature:(tags,taglist)
s:RemoveSnippet	./vimfiles/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f	signature:()
s:RemoveTrailingComments	./vim82/indent/typescript.vim	/^function s:RemoveTrailingComments(content)$/;"	f	signature:(content)
s:Render	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Render(lines, pat)$/;"	f	signature:(lines,pat)
s:RenderBlock	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:RenderBlock(block, data)$/;"	f	signature:(block,data)
s:RenderFunction	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:RenderFunction(script)$/;"	f	signature:(script)
s:RenderInvertedSection	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:RenderInvertedSection(section, data)$/;"	f	signature:(section,data)
s:RenderSection	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:RenderSection(section, data)$/;"	f	signature:(section,data)
s:RenderText	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:RenderText(node, data)$/;"	f	signature:(node,data)
s:RenderVariable	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:RenderVariable(variable, data)$/;"	f	signature:(variable,data)
s:ReplaceDownLeft	./vimfiles/autoload/DrawIt.vim	/^fun! s:ReplaceDownLeft()$/;"	f	signature:()
s:ReplaceDownRight	./vimfiles/autoload/DrawIt.vim	/^fun! s:ReplaceDownRight()$/;"	f	signature:()
s:Reset	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Reset(args)$/;"	f	signature:(args)
s:Reset	./vimfiles/plugin/matrix.vim	/^function! s:Reset()$/;"	f	signature:()
s:Resolve	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f	signature:(source,target,output)
s:ResolveAliasInNamespaceList	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasInNamespaceList(mapNamespaceAlias, listNamespaces)$/;"	f	signature:(mapNamespaceAlias,listNamespaces)
s:ResolveAliasKey	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKey(mapNamespaceAlias, szAlias)$/;"	f	signature:(mapNamespaceAlias,szAlias)
s:ResolveAliasKeys	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveAliasKeys(mapNamespaceAlias)$/;"	f	signature:(mapNamespaceAlias)
s:ResolveCCast	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:ResolveCCast(tokens)$/;"	f	signature:(tokens)
s:ResolveCast	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:ResolveCast(tokens, startChar, endChar)$/;"	f	signature:(tokens,startChar,endChar)
s:ResolveCppCast	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:ResolveCppCast(tokens)$/;"	f	signature:(tokens)
s:ResolveNamespace	./vimfiles/autoload/omni/cpp/namespaces.vim	/^function! s:ResolveNamespace(namespace, mapCurrentContexts)$/;"	f	signature:(namespace,mapCurrentContexts)
s:ResolveSymbol	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:ResolveSymbol(contextStack, szSymbol, szTagFilter)$/;"	f	signature:(contextStack,szSymbol,szTagFilter)
s:RestartServer	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:RestartServer()$/;"	f	signature:()
s:RestoreBufVars	./vim82/autoload/netrw.vim	/^fun! s:RestoreBufVars()$/;"	f	signature:()
s:RestoreCursorline	./vim82/autoload/netrw.vim	/^fun! s:RestoreCursorline()$/;"	f	signature:()
s:RestoreKeywords	./vim82/autoload/xmlcomplete.vim	/^function! s:RestoreKeywords()$/;"	f	signature:()
s:RestoreOptions	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^function s:RestoreOptions()$/;"	f	signature:()
s:RestorePosn	./vim82/autoload/netrw.vim	/^fun! s:RestorePosn(posndict)$/;"	f	signature:(posndict)
s:RestorePosn	./vimfiles/autoload/DrawIt.vim	/^fun! s:RestorePosn()$/;"	f	signature:()
s:RestoreShiftwidth	./vim82/ftplugin/cobol.vim	/^function! s:RestoreShiftwidth()$/;"	f	signature:()
s:RestoreUserOptions	./vimfiles/autoload/visincr.vim	/^fun! s:RestoreUserOptions()$/;"	f	signature:()
s:RestoreWinVars	./vim82/autoload/netrw.vim	/^fun! s:RestoreWinVars()$/;"	f	signature:()
s:RestoreWindowSettings2	./vimfiles/autoload/genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f	signature:(id)
s:RmDir	./vim82/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f	signature:(path)
s:Rmdir	./vim82/autoload/tar.vim	/^fun! s:Rmdir(fname)$/;"	f	signature:(fname)
s:Rmdir	./vim82/autoload/zip.vim	/^fun! s:Rmdir(fname)$/;"	f	signature:(fname)
s:Rom2Dec	./vimfiles/autoload/visincr.vim	/^fun! s:Rom2Dec(roman)$/;"	f	signature:(roman)
s:Run	./vim82/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f	signature:(dict,rustc_args,args)
s:Run	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:Run(args)$/;"	f	signature:(args)
s:RunRustfmt	./vim82/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, curw, tmpname)$/;"	f	signature:(command,curw,tmpname)
s:RustfmtCommand	./vim82/autoload/rustfmt.vim	/^function! s:RustfmtCommand(filename)$/;"	f	signature:(filename)
s:RustfmtCommandRange	./vim82/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f	signature:(filename,line1,line2)
s:SID	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f	signature:()
s:SLeftDrag	./vimfiles/autoload/DrawIt.vim	/^fun! s:SLeftDrag()$/;"	f	signature:()
s:SLeftRelease	./vimfiles/autoload/DrawIt.vim	/^fun! s:SLeftRelease()$/;"	f	signature:()
s:SLeftStart	./vimfiles/autoload/DrawIt.vim	/^fun! s:SLeftStart()$/;"	f	signature:()
s:SNR	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	./vimfiles/autoload/genutils.vim	/^function! s:SNR()$/;"	f	signature:()
s:SNR	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SNR	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val]))/;"	v
s:SQLBlockEnd	./vim82/indent/sqlanywhere.vim	/^let s:SQLBlockEnd = '^\\s*\\(end\\)\\>'$/;"	v
s:SQLBlockStart	./vim82/indent/sqlanywhere.vim	/^let s:SQLBlockStart = '^\\s*\\%('.$/;"	v
s:SQLCAddAlias	./vim82/autoload/sqlcomplete.vim	/^function! s:SQLCAddAlias(table_name, table_alias, cols)$/;"	f	signature:(table_name,table_alias,cols)
s:SQLCCheck4dbext	./vim82/autoload/sqlcomplete.vim	/^function! s:SQLCCheck4dbext()$/;"	f	signature:()
s:SQLCErrorMsg	./vim82/autoload/sqlcomplete.vim	/^function! s:SQLCErrorMsg(msg)$/;"	f	signature:(msg)
s:SQLCGetColumns	./vim82/autoload/sqlcomplete.vim	/^function! s:SQLCGetColumns(table_name, list_type)$/;"	f	signature:(table_name,list_type)
s:SQLCGetObjectOwner	./vim82/autoload/sqlcomplete.vim	/^function! s:SQLCGetObjectOwner(object)$/;"	f	signature:(object)
s:SQLCGetSyntaxList	./vim82/autoload/sqlcomplete.vim	/^function! s:SQLCGetSyntaxList(syn_group)$/;"	f	signature:(syn_group)
s:SQLCWarningMsg	./vim82/autoload/sqlcomplete.vim	/^function! s:SQLCWarningMsg(msg)$/;"	f	signature:(msg)
s:Safe_indent	./vim82/indent/awk.vim	/^function! s:Safe_indent( base, wordlen, this_line )$/;"	f	signature:( base,wordlen,this_line )
s:SameLeader	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:SameLeader(leader1, leader2)$/;"	f	signature:(leader1,leader2)
s:SanitizeRHelpLine	./vim82/indent/rhelp.vim	/^function s:SanitizeRHelpLine(line)$/;"	f	signature:(line)
s:SaveBufVars	./vim82/autoload/netrw.vim	/^fun! s:SaveBufVars()$/;"	f	signature:()
s:SavePattern	./vimfiles/autoload/mark.vim	/^function! s:SavePattern()$/;"	f	signature:()
s:SavePosn	./vim82/autoload/netrw.vim	/^fun! s:SavePosn(posndict)$/;"	f	signature:(posndict)
s:SavePosn	./vimfiles/autoload/DrawIt.vim	/^fun! s:SavePosn()$/;"	f	signature:()
s:SaveUserOptions	./vimfiles/autoload/visincr.vim	/^fun! s:SaveUserOptions()$/;"	f	signature:()
s:SaveVimSesn	./vim82/menu.vim	/^fun! s:SaveVimSesn()$/;"	f	signature:()
s:SaveWinVars	./vim82/autoload/netrw.vim	/^fun! s:SaveWinVars()$/;"	f	signature:()
s:Search	./vimfiles/autoload/mark.vim	/^function! s:Search( pattern, isBackward, currentMarkPosition, searchType )$/;"	f	signature:( pattern,isBackward,currentMarkPosition,searchType )
s:SearchDecl	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:SearchDecl(szVariable)$/;"	f	signature:(szVariable)
s:SearchEndPair	./vim82/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f	signature:(lnum,curr_col)
s:SearchGlobalMembers	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:SearchGlobalMembers(szBase)$/;"	f	signature:(szBase)
s:SearchLoop	./vim82/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f	signature:(pat,flags,expr)
s:SearchMembers	./vim82/autoload/ccomplete.vim	/^function! s:SearchMembers(matches, items, all)$/;"	f	signature:(matches,items,all)
s:SearchMembers	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:SearchMembers(resolvedTagItem, szBase)$/;"	f	signature:(resolvedTagItem,szBase)
s:SearchP	./vim82/menu.vim	/^fun! s:SearchP()$/;"	f	signature:()
s:SearchPair	./vim82/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f	signature:(lnum,curr_col,start,middle,end)
s:SearchParensPair	./vimfiles/bundle/python-mode/autoload/pymode/indent.vim	/^function! s:SearchParensPair() " {{{$/;"	f	signature:()
s:SearchSection	./vim82/ftplugin/j.vim	/^function! s:SearchSection(end, backwards, visualmode) abort$/;"	f	signature:(end,backwards,visualmode)
s:SearchTypeInfoOfDecl	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:SearchTypeInfoOfDecl(szVariable)$/;"	f	signature:(szVariable)
s:SecondLevelIndent	./vim82/indent/occam.vim	/^let s:SecondLevelIndent = '^\\C\\s*\\(IF\\|ALT\\|PRI\\s\\+ALT\\)\\>\\|\\(--.*\\)\\@<!?\\s*\\<CAS/;"	v
s:SecondLevelNonColonEndIndent	./vim82/indent/occam.vim	/^let s:SecondLevelNonColonEndIndent = '\\(--.*\\)\\@<!\\<\\(CHAN\\|DATA\\)\\s\\+TYPE\\>'$/;"	v
s:SectionMatches	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! s:SectionMatches(starttoken, endtoken)$/;"	f	signature:(starttoken,endtoken)
s:Seems_continuing	./vim82/indent/awk.vim	/^function! s:Seems_continuing( line )$/;"	f	signature:( line )
s:SelectAll	./vim82/menu.vim	/^func s:SelectAll()$/;"	f	signature:()
s:SelectCompletion	./vimfiles/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f	signature:(cr)
s:SelectWord	./vimfiles/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f	signature:()
s:SendCommand	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:SendCommand(cmd)$/;"	f	signature:(cmd)
s:SendEval	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:SendEval(expr)$/;"	f	signature:(expr)
s:SendKeys	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SendKeys( keys )$/;"	f	signature:( keys )
s:SetBreakpoint	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:SetBreakpoint(at)$/;"	f	signature:(at)
s:SetBufWinVars	./vim82/autoload/netrw.vim	/^fun! s:SetBufWinVars()$/;"	f	signature:()
s:SetCharAt	./vimfiles/autoload/DrawIt.vim	/^fun! s:SetCharAt(char, x, y)$/;"	f	signature:(char,x,y)
s:SetCompleteFunc	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetCompleteFunc()$/;"	f	signature:()
s:SetCompletionType	./vimfiles/plugin/supertab.vim	/^function! s:SetCompletionType()$/;"	f	signature:()
s:SetCursor	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:SetCursor(lnum, ...)$/;"	f	signature:(lnum,...)
s:SetDefTxt	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetDefTxt()$/;"	f	signature:()
s:SetDefaultCompletionType	./vimfiles/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f	signature:()
s:SetErlangOptions	./vim82/ftplugin/erlang.vim	/^function s:SetErlangOptions()$/;"	f	signature:()
s:SetKeywords	./vim82/autoload/xmlcomplete.vim	/^function! s:SetKeywords()$/;"	f	signature:()
s:SetPattern	./vimfiles/autoload/mark.vim	/^function! s:SetPattern( index, pattern )$/;"	f	signature:( index,pattern )
s:SetPosn	./vimfiles/autoload/DrawIt.vim	/^fun! s:SetPosn(row,col)$/;"	f	signature:(row,col)
s:SetProgbarColor	./vim82/syntax/2html.vim	/^  func! s:SetProgbarColor()$/;"	f	signature:()
s:SetRexDir	./vim82/autoload/netrw.vim	/^fun! s:SetRexDir(islocal,dirname)$/;"	f	signature:(islocal,dirname)
s:SetUpBackwardsCompatibility	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpBackwardsCompatibility()$/;"	f	signature:()
s:SetUpCommands	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpCommands()$/;"	f	signature:()
s:SetUpCompleteopt	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpCompleteopt()$/;"	f	signature:()
s:SetUpCpoptions	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpCpoptions()$/;"	f	signature:()
s:SetUpKeyMappings	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpKeyMappings()$/;"	f	signature:()
s:SetUpOptions	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpOptions()$/;"	f	signature:()
s:SetUpPython	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpPython() abort$/;"	f	signature:()
s:SetUpSigns	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpSigns()$/;"	f	signature:()
s:SetUpSyntaxHighlighting	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:SetUpSyntaxHighlighting()$/;"	f	signature:()
s:SetWD	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SetWD(args)$/;"	f	signature:(args)
s:Setsynonly	./vim82/synmenu.vim	/^fun! s:Setsynonly()$/;"	f	signature:()
s:SetupColorSchemes	./vim82/menu.vim	/^func s:SetupColorSchemes() abort$/;"	f	signature:()
s:SetupCompilers	./vim82/menu.vim	/^func s:SetupCompilers() abort$/;"	f	signature:()
s:SetupKeymaps	./vim82/menu.vim	/^  func s:SetupKeymaps() abort$/;"	f	signature:()
s:SetupLazyloadMenus	./vim82/menu.vim	/^  func s:SetupLazyloadMenus()$/;"	f	signature:()
s:SetupNetrwStatusLine	./vim82/autoload/netrw.vim	/^fun! s:SetupNetrwStatusLine(statline)$/;"	f	signature:(statline)
s:ShellEscape	./vim82/autoload/netrw.vim	/^fun! s:ShellEscape(s, ...)$/;"	f	signature:(s,...)
s:ShellTokenize	./vim82/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f	signature:(text)
s:ShowDetailedDiagnostic	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:ShowDetailedDiagnostic()$/;"	f	signature:()
s:ShowDiagnostics	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:ShowDiagnostics()$/;"	f	signature:()
s:ShowLink	./vim82/autoload/netrw.vim	/^fun! s:ShowLink()$/;"	f	signature:()
s:ShowStyle	./vim82/autoload/netrw.vim	/^fun! s:ShowStyle()$/;"	f	signature:()
s:SimplifyAdjacentCollections	./vim82/syntax/yaml.vim	/^function s:SimplifyAdjacentCollections(p)$/;"	f	signature:(p)
s:SimplifyToAssumeAllPrintable	./vim82/syntax/yaml.vim	/^function s:SimplifyToAssumeAllPrintable(p)$/;"	f	signature:(p)
s:SkipFunc	./vim82/indent/javascript.vim	/^function s:SkipFunc()$/;"	f	signature:()
s:SkipPattern	./vim82/indent/sml.vim	/^function! s:SkipPattern(lnum, pat)$/;"	f	signature:(lnum,pat)
s:SkipToParamList	./vimfiles/bundle/pdv/autoload/parparse.vim	/^func! s:SkipToParamList(context)$/;"	f	signature:(context)
s:Spacer	./vimfiles/autoload/DrawIt.vim	/^fun! s:Spacer(debut, fin, cols) range$/;"	f	signature:(debut,fin,cols)
s:SpecChangelog	./vim82/ftplugin/spec.vim	/^	function s:SpecChangelog(format)$/;"	f	signature:(format)
s:SpecInputs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SpecInputs(str)$/;"	f	signature:(str)
s:SpellDel	./vim82/menu.vim	/^  func s:SpellDel()$/;"	f	signature:()
s:SpellLang	./vim82/menu.vim	/^  func s:SpellLang()$/;"	f	signature:()
s:SpellPopup	./vim82/menu.vim	/^  func s:SpellPopup()$/;"	f	signature:()
s:SpellReplace	./vim82/menu.vim	/^  func s:SpellReplace(n)$/;"	f	signature:(n)
s:SplitMsg	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func! s:SplitMsg(s)$/;"	f	signature:(s)
s:SplitPattern	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:SplitPattern(str)$/;"	f	signature:(str)
s:StackLook	./vim82/plugin/logiPat.vim	/^fun! s:StackLook(description)$/;"	f	signature:(description)
s:StarSetf	./vim82/filetype.vim	/^func! s:StarSetf(ft)$/;"	f	signature:(ft)
s:StartDebug	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:StartDebug(bang, ...)$/;"	f	signature:(bang,...)
s:StartDebugCommand	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:StartDebugCommand(bang, ...)$/;"	f	signature:(bang,...)
s:StartDebugCommon	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:StartDebugCommon(dict)$/;"	f	signature:(dict)
s:StartDebug_internal	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:StartDebug_internal(dict)$/;"	f	signature:(dict)
s:StartDebug_prompt	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:StartDebug_prompt(dict)$/;"	f	signature:(dict)
s:StartDebug_term	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^func s:StartDebug_term(dict)$/;"	f	signature:(dict)
s:StartMessagePoll	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:StartMessagePoll()$/;"	f	signature:()
s:StartOfFile	./vim82/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f	signature:(pline_info)
s:StartTag	./vim82/autoload/xmlformat.vim	/^func! s:StartTag(tag) abort$/;"	f	signature:(tag)
s:Starts_with_word	./vim82/indent/awk.vim	/^function! s:Starts_with_word( line )$/;"	f	signature:( line )
s:StatementIndent	./vim82/indent/ada.vim	/^function s:StatementIndent( current_indent, prev_lnum )$/;"	f	signature:( current_indent,prev_lnum )
s:StatementStart	./vimfiles/bundle/python-mode/autoload/pymode/indent.vim	/^function! s:StatementStart(lnum) " {{{$/;"	f	signature:(lnum)
s:StopCompletion	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:StopCompletion( key )$/;"	f	signature:( key )
s:String	./vim82/plugin/logiPat.vim	/^func! s:String(str)$/;"	f	signature:(str)
s:Strlen	./vim82/autoload/netrw.vim	/^fun! s:Strlen(x)$/;"	f	signature:(x)
s:StructMembers	./vim82/autoload/ccomplete.vim	/^function! s:StructMembers(typename, items, all)$/;"	f	signature:(typename,items,all)
s:SubmatchCount	./vim82/indent/matlab.vim	/^function! s:SubmatchCount(lnum, pattern, ...)$/;"	f	signature:(lnum,pattern,...)
s:SuperSub	./vim82/syntax/tex.vim	/^  fun! s:SuperSub(group,leader,pat,cchar)$/;"	f	signature:(group,leader,pat,cchar)
s:SuperTab	./vimfiles/plugin/supertab.vim	/^function! s:SuperTab(command)$/;"	f	signature:(command)
s:SuperTabHelp	./vimfiles/plugin/supertab.vim	/^function! s:SuperTabHelp()$/;"	f	signature:()
s:SynAt	./vim82/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f	signature:(l,c)
s:SynOnOff	./vim82/menu.vim	/^    fun s:SynOnOff()$/;"	f	signature:()
s:SynPHPMatchGroups	./vim82/indent/php.vim	/^let s:SynPHPMatchGroups = {'phpparent':1, 'delimiter':1, 'define':1, 'storageclass':1, 'structur/;"	v
s:SynSet	./vim82/syntax/synload.vim	/^fun! s:SynSet()$/;"	f	signature:()
s:SyntaxCSyntaxGroupItems	./vim82/autoload/syntaxcomplete.vim	/^function! s:SyntaxCSyntaxGroupItems( group_name, syntax_full )$/;"	f	signature:( group_name,syntax_full )
s:SyntaxCSyntaxGroupItems	./vimfiles/autoload/syntaxcomplete.vim	/^function! s:SyntaxCSyntaxGroupItems( group_name, syntax_full )$/;"	f	signature:( group_name,syntax_full )
s:TEMP_VARIABLES_GROUP	./vimfiles/autoload/fuf.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TEMP_VARIABLES_GROUP	./vimfiles/autoload/fuf/buffertag.vim	/^let s:TEMP_VARIABLES_GROUP = expand('<sfile>:p')$/;"	v
s:TYPE_DICT	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:Tab	./vim82/ftplugin/cobol.vim	/^function! s:Tab()$/;"	f	signature:()
s:TabooRuleMatch	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^function! s:TabooRuleMatch(taboo_rule_list, char)$/;"	f	signature:(taboo_rule_list,char)
s:Tag	./vim82/ftplugin/pdf.vim	/^function! s:Tag()$/;"	f	signature:()
s:Tag2item	./vim82/autoload/ccomplete.vim	/^function! s:Tag2item(val)$/;"	f	signature:(val)
s:TagContent	./vim82/autoload/xmlformat.vim	/^func! s:TagContent(tag) abort "{{{1$/;"	f	signature:(tag)
s:TagFiles	./vim82/menu.vim	/^fun! s:TagFiles()$/;"	f	signature:()
s:TagPopupList	./vimfiles/autoload/omni/cpp/complete.vim	/^function! s:TagPopupList(szTypeName, szBase)$/;"	f	signature:(szTypeName,szBase)
s:Tagcmd2extra	./vim82/autoload/ccomplete.vim	/^function! s:Tagcmd2extra(cmd, name, fname)$/;"	f	signature:(cmd,name,fname)
s:Tagline2item	./vim82/autoload/ccomplete.vim	/^function! s:Tagline2item(val, brackets)$/;"	f	signature:(val,brackets)
s:TarBrowseSelect	./vim82/autoload/tar.vim	/^fun! s:TarBrowseSelect()$/;"	f	signature:()
s:TeXIndent	./vim82/indent/rnoweb.vim	/^  let s:TeXIndent = function("s:NoTeXIndent")$/;"	v
s:TeXIndent	./vim82/indent/rnoweb.vim	/^  let s:TeXIndent = function(substitute(&indentexpr, "()", "", ""))$/;"	v
s:TextWidth	./vim82/menu.vim	/^fun! s:TextWidth()$/;"	f	signature:()
s:Textwidth	./vim82/autoload/xmlformat.vim	/^func! s:Textwidth() abort "{{{1$/;"	f	signature:()
s:Tlist_Add_Files	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f	signature:(...)
s:Tlist_Add_Files_Recursive	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f	signature:(dir,...)
s:Tlist_Buffer_Removed	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f	signature:(filename)
s:Tlist_Change_Sort	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f	signature:(caller,action,sort_type)
s:Tlist_Debug_Disable	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f	signature:(...)
s:Tlist_Debug_Enable	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f	signature:(...)
s:Tlist_Debug_Show	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f	signature:()
s:Tlist_Detect_Filetype	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f	signature:(fname)
s:Tlist_Discard_FileInfo	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f	signature:(fidx)
s:Tlist_Discard_TagInfo	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f	signature:(fidx)
s:Tlist_Exe_Cmd_No_Acmds	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f	signature:(cmd)
s:Tlist_Extract_Tag_Scope	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f	signature:(tag_line)
s:Tlist_Extract_Tagtype	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f	signature:(tag_line)
s:Tlist_FileType_Init	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f	signature:(ftype)
s:Tlist_Find_Nearest_Tag_Idx	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f	signature:(fidx,linenum)
s:Tlist_Get_Buffer_Filetype	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f	signature:(bnum)
s:Tlist_Get_File_Index	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f	signature:(fname)
s:Tlist_Get_Tag_Linenum	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f	signature:(fidx,tidx)
s:Tlist_Get_Tag_Prototype	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f	signature:(fidx,tidx)
s:Tlist_Get_Tag_SearchPat	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f	signature:(fidx,tidx)
s:Tlist_Get_Tag_Type_By_Tag	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f	signature:(fidx,tidx)
s:Tlist_Init_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f	signature:(filename,ftype)
s:Tlist_Log_Msg	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f	signature:(msg)
s:Tlist_Menu_Add_Base_Menu	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f	signature:()
s:Tlist_Menu_File_Refresh	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f	signature:(fidx)
s:Tlist_Menu_Get_Tag_Type_Cmd	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f	signature:(fidx,ftype,add_ttype_name,ttype_idx)
s:Tlist_Menu_Init	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f	signature:()
s:Tlist_Menu_Jump_To_Tag	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f	signature:(tidx)
s:Tlist_Menu_Refresh	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f	signature:()
s:Tlist_Menu_Remove_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f	signature:()
s:Tlist_Menu_Update_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f	signature:(clear_menu)
s:Tlist_Parse_Tagline	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f	signature:(tag_line)
s:Tlist_Post_Close_Cleanup	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f	signature:()
s:Tlist_Process_Dir	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f	signature:(dir_name,pat)
s:Tlist_Process_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f	signature:(filename,ftype)
s:Tlist_Process_Filelist	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f	signature:(file_names)
s:Tlist_Refresh	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f	signature:()
s:Tlist_Refresh_Folds	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f	signature:()
s:Tlist_Remove_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f	signature:(file_idx,user_request)
s:Tlist_Session_Load	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f	signature:(...)
s:Tlist_Session_Save	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f	signature:(...)
s:Tlist_Skip_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f	signature:(filename,ftype)
s:Tlist_Skip_Refresh	./vimfiles/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:Tlist_Update_Current_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f	signature:()
s:Tlist_Update_Remove_List	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f	signature:(filename,add)
s:Tlist_User_Removed_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f	signature:(filename)
s:Tlist_Vim_Session_Load	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f	signature:()
s:Tlist_Warning_Msg	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f	signature:(msg)
s:Tlist_Window_Check_Auto_Open	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f	signature:()
s:Tlist_Window_Check_Width	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f	signature:()
s:Tlist_Window_Close	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f	signature:()
s:Tlist_Window_Create	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f	signature:()
s:Tlist_Window_Display_Help	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f	signature:()
s:Tlist_Window_Exit_Only_Window	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f	signature:()
s:Tlist_Window_Get_File_Index_By_Linenum	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f	signature:(lnum)
s:Tlist_Window_Get_Tag_Index	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f	signature:(fidx,lnum)
s:Tlist_Window_Get_Tag_Type_By_Linenum	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f	signature:(fidx,lnum)
s:Tlist_Window_Goto_Window	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f	signature:()
s:Tlist_Window_Highlight_Line	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f	signature:()
s:Tlist_Window_Highlight_Tag	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f	signature:(filename,cur_lnum,cntx,center)
s:Tlist_Window_Init	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f	signature:()
s:Tlist_Window_Jump_To_Tag	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f	signature:(win_ctrl)
s:Tlist_Window_Mark_File_Window	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f	signature:()
s:Tlist_Window_Move_To_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f	signature:(dir)
s:Tlist_Window_Open	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f	signature:()
s:Tlist_Window_Open_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f	signature:(win_ctrl,filename,tagpat)
s:Tlist_Window_Open_File_Fold	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f	signature:(acmd_bufnr)
s:Tlist_Window_Refresh	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f	signature:()
s:Tlist_Window_Refresh_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f	signature:(filename,ftype)
s:Tlist_Window_Remove_File_From_Display	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f	signature:(fidx)
s:Tlist_Window_Show_Info	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f	signature:()
s:Tlist_Window_Toggle	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f	signature:()
s:Tlist_Window_Toggle_Help_Text	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f	signature:()
s:Tlist_Window_Update_File	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f	signature:()
s:Tlist_Window_Update_Line_Offsets	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f	signature:(start_idx,increment,offset)
s:Tlist_Window_Zoom	./vimfiles/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f	signature:()
s:ToggleByFname	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleByFname()$/;"	f	signature:()
s:ToggleFocus	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleFocus()$/;"	f	signature:()
s:ToggleGuiOption	./vim82/menu.vim	/^fun! s:ToggleGuiOption(option)$/;"	f	signature:(option)
s:ToggleKeyLoop	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleKeyLoop()$/;"	f	signature:()
s:ToggleLogs	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:ToggleLogs(...)$/;"	f	signature:(...)
s:ToggleMRURelative	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleMRURelative()$/;"	f	signature:()
s:ToggleRegex	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleRegex()$/;"	f	signature:()
s:ToggleType	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ToggleType(dir)$/;"	f	signature:(dir)
s:Token	./vim82/indent/javascript.vim	/^function s:Token()$/;"	f	signature:()
s:TokenizeLine	./vim82/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f	signature:(lnum,direction)
s:TokensToString	./vimfiles/autoload/omni/cpp/items.vim	/^function! s:TokensToString(tokens)$/;"	f	signature:(tokens)
s:TreeDirNode	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeDirNode.AbsoluteTreeRoot	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f	signature:()
s:TreeDirNode.GetSelected	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f	signature:()
s:TreeDirNode.New	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f	signature:(path,nerdtree)
s:TreeDirNode._initChildren	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f	signature:(silent)
s:TreeDirNode._openInNewTab	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f	signature:()
s:TreeDirNode._openRecursively2	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f	signature:(forceOpen)
s:TreeDirNode.activate	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f	signature:(...)
s:TreeDirNode.addChild	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f	signature:(treenode,inOrder)
s:TreeDirNode.close	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f	signature:()
s:TreeDirNode.closeChildren	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f	signature:()
s:TreeDirNode.createChild	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f	signature:(path,inOrder)
s:TreeDirNode.displayString	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f	signature:()
s:TreeDirNode.findNode	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f	signature:(path)
s:TreeDirNode.getCascade	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f	signature:()
s:TreeDirNode.getChild	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f	signature:(path)
s:TreeDirNode.getChildByIndex	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f	signature:(indx,visible)
s:TreeDirNode.getChildCount	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f	signature:()
s:TreeDirNode.getChildIndex	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f	signature:(path)
s:TreeDirNode.getDirChildren	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f	signature:()
s:TreeDirNode.getVisibleChildCount	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f	signature:()
s:TreeDirNode.getVisibleChildren	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f	signature:()
s:TreeDirNode.hasVisibleChildren	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f	signature:()
s:TreeDirNode.isCascadable	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f	signature:()
s:TreeDirNode.open	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f	signature:(...)
s:TreeDirNode.openAlong	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f	signature:(...)
s:TreeDirNode.openExplorer	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f	signature:()
s:TreeDirNode.openInNewTab	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f	signature:(options)
s:TreeDirNode.openRecursively	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f	signature:()
s:TreeDirNode.refresh	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f	signature:()
s:TreeDirNode.refreshDirFlags	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f	signature:()
s:TreeDirNode.refreshFlags	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f	signature:()
s:TreeDirNode.removeChild	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f	signature:(treenode)
s:TreeDirNode.reveal	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f	signature:(path,...)
s:TreeDirNode.sortChildren	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f	signature:()
s:TreeDirNode.toggleOpen	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f	signature:(...)
s:TreeDirNode.transplantChild	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f	signature:(newNode)
s:TreeFileNode	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode.GetRootForTab	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f	signature:()
s:TreeFileNode.GetSelected	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f	signature:()
s:TreeFileNode.New	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f	signature:(path,nerdtree)
s:TreeFileNode._renderToString	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f	signature:(depth,drawText)
s:TreeFileNode.activate	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f	signature:(...)
s:TreeFileNode.bookmark	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f	signature:(name)
s:TreeFileNode.cacheParent	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f	signature:()
s:TreeFileNode.clearBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f	signature:()
s:TreeFileNode.copy	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f	signature:(dest)
s:TreeFileNode.delete	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f	signature:()
s:TreeFileNode.displayString	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f	signature:()
s:TreeFileNode.equals	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f	signature:(treenode)
s:TreeFileNode.findNode	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f	signature:(path)
s:TreeFileNode.findOpenDirSiblingWithVisibleChildren	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f	signature:(direction)
s:TreeFileNode.findSibling	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f	signature:(direction)
s:TreeFileNode.getNerdtree	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f	signature:()
s:TreeFileNode.isRoot	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f	signature:()
s:TreeFileNode.isVisible	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f	signature:()
s:TreeFileNode.open	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f	signature:(...)
s:TreeFileNode.openInNewTab	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f	signature:(options)
s:TreeFileNode.openSplit	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f	signature:()
s:TreeFileNode.openVSplit	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f	signature:()
s:TreeFileNode.putCursorHere	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f	signature:(isJump,recurseUpward)
s:TreeFileNode.refresh	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f	signature:()
s:TreeFileNode.refreshFlags	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f	signature:()
s:TreeFileNode.rename	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f	signature:(newName)
s:TreeFileNode.renderToString	./vimfiles/bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f	signature:()
s:TreeListMove	./vim82/autoload/netrw.vim	/^fun! s:TreeListMove(dir)$/;"	f	signature:(dir)
s:TreeSqueezeDir	./vim82/autoload/netrw.vim	/^fun! s:TreeSqueezeDir(islocal)$/;"	f	signature:(islocal)
s:Trim	./vim82/autoload/xmlformat.vim	/^func! s:Trim(item) abort$/;"	f	signature:(item)
s:Trim	./vimfiles/autoload/mark.vim	/^	function! s:Trim( message )$/;"	f	signature:( message )
s:TurnOffSyntasticForCFamily	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:TurnOffSyntasticForCFamily()$/;"	f	signature:()
s:UI	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:UI.IndentWid	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f	signature:()
s:UI.MarkupReg	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f	signature:()
s:UI.New	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f	signature:(nerdtree)
s:UI.UpDirLine	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f	signature:()
s:UI._dumpHelp	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f	signature:()
s:UI._indentLevelFor	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f	signature:(line)
s:UI._renderBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f	signature:()
s:UI._stripMarkup	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f	signature:(line,removeLeadingSpaces)
s:UI.centerView	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f	signature:()
s:UI.getLineNum	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f	signature:(file_node)
s:UI.getPath	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f	signature:(ln)
s:UI.getRootLineNum	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f	signature:()
s:UI.getShowBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f	signature:()
s:UI.getShowFiles	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f	signature:()
s:UI.getShowHelp	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f	signature:()
s:UI.getShowHidden	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f	signature:()
s:UI.isIgnoreFilterEnabled	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f	signature:()
s:UI.isMinimal	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f	signature:()
s:UI.render	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f	signature:()
s:UI.renderViewSavingPosition	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f	signature:()
s:UI.restoreScreenState	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f	signature:()
s:UI.saveScreenState	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f	signature:()
s:UI.setShowHidden	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f	signature:(val)
s:UI.toggleHelp	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f	signature:()
s:UI.toggleIgnoreFilter	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f	signature:()
s:UI.toggleShowBookmarks	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f	signature:()
s:UI.toggleShowFiles	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f	signature:()
s:UI.toggleShowHidden	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f	signature:()
s:UI.toggleZoom	./vimfiles/bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f	signature:()
s:UNPROTECTED_CHAR_PRFX	./vimfiles/autoload/genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat/;"	v
s:URI	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^let s:URI = {$/;"	v
s:USAGE	./vim82/autoload/vimball.vim	/^ let s:USAGE   = 0$/;"	v
s:UnexpectedToken	./vim82/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f	signature:(token,stack)
s:Update	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:Update(str)$/;"	f	signature:(str)
s:UpdateBuffersMenu	./vim82/autoload/netrw.vim	/^fun! s:UpdateBuffersMenu()$/;"	f	signature:()
s:UpdateChangedSnip	./vimfiles/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f	signature:(entering)
s:UpdateMatches	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:UpdateMatches()$/;"	f	signature:()
s:UpdatePlaceholderTabStops	./vimfiles/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f	signature:()
s:UpdateTabStops	./vimfiles/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f	signature:()
s:UpdateVars	./vimfiles/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f	signature:()
s:UseBufWinVars	./vim82/autoload/netrw.vim	/^fun! s:UseBufWinVars()$/;"	f	signature:()
s:UserCmd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:UserCmd(lscmd)$/;"	f	signature:(lscmd)
s:UserMaps	./vim82/autoload/netrw.vim	/^fun! s:UserMaps(islocal,funcname)$/;"	f	signature:(islocal,funcname)
s:UsingPython3	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:UsingPython3()$/;"	f	signature:()
s:V	./vimfiles/autoload/genutils.vim	/^let s:V = 5$/;"	v
s:V	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^let s:V = vital#openbrowser#new()$/;"	v
s:VERSION_FACTOR	./vimfiles/autoload/l9.vim	/^let s:VERSION_FACTOR = str2float('0.01')$/;"	v
s:ValidMatchEnd	./vim82/indent/mp.vim	/^function! s:ValidMatchEnd(line, pat, start)$/;"	f	signature:(line,pat,start)
s:VimEnter	./vim82/plugin/netrwPlugin.vim	/^fun! s:VimEnter(dirname)$/;"	f	signature:(dirname)
s:VisitedBufferRequiresReparse	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! s:VisitedBufferRequiresReparse()$/;"	f	signature:()
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital = {}$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital = {}$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital = {}$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:WARNING	./vim82/autoload/netrw.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	./vim82/autoload/vimball.vim	/^ let s:WARNING = 1$/;"	v
s:WARNING	./vim82/autoload/zip.vim	/^let s:WARNING        = 1$/;"	v
s:Weight	./vim82/indent/mp.vim	/^function! s:Weight(line)$/;"	f	signature:(line)
s:Wholematch	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f	signature:(string,pat,start)
s:WillComplete	./vimfiles/plugin/supertab.vim	/^function! s:WillComplete()$/;"	f	signature:()
s:WithPath	./vim82/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f	signature:(func,...)
s:WrapMessage	./vimfiles/autoload/mark.vim	/^	function! s:WrapMessage( searchType, searchPattern, isBackward )$/;"	f	signature:( searchType,searchPattern,isBackward )
s:X	./vimfiles/autoload/genutils.vim	/^let s:X = 10$/;"	v
s:XxdBack	./vim82/menu.vim	/^func s:XxdBack()$/;"	f	signature:()
s:XxdConv	./vim82/menu.vim	/^func s:XxdConv()$/;"	f	signature:()
s:XxdFind	./vim82/menu.vim	/^func s:XxdFind()$/;"	f	signature:()
s:YankLine	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:YankLine(...)$/;"	f	signature:(...)
s:ZipBrowseSelect	./vim82/autoload/zip.vim	/^fun! s:ZipBrowseSelect()$/;"	f	signature:()
s:_DefaultConfig_get	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^function! s:_DefaultConfig_get(key) abort dict$/;"	f	signature:(key)
s:_ExcmdOpener_open	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Opener.vim	/^function! s:_ExcmdOpener_open() abort dict$/;"	f	signature:()
s:_OpenBrowser_cmd_open	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_cmd_open(cmdline) abort dict$/;"	f	signature:(cmdline)
s:_OpenBrowser_cmd_search	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_cmd_search(cmdline) abort dict$/;"	f	signature:(cmdline)
s:_OpenBrowser_cmd_search_complete	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_cmd_search_complete(arglead, cmdline, cursorpos) abort dict$/;"	f	signature:(arglead,cmdline,cursorpos)
s:_OpenBrowser_cmd_smart_search	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_cmd_smart_search(cmdline) abort dict$/;"	f	signature:(cmdline)
s:_OpenBrowser_keymap_open	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_keymap_open(mode, ...) abort dict$/;"	f	signature:(mode,...)
s:_OpenBrowser_keymap_search	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_keymap_search(mode) abort dict$/;"	f	signature:(mode)
s:_OpenBrowser_keymap_smart_search	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_keymap_smart_search(mode) abort dict$/;"	f	signature:(mode)
s:_OpenBrowser_open	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_open(uri) abort dict$/;"	f	signature:(uri)
s:_OpenBrowser_search	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_search(query, ...) abort dict$/;"	f	signature:(query,...)
s:_OpenBrowser_smart_search	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_OpenBrowser_smart_search(query, ...) abort dict$/;"	f	signature:(query,...)
s:_SID	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTP.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTPS.vim	/^function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^  function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^  function! s:_SID() abort$/;"	f	signature:()
s:_SID	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  function! s:_SID() abort$/;"	f	signature:()
s:_ShellCmdOpener_open	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Opener.vim	/^function! s:_ShellCmdOpener_open() abort dict$/;"	f	signature:()
s:_UNDEFINED	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_UserVarConfig_get	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^function! s:_UserVarConfig_get(key) abort dict$/;"	f	signature:(key)
s:__urlencode_char	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:__urlencode_char(c) abort$/;"	f	signature:(c)
s:_array	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_array(input) abort$/;"	f	signature:(input)
s:_array	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_array(input) abort$/;"	f	signature:(input)
s:_array	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_array(input) abort$/;"	f	signature:(input)
s:_array_of_tables	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_array_of_tables(input) abort$/;"	f	signature:(input)
s:_array_of_tables	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_array_of_tables(input) abort$/;"	f	signature:(input)
s:_array_of_tables	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_array_of_tables(input) abort$/;"	f	signature:(input)
s:_assert_filetype	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^function! s:_assert_filetype(ft, expected)$/;"	f	signature:(ft,expected)
s:_basic_string	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_basic_string(input) abort$/;"	f	signature:(input)
s:_basic_string	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_basic_string(input) abort$/;"	f	signature:(input)
s:_basic_string	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_basic_string(input) abort$/;"	f	signature:(input)
s:_boolean	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_boolean(input) abort$/;"	f	signature:(input)
s:_boolean	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_boolean(input) abort$/;"	f	signature:(input)
s:_boolean	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_boolean(input) abort$/;"	f	signature:(input)
s:_bounder	./vim82/syntax/yaml.vim	/^let s:_bounder = s:SimplifyToAssumeAllPrintable('\\%([[\\]{}, \\t]\\@!\\p\\)')$/;"	v
s:_build_last_response	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_build_last_response(responses) abort$/;"	f	signature:(responses)
s:_build_response	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_build_response(header, content) abort$/;"	f	signature:(header,content)
s:_build_settings	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_build_settings(args) abort$/;"	f	signature:(args)
s:_by_length	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_by_length(s1, s2) abort$/;"	f	signature:(s1,s2)
s:_call_handler_method	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_call_handler_method(this, name, args) abort$/;"	f	signature:(this,name,args)
s:_call_string_expr	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f	signature:(expr,args)
s:_clean_command	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^function! s:_clean_command()$/;"	f	signature:()
s:_close_cb	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_close_cb(job, channel) abort$/;"	f	signature:(job,channel)
s:_collection	./vim82/syntax/yaml.vim	/^let s:_collection = '[^\\@!\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_compare	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! s:_compare(a, b) abort "{{{$/;"	f	signature:(a,b)
s:_compare	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:_compare(a, b) abort$/;"	f	signature:(a,b)
s:_compare	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! s:_compare(a, b) abort "{{{$/;"	f	signature:(a,b)
s:_compare	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f	signature:(a,b)
s:_consume	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_consume(input, pattern) abort$/;"	f	signature:(input,pattern)
s:_consume	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_consume(input, pattern) abort$/;"	f	signature:(input,pattern)
s:_consume	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_consume(input, pattern) abort$/;"	f	signature:(input,pattern)
s:_convert_commands_and_rules	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^      function! s:_convert_commands_and_rules()$/;"	f	signature:()
s:_convert_to_fullpath	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_convert_to_fullpath(path) abort$/;"	f	signature:(path)
s:_create_check_functions	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_create_check_functions() abort$/;"	f	signature:()
s:_create_eat_functions	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_create_eat_functions() abort$/;"	f	signature:()
s:_datetime	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_datetime(input) abort$/;"	f	signature:(input)
s:_datetime	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_datetime(input) abort$/;"	f	signature:(input)
s:_datetime	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_datetime(input) abort$/;"	f	signature:(input)
s:_default_compare	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f	signature:(a,b)
s:_detect_filepath_cb	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_detect_filepath_cb() abort$/;"	f	signature:()
s:_detect_url_cb	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_detect_url_cb(config) abort$/;"	f	signature:(config)
s:_dot_to_sharp	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f	signature:(name)
s:_dot_to_sharp	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f	signature:(name)
s:_dot_to_sharp	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f	signature:(name)
s:_eat_authority	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_eat_authority(str, pattern_set) abort$/;"	f	signature:(str,pattern_set)
s:_eat_em	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_eat_em(str, pat, ...) abort$/;"	f	signature:(str,pat,...)
s:_eat_hier_part	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_eat_hier_part(rest, pattern_set) abort$/;"	f	signature:(rest,pattern_set)
s:_echo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:_echo(msg, hl) abort$/;"	f	signature:(msg,hl)
s:_ensure_key	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:_ensure_key(key) abort$/;"	f	signature:(key)
s:_eof	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_eof(input) abort$/;"	f	signature:(input)
s:_eof	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_eof(input) abort$/;"	f	signature:(input)
s:_eof	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_eof(input) abort$/;"	f	signature:(input)
s:_equals	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_equals(input) abort$/;"	f	signature:(input)
s:_equals	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_equals(input) abort$/;"	f	signature:(input)
s:_equals	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_equals(input) abort$/;"	f	signature:(input)
s:_err_cb	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_err_cb(job, channel, msg) abort$/;"	f	signature:(job,channel,msg)
s:_error	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_error(input) abort$/;"	f	signature:(input)
s:_error	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_error(input) abort$/;"	f	signature:(input)
s:_error	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_error(input) abort$/;"	f	signature:(input)
s:_execute	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_execute(cmd) abort$/;"	f	signature:(cmd)
s:_execute	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_execute(cmd) abort$/;"	f	signature:(cmd)
s:_exists_autoload_func_with_source	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f	signature:(funcname)
s:_exit_cb	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_exit_cb(job, channel, exitval) abort$/;"	f	signature:(job,channel,exitval)
s:_expand_format_message	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_expand_format_message(format_message, keywords) abort$/;"	f	signature:(format_message,keywords)
s:_expand_keywords	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_expand_keywords(str, options) abort$/;"	f	signature:(str,options)
s:_exponent	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_exponent(input) abort$/;"	f	signature:(input)
s:_exponent	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_exponent(input) abort$/;"	f	signature:(input)
s:_exponent	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_exponent(input) abort$/;"	f	signature:(input)
s:_extract	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/URIExtractor.vim	/^function! s:_extract(text, options) abort$/;"	f	signature:(text,options)
s:_extract_files	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f	signature:(pattern,files)
s:_extract_files	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f	signature:(pattern,files)
s:_extract_files	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f	signature:(pattern,files)
s:_extract_urls	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_extract_urls(text, config) abort$/;"	f	signature:(text,config)
s:_file2module	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_file2module(file) abort$/;"	f	signature:(file)
s:_file2module	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_file2module(file) abort$/;"	f	signature:(file)
s:_file2module	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_file2module(file) abort$/;"	f	signature:(file)
s:_float	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_float(input) abort$/;"	f	signature:(input)
s:_float	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_float(input) abort$/;"	f	signature:(input)
s:_float	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_float(input) abort$/;"	f	signature:(input)
s:_foldl	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f	signature:(f,init,xs)
s:_fractional	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_fractional(input) abort$/;"	f	signature:(input)
s:_fractional	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_fractional(input) abort$/;"	f	signature:(input)
s:_fractional	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_fractional(input) abort$/;"	f	signature:(input)
s:_function	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  function! s:_function(fstr) abort$/;"	f	signature:(fstr)
s:_function	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  function! s:_function(fstr) abort$/;"	f	signature:(fstr)
s:_function	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  function! s:_function(fstr) abort$/;"	f	signature:(fstr)
s:_get_builtin_module	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_get_builtin_module(name) abort$/;"	f	signature:(name)
s:_get_builtin_module	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_get_builtin_module(name) abort$/;"	f	signature:(name)
s:_get_builtin_module	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_get_builtin_module(name) abort$/;"	f	signature:(name)
s:_get_client	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_get_client(settings) abort$/;"	f	signature:(settings)
s:_get_default_browser_commands	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^      function! s:_get_default_browser_commands()$/;"	f	signature:()
s:_get_default_browser_commands	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^    function! s:_get_default_browser_commands()$/;"	f	signature:()
s:_get_filepath_on_cursor	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_filepath_on_cursor() abort$/;"	f	signature:()
s:_get_handler_module	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_get_handler_module(scheme, uriobj) abort$/;"	f	signature:(scheme,uriobj)
s:_get_loose_pattern_set	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_loose_pattern_set() abort$/;"	f	signature:()
s:_get_module	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_get_module(name) abort dict$/;"	f	signature:(name)
s:_get_module	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_get_module(name) abort dict$/;"	f	signature:(name)
s:_get_module	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_get_module(name) abort dict$/;"	f	signature:(name)
s:_get_opener_builder	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_opener_builder(uristr, config) abort$/;"	f	signature:(uristr,config)
s:_get_selected_text	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_selected_text() abort$/;"	f	signature:()
s:_get_shellcmd_opener_builder	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_shellcmd_opener_builder(uri, config) abort$/;"	f	signature:(uri,config)
s:_get_thing_on_cursor	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_thing_on_cursor(func, args) abort$/;"	f	signature:(func,args)
s:_get_url_head_pattern	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_url_head_pattern(schemes, pattern_set) abort$/;"	f	signature:(schemes,pattern_set)
s:_get_url_on_cursor	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_get_url_on_cursor(config) abort$/;"	f	signature:(config)
s:_getconcealedcol	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_getconcealedcol(expr) abort$/;"	f	signature:(expr)
s:_getconcealedline	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_getconcealedline(lnum, ...) abort$/;"	f	signature:(lnum,...)
s:_global_vital_files	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_global_vital_files() abort$/;"	f	signature:()
s:_global_vital_files	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_global_vital_files() abort$/;"	f	signature:()
s:_global_vital_files	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_global_vital_files() abort$/;"	f	signature:()
s:_has_copy_dir_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:_has_copy_dir_exe() abort$/;"	f	signature:()
s:_has_copy_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:_has_copy_exe() abort$/;"	f	signature:()
s:_has_error	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_has_error(func, args) abort$/;"	f	signature:(func,args)
s:_has_move_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:_has_move_exe() abort$/;"	f	signature:()
s:_import	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_import(name) abort dict$/;"	f	signature:(name)
s:_import	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_import(name) abort dict$/;"	f	signature:(name)
s:_import	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_import(name) abort dict$/;"	f	signature:(name)
s:_import_func_name	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f	signature:(plugin_name,module_name)
s:_import_func_name	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f	signature:(plugin_name,module_name)
s:_import_func_name	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f	signature:(plugin_name,module_name)
s:_init_global_vars	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^function! s:_init_global_vars(prefix) abort$/;"	f	signature:(prefix)
s:_init_python	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^let s:_init_python = -1$/;"	v
s:_inline_table	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_inline_table(input) abort$/;"	f	signature:(input)
s:_inline_table	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_inline_table(input) abort$/;"	f	signature:(input)
s:_inline_table	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_inline_table(input) abort$/;"	f	signature:(input)
s:_integer	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_integer(input) abort$/;"	f	signature:(input)
s:_integer	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_integer(input) abort$/;"	f	signature:(input)
s:_integer	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_integer(input) abort$/;"	f	signature:(input)
s:_is_own_exception	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_is_own_exception(str) abort$/;"	f	signature:(str)
s:_job_close	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^  function! s:_job_close() abort dict$/;"	f	signature:()
s:_job_close	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_job_close() abort dict$/;"	f	signature:()
s:_job_id	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_job_id() abort dict$/;"	f	signature:()
s:_job_id	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_job_id() abort dict$/;"	f	signature:()
s:_job_send	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^  function! s:_job_send(data) abort dict$/;"	f	signature:(data)
s:_job_send	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_job_send(data) abort dict$/;"	f	signature:(data)
s:_job_status	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_job_status() abort dict$/;"	f	signature:()
s:_job_status	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_job_status() abort dict$/;"	f	signature:()
s:_job_stop	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_job_stop() abort dict$/;"	f	signature:()
s:_job_stop	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_job_stop() abort dict$/;"	f	signature:()
s:_job_wait	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_job_wait(...) abort dict$/;"	f	signature:(...)
s:_job_wait	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_job_wait(...) abort dict$/;"	f	signature:(...)
s:_key	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_key(input) abort$/;"	f	signature:(input)
s:_key	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_key(input) abort$/;"	f	signature:(input)
s:_key	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_key(input) abort$/;"	f	signature:(input)
s:_literal	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_literal(input) abort$/;"	f	signature:(input)
s:_literal	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_literal(input) abort$/;"	f	signature:(input)
s:_literal	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_literal(input) abort$/;"	f	signature:(input)
s:_local_func	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_local_func(name) abort$/;"	f	signature:(name)
s:_makeArgumentList	./vimfiles/autoload/genutils.vim	/^function! s:_makeArgumentList()$/;"	f	signature:()
s:_makeArgumentString	./vimfiles/autoload/genutils.vim	/^function! s:_makeArgumentString()$/;"	f	signature:()
s:_make_header_args	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_make_header_args(headdata, option, quote) abort$/;"	f	signature:(headdata,option,quote)
s:_make_is_comparable_cache	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^function! s:_make_is_comparable_cache() abort$/;"	f	signature:()
s:_make_postfile	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_make_postfile(data) abort$/;"	f	signature:(data)
s:_match	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_match(input, pattern) abort$/;"	f	signature:(input,pattern)
s:_match	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_match(input, pattern) abort$/;"	f	signature:(input,pattern)
s:_match	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_match(input, pattern) abort$/;"	f	signature:(input,pattern)
s:_max_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f	signature:(dict,expr)
s:_merge_paths	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_merge_paths(baseobj, relobj) abort$/;"	f	signature:(baseobj,relobj)
s:_module_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_module_path(name) abort$/;"	f	signature:(name)
s:_module_path	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_module_path(name) abort$/;"	f	signature:(name)
s:_module_path	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_module_path(name) abort$/;"	f	signature:(name)
s:_module_sid	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_module_sid(name) abort$/;"	f	signature:(name)
s:_module_sid	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_module_sid(name) abort$/;"	f	signature:(name)
s:_module_sid	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_module_sid(name) abort$/;"	f	signature:(name)
s:_module_sid_base_dir	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_module_sid_base_dir() abort$/;"	f	signature:()
s:_module_sid_base_dir	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_module_sid_base_dir() abort$/;"	f	signature:()
s:_module_sid_base_dir	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_module_sid_base_dir() abort$/;"	f	signature:()
s:_multiline_basic_string	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_multiline_basic_string(input) abort$/;"	f	signature:(input)
s:_multiline_basic_string	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_multiline_basic_string(input) abort$/;"	f	signature:(input)
s:_multiline_basic_string	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_multiline_basic_string(input) abort$/;"	f	signature:(input)
s:_multiline_literal	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_multiline_literal(input) abort$/;"	f	signature:(input)
s:_multiline_literal	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_multiline_literal(input) abort$/;"	f	signature:(input)
s:_multiline_literal	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_multiline_literal(input) abort$/;"	f	signature:(input)
s:_neg_collection	./vim82/syntax/yaml.vim	/^let s:_neg_collection = '[^\\(\\%(\\\\\\.\\|\\[^\\\\\\]]\\)\\+\\)]'$/;"	v
s:_new_environment	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f	signature:(name)
s:_new_excmd_opener_builder	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_new_excmd_opener_builder(excmd) abort$/;"	f	signature:(excmd)
s:_new_instance	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f	signature:(instance,...)
s:_new_option	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f	signature:(name)
s:_new_register	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f	signature:(name)
s:_new_shellcmd_opener_builder	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_new_shellcmd_opener_builder(cmd, execmd, uri, use_vimproc) abort$/;"	f	signature:(cmd,execmd,uri,use_vimproc)
s:_new_variable	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f	signature:(name,...)
s:_nr2char	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_nr2char(nr) abort$/;"	f	signature:(nr)
s:_nr2char	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_nr2char(nr) abort$/;"	f	signature:(nr)
s:_nr2char	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_nr2char(nr) abort$/;"	f	signature:(nr)
s:_on_exit	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_on_exit(job, job_id, exitval, event) abort$/;"	f	signature:(job,job_id,exitval,event)
s:_on_exit_raw	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_on_exit_raw(job, job_id, exitval, event) abort$/;"	f	signature:(job,job_id,exitval,event)
s:_on_stderr	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_on_stderr(job, job_id, data, event) abort$/;"	f	signature:(job,job_id,data,event)
s:_on_stdout	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:_on_stdout(job, job_id, data, event) abort$/;"	f	signature:(job,job_id,data,event)
s:_out_cb	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:_out_cb(job, channel, msg) abort$/;"	f	signature:(job,channel,msg)
s:_pad_with_char	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f	signature:(str,left,right,char)
s:_parse	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_parse(input) abort$/;"	f	signature:(input)
s:_parse	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_parse(input) abort$/;"	f	signature:(input)
s:_parse	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_parse(input) abort$/;"	f	signature:(input)
s:_parse_engine	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_parse_engine(cmdline) abort$/;"	f	signature:(cmdline)
s:_parse_relative_part	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_parse_relative_part(rel_uri, pattern_set) abort$/;"	f	signature:(rel_uri,pattern_set)
s:_parse_relative_ref	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_parse_relative_ref(relstr, pattern_set) abort$/;"	f	signature:(relstr,pattern_set)
s:_parse_search_args	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_parse_search_args(cmdline) abort$/;"	f	signature:(cmdline)
s:_parse_spaces	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_parse_spaces(cmdline) abort$/;"	f	signature:(cmdline)
s:_parse_uri	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_parse_uri(str, ignore_rest, pattern_set) abort$/;"	f	signature:(str,ignore_rest,pattern_set)
s:_path2project_directory_git	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f	signature:(path)
s:_path2project_directory_git	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f	signature:(path)
s:_path2project_directory_others	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f	signature:(vcs,path)
s:_path2project_directory_others	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f	signature:(vcs,path)
s:_path2project_directory_svn	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f	signature:(path)
s:_path2project_directory_svn	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f	signature:(path)
s:_plugin_name	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	./vimfiles/bundle/previm/autoload/vital/_previm.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_postdata	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_postdata(data) abort$/;"	f	signature:(data)
s:_put_array	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_put_array(dict, key, value) abort$/;"	f	signature:(dict,key,value)
s:_put_array	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_put_array(dict, key, value) abort$/;"	f	signature:(dict,key,value)
s:_put_array	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_put_array(dict, key, value) abort$/;"	f	signature:(dict,key,value)
s:_put_dict	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_put_dict(dict, key, value) abort$/;"	f	signature:(dict,key,value)
s:_put_dict	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_put_dict(dict, key, value) abort$/;"	f	signature:(dict,key,value)
s:_put_dict	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_put_dict(dict, key, value) abort$/;"	f	signature:(dict,key,value)
s:_quote	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_quote() abort$/;"	f	signature:()
s:_readfile	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_readfile(file) abort$/;"	f	signature:(file)
s:_redir	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_redir(cmd) abort$/;"	f	signature:(cmd)
s:_remove_dot_segments	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_remove_dot_segments(path) abort$/;"	f	signature:(path)
s:_replace	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f	signature:(str,from,to,flags)
s:_resolve_relative	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_resolve_relative(obj, relobj) abort$/;"	f	signature:(obj,relobj)
s:_runtime	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_runtime(path) abort$/;"	f	signature:(path)
s:_s	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_seems_path	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_seems_path(uri) abort$/;"	f	signature:(uri)
s:_self_vital_files	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_self_vital_files() abort$/;"	f	signature:()
s:_self_vital_files	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_self_vital_files() abort$/;"	f	signature:()
s:_self_vital_files	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_self_vital_files() abort$/;"	f	signature:()
s:_sfuncname	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f	signature:(sid,funcname)
s:_sfuncname	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f	signature:(sid,funcname)
s:_sfuncname	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f	signature:(sid,funcname)
s:_shellescape_robocopy	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:_shellescape_robocopy(path) abort$/;"	f	signature:(path)
s:_sid	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f	signature:(path,filter_pattern)
s:_sid	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f	signature:(path,filter_pattern)
s:_sid	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f	signature:(path,filter_pattern)
s:_skip	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_skip(input) abort$/;"	f	signature:(input)
s:_skip	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_skip(input) abort$/;"	f	signature:(input)
s:_skip	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_skip(input) abort$/;"	f	signature:(input)
s:_source	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:_source(path) abort$/;"	f	signature:(path)
s:_source	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:_source(path) abort$/;"	f	signature:(path)
s:_source	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:_source(path) abort$/;"	f	signature:(path)
s:_split_by_wcswidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f	signature:(body,x)
s:_split_by_wcswidth_once	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f	signature:(body,x)
s:_table	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_table(input) abort$/;"	f	signature:(input)
s:_table	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_table(input) abort$/;"	f	signature:(input)
s:_table	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_table(input) abort$/;"	f	signature:(input)
s:_tempname	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_tempname() abort$/;"	f	signature:()
s:_throw	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_throw(msg) abort$/;"	f	signature:(msg)
s:_throw	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f	signature:(msg)
s:_undefined	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f	signature:()
s:_unescape	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_unescape(text) abort$/;"	f	signature:(text)
s:_unescape	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_unescape(text) abort$/;"	f	signature:(text)
s:_unescape	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_unescape(text) abort$/;"	f	signature:(text)
s:_unify_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  function! s:_unify_path(path) abort$/;"	f	signature:(path)
s:_unify_path	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  function! s:_unify_path(path) abort$/;"	f	signature:(path)
s:_unify_path	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  function! s:_unify_path(path) abort$/;"	f	signature:(path)
s:_unify_path_cache	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_uniq	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^  function! s:_uniq(list) abort$/;"	f	signature:(list)
s:_uniq	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^  function! s:_uniq(list) abort$/;"	f	signature:(list)
s:_uniq	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^  function! s:_uniq(list) abort$/;"	f	signature:(list)
s:_uri_authority	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_authority(...) dict abort$/;"	f	signature:(...)
s:_uri_canonicalize	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_canonicalize() dict abort$/;"	f	signature:()
s:_uri_clone	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_clone() dict abort$/;"	f	signature:()
s:_uri_default_port	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_default_port() dict abort$/;"	f	signature:()
s:_uri_fragment	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_fragment(...) dict abort$/;"	f	signature:(...)
s:_uri_host	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_host(...) dict abort$/;"	f	signature:(...)
s:_uri_new	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_new(str, ignore_rest, pattern_set) abort$/;"	f	signature:(str,ignore_rest,pattern_set)
s:_uri_new_sandbox	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_new_sandbox(uri, ignore_rest, pattern_set, retall, NothrowValue) abort$/;"	f	signature:(uri,ignore_rest,pattern_set,retall,NothrowValue)
s:_uri_opaque	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_opaque(...) dict abort$/;"	f	signature:(...)
s:_uri_path	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_path(...) dict abort$/;"	f	signature:(...)
s:_uri_port	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_port(...) dict abort$/;"	f	signature:(...)
s:_uri_query	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_query(...) dict abort$/;"	f	signature:(...)
s:_uri_relative	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_relative(relstr) dict abort$/;"	f	signature:(relstr)
s:_uri_scheme	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_scheme(...) dict abort$/;"	f	signature:(...)
s:_uri_to_iri	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_to_iri(...) dict abort$/;"	f	signature:(...)
s:_uri_to_string	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_to_string() dict abort$/;"	f	signature:()
s:_uri_userinfo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_uri_userinfo(...) dict abort$/;"	f	signature:(...)
s:_valid_args	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:_valid_args(args) abort$/;"	f	signature:(args)
s:_valid_commands_and_rules	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^  function! s:_valid_commands_and_rules()$/;"	f	signature:()
s:_valid_uri	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_valid_uri(uriobj) abort$/;"	f	signature:(uriobj)
s:_validate_args	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^function! s:_validate_args(args) abort$/;"	f	signature:(args)
s:_value	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^function! s:_value(input) abort$/;"	f	signature:(input)
s:_value	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^function! s:_value(input) abort$/;"	f	signature:(input)
s:_value	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^function! s:_value(input) abort$/;"	f	signature:(input)
s:_vital_created	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f	signature:(module)
s:_vital_created	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f	signature:(module)
s:_vital_created	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^function! s:_vital_created(module) abort$/;"	f	signature:(module)
s:_vital_depends	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Opener.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/URIExtractor.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTPS.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_depends	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:_vital_depends() abort$/;"	f	signature:()
s:_vital_healthcheck	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^function! s:_vital_healthcheck() abort$/;"	f	signature:()
s:_vital_loaded	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Opener.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/URIExtractor.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTPS.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_vital_loaded	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:_vital_loaded(V) abort$/;"	f	signature:(V)
s:_warn_deprecated	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f	signature:(name,alternative)
s:_warn_deprecated	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f	signature:(name,alternative)
s:_wcwidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f	signature:(ucs)
s:_wcwidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f	signature:(ucs)
s:_wcwidth	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f	signature:(ucs)
s:abs	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:abs(v)$/;"	f	signature:(v)
s:abspath	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:abspath(path) abort$/;"	f	signature:(path)
s:access_modifier_regex	./vim82/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:activateAll	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f	signature:()
s:activateBookmark	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f	signature:(bm)
s:activateDirNode	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(node)$/;"	f	signature:(node)
s:activateFileNode	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f	signature:(node)
s:activateFufBuffer	./vimfiles/autoload/fuf.vim	/^function s:activateFufBuffer()$/;"	f	signature:()
s:active_cwd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd = ''$/;"	v
s:active_cwd_len	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_cwd_len = 0$/;"	v
s:active_patterns	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:active_patterns = []$/;"	v
s:add_menu	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^  function! s:add_menu() abort$/;"	f	signature:()
s:addtomrufs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:addtomrufs(fname)$/;"	f	signature:(fname)
s:adverbs	./vim82/syntax/perl6.vim	/^    let s:adverbs = [$/;"	v
s:after	./vim82/syntax/perl6.vim	/^    let s:after  = "\\\\%(\\\\_s*:!\\\\?\\\\K\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)*\\\\%(([^)]*)\\/;"	v
s:after_ftplugin	./VIMPROJ/3rd/dein.vim/.cache/.vimrc/.dein/ftplugin.vim	/^function! s:after_ftplugin()$/;"	f	signature:()
s:after_ftplugin	./VIMPROJ/3rd/dein.vim/.cache/_vimrc/.dein/ftplugin.vim	/^function! s:after_ftplugin()$/;"	f	signature:()
s:after_keyword	./vim82/syntax/perl6.vim	/^let s:after_keyword = "\\\\)\\\\%(\\\\k\\\\|[-']\\\\K\\\\@=\\\\)\\\\@!\\""$/;"	v
s:alias_pattern	./vim82/syntax/rst.vim	/^    let s:alias_pattern = ''$/;"	v
s:align	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:align(bang, live, visualmode, first_line, last_line, expr)$/;"	f	signature:(bang,live,visualmode,first_line,last_line,expr)
s:all	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f	signature:(f,xs)
s:all_tokens	./vim82/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:allfolds	./vim82/syntax/2html.vim	/^let s:allfolds = []$/;"	v
s:allsteps	./vim82/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f	signature:()
s:alternating_modes	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:alternating_modes(mode)$/;"	f	signature:(mode)
s:ambitable	./vim82/tools/unicode.vim	/^let s:ambitable = []$/;"	v
s:and	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:and(xs) abort$/;"	f	signature:(xs)
s:annot_file_list	./vim82/ftplugin/ocaml.vim	/^  let s:annot_file_list = {}$/;"	v
s:ant_cpo_save	./vim82/syntax/ant.vim	/^let s:ant_cpo_save = &cpo$/;"	v
s:any	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f	signature:(f,xs)
s:append_log_file	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:append_log_file(msg) abort "{{{$/;"	f	signature:(msg)
s:append_log_file	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:append_log_file(msg) abort$/;"	f	signature:(msg)
s:append_log_file	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:append_log_file(msg) abort "{{{$/;"	f	signature:(msg)
s:apply	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:apply(f, ...) abort$/;"	f	signature:(f,...)
s:apply_openbrowser	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:apply_openbrowser(path) abort$/;"	f	signature:(path)
s:archs	./vim82/syntax/debcontrol.vim	/^let s:archs = [$/;"	v
s:argmaps	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:argmaps(md, i)$/;"	f	signature:(md,i)
s:args2string	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:args2string(args) abort$/;"	f	signature:(args)
s:arrayDecl	./vim82/indent/php.vim	/^let s:arrayDecl = '\\<array\\>\\s*(.*'$/;"	v
s:arrowheads	./vimfiles/after/ftplugin/dot.vim	/^let s:arrowheads =  [$/;"	v
s:arrowheads	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:arrowheads =  [$/;"	v
s:ars	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:ars = ['s:maxdepth', 's:maxfiles', 's:compare_lim', 's:glob', 's:caching']$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/install_base.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/raw.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/.dein/test/toml.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install_base.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/raw.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/toml.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install_base.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/raw.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/toml.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./vimfiles/bundle/open-browser.vim/test/dummy.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assignment_rx	./vim82/indent/make.vim	/^let s:assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\==\\s*\\zs.*\\\\$'$/;"	v
s:async_glob_abort	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_abort()$/;"	f	signature:()
s:async_glob_on_exit	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_on_exit(...)$/;"	f	signature:(...)
s:async_glob_on_stdout	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_on_stdout(job, data, ...)$/;"	f	signature:(job,data,...)
s:async_glob_update_progress	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:async_glob_update_progress(timer)$/;"	f	signature:(timer)
s:at	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:at(str)$/;"	f	signature:(str)
s:atoi	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:atoi(str)$/;"	f	signature:(str)
s:attr	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:attr = ""$/;"	v
s:attr	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:attr = s:CSS1(s:id)$/;"	v
s:attributes	./vim82/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attrs	./vimfiles/after/ftplugin/dot.vim	/^let s:attrs = [$/;"	v
s:attrs	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:attrs = [$/;"	v
s:autocmds	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:autocmds()$/;"	f	signature:()
s:autoinstall	./vim82/autoload/getscript.vim	/^  let s:autoinstall= $HOME."\/".s:dotvim$/;"	v
s:autoinstall	./vim82/autoload/getscript.vim	/^  let s:autoinstall= g:GetLatestVimScripts_autoinstalldir"$/;"	v
s:autoinstall	./vim82/autoload/getscript.vim	/^let s:autoinstall= ""$/;"	v
s:autoresetoptions	./vim82/indent/php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	./vim82/indent/php.vim	/^let s:autoresetoptions = 0$/;"	v
s:bMayComplete	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:bMayComplete = 0$/;"	v
s:backslash_continuation_regex	./vim82/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:base	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^let s:base = s:path . '\/repos\/'$/;"	v
s:base	./VIMPROJ/3rd/dein.vim/.dein/test/raw.vim	/^let s:base = s:path . '\/repos\/'$/;"	v
s:base	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^let s:base = s:path . '\/repos\/'$/;"	v
s:base	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/raw.vim	/^let s:base = s:path . '\/repos\/'$/;"	v
s:base	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^let s:base = s:path . '\/repos\/'$/;"	v
s:base	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/raw.vim	/^let s:base = s:path . '\/repos\/'$/;"	v
s:base_dir	./vimfiles/bundle/previm/autoload/previm.vim	/^let s:base_dir = fnamemodify(expand('<sfile>:p:h') . '\/..\/preview', ':p')$/;"	v
s:base_dir	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:base_dir = expand('<sfile>:p:h')$/;"	v
s:basename	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:basename(path) abort$/;"	f	signature:(path)
s:beflet	./vim82/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:beflet	./vim82/indent/sml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\/;"	v
s:before	./vim82/syntax/perl6.vim	/^    let s:before = "syn region p6StringQ matchgroup=p6Quote start=\\"\\\\%("$/;"	v
s:before_keyword	./vim82/syntax/perl6.vim	/^let s:before_keyword = " display \\"\\\\%(\\\\k\\\\|\\\\K\\\\@<=[-']\\\\)\\\\@<!\\\\%("$/;"	v
s:bg	./vim82/syntax/tmux.vim	/^    let s:bg = (!s:i || s:i == 16 || (s:i > 231 && s:i < 235)) ? 15 : "none"$/;"	v
s:bgc	./vim82/syntax/2html.vim	/^  let s:bgc = ( &background == "dark" ? "#000000" : "#ffffff" )$/;"	v
s:bgc	./vim82/syntax/2html.vim	/^let s:bgc = s:HtmlColor(synIDattr(hlID("Normal"), "bg#", s:whatterm))$/;"	v
s:bgc	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:bgc = ( &background == "dark" ? "#000000" : "#ffffff" )$/;"	v
s:bgc	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:bgc = s:HtmlColor(synIDattr(highlightID("Normal"), "bg#", s:whatterm))$/;"	v
s:binNMU	./vim82/syntax/debchangelog.vim	/^let s:binNMU='binary-only=yes'$/;"	v
s:binary_search	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f	signature:(list,value,...)
s:bind	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:bind(f, ...) abort$/;"	f	signature:(f,...)
s:bins	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:bins = [$/;"	v
s:blank_regex	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:blank_regex = '^\\s*$'$/;"	v
s:blockChars	./vim82/indent/php.vim	/^let s:blockChars = {'{':1, '[': 1, '(': 1, ')':-1, ']':-1, '}':-1}$/;"	v
s:blockCharsLUT	./vim82/indent/php.vim	/^let s:blockCharsLUT = {'{':'{', '}':'{',   '[':'[', ']':'[',   '(':'(', ')':'('}$/;"	v
s:block_continuation_regex	./vim82/indent/falcon.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	./vim82/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_end	./vim82/indent/sas.vim	/^let s:block_end = '\\v<%(end|endcomp|endlayout|endgraph)\\s*;'$/;"	v
s:block_regex	./vim82/indent/falcon.vim	/^let s:block_regex =$/;"	v
s:block_regex	./vim82/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\/;"	v
s:block_regex	./vim82/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	./vim82/indent/typescript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)/;"	v
s:block_scalar_header	./vim82/indent/yaml.vim	/^let s:block_scalar_header = '\\v[|>]%([+-]?[1-9]|[1-9]?[+-])?'$/;"	v
s:block_str	./vim82/indent/sas.vim	/^let s:block_str = '\\v<%(do>%([^;]+<%(to|over|while)>[^;]+)=|%(compute|define\\s+%(column|footer/;"	v
s:blockstart	./vim82/indent/php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|\\%(}\\s*\\)\\?else/;"	v
s:bmenu_items	./vim82/menu.vim	/^let s:bmenu_items = {}$/;"	v
s:bmenu_wait	./vim82/menu.vim	/^let s:bmenu_wait = 1$/;"	v
s:bookmark	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:bookmark(word)$/;"	f	signature:(word)
s:bookmarkHere	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:bookmarkHere(word)$/;"	f	signature:(word)
s:boolQuadGen	./vim82/syntax/neomuttrc.vim	/^function! s:boolQuadGen(type, vars, deprecated)$/;"	f	signature:(type,vars,deprecated)
s:boolean	./vimfiles/after/ftplugin/dot.vim	/^let s:boolean =  [$/;"	v
s:boolean	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:boolean =  [$/;"	v
s:both	./vim82/syntax/perl6.vim	/^let s:both = [s:infix_a_pattern, s:infix_n_pattern]$/;"	v
s:bracket_continuation_regex	./vim82/indent/falcon.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	./vim82/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_pair_pat	./vim82/indent/matlab.vim	/^let s:bracket_pair_pat = '\\(\\[\\|{\\)\\|\\(\\]\\|}\\)'$/;"	v
s:bracket_switch_continuation_regex	./vim82/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_type	./vim82/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f	signature:(char)
s:break	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f	signature:(f,xs)
s:break_id	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:break_id = 13  " breakpoint number is added to this$/;"	v
s:browsefilter	./vim82/ftplugin/ant.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/ant.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/aspvbs.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/aspvbs.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.htm*\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/config.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/config.vim	/^let s:browsefilter = "Bourne Shell Files (*.sh)\\t*.sh\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	./vim82/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	./vim82/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','',''/;"	v
s:browsefilter	./vim82/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	./vim82/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/jsp.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/jsp.vim	/^let s:browsefilter = "Java Files (*.java)\\t*.java\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/php.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/php.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/sgml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/sgml.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/svg.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/svg.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/tcsh.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/tcsh.vim	/^let s:browsefilter = "csh Files (*.csh)\\t*.csh\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter . s:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/xhtml.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/xhtml.vim	/^let s:browsefilter = "HTML Files (*.html, *.htm)\\t*.html;*.htm\\n" .$/;"	v
s:browsefilter	./vim82/ftplugin/xsd.vim	/^    let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	./vim82/ftplugin/xsd.vim	/^let s:browsefilter = "XML Files (*.xml)\\t*.xml\\n" .$/;"	v
s:bsub	./vim82/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f	signature:(target,pattern,replacement)
s:bufTimes	./vimfiles/autoload/fuf/buffer.vim	/^let s:bufTimes = {}$/;"	v
s:bufferCursorPosMap	./vimfiles/autoload/fuf.vim	/^let s:bufferCursorPosMap = {}$/;"	v
s:buffunc	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buffunc(e)$/;"	f	signature:(e)
s:bufnr_width	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:bufnr_width = 3$/;"	v
s:bufnrfilpath	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufnrfilpath(line)$/;"	f	signature:(line)
s:bufparts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufparts(bufnr)$/;"	f	signature:(bufnr)
s:buftab	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buftab(bufnr, md)$/;"	f	signature:(bufnr,md)
s:bufwins	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:bufwins(bufnr)$/;"	f	signature:(bufnr)
s:build	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:build(plugin) abort "{{{$/;"	f	signature:(plugin)
s:build	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:build(plugin) abort "{{{$/;"	f	signature:(plugin)
s:build_dict	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:build_dict(delimiters, ch, regexp, opts)$/;"	f	signature:(delimiters,ch,regexp,opts)
s:build_mode_sequence	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:build_mode_sequence(expr, recur)$/;"	f	signature:(expr,recur)
s:build_path	./vim82/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f	signature:(path)
s:buildpat	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:buildpat(lst)$/;"	f	signature:(lst)
s:builtins	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^let s:builtins = [$/;"	v
s:builtins	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/myutils.vim	/^let s:builtins = [$/;"	v
s:bvars	./vim82/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:byfname	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:byfname()$/;"	f	signature:()
s:byte_pattern	./vim82/syntax/cdrtoc.vim	/^let s:byte_pattern = '\\<\\%([01]\\=\\d\\{1,2}\\|2\\%([0-4]\\d\\|5[0-5]\\)\\)\\>'$/;"	v
s:c	./vim82/syntax/chicken.vim	/^let s:c = globpath(&rtp, 'syntax\/cpp.vim', 0, 1)$/;"	v
s:c_flow_indicator	./vim82/syntax/yaml.vim	/^let s:c_flow_indicator = '[,[\\]{}]'$/;"	v
s:c_indicator	./vim82/syntax/yaml.vim	/^let s:c_indicator      = '[\\-?:,[\\]{}#&*!|>''"%@`]'$/;"	v
s:c_named_tag_handle	./vim82/indent/yaml.vim	/^let s:c_named_tag_handle     = '\\v\\!'.s:ns_word_char.'+\\!'$/;"	v
s:c_named_tag_handle	./vim82/syntax/yaml.vim	/^let s:c_named_tag_handle     = '!'.s:ns_word_char.'\\+!'$/;"	v
s:c_non_specific_tag	./vim82/indent/yaml.vim	/^let s:c_non_specific_tag = '\\v\\!'$/;"	v
s:c_non_specific_tag	./vim82/syntax/yaml.vim	/^let s:c_non_specific_tag = '!'$/;"	v
s:c_ns_alias_node	./vim82/syntax/yaml.vim	/^let s:c_ns_alias_node      = '\\*'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_char	./vim82/indent/yaml.vim	/^let s:c_ns_anchor_char = '\\v%([\\n\\r\\uFEFF \\t,[\\]{}]@!\\p)'$/;"	v
s:c_ns_anchor_char	./vim82/syntax/yaml.vim	/^let s:c_ns_anchor_char = '\\%([\\n\\r\\uFEFF \\t,[\\]{}]\\@!\\p\\)'$/;"	v
s:c_ns_anchor_char	./vim82/syntax/yaml.vim	/^let s:c_ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:c_ns_anchor_char)$/;"	v
s:c_ns_anchor_name	./vim82/indent/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'+'$/;"	v
s:c_ns_anchor_name	./vim82/syntax/yaml.vim	/^let s:c_ns_anchor_name = s:c_ns_anchor_char.'\\+'$/;"	v
s:c_ns_anchor_property	./vim82/indent/yaml.vim	/^let s:c_ns_anchor_property =  '\\v\\&'.s:c_ns_anchor_name$/;"	v
s:c_ns_anchor_property	./vim82/syntax/yaml.vim	/^let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name$/;"	v
s:c_ns_shorthand_tag	./vim82/indent/yaml.vim	/^let s:c_ns_shorthand_tag = '\\v'.s:c_tag_handle . s:ns_tag_char.'+'$/;"	v
s:c_ns_shorthand_tag	./vim82/syntax/yaml.vim	/^let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\\+'$/;"	v
s:c_ns_tag_property	./vim82/indent/yaml.vim	/^let s:c_ns_tag_property = '\\v'.s:c_verbatim_tag.$/;"	v
s:c_ns_tag_property	./vim82/syntax/yaml.vim	/^let s:c_ns_tag_property = s:c_verbatim_tag.$/;"	v
s:c_primary_tag_handle	./vim82/indent/yaml.vim	/^let s:c_primary_tag_handle   = '\\v\\!'$/;"	v
s:c_primary_tag_handle	./vim82/syntax/yaml.vim	/^let s:c_primary_tag_handle   = '!'$/;"	v
s:c_secondary_tag_handle	./vim82/indent/yaml.vim	/^let s:c_secondary_tag_handle = '\\v\\!\\!'$/;"	v
s:c_secondary_tag_handle	./vim82/syntax/yaml.vim	/^let s:c_secondary_tag_handle = '!!'$/;"	v
s:c_tag_handle	./vim82/indent/yaml.vim	/^let s:c_tag_handle = '\\v%('.s:c_named_tag_handle.$/;"	v
s:c_tag_handle	./vim82/syntax/yaml.vim	/^let s:c_tag_handle = '\\%('.s:c_named_tag_handle.$/;"	v
s:c_verbatim_tag	./vim82/indent/yaml.vim	/^let s:c_verbatim_tag = '\\v\\!\\<'.s:ns_uri_char.'+\\>'$/;"	v
s:c_verbatim_tag	./vim82/syntax/yaml.vim	/^let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\\+>'$/;"	v
s:cache_classstructures	./vim82/autoload/phpcomplete.vim	/^	let s:cache_classstructures = {}$/;"	v
s:cache_classstructures	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let s:cache_classstructures = {}$/;"	v
s:cache_list	./vim82/autoload/syntaxcomplete.vim	/^let s:cache_list = []$/;"	v
s:cache_list	./vimfiles/autoload/syntaxcomplete.vim	/^let s:cache_list = []$/;"	v
s:cache_name	./vim82/autoload/syntaxcomplete.vim	/^let s:cache_name = []$/;"	v
s:cache_name	./vimfiles/autoload/syntaxcomplete.vim	/^let s:cache_name = []$/;"	v
s:cache_sid	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:cache_sid = {}$/;"	v
s:cache_tags	./vim82/autoload/phpcomplete.vim	/^	let s:cache_tags = {}$/;"	v
s:cache_tags	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let s:cache_tags = {}$/;"	v
s:cache_tags_checksum	./vim82/autoload/phpcomplete.vim	/^	let s:cache_tags_checksum = ''$/;"	v
s:cache_tags_checksum	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^	let s:cache_tags_checksum = ''$/;"	v
s:cachedir	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! s:cachedir()$/;"	f	signature:()
s:cachefile	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! s:cachefile()$/;"	f	signature:()
s:cachefile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:cachefile()$/;"	f	signature:()
s:callback	./vim82/autoload/context.vim	/^function! s:callback(path, job, status) abort$/;"	f	signature:(path,job,status)
s:canonicalize	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTP.vim	/^function! s:canonicalize(uriobj) abort$/;"	f	signature:(uriobj)
s:canonicalize	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTPS.vim	/^function! s:canonicalize(uriobj) abort$/;"	f	signature:(uriobj)
s:capitalize	./vim82/ftplugin/changelog.vim	/^  function! s:capitalize(word)$/;"	f	signature:(word)
s:capture	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f	signature:(command)
s:ccex	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ccex = s:pref.'clear_cache_on_exit'$/;"	v
s:ceil2	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:ceil2(v)$/;"	f	signature:(v)
s:cfilemap	./vim82/ftplugin/eruby.vim	/^  let s:cfilemap = {}$/;"	v
s:cfilemap	./vim82/ftplugin/eruby.vim	/^  let s:cfilemap.rhs = "substitute(&l:inex =~# '\\\\<v:fname\\\\>' && len(expand('<cfile>')) ? e/;"	v
s:cfilemap	./vim82/ftplugin/eruby.vim	/^let s:cfilemap = v:version >= 704 ? maparg('<Plug><cfile>', 'c', 0, 1) : {}$/;"	v
s:chCwd	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f	signature:(node)
s:chRoot	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f	signature:(node)
s:changeCoverage	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:changeCoverage(name)$/;"	f	signature:(name)
s:changed_wildignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:changed_wildignore = 0$/;"	v
s:changelist	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:changelist(bufnr)$/;"	f	signature:(bufnr)
s:channel2id	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:channel2id(channel) abort "{{{$/;"	f	signature:(channel)
s:channel2id	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:channel2id(channel) abort "{{{$/;"	f	signature:(channel)
s:char_range	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f	signature:(from,to)
s:check	./vim82/autoload/gzip.vim	/^fun s:check(cmd)$/;"	f	signature:(cmd)
s:checkDataFileCompatibility	./vimfiles/autoload/fuf.vim	/^function s:checkDataFileCompatibility()$/;"	f	signature:()
s:checkKey	./vimfiles/autoload/l9/async.vim	/^function s:checkKey(key)$/;"	f	signature:(key)
s:check_for_string	./vim82/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f	signature:()
s:check_loop	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:check_loop(context) abort "{{{$/;"	f	signature:(context)
s:check_loop	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:check_loop(context) abort$/;"	f	signature:(context)
s:check_loop	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:check_loop(context) abort "{{{$/;"	f	signature:(context)
s:check_output	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:check_output(context, process) abort "{{{$/;"	f	signature:(context,process)
s:check_output	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:check_output(context, process) abort$/;"	f	signature:(context,process)
s:check_output	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:check_output(context, process) abort "{{{$/;"	f	signature:(context,process)
s:check_rollback	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:check_rollback(plugin) abort "{{{$/;"	f	signature:(plugin)
s:check_rollback	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:check_rollback(plugin) abort$/;"	f	signature:(plugin)
s:check_rollback	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:check_rollback(plugin) abort "{{{$/;"	f	signature:(plugin)
s:check_type	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! s:check_type(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:check_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! s:check_type(repo, options) abort$/;"	f	signature:(repo,options)
s:check_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! s:check_type(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:checkbuf	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:checkbuf()$/;"	f	signature:()
s:chknearby	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:chknearby(pat)$/;"	f	signature:(pat)
s:choices	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:choices(str, choices, func, args)$/;"	f	signature:(str,choices,func,args)
s:chomp	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f	signature:(str)
s:choose	./vim82/ftplugin/gitrebase.vim	/^function! s:choose(word) abort$/;"	f	signature:(word)
s:chop	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:chop(mrufs)$/;"	f	signature:(mrufs)
s:chop	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f	signature:(str)
s:class	./vim82/ftplugin/php.vim	/^let s:class = '\\(abstract\\s\\+\\|final\\s\\+\\)*class'$/;"	v
s:clear	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f	signature:(dict)
s:clear	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:clear(list) abort$/;"	f	signature:(list)
s:clear_runtimepath	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:clear_runtimepath() abort "{{{$/;"	f	signature:()
s:clear_runtimepath	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:clear_runtimepath() abort$/;"	f	signature:()
s:clear_runtimepath	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:clear_runtimepath() abort "{{{$/;"	f	signature:()
s:clearmatches	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring/hook.vim	/^function! s:clearmatches()$/;"	f	signature:()
s:clients	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^let s:clients = {}$/;"	v
s:clients	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^let s:clients.python = {}$/;"	v
s:clients.curl._command	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.curl._command(settings) abort$/;"	f	signature:(settings)
s:clients.curl.available	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.curl.available(settings) abort$/;"	f	signature:(settings)
s:clients.curl.request	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.curl.request(settings) abort$/;"	f	signature:(settings)
s:clients.python.available	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.python.available(settings) abort$/;"	f	signature:(settings)
s:clients.python.request	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.python.request(settings) abort$/;"	f	signature:(settings)
s:clients.wget._command	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.wget._command(settings) abort$/;"	f	signature:(settings)
s:clients.wget.available	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.wget.available(settings) abort$/;"	f	signature:(settings)
s:clients.wget.request	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:clients.wget.request(settings) abort$/;"	f	signature:(settings)
s:clojure_check_for_string_worker	./vim82/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f	signature:()
s:clojure_indent_pos	./vim82/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f	signature:()
s:clojure_is_method_special_case_worker	./vim82/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f	signature:(position)
s:clojure_syntax_keywords	./vim82/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
s:clone_pattern_set	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:clone_pattern_set(pattern_set) abort$/;"	f	signature:(pattern_set)
s:closeChildren	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f	signature:(node)
s:closeCurrentDir	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f	signature:(node)
s:closeTreeWindow	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f	signature:()
s:cmdline_var	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^let s:cmdline_var = {$/;"	v
s:col	./vim82/syntax/2html.vim	/^	let s:col = s:col + 1$/;"	v
s:col	./vim82/syntax/2html.vim	/^    let s:col = 1$/;"	v
s:col	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:col = s:col + 1$/;"	v
s:col	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:col = 1$/;"	v
s:col	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:col = stridx(s:idlist, ",")$/;"	v
s:colors	./vimfiles/after/ftplugin/dot.vim	/^let s:colors =  [$/;"	v
s:colors	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:colors =  [$/;"	v
s:combinations	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f	signature:(list,r)
s:comma_first	./vim82/indent/typescript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	./vim82/indent/typescript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	./vim82/syntax/wget.vim	/^let s:commands = map([$/;"	v
s:comment	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:comment = ' *\\*\/ *'$/;"	v
s:comment_rx	./vim82/indent/make.vim	/^let s:comment_rx = '^\\s*#'$/;"	v
s:commonModules	./vim82/autoload/haskellcomplete.vim	/^let s:commonModules =$/;"	v
s:common_head	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f	signature:(strs)
s:compact_options	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:compact_options(opts)$/;"	f	signature:(opts)
s:compareTimeDescending	./vimfiles/autoload/fuf/buffer.vim	/^function s:compareTimeDescending(i1, i2)$/;"	f	signature:(i1,i2)
s:comparent	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comparent(...)$/;"	f	signature:(...)
s:compensate_for_pum	./vimfiles/bundle/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum()$/;"	f	signature:()
s:compfnlen	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compfnlen(...)$/;"	f	signature:(...)
s:completion	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:completion = {}$/;"	v
s:completion_stopped	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:completion_stopped = 0$/;"	v
s:completion_type	./vimfiles/after/ftplugin/dot.vim	/^let s:completion_type = ''$/;"	v
s:completion_type	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:completion_type = ''$/;"	v
s:compmatlen	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmatlen(...)$/;"	f	signature:(...)
s:compmreb	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmreb(...)$/;"	f	signature:(...)
s:compmref	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compmref(...)$/;"	f	signature:(...)
s:comptime	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:comptime(...)$/;"	f	signature:(...)
s:compval	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:compval(...)$/;"	f	signature:(...)
s:compval	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:compval(...)$/;"	f	signature:(...)
s:concat	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:concat(list) abort$/;"	f	signature:(list)
s:concealends	./vim82/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	./vim82/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:concealinfo	./vim82/syntax/2html.vim	/^	let s:concealinfo = synconcealed(s:lnum, s:col)$/;"	v
s:concealinfo	./vim82/syntax/2html.vim	/^    let s:concealinfo = [0, '']$/;"	v
s:conditionalEnd	./vim82/ftplugin/matlab.vim	/^ let s:conditionalEnd = '\\%(([^()]*\\)\\@!\\<end\\>\\%([^()]*)\\)\\@!'$/;"	v
s:conditional_directive_rx	./vim82/indent/make.vim	/^let s:conditional_directive_rx = '^ *\\%(ifn\\=\\%(eq\\|def\\)\\|else\\)\\>'$/;"	v
s:conj	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f	signature:(xs,x)
s:cons	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f	signature:(x,xs)
s:contained	./vim82/syntax/zsh.vim	/^let s:contained=s:ContainedGroup()$/;"	v
s:contains	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:contains(path, base) abort$/;"	f	signature:(path,base)
s:contains_multibyte	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f	signature:(str)
s:context_echo	./vim82/autoload/context.vim	/^function! s:context_echo(message, mode)$/;"	f	signature:(message,mode)
s:context_include	./vim82/syntax/context.vim	/^  let s:context_include = filter($/;"	v
s:context_include	./vim82/syntax/context.vim	/^let s:context_include = get(b:, 'context_include', get(g:, 'context_include', {'xml': 'XML'}))$/;"	v
s:context_regex	./vim82/ftplugin/context.vim	/^let s:context_regex = {$/;"	v
s:continuable_regex	./vim82/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	./vim82/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation_regex	./vim82/indent/falcon.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	./vim82/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	./vim82/indent/typescript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^/;"	v
s:continuation_rx	./vim82/indent/make.vim	/^let s:continuation_rx = '\\\\$'$/;"	v
s:continued_rule_rx	./vim82/indent/make.vim	/^let s:continued_rule_rx = '^[^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:convert_args	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:convert_args(args) abort$/;"	f	signature:(args)
s:copy	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:copy(src, dest) abort$/;"	f	signature:(src,dest)
s:copy_dir	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:copy_dir(src, dest) abort$/;"	f	signature:(src,dest)
s:copy_dir_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:copy_dir_exe() abort$/;"	f	signature:()
s:copy_dir_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:copy_dir_exe(src, dest) abort$/;"	f	signature:(src,dest)
s:copy_dir_vim	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:copy_dir_vim(src, dest) abort$/;"	f	signature:(src,dest)
s:copy_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:copy_exe() abort$/;"	f	signature:()
s:copy_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:copy_exe(src, dest) abort$/;"	f	signature:(src,dest)
s:copy_files	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:copy_files(plugins, directory) abort "{{{$/;"	f	signature:(plugins,directory)
s:copy_files	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:copy_files(plugins, directory) abort$/;"	f	signature:(plugins,directory)
s:copy_files	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:copy_files(plugins, directory) abort "{{{$/;"	f	signature:(plugins,directory)
s:copy_vim	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:copy_vim(src, dest) abort$/;"	f	signature:(src,dest)
s:coretype_names	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretype_names = {$/;"	v
s:coretypes	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:coretypes = map(copy(g:ctrlp_types), '[s:coretype_names[v:val], v:val]')$/;"	v
s:count	./vim82/indent/bst.vim	/^function! s:count(string,char)$/;"	f	signature:(string,char)
s:count	./vim82/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f	signature:(string,pattern)
s:count_braces	./vim82/indent/css.vim	/^function s:count_braces(lnum, count_open)$/;"	f	signature:(lnum,count_open)
s:count_braces	./vim82/indent/ld.vim	/^function s:count_braces(lnum, count_open)$/;"	f	signature:(lnum,count_open)
s:count_braces	./vim82/indent/tcl.vim	/^function s:count_braces(lnum, count_open)$/;"	f	signature:(lnum,count_open)
s:count_braces	./vim82/indent/xinetd.vim	/^function s:count_braces(lnum, count_open)$/;"	f	signature:(lnum,count_open)
s:countonly	./vim82/indent/html.vim	/^let s:countonly = 0$/;"	v
s:countonly	./vimfiles/bundle/html5.vim/indent/html.vim	/^let s:countonly = 0$/;"	v
s:cpo	./vim82/ftplugin/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	./vim82/syntax/debchangelog.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	./vim82/syntax/debsources.vim	/^let s:cpo = &cpo$/;"	v
s:cpo	./vim82/syntax/scheme.vim	/^let s:cpo = &cpo$/;"	v
s:cpo_sav	./vim82/autoload/tohtml.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	./vim82/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	./vim82/syntax/2html.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	./vim82/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	./vim82/syntax/mp.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	./vim82/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	./vim82/autoload/ccomplete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/autoload/dist/ft.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/autoload/syntaxcomplete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/ant.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/fortran_g77.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/gcc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/ghc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/mcs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/ocaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/onsgmls.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/rustc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/se.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/splint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/stack.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/xmllint.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/compiler/xmlwf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/filetype.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/abap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/abaqus.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	./vim82/ftplugin/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/automake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/cfg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/changelog.vim	/^  let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/cmake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/cobol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/dosini.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/dtrace.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/eiffel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/hamster.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/haskell.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/hostsaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/ishd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/kwt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/lua.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/m4.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/mailcap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/man.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/masm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/mf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/mp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/msmessages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/postscr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/procmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/prolog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/r.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/registry.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/rhelp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/rnoweb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/rrst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/spec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/sshconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/tcl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/vb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/xdefaults.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/xf86conf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/ftplugin/zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/dosbatch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/dtd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/falcon.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/hog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/perl6.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/r.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/sdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/sh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/systemverilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/verilog.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/indent/zimbu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/menu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/optwin.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/plugin/matchparen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/scripts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/synmenu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/8th.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/a2ps.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/aap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/abel.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/alsaconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/aptconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/arch.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/art.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/asm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/asn.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/autodoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/autohotkey.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/avra.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/awk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/ayacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/basic.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/bdf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/bib.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/blank.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cabal.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/calendar.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cdrdaoconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cdrtoc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cf.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	./vim82/syntax/chordpro.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/clean.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/clipper.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cmod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cmusrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/context.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/crm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/csc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/css.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cupl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cvsrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/cweb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/d.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/dart.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/debcontrol.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/debcopyright.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/denyhosts.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/dictconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/dictdconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/dircolors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/dnsmasq.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/doxygen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/elinks.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/eterm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/fasm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/fetchmail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/forth.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/fortran.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/framescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/fstab.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/gdb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/gitolite.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/gp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/gpg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/groovy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/group.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/grub.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/gsp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/hb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/help.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/hollywood.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/hostconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/idl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/indent.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/initex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/ist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/jam.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/java.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/javacc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/kconfig.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/ld.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/ldapconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/lftp.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/libao.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/limits.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/litestep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/loginaccess.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/logindefs.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/logtalk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/lout.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	./vim82/syntax/lpc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/lua.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/lynx.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/mail.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/mailaliases.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/make.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/manconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/masm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/meson.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/messages.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/mix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/modconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/monk.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/mplayerconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/mrxvtrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/msidl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/muttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/nanorc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/natural.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/neomuttrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/netrc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/ninja.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/nroff.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/nsis.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/objc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/opl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/pamconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/passwd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/php.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/pike.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/pinfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/plaintex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/privoxy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/progress.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/protocols.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/python.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/quake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/racc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/readline.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/reva.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/rmd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/rnc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/rpl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/rst.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sas.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/screen.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sendpr.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sensors.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/services.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/setserial.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sieve.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sisu.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/slpconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/slpreg.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/slpspi.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/smil.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/snnspat.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/spup.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/st.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sudoers.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/synload.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/sysctl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/tasm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/terminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/tidy.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/treetop.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/tsalt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/typescriptcommon.vim	/^  let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/typescriptreact.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/udevconf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/udevperm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/udevrules.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/updatedb.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/vhdl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/viminfo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/vroom.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/wast.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/wget.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/xbl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/xinetd.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/xmodmap.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/xpm2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/yaml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vim82/syntax/zsh.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vimfiles/autoload/syntaxcomplete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vimfiles/bundle/html5.vim/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	./vimfiles/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions	./vim82/ftplugin/ada.vim	/^let s:cpoptions = &cpoptions$/;"	v
s:cposet	./vim82/compiler/fortran_F.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	./vim82/compiler/fortran_cv.vim	/^let s:cposet = &cpoptions$/;"	v
s:cposet	./vim82/compiler/fortran_elf90.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	./vim82/compiler/fortran_lf95.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	./vim82/ftplugin/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	./vim82/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:cposet	./vim82/indent/fortran.vim	/^let s:cposet=&cpoptions$/;"	v
s:cppKeyword	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^let s:cppKeyword = ['asm', 'auto', 'bool', 'break', 'case', 'catch', 'char', 'class', 'const', '/;"	v
s:cppOperatorPunctuator	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^let s:cppOperatorPunctuator = ['->*', '->', '--', '-=', '-', '!=', '!', '##', '#', '%:%:', '%=',/;"	v
s:createChangeCoverageListener	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:createChangeCoverageListener()$/;"	f	signature:()
s:createDataBufferListener	./vimfiles/autoload/fuf.vim	/^function s:createDataBufferListener(dataFile)$/;"	f	signature:(dataFile)
s:createEditDataListener	./vimfiles/autoload/fuf.vim	/^function s:createEditDataListener()$/;"	f	signature:()
s:ctagmap	./vim82/ftplugin/eruby.vim	/^  let s:ctagmap = {}$/;"	v
s:ctagmap	./vim82/ftplugin/eruby.vim	/^let s:ctagmap = v:version >= 704 ? maparg('<Plug><ctag>', 'c', 0, 1) : {}$/;"	v
s:cterm_color	./vim82/syntax/2html.vim	/^    let s:cterm_color = {$/;"	v
s:cterm_color0	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color0  = "#000000"$/;"	v
s:cterm_color0	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color0  = "#808080"$/;"	v
s:cterm_color1	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color1  = "#c00000"$/;"	v
s:cterm_color1	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color1  = "#ff6060"$/;"	v
s:cterm_color10	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color10 = "#00ff00"$/;"	v
s:cterm_color11	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color11 = "#ffff00"$/;"	v
s:cterm_color12	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color12 = "#8080ff"$/;"	v
s:cterm_color13	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color13 = "#ff40ff"$/;"	v
s:cterm_color14	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color14 = "#00ffff"$/;"	v
s:cterm_color15	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color15 = "#ffffff"$/;"	v
s:cterm_color2	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color2  = "#008000"$/;"	v
s:cterm_color2	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color2  = "#00ff00"$/;"	v
s:cterm_color3	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color3  = "#804000"$/;"	v
s:cterm_color3	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color3  = "#ffff00"$/;"	v
s:cterm_color4	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color4  = "#0000c0"$/;"	v
s:cterm_color4	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color4  = "#8080ff"$/;"	v
s:cterm_color5	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color5  = "#c000c0"$/;"	v
s:cterm_color5	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color5  = "#ff40ff"$/;"	v
s:cterm_color6	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color6  = "#008080"$/;"	v
s:cterm_color6	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color6  = "#00ffff"$/;"	v
s:cterm_color7	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color7  = "#c0c0c0"$/;"	v
s:cterm_color7	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color7  = "#ffffff"$/;"	v
s:cterm_color8	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color8  = "#808080"$/;"	v
s:cterm_color9	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:cterm_color9  = "#ff6060"$/;"	v
s:ctrlp_var	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^let s:ctrlp_var = {$/;"	v
s:ctrlp_var	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^let s:ctrlp_var = {$/;"	v
s:ctrlp_var	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^let s:ctrlp_var = {$/;"	v
s:cur_menu_char	./vim82/makemenu.vim	/^let s:cur_menu_char = ""$/;"	v
s:cur_menu_item	./vim82/makemenu.vim	/^let s:cur_menu_item = 0$/;"	v
s:cur_menu_name	./vim82/makemenu.vim	/^let s:cur_menu_name = ""$/;"	v
s:cur_menu_nr	./vim82/makemenu.vim	/^let s:cur_menu_nr = 0$/;"	v
s:current_char	./vim82/indent/clojure.vim	/^	function! s:current_char()$/;"	f	signature:()
s:current_syntax	./vim82/syntax/2html.vim	/^  let s:current_syntax = 'none'$/;"	v
s:current_syntax	./vim82/syntax/2html.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	./vim82/syntax/2html.vim	/^  let s:current_syntax = w:current_syntax$/;"	v
s:current_word	./vim82/indent/clojure.vim	/^	function! s:current_word()$/;"	f	signature:()
s:curtype	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:curtype()$/;"	f	signature:()
s:cut_off	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! s:cut_off(list, limit)$/;"	f	signature:(list,limit)
s:cycle	./vim82/ftplugin/gitrebase.vim	/^function! s:cycle(count) abort$/;"	f	signature:(count)
s:d2r	./vimfiles/autoload/visincr.vim	/^let s:d2r= [ [ 1000000 , 'M)'   ],[900000 , 'CM)' ], [500000 , 'D)'  ], [400000 , 'CD)' ], [1000/;"	v
s:dataMap	./vimfiles/autoload/l9/tempbuffer.vim	/^let s:dataMap = {}$/;"	v
s:datapath	./VIMPROJ/vimrc/option.vim	/^let s:datapath='C:\/Vim\/VIMPROJ\/Tool\/data\/'$/;"	v
s:deactivateFufBuffer	./vimfiles/autoload/fuf.vim	/^function s:deactivateFufBuffer()$/;"	f	signature:()
s:decode	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:decode(str, ...) abort$/;"	f	signature:(str,...)
s:decodeURI	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:decodeURI(str) abort$/;"	f	signature:(str)
s:decorator_regex	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:decorator_regex = '^\\s*@\\(author:\\)\\@!' $/;"	v
s:decrease	./vim82/ftplugin/cobol.vim	/^function! s:decrease(...)$/;"	f	signature:(...)
s:dedent_pat	./vim82/indent/matlab.vim	/^let s:dedent_pat = '\\C^\\s*\\zs\\<\\%(end\\|else\\|elseif\\|catch\\|\\(case\\|otherwise\\|funct/;"	v
s:defArgMatcher	./vim82/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defFCShellInstalled	./vimfiles/autoload/genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:defMatcher	./vim82/indent/scala.vim	/^let s:defMatcher = '\\%(\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)\\?\\s\\+\\|abstract\\s\\+/;"	v
s:def_comment	./vim82/syntax/cdrtoc.vim	/^function s:def_comment(name, nextgroup)$/;"	f	signature:(name,nextgroup)
s:def_keyword	./vim82/syntax/cdrtoc.vim	/^function s:def_keyword(name, nextgroup, keyword)$/;"	f	signature:(name,nextgroup,keyword)
s:def_keywords	./vim82/syntax/cdrtoc.vim	/^function s:def_keywords(name, nextgroup, keywords)$/;"	f	signature:(name,nextgroup,keywords)
s:def_match	./vim82/syntax/cdrtoc.vim	/^function s:def_match(name, nextgroup, pattern)$/;"	f	signature:(name,nextgroup,pattern)
s:def_regex	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:def_regex = g:pymode_folding_regex$/;"	v
s:def_region	./vim82/syntax/cdrtoc.vim	/^function s:def_region(name, nextgroup, start, skip, end, matchgroup, contains)$/;"	f	signature:(name,nextgroup,start,skip,end,matchgroup,contains)
s:defaultORcase	./vim82/indent/php.vim	/^let s:defaultORcase = '^\\s*\\%(default\\|case\\).*:'$/;"	v
s:default_completion	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:default_completion = {}$/;"	v
s:default_github_css_path	./vimfiles/bundle/previm/autoload/previm.vim	/^let s:default_github_css_path = "@import url('..\/..\/_\/css\/lib\/github.css');"$/;"	v
s:default_github_css_path	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:default_github_css_path = "@import url('..\/..\/_\/css\/lib\/github.css');"$/;"	v
s:default_libs	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:default_libs = [$/;"	v
s:default_origin_css_path	./vimfiles/bundle/previm/autoload/previm.vim	/^let s:default_origin_css_path = "@import url('..\/..\/_\/css\/origin.css');"$/;"	v
s:default_origin_css_path	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:default_origin_css_path = "@import url('..\/..\/_\/css\/origin.css');"$/;"	v
s:default_port	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTP.vim	/^function! s:default_port(uriobj) abort$/;"	f	signature:(uriobj)
s:default_port	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTPS.vim	/^function! s:default_port(uriobj) abort$/;"	f	signature:(uriobj)
s:default_settings	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^let s:default_settings = {$/;"	v
s:default_values	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^function! s:default_values() abort$/;"	f	signature:()
s:dein_check_update	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:dein_check_update() abort$/;"	f	signature:()
s:dein_check_update	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:dein_check_update() abort$/;"	f	signature:()
s:dein_check_update	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:dein_check_update() abort$/;"	f	signature:()
s:dein_install	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:dein_install() abort$/;"	f	signature:()
s:dein_install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:dein_install() abort$/;"	f	signature:()
s:dein_install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:dein_install() abort$/;"	f	signature:()
s:dein_update	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:dein_update() abort$/;"	f	signature:()
s:dein_update	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:dein_update() abort$/;"	f	signature:()
s:dein_update	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:dein_update() abort$/;"	f	signature:()
s:delbuf	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbuf()$/;"	f	signature:()
s:delbufcond	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delbufcond(bufnr)$/;"	f	signature:(bufnr)
s:delent	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:delent(rfunc)$/;"	f	signature:(rfunc)
s:deleteBookmark	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f	signature:(bm)
s:delimitMate_extra_excluded_regions	./vim82/ftplugin/rust.vim	/^	let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate/;"	v
s:delimiter	./vim82/syntax/ruby.vim	/^    let s:delimiter = '\\' . s:delimiter$/;"	v
s:delims	./vim82/syntax/perl6.vim	/^let s:delims = [$/;"	v
s:deprecations	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^let s:deprecations = {$/;"	v
s:dict2list	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:dict2list(dict)$/;"	f	signature:(dict)
s:dictindex	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dictindex(dict, expr)$/;"	f	signature:(dict,expr)
s:did_ft	./vim82/syntax/syntax.vim	/^  let s:did_ft = 0$/;"	v
s:did_ft	./vim82/syntax/syntax.vim	/^  let s:did_ft = 1$/;"	v
s:did_function_definitions	./vim82/ftplugin/erlang.vim	/^	let s:did_function_definitions = 1$/;"	v
s:did_retab	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:did_retab = 0$/;"	v
s:did_retab	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:did_retab = 1$/;"	v
s:did_setup_color_schemes	./vim82/menu.vim	/^let s:did_setup_color_schemes = 0$/;"	v
s:did_setup_compilers	./vim82/menu.vim	/^let s:did_setup_compilers = 0$/;"	v
s:did_setup_keymaps	./vim82/menu.vim	/^  let s:did_setup_keymaps = 0$/;"	v
s:did_snip_helper	./vimfiles/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	./vimfiles/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:diff_id	./vim82/syntax/2html.vim	/^	let s:diff_id = diff_hlID(s:lnum, s:col)$/;"	v
s:diff_id	./vim82/syntax/2html.vim	/^    let s:diff_id = 0$/;"	v
s:diff_mode	./vim82/syntax/2html.vim	/^let s:diff_mode = &diff$/;"	v
s:diffattr	./vim82/syntax/2html.vim	/^    let s:diffattr = diff_hlID(s:lnum, 1)$/;"	v
s:diffcomplete	./vim82/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f	signature:(A,L,P)
s:difffillchar	./vim82/syntax/2html.vim	/^  let s:difffillchar = '-'$/;"	v
s:difffillchar	./vim82/syntax/2html.vim	/^let s:difffillchar = &fillchars[matchend(&fillchars, 'diff:')]$/;"	v
s:diffidx	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f	signature:(a,b)
s:diffstylelist	./vim82/syntax/2html.vim	/^let s:diffstylelist = {$/;"	v
s:dir	./vim82/ftplugin/clojure.vim	/^		let s:dir = fnameescape(s:dir)$/;"	v
s:dir	./vim82/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\ ', '\\\\ ', 'g')$/;"	v
s:dir	./vim82/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\', '\\\\\\\\', 'g')$/;"	v
s:dir	./vimfiles/after/ftplugin/dot.vim	/^let s:dir =  [$/;"	v
s:dir	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:dir =  [$/;"	v
s:dirArrows	./vimfiles/bundle/nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpand/;"	v
s:dircompl	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dircompl(be, sd)$/;"	f	signature:(be,sd)
s:dircounts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:dircounts = {}$/;"	v
s:dirname	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:dirname(path) abort$/;"	f	signature:(path)
s:dismrk	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dismrk()$/;"	f	signature:()
s:displayHelp	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f	signature:()
s:display_exception	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! s:display_exception() abort$/;"	f	signature:()
s:do_align	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:do_align(todo, modes, all_tokens, all_delims, fl, ll, fc, lc, nth, recur, dict)$/;"	f	signature:(todo,modes,all_tokens,all_delims,fl,ll,fc,lc,nth,recur,dict)
s:do_external_parse	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:do_external_parse(lines) abort$/;"	f	signature:(lines)
s:doc_begin_regex	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:doc_begin_regex = '^\\s*[uUrR]\\=\\%("""\\|''''''\\)'$/;"	v
s:doc_end_regex	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:doc_end_regex = '\\%("""\\|''''''\\)\\s*$'$/;"	v
s:doc_general_regex	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:doc_general_regex = '\\%("""\\|''''''\\)'$/;"	v
s:doc_line_regex	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:doc_line_regex = '^\\s*[uUrR]\\=\\("""\\|''''''\\).\\+\\1\\s*$'$/;"	v
s:dodigits	./vim82/ftplugin/pdf.vim	/^function! s:dodigits(digits)$/;"	f	signature:(digits)
s:dohighlight	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dohighlight()$/;"	f	signature:()
s:done	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:done(context) abort "{{{$/;"	f	signature:(context)
s:done	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:done(context) abort$/;"	f	signature:(context)
s:done	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:done(context) abort "{{{$/;"	f	signature:(context)
s:done_bundles	./vimfiles/autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:done_include	./vim82/syntax/markdown.vim	/^    let s:done_include[matchstr(s:type,'[^.]*')] = 1$/;"	v
s:done_include	./vim82/syntax/markdown.vim	/^  let s:done_include = {}$/;"	v
s:done_include	./vim82/syntax/markdown.vim	/^  let s:done_include[matchstr(s:type,'[^.]*')] = 1$/;"	v
s:done_include	./vim82/syntax/markdown.vim	/^let s:done_include = {}$/;"	v
s:doobject	./vim82/ftplugin/pdf.vim	/^function! s:doobject(string)$/;"	f	signature:(string)
s:dosigns	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:dosigns()$/;"	f	signature:()
s:dot_continuation_regex	./vim82/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:dotvim	./vim82/autoload/getscript.vim	/^  let s:dotvim= ".vim"$/;"	v
s:dotvim	./vim82/autoload/getscript.vim	/^  let s:dotvim= "vimfiles"$/;"	v
s:doubletable	./vim82/tools/unicode.vim	/^let s:doubletable = []$/;"	v
s:dprint	./vim82/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f	signature:(msg)
s:drop_while	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f	signature:(f,xs)
s:dstring	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f	signature:(expr)
s:dtd_cpo_save	./vim82/syntax/dtd.vim	/^let s:dtd_cpo_save = &cpo$/;"	v
s:e	./vimfiles/bundle/jedi-vim/after/syntax/python.vim	/^    let s:e = g:jedi#call_signature_escape$/;"	v
s:easy_align_delimiters_default	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let s:easy_align_delimiters_default = {$/;"	v
s:easy_align_op	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:easy_align_op(type, ...)$/;"	f	signature:(type,...)
s:easy_align_repeat	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:easy_align_repeat()$/;"	f	signature:()
s:echo	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:echo(expr, mode) abort "{{{$/;"	f	signature:(expr,mode)
s:echo	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:echo(expr, mode) abort$/;"	f	signature:(expr,mode)
s:echo	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:echo(expr, mode) abort "{{{$/;"	f	signature:(expr,mode)
s:echo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:echo(o, ...) abort$/;"	f	signature:(o,...)
s:echo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f	signature:(hl,msg)
s:echo_err	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:echo_err(msg) abort$/;"	f	signature:(msg)
s:echo_mode	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:echo_mode(m, mode) abort "{{{$/;"	f	signature:(m,mode)
s:echo_mode	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:echo_mode(m, mode) abort$/;"	f	signature:(m,mode)
s:echo_mode	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:echo_mode(m, mode) abort "{{{$/;"	f	signature:(m,mode)
s:echomsg	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f	signature:(hl,msg)
s:echon	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:echon(l, n, r, d, o, warn)$/;"	f	signature:(l,n,r,d,o,warn)
s:echon_	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:echon_(tokens)$/;"	f	signature:(tokens)
s:ed	./vim82/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:edit_content	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f	signature:(content,...)
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm  = '%+GTraceback%.%#,'$/;"	v
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm .= '%+C    %.%#,'$/;"	v
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm .= '%+C  %.%#,'$/;"	v
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm .= '%-G%.%#'$/;"	v
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm .= '%C%p^,'$/;"	v
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm .= '%E  File "%f"\\, line %l%\\C,'$/;"	v
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm .= '%E  File "%f"\\, line %l\\,%m%\\C,'$/;"	v
s:efm	./vimfiles/bundle/python-mode/autoload/pymode/run.vim	/^let s:efm .= '%Z%\\S%\\&%m,'$/;"	v
s:ei_sav	./vim82/syntax/2html.vim	/^let s:ei_sav = &eventignore$/;"	v
s:elapsed	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:elapsed(nr)$/;"	f	signature:(nr)
s:empty	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:empty(o) abort$/;"	f	signature:(o)
s:empty_img_elements	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:empty_img_elements()$/;"	f	signature:()
s:encode	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:encode(str, ...) abort$/;"	f	signature:(str,...)
s:encodeURI	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:encodeURI(items) abort$/;"	f	signature:(items)
s:encodeURIComponent	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:encodeURIComponent(items) abort$/;"	f	signature:(items)
s:encoding	./vim82/keymap/croatian.vim	/^	let s:encoding = 'cp1250'$/;"	v
s:encoding	./vim82/keymap/croatian.vim	/^	let s:encoding = 'iso-8859-2'$/;"	v
s:encoding	./vim82/keymap/croatian.vim	/^let s:encoding = &enc$/;"	v
s:end	./vim82/indent/matlab.vim	/^let s:end = '\\<end\\>\\%([^({]*[)}]\\)\\@!' " Array indexing heuristic$/;"	v
s:end	./vim82/syntax/2html.vim	/^    let s:end = line("$")$/;"	v
s:end	./vim82/syntax/2html.vim	/^  let s:end = html_end_line$/;"	v
s:end	./vim82/syntax/2html.vim	/^  let s:end = line("$")$/;"	v
s:end	./vim82/syntax/2html.vim	/^  let s:end = line('$')$/;"	v
s:end	./vim82/syntax/2html.vim	/^let s:end=line('$')$/;"	v
s:end	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:end = line("$")$/;"	v
s:end_block	./vim82/indent/sh.vim	/^function! s:end_block(line)$/;"	f	signature:(line)
s:end_conditional_directive_rx	./vim82/indent/make.vim	/^let s:end_conditional_directive_rx = '^\\s*\\%(else\\|endif\\)\\>'$/;"	v
s:end_end_regex	./vim82/autoload/rubycomplete.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_end_regex	./vim82/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	./vim82/autoload/rubycomplete.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_middle_regex	./vim82/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\/;"	v
s:end_skip_expr	./vim82/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	./vim82/autoload/rubycomplete.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	./vim82/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:endline	./vim82/indent/php.vim	/^let s:endline = '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:ends_with	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f	signature:(str,suffix)
s:ends_with_backslash	./vim82/indent/tcl.vim	/^function s:ends_with_backslash(lnum)$/;"	f	signature:(lnum)
s:endtags	./vim82/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:endtags	./vimfiles/bundle/html5.vim/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:enumHelpTags	./vimfiles/autoload/fuf/help.vim	/^function s:enumHelpTags(tagFiles)$/;"	f	signature:(tagFiles)
s:enumItems	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:enumItems(dir)$/;"	f	signature:(dir)
s:enumItems	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:enumItems()$/;"	f	signature:()
s:enumItems	./vimfiles/autoload/fuf/dir.vim	/^function s:enumItems(dir)$/;"	f	signature:(dir)
s:enumItems	./vimfiles/autoload/fuf/file.vim	/^function s:enumItems(dir)$/;"	f	signature:(dir)
s:enumNonCurrentItems	./vimfiles/autoload/fuf/file.vim	/^function s:enumNonCurrentItems(dir, bufNrPrev, cache)$/;"	f	signature:(dir,bufNrPrev,cache)
s:enumTaggedFiles	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:enumTaggedFiles(tagFiles)$/;"	f	signature:(tagFiles)
s:enumTags	./vimfiles/autoload/fuf/tag.vim	/^function s:enumTags(tagFiles)$/;"	f	signature:(tagFiles)
s:enumeration_pattern	./vim82/indent/rst.vim	/^let s:enumeration_pattern = '^\\s*\\%(\\d\\+\\|#\\)\\.\\s\\+'$/;"	v
s:environment	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:environment.restore	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f	signature:()
s:eol	./vim82/indent/mp.vim	/^let s:eol = '\\s*\\%($\\|%\\)'$/;"	v
s:erlang_fun_begin	./vim82/ftplugin/erlang.vim	/^let s:erlang_fun_begin = '^\\a\\w*(.*$'$/;"	v
s:erlang_fun_end	./vim82/ftplugin/erlang.vim	/^let s:erlang_fun_end   = '^[^%]*\\.\\s*\\(%.*\\)\\?$'$/;"	v
s:err	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^    let s:err = 'Cannot debug, +channel feature is not supported'$/;"	v
s:err	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^    let s:err = 'Cannot debug, missing prompt buffer support'$/;"	v
s:error	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:error(msg) abort "{{{$/;"	f	signature:(msg)
s:error	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:error(msg) abort$/;"	f	signature:(msg)
s:error	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:error(msg) abort "{{{$/;"	f	signature:(msg)
s:error	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f	signature:(msg)
s:escape	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! s:escape(path) abort "{{{$/;"	f	signature:(path)
s:escape	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:escape(path) abort$/;"	f	signature:(path)
s:escape	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! s:escape(path) abort "{{{$/;"	f	signature:(path)
s:escape	./vim82/autoload/gzip.vim	/^fun s:escape(name)$/;"	f	signature:(name)
s:escape	./vim82/indent/sh.vim	/^function! s:escape(pattern)$/;"	f	signature:(pattern)
s:escape	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:escape(str) abort$/;"	f	signature:(str)
s:escapeDebugStops	./vim82/indent/php.vim	/^let s:escapeDebugStops = 0$/;"	v
s:escape_backslash	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:escape_backslash(text) abort$/;"	f	signature:(text)
s:escape_file_searching	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f	signature:(buffer_name)
s:escape_file_searching	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f	signature:(buffer_name)
s:escape_pattern	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f	signature:(str)
s:escape_pattern	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f	signature:(str)
s:escape_pattern	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f	signature:(str)
s:escapesConditionals	./vim82/syntax/neomuttrc.vim	/^function! s:escapesConditionals(baseName, sequence, alignment, secondary)$/;"	f	signature:(baseName,sequence,alignment,secondary)
s:esctagscmd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:esctagscmd(bin, args, ...)$/;"	f	signature:(bin,args,...)
s:evalFromBalloonExpr	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:evalFromBalloonExpr = 0$/;"	v
s:evaluateLearningRank	./vimfiles/autoload/fuf.vim	/^function s:evaluateLearningRank(word, stats)$/;"	f	signature:(word,stats)
s:excl	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:excl(fn)$/;"	f	signature:(fn)
s:execextvar	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:execextvar(key)$/;"	f	signature:(key)
s:exectags	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectags(cmd)$/;"	f	signature:(cmd)
s:exectagsonfile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:exectagsonfile(fname, ftype)$/;"	f	signature:(fname,ftype)
s:execute	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:execute(expr) abort$/;"	f	signature:(expr)
s:exists	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:exists(name) abort dict$/;"	f	signature:(name)
s:exists	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:exists(o) abort$/;"	f	signature:(o)
s:exists	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:exists(name) abort dict$/;"	f	signature:(name)
s:exists	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:exists(name) abort dict$/;"	f	signature:(name)
s:exists_openbrowser	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:exists_openbrowser() abort$/;"	f	signature:()
s:exit	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:exit(msg)$/;"	f	signature:(msg)
s:expandAbbrevMap	./vimfiles/autoload/fuf.vim	/^function s:expandAbbrevMap(pattern, abbrevMap)$/;"	f	signature:(pattern,abbrevMap)
s:expandSearchDir	./vimfiles/autoload/fuf/mrufile.vim	/^function s:expandSearchDir(dir, level)$/;"	f	signature:(dir,level)
s:expandedtab	./vim82/syntax/2html.vim	/^	    let s:expandedtab = substitute(s:expandedtab, '\\t', repeat(' ', s:i), '')$/;"	v
s:expandedtab	./vim82/syntax/2html.vim	/^	let s:expandedtab = s:concealinfo[1]$/;"	v
s:expandedtab	./vim82/syntax/2html.vim	/^	let s:expandedtab = strpart(s:line, s:startcol - 1, s:col - s:startcol)$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = "." . strpart(s:lang, 0, 2)$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = ".bg"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = ".cs"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = ".de"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = ".nl"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = ".pl"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = ".sk"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^      let s:ext = ".sr"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".cs.cp1250"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".el"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".el.cp737"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".el.utf-8"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".hr.cp1250"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".hu.cp1250"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".ja.euc"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".ja.sjis"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".ko.euc"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".pl.cp1250"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".sk.cp1250"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".sr.cp1250"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".tr.iso9"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".zh.big5"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".zh.euc"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".zh_cn"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = ".zh_tw"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = '.hr'$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = '.hu'$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = '.ru'$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^    let s:ext = '.ru.cp1251'$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^  let s:ext .= '.utf-8'$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^  let s:ext = ""$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^  let s:ext = "." . $xx$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^  let s:ext = ".de"$/;"	v
s:ext	./vim82/tutor/tutor.vim	/^let s:ext = ""$/;"	v
s:ext	./vimfiles/bundle/marvim/marvim.vim	/^let s:ext = '.mv'.s:vim_ver  " specify macro extension by vim version number$/;"	v
s:extend	./vim82/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:extfname	./vim82/syntax/tex.vim	/^let s:extfname=expand("%:e")$/;"	v
s:extra_space	./vim82/syntax/2html.vim	/^	    let s:extra_space = 0$/;"	v
s:extra_space	./vim82/syntax/2html.vim	/^	    let s:extra_space = s:foldcolumn - s:allfolds[0].level$/;"	v
s:extract_from_text	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/URIExtractor.vim	/^function! s:extract_from_text(text, ...) abort$/;"	f	signature:(text,...)
s:f	./vim82/spell/cleanadd.vim	/^      let s:f = escape(s:fname, ' \\|<')$/;"	v
s:f	./vim82/spell/cleanadd.vim	/^      let s:f = fnameescape(s:fname)$/;"	v
s:falcon_deindent_keywords	./vim82/indent/falcon.vim	/^let s:falcon_deindent_keywords = '^\\s*\\(case\\|catch\\|default\\|elif\\|else\\|end\\)'$/;"	v
s:falcon_indent_keywords	./vim82/indent/falcon.vim	/^let s:falcon_indent_keywords = '^\\s*\\(case\\|catch\\|class\\|enum\\|default\\|elif\\|else' .$/;"	v
s:fcShellPreFuncs	./vimfiles/autoload/genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:fetch_path_and_title	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:fetch_path_and_title(path) abort$/;"	f	signature:(path)
s:ff	./vim82/syntax/r.vim	/^  let s:ff = split(substitute(globpath(&rtp, "R\/functions.vim"), "functions.vim", "", "g"), "\\/;"	v
s:fgc	./vim82/syntax/2html.vim	/^  let s:fgc = ( &background == "dark" ? "#ffffff" : "#000000" )$/;"	v
s:fgc	./vim82/syntax/2html.vim	/^let s:fgc = s:HtmlColor(synIDattr(hlID("Normal"), "fg#", s:whatterm))$/;"	v
s:fgc	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:fgc = ( &background == "dark" ? "#ffffff" : "#000000" )$/;"	v
s:fgc	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:fgc = s:HtmlColor(synIDattr(highlightID("Normal"), "fg#", s:whatterm))$/;"	v
s:ficounts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:ficounts = {}$/;"	v
s:file_name	./vim82/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:filecounts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:filecounts = {}$/;"	v
s:fileobjlist	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^let s:fileobjlist=[]$/;"	v
s:filetype_save	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^let s:filetype_save = &l:filetype$/;"	v
s:filetype_save	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^let s:filetype_save = &l:filetype$/;"	v
s:filetype_save	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^let s:filetype_save = &l:filetype$/;"	v
s:filetype_save	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^let s:filetype_save = &l:filetype$/;"	v
s:filetype_save	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^let s:filetype_save = &l:filetype$/;"	v
s:filetype_save	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^let s:filetype_save = &l:filetype$/;"	v
s:filler	./vim82/syntax/2html.vim	/^  let s:filler = diff_filler(s:lnum)$/;"	v
s:filter	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:filter(tags)$/;"	f	signature:(tags)
s:find	./vimfiles/autoload/pathogen.vim	/^function! s:find(count,cmd,file,...) " {{{1$/;"	f	signature:(count,cmd,file,...)
s:find	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f	signature:(list,default,f)
s:findAndRevealPath	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f	signature:()
s:findItem	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:findItem(items, word)$/;"	f	signature:(items,word)
s:findItem	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:findItem(items, word)$/;"	f	signature:(items,word)
s:findItem	./vimfiles/autoload/fuf/buffer.vim	/^function s:findItem(items, word)$/;"	f	signature:(items,word)
s:find_continued_lnum	./vim82/indent/sh.vim	/^function! s:find_continued_lnum(lnum)$/;"	f	signature:(lnum)
s:find_index	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f	signature:(xs,f,...)
s:find_indices	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f	signature:(xs,f,...)
s:find_last_index	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f	signature:(xs,f,...)
s:find_start_block	./vim82/indent/sh.vim	/^function! s:find_start_block(lnum)$/;"	f	signature:(lnum)
s:findcommon	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findcommon(items, seed)$/;"	f	signature:(items,seed)
s:findcount	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:findcount(str, tgaddr)$/;"	f	signature:(str,tgaddr)
s:findroot	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:findroot(curr, mark, depth, type)$/;"	f	signature:(curr,mark,depth,type)
s:first_line	./vim82/ftplugin/changelog.vim	/^  function! s:first_line(string)$/;"	f	signature:(string)
s:firstfold	./vim82/syntax/2html.vim	/^	  let s:firstfold = 0$/;"	v
s:firstfold	./vim82/syntax/2html.vim	/^      let s:firstfold = 1$/;"	v
s:fix_beginfigs	./vim82/ftplugin/mp.vim	/^  function! s:fix_beginfigs()$/;"	f	signature:()
s:flatten	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:flatten(tree, cur)$/;"	f	signature:(tree,cur)
s:flatten	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f	signature:(list,...)
s:flatten	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:flatten(o, ...) abort$/;"	f	signature:(o,...)
s:floor2	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:floor2(v)$/;"	f	signature:(v)
s:fname	./vim82/syntax/colortest.vim	/^    let s:fname = escape(s:fname, ' \\|')$/;"	v
s:fname	./vim82/syntax/colortest.vim	/^    let s:fname = fnameescape(s:fname)$/;"	v
s:fname	./vim82/syntax/colortest.vim	/^  let s:fname = expand('<sfile>')$/;"	v
s:fname	./vim82/syntax/synload.vim	/^  let s:fname = expand(mysyntaxfile)$/;"	v
s:fnesc	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:fnesc(...)$/;"	f	signature:(...)
s:foldId	./vim82/syntax/2html.vim	/^	let s:foldId = s:foldId + 1$/;"	v
s:foldId	./vim82/syntax/2html.vim	/^let s:foldId = 0$/;"	v
s:fold_arg	./vim82/syntax/ruby.vim	/^let s:fold_arg	    = s:foldable('string')		? ' fold'   : ''$/;"	v
s:foldable	./vim82/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f	signature:(...)
s:foldable_groups	./vim82/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:foldcolumn	./vim82/syntax/2html.vim	/^	let s:foldcolumn = afold.level+1$/;"	v
s:foldcolumn	./vim82/syntax/2html.vim	/^  let s:foldcolumn = &foldcolumn$/;"	v
s:folded_assignment_rx	./vim82/indent/make.vim	/^let s:folded_assignment_rx = '^\\s*\\h\\w*\\s*[+?]\\=='$/;"	v
s:foldfillchar	./vim82/syntax/2html.vim	/^    let s:foldfillchar = '-'$/;"	v
s:foldfillchar	./vim82/syntax/2html.vim	/^  let s:foldfillchar = &fillchars[matchend(&fillchars, 'fold:')]$/;"	v
s:foldl	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f	signature:(f,init,dict)
s:foldl	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f	signature:(f,init,xs)
s:foldl1	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f	signature:(f,xs)
s:foldr	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f	signature:(f,init,dict)
s:foldr	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f	signature:(f,init,xs)
s:foldr1	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f	signature:(f,xs)
s:foldstack	./vim82/syntax/2html.vim	/^	let s:foldstack[0].id = s:foldId$/;"	v
s:foldstack	./vim82/syntax/2html.vim	/^let s:foldstack = []$/;"	v
s:foldtext_save	./vim82/syntax/2html.vim	/^  let s:foldtext_save = &foldtext$/;"	v
s:fonts	./vimfiles/after/ftplugin/dot.vim	/^let s:fonts =  [$/;"	v
s:fonts	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:fonts =  [$/;"	v
s:force_semantic	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:force_semantic = 0$/;"	v
s:format	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:format(...)$/;"	f	signature:(...)
s:formatItemUsingCache	./vimfiles/autoload/fuf/mrufile.vim	/^function s:formatItemUsingCache(item)$/;"	f	signature:(item)
s:format_motion_list	./vimfiles/bundle/vimcdoc/devel/tools/formatmb.vim	/^let s:format_motion_list = m_list$/;"	v
s:formatline	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:formatline(str)$/;"	f	signature:(str)
s:formatul	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:formatul(...)$/;"	f	signature:(...)
s:fpats	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:fpats = {$/;"	v
s:from_list	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:from_list(list) abort$/;"	f	signature:(list)
s:ft	./vim82/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:ft	./vim82/syntax/rmd.vim	/^    let s:ft = s:type$/;"	v
s:ft	./vim82/syntax/rmd.vim	/^    let s:ft = substitute(s:type, '.*=', '', '')$/;"	v
s:ft_rules_udev_rules_pattern	./vim82/autoload/dist/ft.vim	/^let s:ft_rules_udev_rules_pattern = '^\\s*\\cudev_rules\\s*=\\s*"\\([^"]\\{-1,}\\)\/*".*'$/;"	v
s:ftplugin	./VIMPROJ/3rd/dein.vim/.cache/.vimrc/.dein/ftplugin.vim	/^function! s:ftplugin()$/;"	f	signature:()
s:ftplugin	./VIMPROJ/3rd/dein.vim/.cache/_vimrc/.dein/ftplugin.vim	/^function! s:ftplugin()$/;"	f	signature:()
s:ftplugin_sql_objects	./vim82/ftplugin/sql.vim	/^let s:ftplugin_sql_objects =$/;"	v
s:full	./vimfiles/bundle/jedi-vim/after/syntax/python.vim	/^    let s:full = s:e.'jedi=.\\{-}'.s:e.'.\\{-}'.s:e.'jedi'.s:e$/;"	v
s:funcNameMatcher	./vim82/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:function	./vim82/ftplugin/php.vim	/^let s:function = '\\(abstract\\s\\+\\|final\\s\\+\\|private\\s\\+\\|protected\\s\\+\\|public\\s\\/;"	v
s:functionDecl	./vim82/indent/php.vim	/^let s:functionDecl = s:functionDeclPrefix.'.*'$/;"	v
s:functionDeclPrefix	./vim82/indent/php.vim	/^let s:functionDeclPrefix = '\\<function\\>\\%(\\s\\+&\\='.s:PHP_validVariable.'\\)\\=\\s*('$/;"	v
s:function_template	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:function_template() abort$/;"	f	signature:()
s:fuzzy_lu	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:fuzzy_lu(key)$/;"	f	signature:(key)
s:gecos_name	./vim82/ftplugin/changelog.vim	/^  function! s:gecos_name(login)$/;"	f	signature:(login)
s:generate_dummy_commands	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! s:generate_dummy_commands(plugin) abort "{{{$/;"	f	signature:(plugin)
s:generate_dummy_commands	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! s:generate_dummy_commands(plugin) abort$/;"	f	signature:(plugin)
s:generate_dummy_commands	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! s:generate_dummy_commands(plugin) abort "{{{$/;"	f	signature:(plugin)
s:generate_dummy_mappings	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! s:generate_dummy_mappings(plugin) abort "{{{$/;"	f	signature:(plugin)
s:generate_dummy_mappings	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! s:generate_dummy_mappings(plugin) abort$/;"	f	signature:(plugin)
s:generate_dummy_mappings	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! s:generate_dummy_mappings(plugin) abort "{{{$/;"	f	signature:(plugin)
s:generate_ftplugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:generate_ftplugin() abort "{{{$/;"	f	signature:()
s:generate_ftplugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:generate_ftplugin() abort$/;"	f	signature:()
s:generate_ftplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:generate_ftplugin() abort "{{{$/;"	f	signature:()
s:generate_suffix_groups	./vim82/syntax/hostconf.vim	/^function s:generate_suffix_groups(list_of_order_of_orders, context, trailing_context)$/;"	f	signature:(list_of_order_of_orders,context,trailing_context)
s:generic_easy_align_op	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:generic_easy_align_op(type, vmode, live)$/;"	f	signature:(type,vmode,live)
s:get	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:get(o) abort$/;"	f	signature:(o)
s:get	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:get(url, ...) abort$/;"	f	signature:(url,...)
s:getAuthor	./vim82/ftplugin/debchangelog.vim	/^function! s:getAuthor(zonestart, zoneend)$/;"	f	signature:(zonestart,zoneend)
s:getBufIndicator	./vimfiles/autoload/fuf/buffer.vim	/^function s:getBufIndicator(bufNr)$/;"	f	signature:(bufNr)
s:getChangesLines	./vimfiles/autoload/fuf/changelist.vim	/^function s:getChangesLines()$/;"	f	signature:()
s:getCurrentHelpTagFiles	./vimfiles/autoload/fuf/help.vim	/^function s:getCurrentHelpTagFiles()$/;"	f	signature:()
s:getEditableDataFiles	./vimfiles/autoload/fuf.vim	/^function s:getEditableDataFiles(modeName)$/;"	f	signature:(modeName)
s:getField	./vim82/ftplugin/debcontrol.vim	/^function! s:getField(f, lnum)$/;"	f	signature:(f,lnum)
s:getFileType	./vimfiles/autoload/fuf/buffertag.vim	/^function s:getFileType(bufNr)$/;"	f	signature:(bufNr)
s:getHelpTagEntries	./vimfiles/autoload/fuf/help.vim	/^function s:getHelpTagEntries(tagFile)$/;"	f	signature:(tagFile)
s:getJumpsLines	./vimfiles/autoload/fuf/jumplist.vim	/^function s:getJumpsLines()$/;"	f	signature:()
s:getJumpsLines	./vimfiles/autoload/fuf/quickfix.vim	/^function s:getJumpsLines()$/;"	f	signature:()
s:getLastBlockLength	./vimfiles/autoload/fuf.vim	/^function s:getLastBlockLength(pattern, patternIsPath)$/;"	f	signature:(pattern,patternIsPath)
s:getLinePattern	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:getLinePattern(lnum)$/;"	f	signature:(lnum)
s:getMatchingIndex	./vimfiles/autoload/fuf/help.vim	/^function s:getMatchingIndex(lines, pattern)$/;"	f	signature:(lines,pattern)
s:getMatchingIndex	./vimfiles/autoload/fuf/tag.vim	/^function s:getMatchingIndex(lines, cmd)$/;"	f	signature:(lines,cmd)
s:getMatchingLineNumber	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:getMatchingLineNumber(lines, pattern, lnumBegin)$/;"	f	signature:(lines,pattern,lnumBegin)
s:getNextCharWithPos	./vim82/autoload/phpcomplete.vim	/^function! s:getNextCharWithPos(filelines, current_pos) " {{{$/;"	f	signature:(filelines,current_pos)
s:getNextCharWithPos	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! s:getNextCharWithPos(filelines, current_pos) " {{{$/;"	f	signature:(filelines,current_pos)
s:getSnippedHead	./vimfiles/autoload/fuf.vim	/^function s:getSnippedHead(head, baseLen)$/;"	f	signature:(head,baseLen)
s:getTagData	./vimfiles/autoload/fuf/buffertag.vim	/^function s:getTagData(bufNrs)$/;"	f	signature:(bufNrs)
s:getTagItems	./vimfiles/autoload/fuf/buffertag.vim	/^function s:getTagItems(bufNr)$/;"	f	signature:(bufNr)
s:getTagNames	./vimfiles/autoload/fuf/tag.vim	/^function s:getTagNames(tagFile)$/;"	f	signature:(tagFile)
s:getTaggedFileList	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:getTaggedFileList(tagfile)$/;"	f	signature:(tagfile)
s:getWordBoundaries	./vimfiles/autoload/fuf.vim	/^function s:getWordBoundaries(word)$/;"	f	signature:(word)
s:get_256color	./vim82/syntax/dircolors.vim	/^function! s:get_256color(colors) abort$/;"	f	signature:(colors)
s:get_async_result	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_async_result(process, is_timeout) abort "{{{$/;"	f	signature:(process,is_timeout)
s:get_async_result	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_async_result(process, is_timeout) abort "{{{$/;"	f	signature:(process,is_timeout)
s:get_commit_status	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein.vim	/^function! s:get_commit_status(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_commit_status	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein.vim	/^function! s:get_commit_status(plugin) abort$/;"	f	signature:(plugin)
s:get_commit_status	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein.vim	/^function! s:get_commit_status(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_directory	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:get_directory(full_file_name)$/;"	f	signature:(full_file_name)
s:get_errored_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_errored_message(plugins) abort "{{{$/;"	f	signature:(plugins)
s:get_errored_message	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_errored_message(plugins) abort$/;"	f	signature:(plugins)
s:get_errored_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_errored_message(plugins) abort "{{{$/;"	f	signature:(plugins)
s:get_filename	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:get_filename(full_file_name)$/;"	f	signature:(full_file_name)
s:get_hi_str	./vim82/syntax/dircolors.vim	/^function! s:get_hi_str(color, place) abort$/;"	f	signature:(color,place)
s:get_hit_enter_max_length	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f	signature:()
s:get_input	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! s:get_input() abort "{{{$/;"	f	signature:()
s:get_input	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! s:get_input() abort$/;"	f	signature:()
s:get_input	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! s:get_input() abort "{{{$/;"	f	signature:()
s:get_job	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_job() abort$/;"	f	signature:()
s:get_last_modified_time	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:get_last_modified_time() abort$/;"	f	signature:()
s:get_last_selected	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f	signature:()
s:get_last_status	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^function! s:get_last_status() abort$/;"	f	signature:()
s:get_line_trimmed	./vim82/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f	signature:(lnum)
s:get_or	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:get_or(o, alt) abort$/;"	f	signature:(o,alt)
s:get_paragraph_start	./vim82/indent/rst.vim	/^function! s:get_paragraph_start()$/;"	f	signature:()
s:get_plugin_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_plugin_message(plugin, number, max, message) abort "{{{$/;"	f	signature:(plugin,number,max,message)
s:get_plugin_message	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_plugin_message(plugin, number, max, message) abort$/;"	f	signature:(plugin,number,max,message)
s:get_plugin_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_plugin_message(plugin, number, max, message) abort "{{{$/;"	f	signature:(plugin,number,max,message)
s:get_progress_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_progress_message(plugin, number, max) abort "{{{$/;"	f	signature:(plugin,number,max)
s:get_progress_message	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_progress_message(plugin, number, max) abort$/;"	f	signature:(plugin,number,max)
s:get_progress_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_progress_message(plugin, number, max) abort "{{{$/;"	f	signature:(plugin,number,max)
s:get_project_patterns	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:get_project_patterns(root_dir) abort$/;"	f	signature:(root_dir)
s:get_revision	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:get_revision(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_revision	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:get_revision(plugin) abort$/;"	f	signature:(plugin)
s:get_revision	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:get_revision(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_revision_number	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_revision_number(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_revision_number	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_revision_number(plugin) abort$/;"	f	signature:(plugin)
s:get_revision_number	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_revision_number(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_revision_remote	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_revision_remote(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_revision_remote	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_revision_remote(plugin) abort$/;"	f	signature:(plugin)
s:get_revision_remote	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_revision_remote(plugin) abort "{{{$/;"	f	signature:(plugin)
s:get_rollback_directory	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_rollback_directory() abort "{{{$/;"	f	signature:()
s:get_rollback_directory	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_rollback_directory() abort$/;"	f	signature:()
s:get_rollback_directory	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_rollback_directory() abort "{{{$/;"	f	signature:()
s:get_selected_text	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f	signature:(...)
s:get_short_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_short_message(plugin, number, max, message) abort "{{{$/;"	f	signature:(plugin,number,max,message)
s:get_short_message	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_short_message(plugin, number, max, message) abort$/;"	f	signature:(plugin,number,max,message)
s:get_short_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_short_message(plugin, number, max, message) abort "{{{$/;"	f	signature:(plugin,number,max,message)
s:get_sync_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_sync_command(plugin, update_type, number, max) abort "{{{i$/;"	f	signature:(plugin,update_type,number,max)
s:get_sync_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_sync_command(plugin, update_type, number, max) abort "{{{i$/;"	f	signature:(plugin,update_type,number,max)
s:get_sync_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_sync_command(plugin, update_type, number, max) abort "{{{i$/;"	f	signature:(plugin,update_type,number,max)
s:get_tag	./vim82/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f	signature:(tagname)
s:get_tag	./vimfiles/bundle/html5.vim/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f	signature:(tagname)
s:get_unsafe	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:get_unsafe(o) abort$/;"	f	signature:(o)
s:get_updated_log_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_updated_log_message(plugin, new_rev, old_rev) abort "{{{$/;"	f	signature:(plugin,new_rev,old_rev)
s:get_updated_log_message	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_updated_log_message(plugin, new_rev, old_rev) abort$/;"	f	signature:(plugin,new_rev,old_rev)
s:get_updated_log_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_updated_log_message(plugin, new_rev, old_rev) abort "{{{$/;"	f	signature:(plugin,new_rev,old_rev)
s:get_updated_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_updated_message(context, plugins) abort "{{{$/;"	f	signature:(context,plugins)
s:get_updated_message	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:get_updated_message(context, plugins) abort$/;"	f	signature:(context,plugins)
s:get_updated_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_updated_message(context, plugins) abort "{{{$/;"	f	signature:(context,plugins)
s:get_vimproc_result	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:get_vimproc_result(process, is_timeout) abort "{{{$/;"	f	signature:(process,is_timeout)
s:get_vimproc_result	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:get_vimproc_result(process, is_timeout) abort "{{{$/;"	f	signature:(process,is_timeout)
s:getbookmarks	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getbookmarks()$/;"	f	signature:()
s:getchar	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:getchar(...) abort$/;"	f	signature:(...)
s:getchar	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:getchar(...) abort$/;"	f	signature:(...)
s:getchar_safe	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f	signature:(...)
s:getchar_safe	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f	signature:(...)
s:getenv	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getenv()$/;"	f	signature:()
s:getextvar	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getextvar(key)$/;"	f	signature:(key)
s:gethistdata	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistdata()$/;"	f	signature:()
s:gethistloc	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:gethistloc()$/;"	f	signature:()
s:getinput	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getinput(...)$/;"	f	signature:(...)
s:getinput	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:getinput(str, ...)$/;"	f	signature:(str,...)
s:getnewmix	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:getnewmix(cwd, clim)$/;"	f	signature:(cwd,clim)
s:getparent	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getparent(item)$/;"	f	signature:(item)
s:getregs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:getregs()$/;"	f	signature:()
s:getundo	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:getundo()$/;"	f	signature:()
s:git	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^let s:git = dein#types#git#define()$/;"	v
s:git	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^let s:git = dein#types#git#define()$/;"	v
s:git	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^let s:git = dein#types#git#define()$/;"	v
s:gitdiffcached	./vim82/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f	signature:(bang,gitdir,...)
s:glbpath	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:glbpath(...)$/;"	f	signature:(...)
s:glbs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:glbs = { 'magic': 1, 'to': 1, 'tm': 0, 'sb': 1, 'hls': 0, 'im': 0,$/;"	v
s:glob	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f	signature:(expr)
s:glob	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f	signature:(expr)
s:global_context	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let s:global_context = {}$/;"	v
s:global_context	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let s:global_context = {}$/;"	v
s:global_context	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let s:global_context = {}$/;"	v
s:globdirs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:globdirs(dirs, depth)$/;"	f	signature:(dirs,depth)
s:globpath	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f	signature:(path,expr)
s:globpath	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f	signature:(path,expr)
s:gocodeAutocomplete	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! s:gocodeAutocomplete()$/;"	f	signature:()
s:gocodeAutocomplete	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! s:gocodeAutocomplete()$/;"	f	signature:()
s:gocodeCommand	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! s:gocodeCommand(cmd, preargs, args)$/;"	f	signature:(cmd,preargs,args)
s:gocodeCommand	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! s:gocodeCommand(cmd, preargs, args)$/;"	f	signature:(cmd,preargs,args)
s:gocodeCurrentBuffer	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! s:gocodeCurrentBuffer()$/;"	f	signature:()
s:gocodeCurrentBuffer	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! s:gocodeCurrentBuffer()$/;"	f	signature:()
s:gocodeCurrentBufferOpt	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! s:gocodeCurrentBufferOpt(filename)$/;"	f	signature:(filename)
s:gocodeCurrentBufferOpt	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! s:gocodeCurrentBufferOpt(filename)$/;"	f	signature:(filename)
s:gocodeCursor	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! s:gocodeCursor()$/;"	f	signature:()
s:gocodeCursor	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! s:gocodeCursor()$/;"	f	signature:()
s:gocodeShellescape	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! s:gocodeShellescape(arg)$/;"	f	signature:(arg)
s:gocodeShellescape	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! s:gocodeShellescape(arg)$/;"	f	signature:(arg)
s:got_fmt_error	./vim82/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:group	./vim82/syntax/ruby.vim	/^  let s:group = 'ruby' . s:names[s:delimiter] . 'Escape'$/;"	v
s:group_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f	signature:(xs,f)
s:guard	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:guard.restore	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f	signature:()
s:handleFailedAssersion	./vimfiles/plugin/l9.vim	/^  function s:handleFailedAssersion(expr)$/;"	f	signature:(expr)
s:handleLeftClick	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f	signature:()
s:handleMiddleMouse	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f	signature:()
s:handler	./vimfiles/autoload/fuf/bookmarkdir.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/bookmarkfile.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/buffer.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/buffertag.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/callbackfile.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/callbackitem.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/changelist.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/coveragefile.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/dir.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/file.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/givencmd.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/givendir.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/givenfile.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/help.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/jumplist.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/line.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/mrucmd.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/mrufile.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/quickfix.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/tag.vim	/^let s:handler = {}$/;"	v
s:handler	./vimfiles/autoload/fuf/taggedfile.vim	/^let s:handler = {}$/;"	v
s:handler.getCompleteItems	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/file.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/help.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/line.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getCompleteItems	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.getCompleteItems(patternPrimary)$/;"	f	signature:(patternPrimary)
s:handler.getModeName	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/file.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/help.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/line.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getModeName	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.getModeName()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/file.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/help.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/line.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPreviewHeight	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.getPreviewHeight()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/file.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/help.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/line.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.getPrompt	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.getPrompt()$/;"	f	signature:()
s:handler.isOpenable	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/file.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/help.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/line.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.isOpenable	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.isOpenable(enteredPattern)$/;"	f	signature:(enteredPattern)
s:handler.makePatternSet	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/file.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/help.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/line.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePatternSet	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.makePatternSet(patternBase)$/;"	f	signature:(patternBase)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/file.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/help.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/line.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.makePreviewLines	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.makePreviewLines(word, count)$/;"	f	signature:(word,count)
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/file.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/help.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/line.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPost	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPost()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/file.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/help.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/line.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeEnterPre	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.onModeEnterPre()$/;"	f	signature:()
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/file.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/help.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/line.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onModeLeavePost	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.onModeLeavePost(opened)$/;"	f	signature:(opened)
s:handler.onOpen	./vimfiles/autoload/fuf/bookmarkdir.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/buffer.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/buffertag.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/callbackfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/callbackitem.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/changelist.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/dir.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/file.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/givencmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/givendir.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/givenfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/help.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/jumplist.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/line.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/mrufile.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/quickfix.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/tag.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handler.onOpen	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:handler.onOpen(word, mode)$/;"	f	signature:(word,mode)
s:handlerBase	./vimfiles/autoload/fuf.vim	/^let s:handlerBase = {}$/;"	v
s:handlerBase.addStat	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.addStat(pattern, word)$/;"	f	signature:(pattern,word)
s:handlerBase.concretize	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.concretize(deriv)$/;"	f	signature:(deriv)
s:handlerBase.existsPrompt	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.existsPrompt(line)$/;"	f	signature:(line)
s:handlerBase.getMatchingCompleteItems	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.getMatchingCompleteItems(patternBase)$/;"	f	signature:(patternBase)
s:handlerBase.onBs	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onBs()$/;"	f	signature:()
s:handlerBase.onComplete	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onComplete(findstart, base)$/;"	f	signature:(findstart,base)
s:handlerBase.onCr	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onCr(openType)$/;"	f	signature:(openType)
s:handlerBase.onCursorMovedI	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onCursorMovedI()$/;"	f	signature:()
s:handlerBase.onDeleteWord	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onDeleteWord()$/;"	f	signature:()
s:handlerBase.onInsertLeave	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onInsertLeave()$/;"	f	signature:()
s:handlerBase.onPreviewBase	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onPreviewBase(repeatable)$/;"	f	signature:(repeatable)
s:handlerBase.onRecallPattern	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onRecallPattern(shift)$/;"	f	signature:(shift)
s:handlerBase.onSwitchMatching	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onSwitchMatching()$/;"	f	signature:()
s:handlerBase.onSwitchMode	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.onSwitchMode(shift)$/;"	f	signature:(shift)
s:handlerBase.removePrompt	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.removePrompt(line)$/;"	f	signature:(line)
s:handlerBase.restorePrompt	./vimfiles/autoload/fuf.vim	/^function s:handlerBase.restorePrompt(line)$/;"	f	signature:(line)
s:has	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:has(list, value) abort$/;"	f	signature:(list,value)
s:has	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:has(o, type) abort$/;"	f	signature:(o,type)
s:hasPreviewWindow	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindow = match(&completeopt, 'preview')>=0$/;"	v
s:hasPreviewWindowOld	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:hasPreviewWindowOld = s:hasPreviewWindow$/;"	v
s:has_common_items	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f	signature:(list1,list2)
s:has_conceal	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:has_conceal = has('conceal')$/;"	v
s:has_index	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f	signature:(list,index)
s:has_vimproc	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^function! s:has_vimproc() abort$/;"	f	signature:()
s:has_webapi	./vim82/autoload/rust.vim	/^function! s:has_webapi()$/;"	f	signature:()
s:hash	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:hash(str) abort$/;"	f	signature:(str)
s:hd	./vim82/syntax/rhelp.vim	/^  let s:hd = 0$/;"	v
s:hd	./vim82/syntax/rhelp.vim	/^  let s:hd = 1$/;"	v
s:headntail	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:headntail(str)$/;"	f	signature:(str)
s:helptags	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:helptags() abort "{{{$/;"	f	signature:()
s:helptags	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:helptags() abort$/;"	f	signature:()
s:helptags	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:helptags() abort "{{{$/;"	f	signature:()
s:hidden	./vim82/syntax/hitest.vim	/^let s:hidden      = &hidden$/;"	v
s:highlight	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:highlight(pat, grp)$/;"	f	signature:(pat,grp)
s:highlightError	./vimfiles/autoload/fuf.vim	/^function s:highlightError()$/;"	f	signature:()
s:highlightPrompt	./vimfiles/autoload/fuf.vim	/^function s:highlightPrompt(prompt)$/;"	f	signature:(prompt)
s:highlighted_as	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:highlighted_as(line, col, groups)$/;"	f	signature:(line,col,groups)
s:hlgrps	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:hlgrps = {$/;"	v
s:hog_keyword_match	./vim82/ftplugin/hog.vim	/^let s:hog_keyword_match = '\\c^\\s*\\<\\(preprocessor\\\\|config\\\\|output\\\\|include\\\\|ipva/;"	v
s:hostname	./vim82/ftplugin/changelog.vim	/^  function! s:hostname()$/;"	f	signature:()
s:html5	./vim82/syntax/2html.vim	/^  let s:html5 = 0$/;"	v
s:html5	./vim82/syntax/2html.vim	/^  let s:html5 = 1$/;"	v
s:htmlfont	./vim82/syntax/2html.vim	/^    let s:htmlfont = "'". g:html_font . "', monospace"$/;"	v
s:htmlfont	./vim82/syntax/2html.vim	/^    let s:htmlfont = "'". join(g:html_font,"','") . "', monospace"$/;"	v
s:htmlfont	./vim82/syntax/2html.vim	/^  let s:htmlfont = "monospace"$/;"	v
s:i	./vim82/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	./vim82/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	./vim82/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:i	./vim82/macros/less.vim	/^    let s:i = s:i + 1$/;"	v
s:i	./vim82/macros/less.vim	/^  let s:i = 0$/;"	v
s:i	./vim82/syntax/2html.vim	/^	      let s:i = s:tablist[0]$/;"	v
s:i	./vim82/syntax/2html.vim	/^	      let s:i = s:tablist[s:tabidx] - (s:vcol - s:tabwidth)$/;"	v
s:i	./vim82/syntax/help.vim	/^let s:i = match(expand("%"), '\\.\\a\\ax$')$/;"	v
s:iconv	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:iconv(expr, from, to) abort "{{{$/;"	f	signature:(expr,from,to)
s:iconv	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:iconv(expr, from, to) abort$/;"	f	signature:(expr,from,to)
s:iconv	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:iconv(expr, from, to) abort "{{{$/;"	f	signature:(expr,from,to)
s:iconv	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f	signature:(expr,from,to)
s:iconv	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f	signature:(expr,from,to)
s:id	./vim82/syntax/2html.vim	/^	let s:id = s:CONCEAL_ID$/;"	v
s:id	./vim82/syntax/2html.vim	/^	let s:id = synID(s:lnum, s:col, 1)$/;"	v
s:id	./vim82/syntax/2html.vim	/^	let s:id = synIDtrans(s:id)$/;"	v
s:id	./vim82/syntax/2html.vim	/^  let s:id = s:FOLD_C_ID$/;"	v
s:id	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/cmdline.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/menu.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mymenu.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp-mymenu.vim/autoload/ctrlp/mysubmenu.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lasync.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcomm.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lcscmd.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/ldbtables.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lerror.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/leventlog.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lextdbtype.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lidip.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/locur.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lofiles.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lomem.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/loname.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lresource.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsscmd.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lsvrid.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/lswitch.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:id	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:id = synID(s:lnum, s:col, 1)$/;"	v
s:id	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:id = synIDtrans(s:id)$/;"	v
s:id	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:id = strpart(s:idlist, 0, s:col)$/;"	v
s:idef	./vim82/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	./vim82/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	./vim82/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idlist	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^      let s:idlist = s:idlist . s:id . ","$/;"	v
s:idlist	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:idlist = strpart(s:idlist, s:col + 1)$/;"	v
s:idlist	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:idlist = ","$/;"	v
s:idlist	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:idlist = strpart(s:idlist, 1)$/;"	v
s:idx	./vim82/optwin.vim	/^let s:idx = 1$/;"	v
s:idx	./vim82/syntax/2html.vim	/^	    let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:idx	./vim82/syntax/2html.vim	/^	  let s:idx = stridx(s:expandedtab, "\\t")$/;"	v
s:ieonly	./vim82/syntax/2html.vim	/^      let s:ieonly = [$/;"	v
s:ieonly	./vim82/syntax/2html.vim	/^  let s:ieonly = []$/;"	v
s:ifilter	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ifilter(list, str)$/;"	f	signature:(list,str)
s:ignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ignore()$/;"	f	signature:()
s:ignore	./vimfiles/bundle/jedi-vim/after/syntax/python.vim	/^    let s:ignore = s:e.'jedi.\\{-}'.s:e$/;"	v
s:ignoreEvalError	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:ignoreEvalError = 0$/;"	v
s:ignored_region	./vim82/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f	signature:()
s:ignored_syntax	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:ignored_syntax()$/;"	f	signature:()
s:import	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:import(name, ...) abort dict$/;"	f	signature:(name,...)
s:import	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:import(name, ...) abort dict$/;"	f	signature:(name,...)
s:import	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:import(name, ...) abort dict$/;"	f	signature:(name,...)
s:in_comm	./vim82/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:include	./vim82/ftplugin/eruby.vim	/^let s:include = &l:include$/;"	v
s:increase	./vim82/ftplugin/cobol.vim	/^function! s:increase(...)$/;"	f	signature:(...)
s:indent_access_modifier_regex	./vim82/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_tags	./vim82/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_tags	./vimfiles/bundle/html5.vim/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:indent_to_innermost_parentheses	./vim82/indent/dtd.vim	/^function s:indent_to_innermost_parentheses(line, end)$/;"	f	signature:(line,end)
s:indent_value	./vim82/indent/sh.vim	/^function! s:indent_value(option)$/;"	f	signature:(option)
s:infix	./vim82/syntax/perl6.vim	/^let s:infix = "!\\\\?\\\\%(" . s:infix . "\\\\)"$/;"	v
s:infix	./vim82/syntax/perl6.vim	/^let s:infix = join(s:both, "\\\\|")$/;"	v
s:infix_a	./vim82/syntax/perl6.vim	/^let s:infix_a = [$/;"	v
s:infix_a_long	./vim82/syntax/perl6.vim	/^let s:infix_a_long = join(s:infix_a, " ")$/;"	v
s:infix_a_pattern	./vim82/syntax/perl6.vim	/^let s:infix_a_pattern = join(s:infix_a_words, "\\\\|")$/;"	v
s:infix_a_words	./vim82/syntax/perl6.vim	/^let s:infix_a_words = split(s:infix_a_long)$/;"	v
s:infix_assoc	./vim82/syntax/perl6.vim	/^let s:infix_assoc = "!\\\\?\\\\%(" . s:infix_a_pattern . "\\\\)"$/;"	v
s:infix_n	./vim82/syntax/perl6.vim	/^let s:infix_n = "but does <=> leg cmp \\\\.\\\\. \\\\.\\\\.\\\\^\\\\^ \\\\^\\\\.\\\\. \\\\^\\\\./;"	v
s:infix_n_pattern	./vim82/syntax/perl6.vim	/^let s:infix_n_pattern = join(s:infix_n_words, "\\\\|")$/;"	v
s:infix_n_words	./vim82/syntax/perl6.vim	/^let s:infix_n_words = split(s:infix_n)$/;"	v
s:inheritance_dent	./vim82/indent/eiffel.vim	/^let s:inheritance_dent = '\\s*\\(redefine\\|rename\\|export\\)\\>'$/;"	v
s:initVariable	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f	signature:(var,value)
s:init_context	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:init_context(plugins, update_type, async) abort "{{{$/;"	f	signature:(plugins,update_type,async)
s:init_context	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:init_context(plugins, update_type, async) abort$/;"	f	signature:(plugins,update_type,async)
s:init_context	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:init_context(plugins, update_type, async) abort "{{{$/;"	f	signature:(plugins,update_type,async)
s:init_job	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:init_job(process, context, cmd) abort "{{{$/;"	f	signature:(process,context,cmd)
s:init_job	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:init_job(process, context, cmd) abort$/;"	f	signature:(process,context,cmd)
s:init_job	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:init_job(process, context, cmd) abort "{{{$/;"	f	signature:(process,context,cmd)
s:init_process	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:init_process(plugin, context, cmd) abort "{{{$/;"	f	signature:(plugin,context,cmd)
s:init_process	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:init_process(plugin, context, cmd) abort$/;"	f	signature:(plugin,context,cmd)
s:init_process	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:init_process(plugin, context, cmd) abort "{{{$/;"	f	signature:(plugin,context,cmd)
s:init_python	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! s:init_python() abort$/;"	f	signature:()
s:init_variables	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:init_variables(context) abort "{{{$/;"	f	signature:(context)
s:init_variables	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:init_variables(context) abort$/;"	f	signature:(context)
s:init_variables	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:init_variables(context) abort "{{{$/;"	f	signature:(context)
s:initialize	./vimfiles/plugin/fuf.vim	/^function s:initialize()$/;"	f	signature:()
s:input	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:input(prompt)$/;"	f	signature:(prompt)
s:input	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:input(str, default, vis)$/;"	f	signature:(str,default,vis)
s:input_helper	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f	signature:(funcname,args)
s:input_helper	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f	signature:(funcname,args)
s:input_safe	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f	signature:(...)
s:input_safe	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f	signature:(...)
s:insertcache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertcache(str)$/;"	f	signature:(str)
s:insertstr	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:insertstr()$/;"	f	signature:()
s:install_async	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:install_async(context) abort "{{{$/;"	f	signature:(context)
s:install_async	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:install_async(context) abort$/;"	f	signature:(context)
s:install_async	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:install_async(context) abort "{{{$/;"	f	signature:(context)
s:install_blocking	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:install_blocking(context) abort "{{{$/;"	f	signature:(context)
s:install_blocking	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:install_blocking(context) abort$/;"	f	signature:(context)
s:install_blocking	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:install_blocking(context) abort "{{{$/;"	f	signature:(context)
s:install_previm	./vimfiles/bundle/previm/plugin/previm.vim	/^function! s:install_previm() abort$/;"	f	signature:()
s:instance	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:instance.restore	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f	signature:()
s:interactive	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:interactive(range, modes, n, d, opts, rules, vis, bvis)$/;"	f	signature:(range,modes,n,d,opts,rules,vis,bvis)
s:interactive_modes	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:interactive_modes(bang)$/;"	f	signature:(bang)
s:interface	./vim82/ftplugin/php.vim	/^let s:interface = 'interface'$/;"	v
s:interpretPrimaryPatternForNonPath	./vimfiles/autoload/fuf.vim	/^function s:interpretPrimaryPatternForNonPath(pattern)$/;"	f	signature:(pattern)
s:interpretPrimaryPatternForPath	./vimfiles/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPath(pattern)$/;"	f	signature:(pattern)
s:interpretPrimaryPatternForPathTail	./vimfiles/autoload/fuf.vim	/^function s:interpretPrimaryPatternForPathTail(pattern)$/;"	f	signature:(pattern)
s:intersect	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f	signature:(list1,list2)
s:is_absolute	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^  function! s:is_absolute(path) abort "{{{$/;"	f	signature:(path)
s:is_absolute	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^  function! s:is_absolute(path) abort$/;"	f	signature:(path)
s:is_absolute	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^  function! s:is_absolute(path) abort "{{{$/;"	f	signature:(path)
s:is_absolute	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^  function! s:is_absolute(path) abort$/;"	f	signature:(path)
s:is_array	./vim82/indent/sh.vim	/^function! s:is_array(line)$/;"	f	signature:(line)
s:is_available	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^function! s:is_available() abort$/;"	f	signature:()
s:is_available	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:is_available() abort$/;"	f	signature:()
s:is_available	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:is_available() abort$/;"	f	signature:()
s:is_bash	./vim82/indent/sh.vim	/^function! s:is_bash()$/;"	f	signature:()
s:is_case	./vim82/indent/sh.vim	/^function! s:is_case(line)$/;"	f	signature:(line)
s:is_case_break	./vim82/indent/sh.vim	/^function! s:is_case_break(line)$/;"	f	signature:(line)
s:is_case_empty	./vim82/indent/sh.vim	/^function! s:is_case_empty(line)$/;"	f	signature:(line)
s:is_case_ended	./vim82/indent/sh.vim	/^function! s:is_case_ended(line)$/;"	f	signature:(line)
s:is_case_label	./vim82/indent/sh.vim	/^function! s:is_case_label(line, pnum)$/;"	f	signature:(line,pnum)
s:is_case_tolerant	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:is_case_tolerant() abort$/;"	f	signature:()
s:is_case_tolerant	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_cmdwin	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f	signature:()
s:is_comment	./vim82/indent/sh.vim	/^function! s:is_comment(line)$/;"	f	signature:(line)
s:is_comparable	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^function! s:is_comparable(value1, value2) abort$/;"	f	signature:(value1,value2)
s:is_continuation_line	./vim82/indent/sh.vim	/^function! s:is_continuation_line(line)$/;"	f	signature:(line)
s:is_cygwin	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f	signature:()
s:is_cygwin	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f	signature:()
s:is_cygwin	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dict	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f	signature:(Value)
s:is_dict	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f	signature:(Value)
s:is_empty	./vim82/indent/sh.vim	/^function! s:is_empty(line)$/;"	f	signature:(line)
s:is_end_expression	./vim82/indent/sh.vim	/^function! s:is_end_expression(line)$/;"	f	signature:(line)
s:is_float	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f	signature:(Value)
s:is_float	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f	signature:(Value)
s:is_funcref	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f	signature:(Value)
s:is_funcref	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f	signature:(Value)
s:is_function_definition	./vim82/indent/sh.vim	/^function! s:is_function_definition(line)$/;"	f	signature:(line)
s:is_git_dir	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:is_git_dir(path) abort "{{{$/;"	f	signature:(path)
s:is_git_dir	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:is_git_dir(path) abort$/;"	f	signature:(path)
s:is_git_dir	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:is_git_dir(path) abort "{{{$/;"	f	signature:(path)
s:is_here_doc	./vim82/indent/sh.vim	/^function! s:is_here_doc(line)$/;"	f	signature:(line)
s:is_list	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f	signature:(Value)
s:is_list	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f	signature:(Value)
s:is_mac	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_mac() abort$/;"	f	signature:()
s:is_mac	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_mac() abort$/;"	f	signature:()
s:is_mac	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_macunix	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^let s:is_macunix = !s:is_mswin && !s:is_cygwin && (has('mac') || has('macunix') || has('gui_macv/;"	v
s:is_method_special_case	./vim82/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f	signature:(position)
s:is_mswin	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^let s:is_mswin = has('win16') || has('win32') || has('win64')$/;"	v
s:is_number	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f	signature:(Value)
s:is_number	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f	signature:(Value)
s:is_numeric	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f	signature:(Value)
s:is_numeric	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^function! s:is_numeric(value) abort$/;"	f	signature:(value)
s:is_numeric	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f	signature:(Value)
s:is_optional	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:is_optional(v) abort$/;"	f	signature:(v)
s:is_paren	./vim82/indent/clojure.vim	/^	function! s:is_paren()$/;"	f	signature:()
s:is_predicate	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^function! s:is_predicate(value) abort$/;"	f	signature:(value)
s:is_reader_conditional_special_case	./vim82/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f	signature:(position)
s:is_relative	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:is_relative(path) abort$/;"	f	signature:(path)
s:is_reset_ftplugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! s:is_reset_ftplugin(plugins) abort "{{{$/;"	f	signature:(plugins)
s:is_reset_ftplugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! s:is_reset_ftplugin(plugins) abort$/;"	f	signature:(plugins)
s:is_reset_ftplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! s:is_reset_ftplugin(plugins) abort "{{{$/;"	f	signature:(plugins)
s:is_root_directory	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^  function! s:is_root_directory(path) abort$/;"	f	signature:(path)
s:is_session_cache_enabled	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! s:is_session_cache_enabled()$/;"	f	signature:()
s:is_special	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^function! s:is_special(value) abort$/;"	f	signature:(value)
s:is_string	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f	signature:(Value)
s:is_string	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f	signature:(Value)
s:is_string_comment	./vim82/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f	signature:(lnum,col)
s:is_unix	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_unix() abort$/;"	f	signature:()
s:is_unix	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_unix() abort$/;"	f	signature:()
s:is_unix	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_uri	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:is_uri(str) abort$/;"	f	signature:(str)
s:is_vital_vim	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_windows	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^let s:is_windows = dein#util#_is_windows()$/;"	v
s:is_windows	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^let s:is_windows = has('win32') || has('win64')$/;"	v
s:is_windows	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^let s:is_windows = dein#util#_is_windows()$/;"	v
s:is_windows	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^let s:is_windows = has('win32') || has('win64')$/;"	v
s:is_windows	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^let s:is_windows = dein#util#_is_windows()$/;"	v
s:is_windows	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^let s:is_windows = has('win32') || has('win64')$/;"	v
s:is_windows	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:is_windows() abort$/;"	f	signature:()
s:is_windows	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:is_windows() abort$/;"	f	signature:()
s:is_windows	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:isabs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isabs(path)$/;"	f	signature:(path)
s:iscmdwin	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:iscmdwin()$/;"	f	signature:()
s:iskKeep	./vim82/syntax/vim.vim	/^ let s:iskKeep= &isk$/;"	v
s:ispathitem	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:ispathitem()$/;"	f	signature:()
s:isterminal	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:isterminal(buf)$/;"	f	signature:(buf)
s:itemization_pattern	./vim82/indent/rst.vim	/^let s:itemization_pattern = '^\\s*[-*+]\\s'$/;"	v
s:jedi_debug_info	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^function! s:jedi_debug_info()$/;"	f	signature:()
s:job	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^let s:job = {$/;"	v
s:job	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^let s:job = {$/;"	v
s:job_execute	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let s:job_execute = {}$/;"	v
s:job_execute.execute	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:job_execute.execute(cmd) abort$/;"	f	signature:(cmd)
s:job_execute.on_out	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:job_execute.on_out(data) abort$/;"	f	signature:(data)
s:job_handler	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:job_handler(id, msg, event) abort "{{{$/;"	f	signature:(id,msg,event)
s:job_handler	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:job_handler(id, msg, event) abort "{{{$/;"	f	signature:(id,msg,event)
s:job_handler_neovim	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:job_handler_neovim(job_id, data, event) abort "{{{$/;"	f	signature:(job_id,data,event)
s:job_handler_neovim	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:job_handler_neovim(job_id, data, event) abort "{{{$/;"	f	signature:(job_id,data,event)
s:job_handler_vim	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:job_handler_vim(channel, msg) abort "{{{$/;"	f	signature:(channel,msg)
s:job_handler_vim	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:job_handler_vim(channel, msg) abort "{{{$/;"	f	signature:(channel,msg)
s:job_info	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let s:job_info = {}$/;"	v
s:job_info	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let s:job_info = {}$/;"	v
s:join	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:join(...) abort$/;"	f	signature:(...)
s:join_paths	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:join_paths(path1, path2) abort "{{{$/;"	f	signature:(path1,path2)
s:join_paths	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:join_paths(path1, path2) abort$/;"	f	signature:(path1,path2)
s:join_paths	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:join_paths(path1, path2) abort "{{{$/;"	f	signature:(path1,path2)
s:join_posix_lines	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f	signature:(lines,...)
s:js_keywords	./vim82/indent/typescript.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\/;"	v
s:jump	./vim82/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f	signature:(command,count)
s:jumpToBookmark	./vimfiles/autoload/fuf/bookmarkfile.vim	/^function s:jumpToBookmark(path, mode, pattern, lnum)$/;"	f	signature:(path,mode,pattern,lnum)
s:jumpToChild	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f	signature:(currentNode,direction)
s:jumpToFirstChild	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f	signature:(node)
s:jumpToLastChild	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f	signature:(node)
s:jumpToNextSibling	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f	signature:(node)
s:jumpToParent	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f	signature:(node)
s:jumpToPrevSibling	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f	signature:(node)
s:jumpToRoot	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f	signature:()
s:jumpToSibling	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f	signature:(currentNode,forward)
s:jumpToTag	./vimfiles/autoload/fuf/buffertag.vim	/^function s:jumpToTag(item, mode)$/;"	f	signature:(item,mode)
s:just	./vimfiles/after/ftplugin/dot.vim	/^let s:just =  [$/;"	v
s:just	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:just =  [$/;"	v
s:just_inserted_rule_rx	./vim82/indent/make.vim	/^let s:just_inserted_rule_rx = '^\\s*[^#:]\\+:\\{1,2}$'$/;"	v
s:justify_equal_spacing	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f	signature:(str,width,...)
s:keepcpo	./vim82/autoload/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/context.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/contextcomplete.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/getscript.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/autoload/netrw.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/netrwFileHandlers.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/sqlcomplete.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/tar.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/vimball.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/autoload/xmlformat.vim	/^let s:keepcpo       = &cpo$/;"	v
s:keepcpo	./vim82/autoload/zip.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/context.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/decada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/g95.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/gfortran.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/gnat.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/hp_acc.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/ifort.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/intel.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/irix5_c.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/irix5_cpp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/mips_c.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/mipspro_c89.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/mipspro_cpp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/msbuild.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/compiler/xbuild.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/ftplugin/cs.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/ftplugin/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/ftplugin/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/ftplugin/php.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/ftplugin/pyrex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/ftplugin/python.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/context.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/css.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/eiffel.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/java.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/matlab.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/indent/meson.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/mp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/occam.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/python.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/scala.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/sqlanywhere.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/vim.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/xinetd.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/indent/xml.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_af_af.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_ca_es.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_chinese_gb.936.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_chinese_taiwan.950.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_cs_cz.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_cs_cz.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_czech_czech_republic.1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_czech_czech_republic.ascii.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_da.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_de_de.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_eo.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_es_es.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_fi_fi.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_fr_fr.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_hu_hu.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_hu_hu.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_is_is.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_it_it.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_ja_jp.euc-jp.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_ja_jp.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_japanese_japan.932.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_ko_kr.euckr.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_ko_kr.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_nl_nl.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_no_no.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_pl_pl.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_pl_pl.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_polish_poland.1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_pt_br.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_pt_pt.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_ru_ru.koi8-r.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_ru_ru.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sk_sk.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sl_si.cp1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sl_si.latin2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sl_si.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_slovak_slovak_republic.1250.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sr_rs.ascii.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sr_rs.iso_8859-2.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sr_rs.iso_8859-5.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sr_rs.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_sv_se.latin1.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_tr_tr.cp1254.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_tr_tr.iso_8859-9.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_tr_tr.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_uk_ua.cp1251.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_uk_ua.koi8-u.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_vi_vn.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_zh_cn.utf-8.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/lang/menu_zh_tw.utf-8.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/plugin/getscriptPlugin.vim	/^let s:keepcpo                = &cpo$/;"	v
s:keepcpo	./vim82/plugin/logiPat.vim	/^let s:keepcpo        = &cpo$/;"	v
s:keepcpo	./vim82/plugin/netrwPlugin.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/plugin/tarPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	./vim82/plugin/vimballPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:keepcpo	./vim82/plugin/zipPlugin.vim	/^let s:keepcpo          = &cpo$/;"	v
s:keepcpo	./vim82/syntax/ada.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/autoit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/datascript.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/eiffel.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/fvwm.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/gprof.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/lsl.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/perl6.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/po.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/sgmldecl.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/sil.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/syntax/swift.vim	/^let s:keepcpo = &cpo$/;"	v
s:keepcpo	./vim82/syntax/taskdata.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/taskedit.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/tex.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/valgrind.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vim82/syntax/vim.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vimfiles/autoload/DrawIt.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vimfiles/autoload/visincr.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	./vimfiles/plugin/DrawItPlugin.vim	/^let s:keepcpo             = &cpo$/;"	v
s:keepcpo	./vimfiles/plugin/cecutil.vim	/^let s:keepcpo        = &cpo$/;"	v
s:keepcpo	./vimfiles/plugin/visincrPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:kernels	./vim82/syntax/debcontrol.vim	/^let s:kernels = ['linux', 'hurd', 'kfreebsd', 'knetbsd', 'kopensolaris', 'netbsd']$/;"	v
s:keywords	./vim82/syntax/perl6.vim	/^let s:keywords = {$/;"	v
s:kind	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/kinds/dein.vim	/^let s:kind = {$/;"	v
s:kind	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/kinds/dein.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/kinds/dein.vim	/^let s:kind = {$/;"	v
s:kind	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/kinds/dein.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/kinds/dein.vim	/^let s:kind = {$/;"	v
s:kind	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/kinds/dein.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind.action_table.preview.func	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/kinds/dein.vim	/^function! s:kind.action_table.preview.func(candidate) abort "{{{$/;"	f	signature:(candidate)
s:kind.action_table.preview.func	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/kinds/dein.vim	/^function! s:kind.action_table.preview.func(candidate) abort$/;"	f	signature:(candidate)
s:kind.action_table.preview.func	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/kinds/dein.vim	/^function! s:kind.action_table.preview.func(candidate) abort "{{{$/;"	f	signature:(candidate)
s:known_options	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let s:known_options = {$/;"	v
s:kprange	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:kprange = {$/;"	v
s:lang	./vim82/menu.vim	/^      let s:lang = ""$/;"	v
s:lang	./vim82/menu.vim	/^      let s:lang = &langmenu$/;"	v
s:lang	./vim82/menu.vim	/^      let s:lang = s:lang . '.' . &enc$/;"	v
s:lang	./vim82/menu.vim	/^      let s:lang = substitute(s:lang, '\\.[^.]*', "", "")$/;"	v
s:lang	./vim82/menu.vim	/^    let s:lang = substitute(s:lang, " ", "_", "g")$/;"	v
s:lang	./vim82/menu.vim	/^    let s:lang = substitute(s:lang, "@euro", "", "")$/;"	v
s:lang	./vim82/menu.vim	/^    let s:lang = substitute(s:lang, '\\.iso8859', ".iso_8859", "")$/;"	v
s:lang	./vim82/menu.vim	/^    let s:lang = substitute(s:lang, 'iso_8859-15\\=$', "latin1", "")$/;"	v
s:lang	./vim82/menu.vim	/^    let s:lang = substitute(tolower(s:lang), '\\.iso-', ".iso_", "")$/;"	v
s:lang	./vim82/menu.vim	/^    let s:lang = v:lang$/;"	v
s:lang	./vim82/tutor/tutor.vim	/^      let s:lang = $LC_MESSAGES$/;"	v
s:lang	./vim82/tutor/tutor.vim	/^    let s:lang = $LANG$/;"	v
s:lang	./vim82/tutor/tutor.vim	/^    let s:lang = $LC_ALL$/;"	v
s:lang	./vim82/tutor/tutor.vim	/^    let s:lang = substitute(s:lang, '\\c@euro', '', '')$/;"	v
s:lang	./vim82/tutor/tutor.vim	/^    let s:lang = v:lang$/;"	v
s:lang	./vim82/tutor/tutor.vim	/^  let s:lang = ""$/;"	v
s:langExtensions	./vim82/autoload/haskellcomplete.vim	/^let s:langExtensions =$/;"	v
s:lash	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lash(...)$/;"	f	signature:(...)
s:lash	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^fu! s:lash(...)$/;"	f	signature:(...)
s:last_changedtick	./vim82/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_command	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^let s:last_command = 'EasyAlign'$/;"	v
s:last_mps	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^let s:last_words = ":"$/;"	v
s:lastvisual	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lastvisual()$/;"	f	signature:()
s:lazyredraw	./vim82/syntax/hitest.vim	/^let s:lazyredraw  = &lazyredraw$/;"	v
s:leading_operator_regex	./vim82/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*\\%(&\\=\\.\\)'$/;"	v
s:leavepre	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:leavepre()$/;"	f	signature:()
s:len	./vim82/syntax/2html.vim	/^	  let s:len = &columns$/;"	v
s:len	./vim82/syntax/2html.vim	/^    let s:len = strlen(s:line)$/;"	v
s:len	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:len = strlen(s:line)$/;"	v
s:length_pattern	./vim82/syntax/cdrtoc.vim	/^let s:length_pattern = '\\%(\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|/;"	v
s:letlim	./vim82/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letlim	./vim82/indent/sml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	./vim82/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:letpat	./vim82/indent/sml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|externa/;"	v
s:level	./vim82/syntax/2html.vim	/^      let s:level = match(foldtextresult(s:lnum), '+-*\\zs[^-]') - 2$/;"	v
s:levenshtein_distance	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f	signature:(str1,str2)
s:lex	./vim82/indent/dtd.vim	/^function s:lex(input, start, ...)$/;"	f	signature:(input,start,...)
s:lex1	./vim82/indent/dtd.vim	/^function s:lex1(input, start, ...)$/;"	f	signature:(input,start,...)
s:lgameownerinit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! s:lgameownerinit()$/;"	f	signature:()
s:libs	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:libs = [$/;"	v
s:like_uri	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:like_uri(str) abort$/;"	f	signature:(str)
s:lim	./vim82/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:lim	./vim82/indent/sml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line	./vim82/syntax/2html.vim	/^	  let s:line = s:line . repeat(' ', &columns - virtcol([s:lnum, s:len]) - s:margin)$/;"	v
s:line	./vim82/syntax/2html.vim	/^    let s:line = getline(s:lnum)$/;"	v
s:line	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:line = getline(s:lnum)$/;"	v
s:line	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:line = getline(s:lnum)$/;"	v
s:line1	./vim82/scripts.vim	/^    let s:line1 = substitute(s:line1, '\\<env\\s\\+', '', '')$/;"	v
s:line1	./vim82/scripts.vim	/^    let s:line1 = substitute(s:line1, '\\S\\+=\\S\\+', '', 'g')$/;"	v
s:line1	./vim82/scripts.vim	/^let s:line1 = getline(1)$/;"	v
s:line2	./vim82/scripts.vim	/^  let s:line2 = getline(2)$/;"	v
s:line3	./vim82/scripts.vim	/^  let s:line3 = getline(3)$/;"	v
s:line4	./vim82/scripts.vim	/^  let s:line4 = getline(4)$/;"	v
s:line5	./vim82/scripts.vim	/^  let s:line5 = getline(5)$/;"	v
s:lineContPat	./vim82/indent/vim.vim	/^let s:lineContPat = '^\\s*\\(\\\\\\|"\\\\ \\)'$/;"	v
s:line_term	./vim82/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	./vim82/indent/typescript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lineout	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:lineout(dict)$/;"	f	signature:(dict)
s:lines	./vim82/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	./vim82/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	./vim82/syntax/2html.vim	/^      let s:lines = readfile(s:main_plugin_path, "", 20)$/;"	v
s:lines	./vim82/syntax/2html.vim	/^    let s:lines[-1].="<\/span><\/span>"$/;"	v
s:lines	./vim82/syntax/2html.vim	/^let s:lines = []$/;"	v
s:lines	./vim82/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	./vim82/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."/;"	v
s:lines	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:lines(str) abort$/;"	f	signature:(str)
s:listAroundFiles	./vimfiles/autoload/fuf/mrufile.vim	/^function s:listAroundFiles(dir)$/;"	f	signature:(dir)
s:list_decide	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:list_decide(to_choose_from)$/;"	f	signature:(to_choose_from)
s:list_directory	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:list_directory(directory) abort "{{{$/;"	f	signature:(directory)
s:list_directory	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:list_directory(directory) abort$/;"	f	signature:(directory)
s:list_directory	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:list_directory(directory) abort "{{{$/;"	f	signature:(directory)
s:liststartregex	./vim82/indent/yaml.vim	/^let s:liststartregex='\\v^\\s*%(\\-%(\\ |$))'$/;"	v
s:live_easy_align_op	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:live_easy_align_op(type, ...)$/;"	f	signature:(type,...)
s:lmax	./vim82/ftplugin/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	./vim82/ftplugin/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	./vim82/indent/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	./vim82/indent/fortran.vim	/^    let s:lmax = 500$/;"	v
s:lmax	./vim82/syntax/fortran.vim	/^      let s:lmax = line("$")$/;"	v
s:lmax	./vim82/syntax/fortran.vim	/^    let s:lmax = 500$/;"	v
s:ln	./vim82/ftplugin/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	./vim82/ftplugin/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	./vim82/indent/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	./vim82/indent/fortran.vim	/^    let s:ln=1$/;"	v
s:ln	./vim82/syntax/fortran.vim	/^      let s:ln = s:ln + 1$/;"	v
s:ln	./vim82/syntax/fortran.vim	/^    let s:ln=1$/;"	v
s:lnum	./vim82/makemenu.vim	/^let s:lnum = line(".") - 1$/;"	v
s:lnum	./vim82/makemenu.vim	/^let s:lnum = s:lnum + 1$/;"	v
s:lnum	./vim82/optwin.vim	/^let s:lnum = line("$")$/;"	v
s:lnum	./vim82/scripts.vim	/^	let s:lnum += 1$/;"	v
s:lnum	./vim82/scripts.vim	/^      let s:lnum += 1$/;"	v
s:lnum	./vim82/scripts.vim	/^      let s:lnum = 1$/;"	v
s:lnum	./vim82/scripts.vim	/^    let s:lnum = 1$/;"	v
s:lnum	./vim82/syntax/2html.vim	/^      let s:lnum = s:lnum + 1$/;"	v
s:lnum	./vim82/syntax/2html.vim	/^    let s:lnum = 1$/;"	v
s:lnum	./vim82/syntax/2html.vim	/^    let s:lnum = s:new_lnum$/;"	v
s:lnum	./vim82/syntax/2html.vim	/^  let s:lnum = 1$/;"	v
s:lnum	./vim82/syntax/2html.vim	/^  let s:lnum = html_start_line$/;"	v
s:lnum	./vim82/syntax/2html.vim	/^  let s:lnum = s:lnum + 1$/;"	v
s:lnum	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:lnum = s:lnum + 1$/;"	v
s:lnum	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:lnum = 1$/;"	v
s:load	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:load(...) abort dict$/;"	f	signature:(...)
s:load	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! s:load()$/;"	f	signature:()
s:load	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:load(...) abort dict$/;"	f	signature:(...)
s:load	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:load(...) abort dict$/;"	f	signature:(...)
s:load_project_patterns	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:load_project_patterns(root_dir) abort$/;"	f	signature:(root_dir)
s:loaded	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:loaded = {}$/;"	v
s:loaded	./vimfiles/after/ftplugin/dot.vim	/^let s:loaded = 1$/;"	v
s:loaded	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:loaded = {}$/;"	v
s:loaded	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:loaded = {}$/;"	v
s:loaded	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:loaded = 1$/;"	v
s:loc	./vimfiles/after/ftplugin/dot.vim	/^let s:loc =  [$/;"	v
s:loc	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:loc =  [$/;"	v
s:lock_revision	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:lock_revision(process, context) abort "{{{$/;"	f	signature:(process,context)
s:lock_revision	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:lock_revision(process, context) abort$/;"	f	signature:(process,context)
s:lock_revision	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:lock_revision(process, context) abort "{{{$/;"	f	signature:(process,context)
s:log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:log(msg) abort "{{{$/;"	f	signature:(msg)
s:log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let s:log = []$/;"	v
s:log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:log(msg) abort$/;"	f	signature:(msg)
s:log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let s:log = []$/;"	v
s:log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:log(msg) abort "{{{$/;"	f	signature:(msg)
s:log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let s:log = []$/;"	v
s:log	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:log(m)$/;"	f	signature:(m)
s:login	./vim82/ftplugin/changelog.vim	/^  function! s:login()$/;"	f	signature:()
s:ls	./vim82/syntax/2html.vim	/^let s:ls  = &ls$/;"	v
s:lsCmd	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:lsCmd()$/;"	f	signature:()
s:ltrim	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:ltrim(str)$/;"	f	signature:(str)
s:luapath	./vim82/syntax/vim.vim	/^   let s:luapath= fnameescape(s:luapath)$/;"	v
s:luapath	./vim82/syntax/vim.vim	/^let s:luapath= fnameescape(expand("<sfile>:p:h")."\/lua.vim")$/;"	v
s:lz	./vim82/macros/less.vim	/^let s:lz = &lz$/;"	v
s:m	./vim82/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	./vim82/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:macro_end	./vim82/indent/sas.vim	/^let s:macro_end = '\\v%(^|;)\\s*\\%mend\\s*;'$/;"	v
s:macro_file_extension	./vimfiles/bundle/marvim/autoload/marvim.vim	/^let s:macro_file_extension = '.mv'.strpart(v:version,0,1)$/;"	v
s:macro_home	./vimfiles/bundle/marvim/marvim.vim	/^        let s:macro_home = g:marvim_store$/;"	v
s:macro_home	./vimfiles/bundle/marvim/marvim.vim	/^        let s:macro_home = g:marvim_store.s:path_seperator$/;"	v
s:macro_home	./vimfiles/bundle/marvim/marvim.vim	/^    let s:macro_home = $HOME."\/.marvim\/"$/;"	v
s:macro_home	./vimfiles/bundle/marvim/marvim.vim	/^    let s:macro_home = $HOME.'\\marvim\\' " under your documents and settings $/;"	v
s:macro_str	./vim82/indent/sas.vim	/^let s:macro_str = '\\v%(^|;)\\s*\\%macro>'$/;"	v
s:main_plugin_path	./vim82/syntax/2html.vim	/^    let s:main_plugin_path = expand("<sfile>:p:h:h")."\/plugin\/tohtml.vim"$/;"	v
s:make	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f	signature:(keys,values,...)
s:makeAdditionalMigemoPattern	./vimfiles/autoload/fuf.vim	/^function s:makeAdditionalMigemoPattern(pattern)$/;"	f	signature:(pattern)
s:makeArgumentList	./vimfiles/autoload/genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	./vimfiles/autoload/genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:makeCtagsCmd	./vimfiles/autoload/fuf/buffertag.vim	/^function s:makeCtagsCmd(bufNr)$/;"	f	signature:(bufNr)
s:makeFileAbbrInfo	./vimfiles/autoload/fuf.vim	/^function s:makeFileAbbrInfo(item, maxLenStats)$/;"	f	signature:(item,maxLenStats)
s:makeFuzzyMatchingExpr	./vimfiles/autoload/fuf.vim	/^function s:makeFuzzyMatchingExpr(target, pattern)$/;"	f	signature:(target,pattern)
s:makeItem	./vimfiles/autoload/fuf/buffer.vim	/^function s:makeItem(nr)$/;"	f	signature:(nr)
s:makeItem	./vimfiles/autoload/fuf/buffertag.vim	/^function s:makeItem(tag, itemMap)$/;"	f	signature:(tag,itemMap)
s:makeItem	./vimfiles/autoload/fuf/changelist.vim	/^function s:makeItem(line)$/;"	f	signature:(line)
s:makeItem	./vimfiles/autoload/fuf/jumplist.vim	/^function s:makeItem(line, bufnrPrev)$/;"	f	signature:(line,bufnrPrev)
s:makeItem	./vimfiles/autoload/fuf/quickfix.vim	/^function s:makeItem(qfItem)$/;"	f	signature:(qfItem)
s:makePartialMatchingExpr	./vimfiles/autoload/fuf.vim	/^function s:makePartialMatchingExpr(target, pattern)$/;"	f	signature:(target,pattern)
s:makeRefiningExpr	./vimfiles/autoload/fuf.vim	/^function s:makeRefiningExpr(pattern)$/;"	f	signature:(pattern)
s:make_index	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f	signature:(list,...)
s:man_find_arg	./vim82/ftplugin/man.vim	/^    let s:man_find_arg = "-l"$/;"	v
s:man_find_arg	./vim82/ftplugin/man.vim	/^let s:man_find_arg = "-w"$/;"	v
s:man_sect_arg	./vim82/ftplugin/man.vim	/^    let s:man_sect_arg = "-s"$/;"	v
s:man_sect_arg	./vim82/ftplugin/man.vim	/^let s:man_sect_arg = ""$/;"	v
s:man_tag_depth	./vim82/ftplugin/man.vim	/^let s:man_tag_depth = 0$/;"	v
s:map	./vim82/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f	signature:(mode,flags,map)
s:map	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:map(x, f) abort$/;"	f	signature:(x,f)
s:map_accum	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f	signature:(expr,xs,init)
s:mapargrec	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! s:mapargrec(map, mode) abort "{{{$/;"	f	signature:(map,mode)
s:mapargrec	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! s:mapargrec(map, mode) abort$/;"	f	signature:(map,mode)
s:mapargrec	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! s:mapargrec(map, mode) abort "{{{$/;"	f	signature:(map,mode)
s:mapkeyregex	./vim82/indent/yaml.vim	/^let s:mapkeyregex='\\v^\\s*\\#@!\\S@=%(\\''%([^'']|\\''\\'')*\\'''.$/;"	v
s:mapping	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:mapping = [$/;"	v
s:margin	./vim82/syntax/2html.vim	/^  let s:margin = 0$/;"	v
s:margin	./vim82/syntax/2html.vim	/^  let s:margin = strlen(s:end) + 1$/;"	v
s:marvim_store	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let s:marvim_store = $HOME."\/.marvim\/"$/;"	v
s:marvim_store	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let s:marvim_store = $HOME.'\\marvim\\' " Under your documents and settings$/;"	v
s:match_one	./vim82/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f	signature:(patterns,string)
s:match_pairs	./vim82/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f	signature:(open,close,stopat)
s:match_window_opts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:match_window_opts()$/;"	f	signature:()
s:match_words	./vim82/ftplugin/aspvbs.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	./vim82/ftplugin/aspvbs.vim	/^let s:match_words = ""$/;"	v
s:match_words	./vim82/ftplugin/config.vim	/^let s:match_words = ""$/;"	v
s:match_words	./vim82/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	./vim82/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	./vim82/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	./vim82/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	./vim82/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	./vim82/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	./vim82/ftplugin/jsp.vim	/^    let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	./vim82/ftplugin/jsp.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	./vim82/ftplugin/jsp.vim	/^let s:match_words = ""$/;"	v
s:match_words	./vim82/ftplugin/php.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	./vim82/ftplugin/php.vim	/^let s:match_words = ""$/;"	v
s:match_words	./vim82/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words . "," . s:match_words$/;"	v
s:match_words	./vim82/ftplugin/xhtml.vim	/^    let s:match_words = b:match_words$/;"	v
s:match_words	./vim82/ftplugin/xhtml.vim	/^let s:match_words = ""$/;"	v
s:matchbuf	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchbuf(item, pat)$/;"	f	signature:(item,pat)
s:matchfname	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchfname(item, pat)$/;"	f	signature:(item,pat)
s:matchlens	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchlens(str, pat, ...)$/;"	f	signature:(str,pat,...)
s:matchtabe	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabe(item, pat)$/;"	f	signature:(item,pat)
s:matchtabs	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:matchtabs(item, pat)$/;"	f	signature:(item,pat)
s:max	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:max(len, max)$/;"	f	signature:(len,max)
s:max_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f	signature:(dict,expr)
s:max_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f	signature:(list,expr)
s:maxdelay	./vimfiles/plugin/matrix.vim	/^let s:maxdelay = 5$/;"	v
s:maxf	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:maxf(len)$/;"	f	signature:(len)
s:maxoff	./vim82/indent/bzl.vim	/^let s:maxoff = 50$/;"	v
s:maxoff	./vim82/indent/meson.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	./vim82/indent/python.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:maxoff	./vim82/indent/zimbu.vim	/^let s:maxoff = 50	" maximum number of lines to look backwards for ()$/;"	v
s:menu_char_prefix	./vimfiles/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:merge_files	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:merge_files(plugins, directory) abort "{{{$/;"	f	signature:(plugins,directory)
s:merge_files	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:merge_files(plugins, directory) abort$/;"	f	signature:(plugins,directory)
s:merge_files	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:merge_files(plugins, directory) abort "{{{$/;"	f	signature:(plugins,directory)
s:mergelists	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:mergelists()$/;"	f	signature:()
s:mfunc	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mfunc()$/;"	f	signature:()
s:min_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f	signature:(dict,expr)
s:min_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f	signature:(list,expr)
s:mindelay	./vimfiles/plugin/matrix.vim	/^let s:mindelay = 1$/;"	v
s:mixedsort	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mixedsort(...)$/;"	f	signature:(...)
s:mkdir_nothrow	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:mkdir_nothrow(...) abort$/;"	f	signature:(...)
s:mmode	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mmode()$/;"	f	signature:()
s:mmssff_pattern	./vim82/syntax/cdrtoc.vim	/^let s:mmssff_pattern = '\\%([0-5]\\d\\|\\d\\):\\%([0-5]\\d\\|\\d\\):\\%([0-6]\\d\\|7[0-5]\\|\\d\\/;"	v
s:modeNames	./vimfiles/autoload/fuf.vim	/^let s:modeNames = []$/;"	v
s:mode_labels	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let s:mode_labels = { 'l': '', 'r': '[R]', 'c': '[C]' }$/;"	v
s:modeline	./vim82/ftplugin/ocaml.vim	/^let s:modeline = lnum? getline(lnum): ""$/;"	v
s:modes	./vimfiles/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	./vimfiles/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:modevar	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:modevar()$/;"	f	signature:()
s:modifier	./vimfiles/plugin/cecutil.vim	/^ let s:modifier= "sil "$/;"	v
s:modifier	./vimfiles/plugin/cecutil.vim	/^ let s:modifier= "sil keepj "$/;"	v
s:modify	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:modify(entry, type)$/;"	f	signature:(entry,type)
s:module	./vim82/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module	./vim82/indent/sml.vim	/^let s:module = '\\<\\%(let\\|sig\\|struct\\)\\>'$/;"	v
s:moduleobjlist	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^let s:moduleobjlist=[]$/;"	v
s:more	./vim82/syntax/hitest.vim	/^let s:more	  = &more$/;"	v
s:move	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:move(src, dest) abort$/;"	f	signature:(src,dest)
s:moveToOtherTabpageOpeningBuffer	./vimfiles/autoload/l9.vim	/^function s:moveToOtherTabpageOpeningBuffer(bufNr)$/;"	f	signature:(bufNr)
s:move_around	./vim82/ftplugin/context.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f	signature:(count,what,flags,visual)
s:move_around	./vim82/ftplugin/mf.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f	signature:(count,what,flags,visual)
s:move_around	./vim82/ftplugin/mp.vim	/^function! s:move_around(count, what, flags, visual)$/;"	f	signature:(count,what,flags,visual)
s:move_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:move_exe() abort$/;"	f	signature:()
s:move_exe	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:move_exe(src, dest) abort$/;"	f	signature:(src,dest)
s:move_vim	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:move_vim(src, dest) abort$/;"	f	signature:(src,dest)
s:mp_regex	./vim82/ftplugin/mf.vim	/^let s:mp_regex = {$/;"	v
s:mp_regex	./vim82/ftplugin/mp.vim	/^let s:mp_regex = {$/;"	v
s:mruf_map_string	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^let s:mruf_map_string = '!stridx(v:val, cwd) ? strpart(v:val, idx) : v:val'$/;"	v
s:msg	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:msg(name, cwd)$/;"	f	signature:(name,cwd)
s:msg2list	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! s:msg2list(expr) abort "{{{$/;"	f	signature:(expr)
s:msg2list	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:msg2list(expr) abort$/;"	f	signature:(expr)
s:msg2list	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! s:msg2list(expr) abort "{{{$/;"	f	signature:(expr)
s:msl_regex	./vim82/indent/typescript.vim	/^let s:msl_regex = s:continuation_regex$/;"	v
s:mtype	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:mtype()$/;"	f	signature:()
s:multilineFunctionCall	./vim82/indent/php.vim	/^let s:multilineFunctionCall = s:PHP_validVariable.'\\s*('.s:endline$/;"	v
s:multilineFunctionDecl	./vim82/indent/php.vim	/^let s:multilineFunctionDecl = s:functionDeclPrefix.s:endline$/;"	v
s:multipliers	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:multipliers(...)$/;"	f	signature:(...)
s:mySNR	./vimfiles/autoload/genutils.vim	/^let s:mySNR = ''$/;"	v
s:my_syncolor	./vim82/syntax/doxygen.vim	/^    let s:my_syncolor=1$/;"	v
s:my_syncolor	./vim82/syntax/doxygen.vim	/^  let s:my_syncolor=0$/;"	v
s:my_synlink	./vim82/syntax/doxygen.vim	/^    let s:my_synlink=1$/;"	v
s:my_synlink	./vim82/syntax/doxygen.vim	/^  let s:my_synlink=0$/;"	v
s:mycmd_cmds	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mycmd.vim	/^let s:mycmd_cmds =[$/;"	v
s:myp4_cmds	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/myp4.vim	/^let s:myp4_cmds =[$/;"	v
s:mysplit	./vimfiles/bundle/ctrlp.chiyl.vim/autoload/ctrlp/mylowner.vim	/^function! s:mysplit(line,seq)$/;"	f	signature:(line,seq)
s:mzschemepath	./vim82/syntax/vim.vim	/^   let s:mzschemepath= fnameescape(s:mzschemepath)$/;"	v
s:mzschemepath	./vim82/syntax/vim.vim	/^let s:mzschemepath= fnameescape(expand("<sfile>:p:h")."\/scheme.vim")$/;"	v
s:n	./vim82/syntax/2html.vim	/^	let s:n = 2$/;"	v
s:n	./vim82/syntax/2html.vim	/^      let s:n = s:n - 1$/;"	v
s:n	./vim82/syntax/2html.vim	/^    let s:n = s:filler$/;"	v
s:name	./vim82/ftplugin/changelog.vim	/^  function! s:name(login)$/;"	f	signature:(login)
s:name	./vim82/scripts.vim	/^    let s:name = 'wish'$/;"	v
s:name	./vim82/scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	./vim82/scripts.vim	/^    let s:name = substitute(s:line1, '^#!.*\\<env\\>\\s\\+\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	./vim82/scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\([^\/\\\\ ]*\\>\\).*', '\\1', '')$/;"	v
s:name	./vim82/scripts.vim	/^    let s:name = substitute(s:line1, '^#!\\s*\\S*[\/\\\\]\\(\\i\\+\\).*', '\\1', '')$/;"	v
s:name	./vimfiles/plugin/bufexplorer.vim	/^let s:name = '[BufExplorer]'$/;"	v
s:names	./vim82/syntax/ruby.vim	/^let s:names = { '~': 'Tilde', '`': 'BackQuote', '!': 'Bang', '@': 'At', '#': 'Hash', '$': 'Dolla/;"	v
s:narrowable	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:narrowable()$/;"	f	signature:()
s:need_trans	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:needpatch	./vim82/autoload/netrw.vim	/^   let s:needpatch{ptch}= 1$/;"	v
s:needspatches	./vim82/autoload/netrw.vim	/^let s:needspatches=[1557,213]$/;"	v
s:neovim_version	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:neovim_version() abort$/;"	f	signature:()
s:netrw_ftp_cmd	./vim82/autoload/netrw.vim	/^let s:netrw_ftp_cmd= g:netrw_ftp_cmd$/;"	v
s:netrw_has_nt_rcp	./vim82/autoload/netrw.vim	/^ let s:netrw_has_nt_rcp = 0$/;"	v
s:netrw_has_nt_rcp	./vim82/autoload/netrw.vim	/^ let s:netrw_has_nt_rcp = 1$/;"	v
s:netrw_rcpmode	./vim82/autoload/netrw.vim	/^ let s:netrw_rcpmode    = ''$/;"	v
s:netrw_rcpmode	./vim82/autoload/netrw.vim	/^ let s:netrw_rcpmode    = '-b'$/;"	v
s:netrw_usercuc	./vim82/autoload/netrw.vim	/^let s:netrw_usercuc = &cursorcolumn$/;"	v
s:netrw_usercul	./vim82/autoload/netrw.vim	/^let s:netrw_usercul = &cursorline$/;"	v
s:new	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:new(plugin_name) abort$/;"	f	signature:(plugin_name)
s:new	./vim82/syntax/2html.vim	/^	    let s:new .= s:FoldColumn_build('|', s:allfolds[0].level - 1, s:extra_space, '-',$/;"	v
s:new	./vim82/syntax/2html.vim	/^	    let s:new = s:new . s:FoldColumn_build("-", 1, s:extra_space, "",$/;"	v
s:new	./vim82/syntax/2html.vim	/^	    let s:new = s:new . s:FoldColumn_build('|', s:allfolds[0].level - 1, 0, "",$/;"	v
s:new	./vim82/syntax/2html.vim	/^	    let s:new = s:new . s:FoldColumn_build('|', s:foldstack[0].level, s:foldcolumn - s:foldstac/;"	v
s:new	./vim82/syntax/2html.vim	/^	    let s:new = s:new . s:FoldColumn_fill()$/;"	v
s:new	./vim82/syntax/2html.vim	/^	  let s:new = s:new . s:FoldColumn_build(" ", 1, s:foldcolumn - s:allfolds[0].level - 1, "",$/;"	v
s:new	./vim82/syntax/2html.vim	/^	  let s:new = s:new . s:FoldColumn_build("+", 1, 0, "",$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new .= "<span id='"$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new .= "fold".s:foldId.s:settings.id_suffix."' class='".s:allfolds[0].type."'>"$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new .= (exists('g:html_diff_win_num') ? "win".g:html_diff_win_num : "")$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:FoldColumn_fill() . s:new$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:HtmlFormat_n(repeat(' ', s:margin), s:LINENR_ID, 0, 0) . s:new$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:new . " " . s:filler . " inserted lines "$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:new . "<span class='fulltext'>"$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:new . (s:settings.number_lines ? s:HtmlFormat_n(s:numcol, s:FOLDED_ID, 0, 0) : ""/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, &columns - strlen(s:new) - s:margin)$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:new . repeat(s:difffillchar, 3)$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:new . s:HtmlFormat(s:expandedtab,  s:id, s:diff_id, "", 0)$/;"	v
s:new	./vim82/syntax/2html.vim	/^	let s:new = s:new."<\/span><\/span>"$/;"	v
s:new	./vim82/syntax/2html.vim	/^      let s:new = repeat(s:difffillchar, 3)$/;"	v
s:new	./vim82/syntax/2html.vim	/^      let s:new = s:HtmlFormat_d(s:new, s:DIFF_D_ID, 0)$/;"	v
s:new	./vim82/syntax/2html.vim	/^      let s:new = s:new . repeat(s:foldfillchar, &columns - strlen(s:new))$/;"	v
s:new	./vim82/syntax/2html.vim	/^      let s:new = s:new . s:HtmlFormat_n("", s:LINENR_ID, 0, s:lnum)$/;"	v
s:new	./vim82/syntax/2html.vim	/^      let s:new = s:new . s:HtmlFormat_n(s:numcol, s:LINENR_ID, 0, s:lnum)$/;"	v
s:new	./vim82/syntax/2html.vim	/^    let s:new = (s:settings.number_lines ? s:HtmlFormat_n(s:numcol, s:FOLDED_ID, 0, s:lnum): "")/;"	v
s:new	./vim82/syntax/2html.vim	/^    let s:new = foldtextresult(s:lnum)$/;"	v
s:new	./vim82/syntax/2html.vim	/^  let s:new = ""$/;"	v
s:new	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^function! s:new(config) abort$/;"	f	signature:(config)
s:new	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:new(v, ...) abort$/;"	f	signature:(v,...)
s:new	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:new(uri, ...) abort$/;"	f	signature:(uri,...)
s:new	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:new(plugin_name) abort$/;"	f	signature:(plugin_name)
s:new	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:new(plugin_name) abort$/;"	f	signature:(plugin_name)
s:new	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:new = '<span class="lnr">' . strpart('        ', 0, strlen(line("$")) - strlen(s:lnum)/;"	v
s:new	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:new = s:new . '<span class="c' . s:id . '">' . substitute(substitute(substitute(substi/;"	v
s:new	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:new = ""$/;"	v
s:new_changelog_entry	./vim82/ftplugin/changelog.vim	/^  function! s:new_changelog_entry(prefix)$/;"	f	signature:(prefix)
s:new_default_pattern_set	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:new_default_pattern_set() abort$/;"	f	signature:()
s:new_default_source	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^function! s:new_default_source() abort$/;"	f	signature:()
s:new_from_excmd	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Opener.vim	/^function! s:new_from_excmd(excmd) abort$/;"	f	signature:(excmd)
s:new_from_seq_string	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:new_from_seq_string(uri, ...) abort$/;"	f	signature:(uri,...)
s:new_from_shellcmd	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Opener.vim	/^function! s:new_from_shellcmd(system_args, background, use_vimproc) abort$/;"	f	signature:(system_args,background,use_vimproc)
s:new_from_uri_like_string	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^function! s:new_from_uri_like_string(str, ...) abort$/;"	f	signature:(str,...)
s:new_line_echom	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:new_line_echom(message)$/;"	f	signature:(message)
s:new_lnum	./vim82/syntax/2html.vim	/^    let s:new_lnum = foldclosedend(s:lnum)$/;"	v
s:new_user_var_source	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^function! s:new_user_var_source(prefix) abort$/;"	f	signature:(prefix)
s:newcache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mixed.vim	/^fu! s:newcache(cwd)$/;"	f	signature:(cwd)
s:newfold	./vim82/syntax/2html.vim	/^	let s:newfold.type = "open-fold"$/;"	v
s:newfold	./vim82/syntax/2html.vim	/^      let s:newfold = {'firstline': s:lnum, 'lastline': foldclosedend(s:lnum), 'level': s:level,/;"	v
s:newline	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:newline = "\\\\n"$/;"	v
s:newline_character	./vimfiles/bundle/previm/autoload/previm.vim	/^let s:newline_character = "\\n"$/;"	v
s:newwin	./vim82/syntax/2html.vim	/^let s:newwin = winnr()$/;"	v
s:newwin_stl	./vim82/syntax/2html.vim	/^let s:newwin_stl = &l:stl$/;"	v
s:nm	./vim82/syntax/rmd.vim	/^    let s:nm  = s:type$/;"	v
s:nm	./vim82/syntax/rmd.vim	/^    let s:nm = substitute(s:type, '=.*', '', '')$/;"	v
s:no_indent	./vim82/indent/eiffel.vim	/^let s:no_indent = '^\\s*\\(class\\|feature\\|creation\\|inherit\\)\\>'$/;"	v
s:nocache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nocache(...)$/;"	f	signature:(...)
s:nocache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/dir.vim	/^fu! s:nocache()$/;"	f	signature:()
s:nocache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/rtscript.vim	/^fu! s:nocache()$/;"	f	signature:()
s:non_bracket_continuation_regex	./vim82/indent/falcon.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]/;"	v
s:non_bracket_continuation_regex	./vim82/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:none	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:none() abort$/;"	f	signature:()
s:nonskip_error	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:nonskip_error(msg) abort "{{{$/;"	f	signature:(msg)
s:nonskip_error	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:nonskip_error(msg) abort "{{{$/;"	f	signature:(msg)
s:normalize_options	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:normalize_options(opts)$/;"	f	signature:(opts)
s:nosort	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosort()$/;"	f	signature:()
s:nosplit	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:nosplit()$/;"	f	signature:()
s:notPhpHereDoc	./vim82/indent/php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|die\\|else\\|end\\%(if\\|while\\|f/;"	v
s:not_end	./vim82/ftplugin/framescript.vim	/^  let s:not_end = '\\c\\%(\\<End\\)\\@<!'$/;"	v
s:notag	./vim82/ftplugin/pdf.vim	/^function! s:notag()$/;"	f	signature:()
s:note_pattern	./vim82/indent/rst.vim	/^let s:note_pattern = '^\\.\\. '$/;"	v
s:notelse	./vim82/ftplugin/fortran.vim	/^  let s:notelse = '\\%(\\<end\\s\\+\\|\\<else\\s\\+\\)\\@<!'$/;"	v
s:notend	./vim82/ftplugin/ada.vim	/^   let s:notend      = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	./vim82/ftplugin/aspvbs.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	./vim82/ftplugin/fortran.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	./vim82/ftplugin/sql.vim	/^let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notend	./vim82/ftplugin/vhdl.vim	/^  let s:notend = '\\%(\\<end\\s\\+\\)\\@<!'$/;"	v
s:notify	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:notify(msg) abort "{{{$/;"	f	signature:(msg)
s:notify	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:notify(msg) abort$/;"	f	signature:(msg)
s:notify	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:notify(msg) abort "{{{$/;"	f	signature:(msg)
s:notifyWindow	./vimfiles/autoload/genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:notprocedure	./vim82/ftplugin/fortran.vim	/^  let s:notprocedure = '\\%(\\s\\+procedure\\>\\)\\@!'$/;"	v
s:notselect	./vim82/ftplugin/fortran.vim	/^  let s:notselect = '\\%(\\<select\\s\\+\\)\\@<!'$/;"	v
s:notslash	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^let s:notslash = '\\\\\\@1<!\\%(\\\\\\\\\\)*'$/;"	v
s:nr2byte	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f	signature:(nr)
s:nr2enc_char	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f	signature:(charcode)
s:nr2hex	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f	signature:(nr)
s:ns_char	./vim82/syntax/yaml.vim	/^let s:ns_char = '\\%([\\n\\r\\uFEFF \\t]\\@!\\p\\)'$/;"	v
s:ns_char	./vim82/syntax/yaml.vim	/^let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)$/;"	v
s:ns_char_without_c_indicator	./vim82/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator/;"	v
s:ns_char_without_c_indicator	./vim82/syntax/yaml.vim	/^let s:ns_char_without_c_indicator = substitute(s:ns_char, '\\v\\C[\\zs', '\\=s:c_indicator[1:-2]/;"	v
s:ns_directive_name	./vim82/syntax/yaml.vim	/^let s:ns_directive_name = s:ns_char.'\\+'$/;"	v
s:ns_global_tag_prefix	./vim82/syntax/yaml.vim	/^let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'$/;"	v
s:ns_local_tag_prefix	./vim82/syntax/yaml.vim	/^let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'$/;"	v
s:ns_plain_char_in	./vim82/syntax/yaml.vim	/^let s:ns_plain_char_in  = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_in.'\\|'.s:ns_plain_safe_in_w/;"	v
s:ns_plain_char_out	./vim82/syntax/yaml.vim	/^let s:ns_plain_char_out = '\\%('.s:ns_char.'#\\|:'.s:ns_plain_safe_out.'\\|'.s:ns_plain_safe_out/;"	v
s:ns_plain_first_in	./vim82/syntax/yaml.vim	/^let s:ns_plain_first_in  = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_first_out	./vim82/syntax/yaml.vim	/^let s:ns_plain_first_out = '\\%('.s:ns_char_without_c_indicator.'\\|[?:\\-]\\%('.s:ns_plain_safe/;"	v
s:ns_plain_in	./vim82/syntax/yaml.vim	/^let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'$/;"	v
s:ns_plain_out	./vim82/syntax/yaml.vim	/^let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'$/;"	v
s:ns_plain_safe_in	./vim82/syntax/yaml.vim	/^let s:ns_plain_safe_in  = '\\%('.s:c_flow_indicator.'\\@!'.s:ns_char.'\\)'$/;"	v
s:ns_plain_safe_in	./vim82/syntax/yaml.vim	/^let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\\V\\C\\\\%('.s:_collection.'\\\\@!'.s:/;"	v
s:ns_plain_safe_in_without_colhash	./vim82/syntax/yaml.vim	/^let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\\V\\C'.s:_neg_collecti/;"	v
s:ns_plain_safe_out	./vim82/syntax/yaml.vim	/^let s:ns_plain_safe_out = s:ns_char$/;"	v
s:ns_plain_safe_out_without_colhash	./vim82/syntax/yaml.vim	/^let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\\V\\C'.s:_neg_collec/;"	v
s:ns_tag_char	./vim82/indent/yaml.vim	/^let s:ns_tag_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'|[#\/;?:@&=+$.~*''()])'$/;"	v
s:ns_tag_char	./vim82/syntax/yaml.vim	/^let s:ns_tag_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$.~*''()]\\)'$/;"	v
s:ns_tag_char	./vim82/syntax/yaml.vim	/^let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)$/;"	v
s:ns_tag_prefix	./vim82/syntax/yaml.vim	/^let s:ns_tag_prefix = s:ns_local_tag_prefix.$/;"	v
s:ns_to_filenames	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:ns_to_filenames(marvim_path)$/;"	f	signature:(marvim_path)
s:ns_uri_char	./vim82/indent/yaml.vim	/^let s:ns_uri_char  = '\\v%(%\\x\\x|'.s:ns_word_char.'\\v|[#\/;?:@&=+$,.!~*''()[\\]])'$/;"	v
s:ns_uri_char	./vim82/syntax/yaml.vim	/^let s:ns_uri_char  = '\\%(%\\x\\x\\|'.s:ns_word_char.'\\|[#\/;?:@&=+$,.!~*''()[\\]]\\)'$/;"	v
s:ns_uri_char	./vim82/syntax/yaml.vim	/^let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)$/;"	v
s:ns_word_char	./vim82/indent/yaml.vim	/^let s:ns_word_char = '\\v[[:alnum:]_\\-]'$/;"	v
s:ns_word_char	./vim82/syntax/yaml.vim	/^let s:ns_word_char = '[[:alnum:]_\\-]'$/;"	v
s:nsplit	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f	signature:(expr,n,...)
s:numblines	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:numblines = &number$/;"	v
s:numblines	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:numblines = html_number_lines$/;"	v
s:numcol	./vim82/syntax/2html.vim	/^    let s:numcol = repeat(' ', s:margin - 1 - strlen(s:lnum)) . s:lnum . ' '$/;"	v
s:obj	./vim82/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:obj	./vim82/indent/sml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|ob/;"	v
s:ocaml_word_char	./vim82/ftplugin/ocaml.vim	/^    let s:ocaml_word_char = '\\w|[.*-.*]|'''$/;"	v
s:offset	./vim82/syntax/2html.vim	/^	    let s:offset -= s:i - 1$/;"	v
s:offset	./vim82/syntax/2html.vim	/^	  let s:offset = 0$/;"	v
s:offset	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:offset(lines, height)$/;"	f	signature:(lines,height)
s:old_bind	./vim82/syntax/2html.vim	/^let s:old_bind = &l:scrollbind$/;"	v
s:old_cpo	./vimfiles/bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	./vimfiles/bundle/vmustache/tests/test012_bug_render_list_empty.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	./vimfiles/bundle/vmustache/tests/test014_counter.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	./vimfiles/bundle/vmustache/tests/test015_complex_snipmate.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_et	./vim82/syntax/2html.vim	/^let s:old_et = &l:et$/;"	v
s:old_et	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:old_et = &l:et$/;"	v
s:old_fen	./vim82/syntax/2html.vim	/^let s:old_fen = &foldenable$/;"	v
s:old_icon	./vim82/optwin.vim	/^let s:old_icon = &icon$/;"	v
s:old_icon	./vim82/syntax/2html.vim	/^let s:old_icon = &icon$/;"	v
s:old_icon	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:old_icon = &icon$/;"	v
s:old_isprint	./vim82/syntax/2html.vim	/^  let s:old_isprint = &isprint$/;"	v
s:old_magic	./vim82/syntax/2html.vim	/^let s:old_magic = &magic$/;"	v
s:old_more	./vim82/syntax/2html.vim	/^let s:old_more = &more$/;"	v
s:old_paste	./vim82/syntax/2html.vim	/^let s:old_paste = &paste$/;"	v
s:old_paste	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:old_paste = &paste$/;"	v
s:old_report	./vim82/syntax/2html.vim	/^let s:old_report = &report$/;"	v
s:old_report	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:old_report = &report$/;"	v
s:old_ru	./vim82/optwin.vim	/^let s:old_ru = &ru$/;"	v
s:old_sc	./vim82/optwin.vim	/^let s:old_sc = &sc$/;"	v
s:old_search	./vim82/syntax/2html.vim	/^let s:old_search = @\/$/;"	v
s:old_spec	./vim82/syntax/rst.vim	/^    let s:old_spec = g:rst_syntax_code_list$/;"	v
s:old_style	./vim82/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:old_title	./vim82/optwin.vim	/^let s:old_title = &title$/;"	v
s:old_title	./vim82/syntax/2html.vim	/^let s:old_title = &title$/;"	v
s:old_title	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^let s:old_title = &title$/;"	v
s:old_ul	./vim82/optwin.vim	/^let s:old_ul = &ul$/;"	v
s:old_winfixheight	./vim82/syntax/2html.vim	/^let s:old_winfixheight = &l:winfixheight$/;"	v
s:old_winheight	./vim82/syntax/2html.vim	/^let s:old_winheight = winheight(0)$/;"	v
s:oldcolumn	./vim82/syntax/lhaskell.vim	/^let s:oldcolumn=col(".")$/;"	v
s:oldcpo	./vim82/syntax/tcsh.vim	/^let s:oldcpo = &cpo$/;"	v
s:oldline	./vim82/syntax/lhaskell.vim	/^let s:oldline=line(".")$/;"	v
s:omit	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f	signature:(dict,keys)
s:onBufDelete	./vimfiles/autoload/l9/tempbuffer.vim	/^function s:onBufDelete(bufname)$/;"	f	signature:(bufname)
s:onBufWriteCmd	./vimfiles/autoload/l9/tempbuffer.vim	/^function s:onBufWriteCmd(bufname)$/;"	f	signature:(bufname)
s:onCommandPre	./vimfiles/autoload/fuf.vim	/^function s:onCommandPre()$/;"	f	signature:()
s:on_hold	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:on_hold() abort "{{{$/;"	f	signature:()
s:on_hold	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:on_hold() abort "{{{$/;"	f	signature:()
s:oneProbe	./vim82/syntax/dtrace.vim	/^let s:oneProbe = '\\%(BEGIN\\|END\\|ERROR\\|\\S\\{-}:\\S\\{-}:\\S\\{-}:\\S\\{-}\\)\\_s*'$/;"	v
s:oneTimeVariables	./vimfiles/autoload/fuf.vim	/^let s:oneTimeVariables = []$/;"	v
s:one_line_scope_regex	./vim82/indent/typescript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:open	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:open(buffer, ...) abort$/;"	f	signature:(buffer,...)
s:open	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^function! s:open(filename) abort$/;"	f	signature:(filename)
s:openExplorer	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f	signature:(node)
s:openHSplit	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f	signature:(target)
s:openInNewTab	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f	signature:(target)
s:openInNewTabSilent	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f	signature:(target)
s:openNodeRecursively	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f	signature:(node)
s:openVSplit	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f	signature:(target)
s:open_changelog	./vim82/ftplugin/changelog.vim	/^  function! s:open_changelog()$/;"	f	signature:()
s:open_pat	./vim82/indent/matlab.vim	/^let s:open_pat = 'for\\|if\\|parfor\\|spmd\\|switch\\|try\\|while\\|classdef\\|properties\\|meth/;"	v
s:openfile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:openfile(cmd, fid, tail, chkmod, ...)$/;"	f	signature:(cmd,fid,tail,chkmod,...)
s:opfirst	./vim82/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:option	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:option.restore	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f	signature:()
s:option_values	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let s:option_values = {$/;"	v
s:optionalblock	./vim82/indent/cobol.vim	/^function! s:optionalblock(lnum,ind,blocks,clauses)$/;"	f	signature:(lnum,ind,blocks,clauses)
s:optionsGHC	./vim82/autoload/haskellcomplete.vim	/^let s:optionsGHC =$/;"	v
s:opts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:opts(...)$/;"	f	signature:(...)
s:or	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:or(xs) abort$/;"	f	signature:(xs)
s:or_replace	./vim82/ftplugin/sql.vim	/^let s:or_replace = '\\%(or\\s\\+replace\\s\\+\\)\\?'$/;"	v
s:orders	./vim82/syntax/hostconf.vim	/^let s:orders = ['bind', 'hosts', 'nis']$/;"	v
s:ordot	./vim82/ftplugin/cobol.vim	/^    let s:ordot = '\\|\\ze\\.\\%( \\@=\\|$\\)'$/;"	v
s:orgbufnr	./vim82/syntax/2html.vim	/^let s:orgbufnr = winbufnr(0)$/;"	v
s:orgwin	./vim82/syntax/2html.vim	/^let s:orgwin = bufwinnr(s:orgbufnr)$/;"	v
s:origMap	./vimfiles/autoload/l9/tempvariables.vim	/^let s:origMap = {}$/;"	v
s:originBuffer	./vimfiles/plugin/bufexplorer.vim	/^let s:originBuffer = 0$/;"	v
s:original_cpo	./vim82/syntax/tmux.vim	/^let s:original_cpo = &cpo$/;"	v
s:origwin_stl	./vim82/syntax/2html.vim	/^let s:origwin_stl = &l:stl$/;"	v
s:other_mf_macros	./vim82/syntax/mp.vim	/^  let s:other_mf_macros = g:other_mf_macros$/;"	v
s:outdent	./vim82/indent/eiffel.vim	/^let s:outdent = '^\\s*\\(else\\|invariant\\|variant\\|do\\|require\\|until\\|loop\\|local\\)\\>'$/;"	v
s:pad_between_letters	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f	signature:(str,width,...)
s:pad_both_sides	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f	signature:(str,width,...)
s:pad_left	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f	signature:(str,width,...)
s:pad_right	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f	signature:(str,width,...)
s:padding_by_displaywidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f	signature:(expr,width,float)
s:pairs	./vim82/syntax/debcontrol.vim	/^let s:pairs = [$/;"	v
s:parseChangesLine	./vimfiles/autoload/fuf/changelist.vim	/^function s:parseChangesLine(line)$/;"	f	signature:(line)
s:parseHeader	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:parseHeader(headers) abort$/;"	f	signature:(headers)
s:parseHelpTagEntry	./vimfiles/autoload/fuf/help.vim	/^function s:parseHelpTagEntry(line, tagFile)$/;"	f	signature:(line,tagFile)
s:parseHelpTagFiles	./vimfiles/autoload/fuf/help.vim	/^function s:parseHelpTagFiles(tagFiles, key)$/;"	f	signature:(tagFiles,key)
s:parseJumpsLine	./vimfiles/autoload/fuf/jumplist.vim	/^function s:parseJumpsLine(line, bufnrPrev)$/;"	f	signature:(line,bufnrPrev)
s:parseJumpsLine	./vimfiles/autoload/fuf/quickfix.vim	/^function s:parseJumpsLine(line)$/;"	f	signature:(line)
s:parseTagFiles	./vimfiles/autoload/fuf/tag.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f	signature:(tagFiles,key)
s:parseTagFiles	./vimfiles/autoload/fuf/taggedfile.vim	/^function s:parseTagFiles(tagFiles, key)$/;"	f	signature:(tagFiles,key)
s:parseTagLine	./vimfiles/autoload/fuf/buffertag.vim	/^function s:parseTagLine(line)$/;"	f	signature:(line)
s:parse_args	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_args(args)$/;"	f	signature:(args)
s:parse_cmdarg	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f	signature:(...)
s:parse_filter	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_filter(f)$/;"	f	signature:(f)
s:parse_lazy	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/parse.vim	/^function! s:parse_lazy(plugin) abort "{{{$/;"	f	signature:(plugin)
s:parse_lazy	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/parse.vim	/^function! s:parse_lazy(plugin) abort$/;"	f	signature:(plugin)
s:parse_lazy	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/parse.vim	/^function! s:parse_lazy(plugin) abort "{{{$/;"	f	signature:(plugin)
s:parse_nth	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_nth(n)$/;"	f	signature:(n)
s:parse_shorthand_opts	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:parse_shorthand_opts(expr)$/;"	f	signature:(expr)
s:parseline	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:parseline(line)$/;"	f	signature:(line)
s:partition	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f	signature:(f,xs)
s:parts	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:parts(str)$/;"	f	signature:(str)
s:passwd_field	./vim82/ftplugin/changelog.vim	/^  function! s:passwd_field(line, field)$/;"	f	signature:(line,field)
s:patBR	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^let s:patBR = ""$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let s:path .= '\/'$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^let s:path = fnamemodify('.cache', ':p')$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/.dein/test/raw.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^let s:path = fnamemodify('.cache', ':p') . '\/'$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^  let s:path .= '\/'$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^let s:path = fnamemodify('.cache', ':p')$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/raw.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^let s:path = fnamemodify('.cache', ':p') . '\/'$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let s:path .= '\/'$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^let s:path = fnamemodify('.cache', ':p')$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/raw.vim	/^let s:path = tempname()$/;"	v
s:path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^let s:path = fnamemodify('.cache', ':p') . '\/'$/;"	v
s:path	./vim82/ftplugin/eruby.vim	/^let s:path = &l:path$/;"	v
s:path	./vimfiles/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:path = expand('<sfile>:p:h')$/;"	v
s:path2	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^  let s:path2 .= '\/'$/;"	v
s:path2	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^let s:path2 = fnamemodify('.cache2', ':p')$/;"	v
s:path2	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^  let s:path2 .= '\/'$/;"	v
s:path2	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^let s:path2 = fnamemodify('.cache2', ':p')$/;"	v
s:path2directory	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f	signature:(path)
s:path2directory	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f	signature:(path)
s:path2project_directory	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f	signature:(path,...)
s:path2project_directory	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f	signature:(path,...)
s:path_extensions	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:path_extensions() abort$/;"	f	signature:()
s:path_sep_pattern	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_separator	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:path_separator() abort$/;"	f	signature:()
s:path_separator	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:path_seperator	./vimfiles/bundle/marvim/autoload/marvim.vim	/^    let s:path_seperator = '\/'$/;"	v
s:path_seperator	./vimfiles/bundle/marvim/autoload/marvim.vim	/^    let s:path_seperator = '\\'$/;"	v
s:path_seperator	./vimfiles/bundle/marvim/marvim.vim	/^    let s:path_seperator = '\/'$/;"	v
s:path_seperator	./vimfiles/bundle/marvim/marvim.vim	/^    let s:path_seperator = '\\'$/;"	v
s:path_seperator	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let s:path_seperator = '\/'$/;"	v
s:path_seperator	./vimfiles/bundle/marvim/plugin/marvim.vim	/^    let s:path_seperator = '\\'$/;"	v
s:pathshorten	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:pathshorten(str)$/;"	f	signature:(str)
s:pattern	./vim82/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f	signature:(key)
s:pc_id	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:pc_id = 12$/;"	v
s:perlpath	./vim82/syntax/vim.vim	/^   let s:perlpath= fnameescape(s:perlpath)$/;"	v
s:perlpath	./vim82/syntax/vim.vim	/^let s:perlpath= fnameescape(expand("<sfile>:p:h")."\/perl.vim")$/;"	v
s:permutations	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f	signature:(list,...)
s:permute_suffixes	./vim82/syntax/hostconf.vim	/^function s:permute_suffixes(list)$/;"	f	signature:(list)
s:pgb	./vim82/syntax/2html.vim	/^	  let s:pgb.needs_redraw = 0$/;"	v
s:pgb	./vim82/syntax/2html.vim	/^    let s:pgb = s:ProgressBar("Processing folds:", line('$')*2, s:orgwin)$/;"	v
s:pgb	./vim82/syntax/2html.vim	/^    let s:pgb.needs_redraw = 0$/;"	v
s:pgb	./vim82/syntax/2html.vim	/^  let s:pgb = s:ProgressBar("Processing lines:", s:end - s:lnum + 1, s:orgwin)$/;"	v
s:pick	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f	signature:(dict,keys)
s:plain_mf_macros	./vim82/syntax/mp.vim	/^  let s:plain_mf_macros = g:plain_mf_macros$/;"	v
s:plain_mf_modes	./vim82/syntax/mp.vim	/^  let s:plain_mf_modes = g:plain_mf_modes$/;"	v
s:plugin_name	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:plugin_name() abort dict$/;"	f	signature:()
s:plugin_name	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:plugin_name() abort dict$/;"	f	signature:()
s:plugin_name	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:plugin_name() abort dict$/;"	f	signature:()
s:plugin_name	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_path	./vimfiles/bundle/ctrlp-py-matcher.vim/autoload/pymatcher.vim	/^let s:plugin_path = escape(expand('<sfile>:p:h'), '\\')$/;"	v
s:pluginversion	./vim82/syntax/2html.vim	/^  let s:pluginversion = g:loaded_2html_plugin$/;"	v
s:pluginversion	./vim82/syntax/2html.vim	/^  let s:pluginversion = g:unloaded_tohtml_plugin$/;"	v
s:pollers	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:pollers = {$/;"	v
s:pop	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:pop(list) abort$/;"	f	signature:(list)
s:popupItemResultList	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:popupItemResultList = []$/;"	v
s:port	./vimfiles/after/ftplugin/dot.vim	/^let s:port =  [$/;"	v
s:port	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:port =  [$/;"	v
s:position_cursor	./vim82/ftplugin/changelog.vim	/^  function! s:position_cursor()$/;"	f	signature:()
s:post	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:post(url, ...) abort$/;"	f	signature:(url,...)
s:prepended	./vim82/autoload/syntaxcomplete.vim	/^let s:prepended  = ''$/;"	v
s:prepended	./vimfiles/autoload/syntaxcomplete.vim	/^let s:prepended  = ''$/;"	v
s:prev_wildignore	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:prev_wildignore = ''$/;"	v
s:prevc	./vim82/syntax/2html.vim	/^		let s:prevc = matchstr(s:expandedtab, '.\\%' . (s:idx + 1) . 'c')$/;"	v
s:prevc	./vim82/syntax/2html.vim	/^		let s:prevc = matchstr(s:line, '.\\%' . (s:startcol + s:offset) . 'c')$/;"	v
s:prevgood	./vim82/indent/bst.vim	/^function! s:prevgood(lnum)$/;"	f	signature:(lnum)
s:prevgood	./vim82/indent/cobol.vim	/^function! s:prevgood(lnum)$/;"	f	signature:(lnum)
s:previewNodeCurrent	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f	signature:(node)
s:previewNodeHSplit	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f	signature:(node)
s:previewNodeVSplit	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f	signature:(node)
s:preview_color	./vim82/syntax/dircolors.vim	/^function! s:preview_color(linenr) abort$/;"	f	signature:(linenr)
s:preview_directory	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:preview_directory()$/;"	f	signature:()
s:previous_allowed_buffer_number	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:previous_allowed_buffer_number = 0$/;"	v
s:prevnonblanknoncomment	./vim82/indent/css.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f	signature:(lnum)
s:prevnonblanknoncomment	./vim82/indent/ld.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f	signature:(lnum)
s:prevnonblanknoncomment	./vim82/indent/tcl.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f	signature:(lnum)
s:print_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:print_message(msg) abort "{{{$/;"	f	signature:(msg)
s:print_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:print_message(msg) abort "{{{$/;"	f	signature:(msg)
s:print_progress_message	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:print_progress_message(msg) abort "{{{$/;"	f	signature:(msg)
s:print_progress_message	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:print_progress_message(msg) abort$/;"	f	signature:(msg)
s:print_progress_message	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:print_progress_message(msg) abort "{{{$/;"	f	signature:(msg)
s:process	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:process(entries, type)$/;"	f	signature:(entries,type)
s:process	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:process(fname, ftype)$/;"	f	signature:(fname,ftype)
s:process	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:process(clines, ...)$/;"	f	signature:(clines,...)
s:process	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:process(range, mode, n, ch, opts, regexp, rules, bvis)$/;"	f	signature:(range,mode,n,ch,opts,regexp,rules,bvis)
s:product	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:product(lists) abort$/;"	f	signature:(lists)
s:program_end	./vim82/indent/sas.vim	/^let s:program_end = '\\v%(^|;)\\s*endsas\\s*;'$/;"	v
s:progress	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let s:progress = ''$/;"	v
s:progressbar	./vim82/syntax/2html.vim	/^  let s:progressbar={}$/;"	v
s:progressbar.calculate_ticks	./vim82/syntax/2html.vim	/^  func! s:progressbar.calculate_ticks(pb_len)$/;"	f	signature:(pb_len)
s:progressbar.incr	./vim82/syntax/2html.vim	/^  func! s:progressbar.incr( ... )$/;"	f	signature:( ... )
s:progressbar.paint	./vim82/syntax/2html.vim	/^  func! s:progressbar.paint()$/;"	f	signature:()
s:proj_cache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^let s:proj_cache = {}$/;"	v
s:project_root	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:promptToDelBuffer	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f	signature:(bufnum,msg)
s:promptToRenameBuffer	./vimfiles/bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f	signature:(bufnum,msg,newFileName)
s:property	./vim82/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:push	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:push(list, val) abort$/;"	f	signature:(list,val)
s:python_command	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:python_command = s:using_python3 ? "py3 " : "py "$/;"	v
s:python_until_eof	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:python_until_eof = s:using_python3 ? "python3 << EOF" : "python << EOF"$/;"	v
s:pythonpath	./vim82/syntax/vim.vim	/^   let s:pythonpath= fnameescape(s:pythonpath)$/;"	v
s:pythonpath	./vim82/syntax/vim.vim	/^let s:pythonpath= fnameescape(expand("<sfile>:p:h")."\/python.vim")$/;"	v
s:q_adverbs	./vim82/syntax/perl6.vim	/^    let s:q_adverbs = [$/;"	v
s:query_path	./vim82/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f	signature:(root)
s:radix_chars	./vim82/syntax/clojure.vim	/^let s:radix_chars = "0123456789abcdefghijklmnopqrstuvwxyz"$/;"	v
s:rank	./vimfiles/after/ftplugin/dot.vim	/^let s:rank =  [$/;"	v
s:rank	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:rank =  [$/;"	v
s:rankdir	./vimfiles/after/ftplugin/dot.vim	/^let s:rankdir =  [$/;"	v
s:rankdir	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:rankdir =  [$/;"	v
s:reCComment	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^let s:reCComment = '\\\/\\*\\|\\*\\\/'$/;"	v
s:reComment	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^let s:reComment = s:reCComment.'\\|'.s:reCppComment$/;"	v
s:reCppComment	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^let s:reCppComment = '\\\/\\\/'$/;"	v
s:reCppKeyword	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^let s:reCppKeyword = '\\C\\<'.join(s:cppKeyword, '\\>\\|\\<').'\\>'$/;"	v
s:reCppOperatorOrPunctuator	./vimfiles/autoload/omni/cpp/tokenizer.vim	/^let s:reCppOperatorOrPunctuator = escape(join(s:cppOperatorPunctuator, '\\|'), '*.\/^~[]')$/;"	v
s:reIncludeFilePart	./vimfiles/autoload/omni/cpp/includes.vim	/^let s:reIncludeFilePart = '\\(<\\|"\\)\\(\\f\\|\\s\\)\\+\\(>\\|"\\)'$/;"	v
s:rePreprocIncludeFile	./vimfiles/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludeFile = s:rePreprocIncludePart . s:reIncludeFilePart$/;"	v
s:rePreprocIncludePart	./vimfiles/autoload/omni/cpp/includes.vim	/^let s:rePreprocIncludePart = '\\C#\\s*include\\s*'$/;"	v
s:read_content	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f	signature:(content,...)
s:readfileToTmpbuffer	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^function! s:readfileToTmpbuffer(file) " {{{$/;"	f	signature:(file)
s:realpath	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^  function! s:realpath(path) abort$/;"	f	signature:(path)
s:record	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:record(bufnr)$/;"	f	signature:(bufnr)
s:reformat	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:reformat(mrufs, ...)$/;"	f	signature:(mrufs,...)
s:refreshBufferList	./vimfiles/plugin/bufexplorer.vim	/^let s:refreshBufferList = 1$/;"	v
s:refreshCurrent	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f	signature:(node)
s:refreshRoot	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f	signature:()
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex = {}$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["abstract"] = '\\(abstract\\)'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["attribute"] = '^\\(\\s*\\)\\(\\(private\\s*\\|public\\s*\\|protected\\s*\\|static\\/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["class"] = '^\\(\\s*\\)\\(\\S*\\)\\s*\\(class\\)\\s*\\(\\S\\+\\)\\s*\\([^{]*\\){\\?$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["const"] = '^\\(\\s*\\)const\\s\\+\\(\\S\\+\\)\\s*='$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["final"] = '\\(final\\)'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["function"] = '^\\(\\s*\\)\\([a-zA-Z ]*\\)function\\s\\+\\([^ (]\\+\\)\\s*('$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["indent"] = '^\\s*'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["interface"] = '^\\(\\s*\\)interface\\s\\+\\(\\S\\+\\)\\(\\s\\+extends\\s\\+\\(\\S\\/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["param"] = ' *\\([^ &]*\\)\\s*\\(&\\?\\)\\$\\([^ =)]\\+\\)\\s*\\(=\\s*\\(.*\\)\\)\\?/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["scope"] = '\\(private\\|protected\\|public\\)'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["static"] = '\\(static\\)'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["trait"] = '^\\(\\s*\\)trait\\s\\+\\(\\S\\+\\)\\s*{\\?\\s*$'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["types"] = {}$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["types"]["array"]  = "^array *(.*"$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["types"]["bool"] = "\\(true\\|false\\)"$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["types"]["float"]  = '^[0-9]*\\.[0-9]\\+'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["types"]["int"]    = '^[0-9]\\+'$/;"	v
s:regex	./vimfiles/bundle/pdv/autoload/pdv.vim	/^let s:regex["types"]["string"] = "['\\"].*"$/;"	v
s:regex_prefix	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^  let s:regex_prefix = '\\%#=1\\C^'$/;"	v
s:regex_prefix	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^  let s:regex_prefix = '\\C^'$/;"	v
s:regex_prefix	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^  let s:regex_prefix = '\\%#=1\\C^'$/;"	v
s:regex_prefix	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^  let s:regex_prefix = '\\C^'$/;"	v
s:regex_prefix	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^  let s:regex_prefix = '\\%#=1\\C^'$/;"	v
s:regex_prefix	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^  let s:regex_prefix = '\\C^'$/;"	v
s:regexfilter	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regexfilter(str)$/;"	f	signature:(str)
s:regisfilter	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:regisfilter(reg)$/;"	f	signature:(reg)
s:register	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:register.restore	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f	signature:()
s:registerCoverage	./vimfiles/autoload/fuf/coveragefile.vim	/^function s:registerCoverage()$/;"	f	signature:()
s:register_a	./vim82/syntax/hitest.vim	/^let s:register_a  = @a$/;"	v
s:register_se	./vim82/syntax/hitest.vim	/^let s:register_se = @\/$/;"	v
s:rel	./vim82/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:relative_indent	./vim82/indent/eiffel.vim	/^let s:relative_indent = '^\\s*\\(deferred\\|class\\|feature\\|creation\\|inherit\\|loop\\|from\\/;"	v
s:relpath	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:relpath(path) abort$/;"	f	signature:(path)
s:remarksigns	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:remarksigns()$/;"	f	signature:()
s:remember_visual	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:remember_visual(mode)$/;"	f	signature:(mode)
s:removeItemFromCache	./vimfiles/autoload/fuf/mrufile.vim	/^function s:removeItemFromCache(word)$/;"	f	signature:(word)
s:remove_ansi_sequences	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f	signature:(text)
s:remove_continuation	./vim82/indent/make.vim	/^function s:remove_continuation(line)$/;"	f	signature:(line)
s:remove_duplicated	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! s:remove_duplicated(list, entry)$/;"	f	signature:(list,entry)
s:remove_last_separator	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:remove_last_separator(path) abort$/;"	f	signature:(path)
s:renewCachesOfAllModes	./vimfiles/plugin/fuf.vim	/^function s:renewCachesOfAllModes()$/;"	f	signature:()
s:repair_posix_text	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f	signature:(text,...)
s:repeat	./vim82/ftplugin/cobol.vim	/^function! s:repeat(str,count)$/;"	f	signature:(str,count)
s:repeat_in_visual	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:repeat_in_visual()$/;"	f	signature:()
s:repeat_visual	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:repeat_visual()$/;"	f	signature:()
s:replace	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f	signature:(str,from,to)
s:replace_first	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f	signature:(str,from,to)
s:report	./vim82/syntax/hitest.vim	/^let s:report      = &report$/;"	v
s:request	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^function! s:request(...) abort$/;"	f	signature:(...)
s:reset_colors	./vim82/syntax/dircolors.vim	/^function! s:reset_colors() abort$/;"	f	signature:()
s:reset_ftplugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! s:reset_ftplugin() abort "{{{$/;"	f	signature:()
s:reset_ftplugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! s:reset_ftplugin() abort$/;"	f	signature:()
s:reset_ftplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! s:reset_ftplugin() abort "{{{$/;"	f	signature:()
s:restore_cpo	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^function! s:restore_cpo()$/;"	f	signature:()
s:restore_view	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:restore_view(context) abort "{{{$/;"	f	signature:(context)
s:restore_view	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:restore_view(context) abort$/;"	f	signature:(context)
s:restore_view	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:restore_view(context) abort "{{{$/;"	f	signature:(context)
s:returnTypeMatcher	./vim82/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:reverse	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:reverse(str) abort$/;"	f	signature:(str)
s:rmdir	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:rmdir(...) abort$/;"	f	signature:(...)
s:rmdir	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! s:rmdir(path, ...) abort$/;"	f	signature:(path,...)
s:routines	./vim82/syntax/perl6.vim	/^let s:routines = [$/;"	v
s:rtrim	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:rtrim(str)$/;"	f	signature:(str)
s:ruby_deindent_keywords	./vim82/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	./vim82/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	./vim82/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	./vim82/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	./vim82/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	./vim82/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	./vim82/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubypath	./vim82/syntax/vim.vim	/^   let s:rubypath= fnameescape(s:rubypath)$/;"	v
s:rubypath	./vim82/syntax/vim.vim	/^let s:rubypath= fnameescape(expand("<sfile>:p:h")."\/ruby.vim")$/;"	v
s:rule_rx	./vim82/indent/make.vim	/^let s:rule_rx = '^[^ \\t#:][^#:]*:\\{1,2}\\%([^=:]\\|$\\)'$/;"	v
s:run_file	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:run_file(file_name)$/;"	f	signature:(file_name)
s:run_processing_procs	./vim82/indent/sas.vim	/^let s:run_processing_procs = [$/;"	v
s:run_syntax_fold	./vim82/syntax/ruby.vim	/^function! s:run_syntax_fold(args) abort$/;"	f	signature:(args)
s:running	./vimfiles/plugin/bufexplorer.vim	/^let s:running = 0$/;"	v
s:runtimepath_save	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^let s:runtimepath_save = &runtimepath$/;"	v
s:runtimepath_save	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^let s:runtimepath_save = &runtimepath$/;"	v
s:runtimepath_save	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^let s:runtimepath_save = &runtimepath$/;"	v
s:runtimepath_save	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^let s:runtimepath_save = &runtimepath$/;"	v
s:runtimepath_save	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^let s:runtimepath_save = &runtimepath$/;"	v
s:runtimepath_save	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^let s:runtimepath_save = &runtimepath$/;"	v
s:safe_printf	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:safe_printf(format, ...)$/;"	f	signature:(format,...)
s:samerootsyml	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:samerootsyml(each, isfile, cwd)$/;"	f	signature:(each,isfile,cwd)
s:sanstail	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sanstail(str)$/;"	f	signature:(str)
s:save_cpo	./vim82/compiler/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/ant.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/aspvbs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/csc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/csh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/dtd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/html.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/initex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/jsp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/matlab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/perl6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/plaintex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/sgml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/sql.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/svg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/tcsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/tex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/xhtml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/xml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/ftplugin/xsd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/indent/bzl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/indent/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	./vim82/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/indent/yaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/mswin.vim	/^  let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	./vim82/pack/dist/opt/matchit/autoload/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/pack/dist/opt/matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/syntax/cs.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	./vim82/syntax/euphoria3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/syntax/euphoria4.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/syntax/j.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/syntax/named.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vim82/syntax/teraterm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/autoload/genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/ctrlp-extensions.vim/after/plugin/ctrlp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/ctrlp-extensions.vim/plugin/yankring.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/ctrlp-mymenu.vim/after/plugin/ctrlp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/openbrowser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/Opener.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/__openbrowser__/OpenBrowser/URIExtractor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/HTTP.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTP.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Web/URI/HTTPS.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/lang/openbrowser_menu_ja.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/open-browser.vim/plugin/openbrowser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/phpcomplete.vim/ftplugin/php_phpcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/previm/autoload/previm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/previm/plugin/previm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	./vimfiles/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_exc	./vim82/autoload/sqlcomplete.vim	/^let s:save_exc              = ""$/;"	v
s:save_exc	./vim82/autoload/sqlcomplete.vim	/^let s:save_exc = g:omni_syntax_group_exclude_sql$/;"	v
s:save_expandtab	./vim82/ftplugin/bzl.vim	/^let s:save_expandtab = &l:expandtab$/;"	v
s:save_file	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:save_file(file_path, data, extension)$/;"	f	signature:(file_path,data,extension)
s:save_first_col	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! s:save_first_col() abort$/;"	f	signature:()
s:save_inc	./vim82/autoload/sqlcomplete.vim	/^let s:save_inc              = ""$/;"	v
s:save_inc	./vim82/autoload/sqlcomplete.vim	/^let s:save_inc = g:omni_syntax_group_include_sql$/;"	v
s:save_prev_table	./vim82/autoload/sqlcomplete.vim	/^let s:save_prev_table       = ""$/;"	v
s:save_rollback	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:save_rollback() abort "{{{$/;"	f	signature:()
s:save_rollback	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:save_rollback() abort$/;"	f	signature:()
s:save_rollback	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:save_rollback() abort "{{{$/;"	f	signature:()
s:save_shiftwidth	./vim82/ftplugin/bzl.vim	/^let s:save_shiftwidth = &l:shiftwidth$/;"	v
s:save_softtabstop	./vim82/ftplugin/bzl.vim	/^let s:save_softtabstop = &l:softtabstop$/;"	v
s:save_tabstop	./vim82/ftplugin/bzl.vim	/^let s:save_tabstop = &l:tabstop$/;"	v
s:savebookmark	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:savebookmark(name, cwd)$/;"	f	signature:(name,cwd)
s:savecpo	./vim82/compiler/perl.vim	/^let s:savecpo = &cpo$/;"	v
s:saveposn_count	./vimfiles/autoload/DrawIt.vim	/^ let s:saveposn_count= 0$/;"	v
s:savetofile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/mrufiles.vim	/^fu! s:savetofile(mrufs)$/;"	f	signature:(mrufs)
s:scan	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f	signature:(str,pattern)
s:scoreBoundaryMatching	./vimfiles/autoload/fuf.vim	/^function s:scoreBoundaryMatching(wordForBoundary, pattern, exprBoundary)$/;"	f	signature:(wordForBoundary,pattern,exprBoundary)
s:scoreSequentialMatching	./vimfiles/autoload/fuf.vim	/^function s:scoreSequentialMatching(word, pattern)$/;"	f	signature:(word,pattern)
s:script_folder_path	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:script_folder_path = escape( expand( '<sfile>:p:h' ), '\\' )$/;"	v
s:script_path	./vim82/autoload/phpcomplete.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:script_path	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^let s:script_path = expand('<sfile>:p:h:h')$/;"	v
s:script_path	./vimfiles/bundle/phpcomplete.vim/autoload/phpcomplete.vim	/^let s:script_path = fnamemodify(resolve(expand('<sfile>:p')), ':h')$/;"	v
s:search	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:search(pattern) abort dict$/;"	f	signature:(pattern)
s:search	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:search(pattern) abort dict$/;"	f	signature:(pattern)
s:search	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:search(pattern) abort dict$/;"	f	signature:(pattern)
s:searchpairflags	./vim82/indent/php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:searchsyn	./vim82/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f	signature:(pattern,syn,flags,mode)
s:section	./vim82/ftplugin/php.vim	/^let s:section = '\\(.*\\%#\\)\\@!\\_^\\s*\\zs\\('.s:function.'\\|'.s:class.'\\|'.s:interface.'\\/;"	v
s:section_end	./vim82/indent/sas.vim	/^let s:section_end = '\\v%(^|;)\\s*%(quit|enddata)\\s*;'$/;"	v
s:section_run	./vim82/indent/sas.vim	/^let s:section_run = '\\v%(^|;)\\s*run\\s*;'$/;"	v
s:section_str	./vim82/indent/sas.vim	/^let s:section_str = '\\v%(^|;)\\s*%(data|proc)>'$/;"	v
s:sectionend	./vim82/ftplugin/j.vim	/^let s:sectionend = '\\s*)\\s*'$/;"	v
s:sections	./vim82/syntax/debcontrol.vim	/^let s:sections = [$/;"	v
s:sectionstart	./vim82/ftplugin/j.vim	/^let s:sectionstart = '\\%(\\s*Note\\|.\\{-}\\<\\%([0-4]\\|13\\|noun\\|adverb\\|conjunction\\|ver/;"	v
s:selection	./vimfiles/autoload/genutils.vim	/^let s:selection = -1$/;"	v
s:separator	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:separator() abort$/;"	f	signature:()
s:session_file	./vimfiles/plugin/matrix.vim	/^let s:session_file = tempname()$/;"	v
s:set	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:set(o, v) abort$/;"	f	signature:(o,v)
s:setAbbrWithFileAbbrData	./vimfiles/autoload/fuf.vim	/^function s:setAbbrWithFileAbbrData(item, snippedHeads)$/;"	f	signature:(item,snippedHeads)
s:setRanks	./vimfiles/autoload/fuf.vim	/^function s:setRanks(item, pattern, exprBoundary, stats)$/;"	f	signature:(item,pattern,exprBoundary,stats)
s:set_compression	./vim82/autoload/gzip.vim	/^fun s:set_compression(line)$/;"	f	signature:(line)
s:set_default	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f	signature:(var,val)
s:set_default	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f	signature:(var,val)
s:set_guicolors	./vim82/syntax/dircolors.vim	/^function! s:set_guicolors() abort$/;"	f	signature:()
s:set_match_words	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:set_repeat	./vimfiles/bundle/vim-easy-align/plugin/easy_align.vim	/^function! s:set_repeat()$/;"	f	signature:()
s:setentries	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:setentries()$/;"	f	signature:()
s:setlines_post	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_post()$/;"	f	signature:()
s:setlines_pre	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setlines_pre(...)$/;"	f	signature:(...)
s:settings	./vim82/syntax/2html.vim	/^let s:settings = tohtml#GetUserSettings()$/;"	v
s:settype	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:settype(type)$/;"	f	signature:(type)
s:setup_completeopt	./vimfiles/bundle/jedi-vim/plugin/jedi.vim	/^    function! s:setup_completeopt()$/;"	f	signature:()
s:setupblank	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:setupblank()$/;"	f	signature:()
s:sgml_cpo_save	./vim82/syntax/sgml.vim	/^let s:sgml_cpo_save = &cpo$/;"	v
s:sh	./vim82/autoload/context.vim	/^function! s:sh()$/;"	f	signature:()
s:sh_fold_functions	./vim82/syntax/sh.vim	/^ let s:sh_fold_functions= and(g:sh_fold_enabled,1)$/;"	v
s:sh_fold_heredoc	./vim82/syntax/sh.vim	/^ let s:sh_fold_heredoc  = and(g:sh_fold_enabled,2)$/;"	v
s:sh_fold_ifdofor	./vim82/syntax/sh.vim	/^ let s:sh_fold_ifdofor  = and(g:sh_fold_enabled,4)$/;"	v
s:sh_indent_defaults	./vim82/indent/sh.vim	/^let s:sh_indent_defaults = {$/;"	v
s:sh_maxlines	./vim82/syntax/sh.vim	/^  let s:sh_maxlines= 25$/;"	v
s:sh_maxlines	./vim82/syntax/sh.vim	/^ let s:sh_maxlines = 2*s:sh_minlines$/;"	v
s:sh_maxlines	./vim82/syntax/sh.vim	/^ let s:sh_maxlines= g:sh_maxlines$/;"	v
s:sh_minlines	./vim82/syntax/sh.vim	/^ let s:sh_minlines = 200$/;"	v
s:sh_minlines	./vim82/syntax/sh.vim	/^ let s:sh_minlines= g:sh_minlines$/;"	v
s:shapes	./vimfiles/after/ftplugin/dot.vim	/^let s:shapes = [$/;"	v
s:shapes	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:shapes = [$/;"	v
s:shell	./vim82/syntax/sh.vim	/^  let s:shell = resolve("\/bin\/sh")$/;"	v
s:shell	./vim82/syntax/sh.vim	/^  let s:shell = resolve("\/usr\/bin\/sh")$/;"	v
s:shell	./vim82/syntax/sh.vim	/^ let s:shell = ""$/;"	v
s:shellescape	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^  function! s:shellescape(...) abort$/;"	f	signature:(...)
s:shift	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:shift(list) abort$/;"	f	signature:(list)
s:shift	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:shift(modes, cycle)$/;"	f	signature:(modes,cycle)
s:shift_opts	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:shift_opts(opts, key, vals)$/;"	f	signature:(opts,key,vals)
s:shortest	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:shortest(lens)$/;"	f	signature:(lens)
s:shorthand	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let s:shorthand = {$/;"	v
s:shorthand_regex	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^let s:shorthand_regex =$/;"	v
s:shortmess	./vim82/syntax/hitest.vim	/^let s:shortmess   = &shortmess$/;"	v
s:showMenu	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f	signature:(node)
s:show_call_signatures_last	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^let s:show_call_signatures_last = [0, 0, '']$/;"	v
s:sid2sfuncs	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f	signature:(sid)
s:sid2sfuncs	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f	signature:(sid)
s:sid2sfuncs	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f	signature:(sid)
s:single_dent	./vim82/indent/eiffel.vim	/^let s:single_dent = '^[^-]\\+[[:alnum:]]\\+ is\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:skip	./vim82/indent/cobol.vim	/^let s:skip = 'getline(".") =~ "^.\\\\{6\\\\}[*\/$-]\\\\|\\"[^\\"]*\\""'$/;"	v
s:skip_expr	./vim82/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	./vim82/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	./vim82/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_pattern	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^let s:skip_pattern = '\\C^\\%(\\_s\\+\\|' . "#[^\\r\\n]*" . '\\)'$/;"	v
s:skip_pattern	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^let s:skip_pattern = '\\C^\\%(\\_s\\+\\|' . "#[^\\r\\n]*" . '\\)'$/;"	v
s:skip_pattern	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^let s:skip_pattern = '\\C^\\%(\\_s\\+\\|' . "#[^\\r\\n]*" . '\\)'$/;"	v
s:skipempty	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! s:skipempty(string) abort "{{{$/;"	f	signature:(string)
s:skipempty	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:skipempty(string) abort$/;"	f	signature:(string)
s:skipempty	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! s:skipempty(string) abort "{{{$/;"	f	signature:(string)
s:smart_execute_command	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f	signature:(action,word)
s:smart_execute_command	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f	signature:(action,word)
s:snippets	./vimfiles/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:sol	./vim82/ftplugin/sh.vim	/^    let s:sol = '\\%(;\\s*\\|^\\s*\\)\\@<='  " start of line$/;"	v
s:some	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:some(v) abort$/;"	f	signature:(v)
s:sort	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! s:sort(list, expr) abort "{{{$/;"	f	signature:(list,expr)
s:sort	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:sort(list, expr) abort$/;"	f	signature:(list,expr)
s:sort	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! s:sort(list, expr) abort "{{{$/;"	f	signature:(list,expr)
s:sort	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f	signature:(list,expr)
s:sortKeyFormat	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%0" . float2nr(ceil(log10(len(g:NERDTreeSortOrder)))) . "d"$/;"	v
s:sortKeyFormat	./vimfiles/bundle/nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%04d"$/;"	v
s:sort_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f	signature:(list,expr)
s:sort_by	./vimfiles/plugin/bufexplorer.vim	/^let s:sort_by = ["number", "name", "fullpath", "mru", "extension"]$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein.vim	/^let s:source = {$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein.vim	/^let s:source.converters = s:source.source__converter$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein_log.vim	/^let s:source = {$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein.vim	/^let s:source = {$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein.vim	/^let s:source.converters = s:source.source__converter$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein_log.vim	/^let s:source = {$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein.vim	/^let s:source = {$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein.vim	/^let s:source.converters = s:source.source__converter$/;"	v
s:source	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein_log.vim	/^let s:source = {$/;"	v
s:source	./vimfiles/bundle/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:source.async_gather_candidates	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein_log.vim	/^function! s:source.async_gather_candidates(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.async_gather_candidates	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein_log.vim	/^function! s:source.async_gather_candidates(args, context) abort$/;"	f	signature:(args,context)
s:source.async_gather_candidates	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein_log.vim	/^function! s:source.async_gather_candidates(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.gather_candidates	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.gather_candidates	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein_log.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.gather_candidates	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f	signature:(args,context)
s:source.gather_candidates	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein_log.vim	/^function! s:source.gather_candidates(args, context) abort$/;"	f	signature:(args,context)
s:source.gather_candidates	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.gather_candidates	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein_log.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.gather_candidates	./vimfiles/bundle/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context)$/;"	f	signature:(context)
s:source.hooks.on_init	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein.vim	/^function! s:source.hooks.on_init(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.hooks.on_init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein.vim	/^function! s:source.hooks.on_init(args, context) abort$/;"	f	signature:(args,context)
s:source.hooks.on_init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein.vim	/^function! s:source.hooks.on_init(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.hooks.on_syntax	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein_log.vim	/^function! s:source.hooks.on_syntax(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.hooks.on_syntax	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein_log.vim	/^function! s:source.hooks.on_syntax(args, context) abort$/;"	f	signature:(args,context)
s:source.hooks.on_syntax	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein_log.vim	/^function! s:source.hooks.on_syntax(args, context) abort "{{{$/;"	f	signature:(args,context)
s:source.source__converter	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein.vim	/^function! s:source.source__converter(candidates, context) abort "{{{$/;"	f	signature:(candidates,context)
s:source.source__converter	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein.vim	/^function! s:source.source__converter(candidates, context) abort$/;"	f	signature:(candidates,context)
s:source.source__converter	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein.vim	/^function! s:source.source__converter(candidates, context) abort "{{{$/;"	f	signature:(candidates,context)
s:source_events	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! s:source_events(event, plugins) abort "{{{$/;"	f	signature:(event,plugins)
s:source_events	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! s:source_events(event, plugins) abort$/;"	f	signature:(event,plugins)
s:source_events	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! s:source_events(event, plugins) abort "{{{$/;"	f	signature:(event,plugins)
s:source_plugin	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/autoload.vim	/^function! s:source_plugin(rtps, index, plugin, sourced) abort "{{{$/;"	f	signature:(rtps,index,plugin,sourced)
s:source_plugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/autoload.vim	/^function! s:source_plugin(rtps, index, plugin, sourced) abort$/;"	f	signature:(rtps,index,plugin,sourced)
s:source_plugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/autoload.vim	/^function! s:source_plugin(rtps, index, plugin, sourced) abort "{{{$/;"	f	signature:(rtps,index,plugin,sourced)
s:spacer	./vimfiles/autoload/genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:spacing_errors	./vim82/syntax/changelog.vim	/^  let s:spacing_errors = 1$/;"	v
s:spacing_errors	./vim82/syntax/changelog.vim	/^  let s:spacing_errors = b:changelog_spacing_errors$/;"	v
s:spacing_errors	./vim82/syntax/changelog.vim	/^  let s:spacing_errors = g:changelog_spacing_errors$/;"	v
s:span	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f	signature:(f,xs)
s:spawn	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f	signature:(expr,...)
s:spc	./vim82/spell/he.vim	/^let s:spc = &l:spc$/;"	v
s:spc	./vim82/spell/yi.vim	/^let s:spc = &l:spc$/;"	v
s:spell_cluster	./vim82/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:spellfile_URL	./vim82/autoload/spellfile.vim	/^let s:spellfile_URL = ''    " Start with nothing so that s:donedict is reset.$/;"	v
s:splat_regex	./vim82/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:split	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:split(path) abort$/;"	f	signature:(path)
s:split3	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f	signature:(expr,pattern)
s:splitMode	./vimfiles/plugin/bufexplorer.vim	/^let s:splitMode = ""$/;"	v
s:split_by_displaywidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f	signature:(expr,width,float,is_wrap)
s:split_leftright	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f	signature:(expr,pattern)
s:split_line	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:split_line(line, nth, modes, cycle, fc, lc, pattern, stick_to_left, ignore_unmatched/;"	f	signature:(line,nth,modes,cycle,fc,lc,pattern,stick_to_left,ignore_unmatched,ignore_groups)
s:split_posix_text	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f	signature:(text,...)
s:sql_file_procedure	./vim82/autoload/sqlcomplete.vim	/^let s:sql_file_procedure    = ""$/;"	v
s:sql_file_table	./vim82/autoload/sqlcomplete.vim	/^let s:sql_file_table        = ""$/;"	v
s:sql_file_view	./vim82/autoload/sqlcomplete.vim	/^let s:sql_file_view         = ""$/;"	v
s:st	./vim82/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:start	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:start() abort "{{{$/;"	f	signature:()
s:start	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:start() abort$/;"	f	signature:()
s:start	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^function! s:start(args, ...) abort$/;"	f	signature:(args,...)
s:start	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Neovim.vim	/^function! s:start(args, options) abort$/;"	f	signature:(args,options)
s:start	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job/Vim.vim	/^function! s:start(args, options) abort$/;"	f	signature:(args,options)
s:start	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:start() abort "{{{$/;"	f	signature:()
s:start_block	./vim82/indent/sh.vim	/^function! s:start_block(line)$/;"	f	signature:(line)
s:start_pat	./vim82/indent/matlab.vim	/^let s:start_pat = '\\C\\<\\%(function\\|' . s:open_pat . '\\)\\>'$/;"	v
s:start_with	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:start_with(haystock, needle) abort$/;"	f	signature:(haystock,needle)
s:startcol	./vim82/syntax/2html.vim	/^      let s:startcol = s:col " The start column for processing text$/;"	v
s:startcol	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^    let s:startcol = s:col " The start column for processing text$/;"	v
s:starts_with	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f	signature:(str,prefix)
s:stepmatch	./vim82/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f	signature:(receiver,target)
s:steps	./vim82/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f	signature:(lnum)
s:stop_job_if_exists	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:stop_job_if_exists()$/;"	f	signature:()
s:stop_timer_if_exists	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:stop_timer_if_exists()$/;"	f	signature:()
s:stopped	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:stopped = 1$/;"	v
s:store	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f	signature:(targets)
s:str	./vim82/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	./vim82/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	./vim82/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	./vim82/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:strchars	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f	signature:(str)
s:strchars	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:strip	./vim82/indent/bst.vim	/^function! s:strip(lnum)$/;"	f	signature:(lnum)
s:strip	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:strip(str) abort$/;"	f	signature:(str)
s:strip_end	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:strip_end(str) abort$/;"	f	signature:(str)
s:strip_namespace_and_macro_chars	./vim82/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f	signature:(word)
s:strip_start	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:strip_start(str) abort$/;"	f	signature:(str)
s:stripped	./vim82/indent/cobol.vim	/^function! s:stripped(lnum)$/;"	f	signature:(lnum)
s:structureHead	./vim82/indent/php.vim	/^let s:structureHead = '^\\s*\\%(' . s:blockstart . '\\)\\|'. s:functionDecl . s:endline . '\\|\\/;"	v
s:strwidth	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:strwidth(str)$/;"	f	signature:(str)
s:strwidth	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^  function! s:strwidth(str)$/;"	f	signature:(str)
s:strwidthpart	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:strwidthpart(str, width) abort "{{{$/;"	f	signature:(str,width)
s:strwidthpart	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:strwidthpart(str, width) abort$/;"	f	signature:(str,width)
s:strwidthpart	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:strwidthpart(str, width) abort "{{{$/;"	f	signature:(str,width)
s:strwidthpart	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f	signature:(str,width)
s:strwidthpart	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f	signature:(str,width)
s:strwidthpart	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f	signature:(str,width)
s:strwidthpart_reverse	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:strwidthpart_reverse(str, width) abort "{{{$/;"	f	signature:(str,width)
s:strwidthpart_reverse	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f	signature:(str,width)
s:strwidthpart_reverse	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:strwidthpart_reverse(str, width) abort "{{{$/;"	f	signature:(str,width)
s:strwidthpart_reverse	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f	signature:(str,width)
s:strwidthpart_reverse	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f	signature:(str,width)
s:strwidthpart_reverse	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f	signature:(str,width)
s:style	./vimfiles/after/ftplugin/dot.vim	/^let s:style =  [$/;"	v
s:style	./vimfiles/bundle/wmgraphviz.vim/ftplugin/dot.vim	/^let s:style =  [$/;"	v
s:stylelist	./vim82/syntax/2html.vim	/^    let s:stylelist[s:id] = '.FoldColumn { ' . s:CSS1(s:id) . '}'$/;"	v
s:stylelist	./vim82/syntax/2html.vim	/^  let s:stylelist = { s:LINENR_ID : ".LineNr { " . s:CSS1( s:LINENR_ID ) . "}" }$/;"	v
s:stylelist	./vim82/syntax/2html.vim	/^  let s:stylelist = {}$/;"	v
s:sublist	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist(l, s, e)$/;"	f	signature:(l,s,e)
s:sublist7071	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:sublist7071(l, s, e)$/;"	f	signature:(l,s,e)
s:substitute_items	./vim82/ftplugin/changelog.vim	/^  function! s:substitute_items(str, date, user, prefix)$/;"	f	signature:(str,date,user,prefix)
s:substitute_last	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f	signature:(expr,pat,sub)
s:substitute_path_separator	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f	signature:(path)
s:substitute_path_separator	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f	signature:(path)
s:subtype	./vim82/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:suffixesadd	./vim82/ftplugin/eruby.vim	/^let s:suffixesadd = &l:suffixesadd$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^let s:suite = themis#suite('base')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^let s:suite = themis#suite('git')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^let s:suite = themis#suite('install')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/install_base.vim	/^let s:suite = themis#suite('install')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^let s:suite = themis#suite('parse')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/raw.vim	/^let s:suite = themis#suite('raw')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^let s:suite = themis#suite('state')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/.dein/test/toml.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^let s:suite = themis#suite('base')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^let s:suite = themis#suite('git')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^let s:suite = themis#suite('install')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install_base.vim	/^let s:suite = themis#suite('install_base')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^let s:suite = themis#suite('parse')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/raw.vim	/^let s:suite = themis#suite('raw')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^let s:suite = themis#suite('state')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/toml.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^let s:suite = themis#suite('base')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^let s:suite = themis#suite('git')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^let s:suite = themis#suite('install')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install_base.vim	/^let s:suite = themis#suite('install')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^let s:suite = themis#suite('parse')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/raw.vim	/^let s:suite = themis#suite('raw')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^let s:suite = themis#suite('state')$/;"	v
s:suite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/toml.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:suite	./vimfiles/bundle/open-browser.vim/test/dummy.vim	/^let s:suite = themis#suite('open-browser')$/;"	v
s:suite.add_normal	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.add_normal() abort "{{{$/;"	f	signature:()
s:suite.add_normal	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.add_normal() abort$/;"	f	signature:()
s:suite.add_normal	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.add_normal() abort "{{{$/;"	f	signature:()
s:suite.add_ovewrite	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.add_ovewrite() abort "{{{$/;"	f	signature:()
s:suite.add_ovewrite	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.add_ovewrite() abort$/;"	f	signature:()
s:suite.add_ovewrite	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.add_ovewrite() abort "{{{$/;"	f	signature:()
s:suite.after_each	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.after_each() abort "{{{$/;"	f	signature:()
s:suite.after_each	./VIMPROJ/3rd/dein.vim/.dein/test/toml.vim	/^function! s:suite.after_each() abort$/;"	f	signature:()
s:suite.after_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.after_each() abort$/;"	f	signature:()
s:suite.after_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/toml.vim	/^function! s:suite.after_each() abort$/;"	f	signature:()
s:suite.after_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.after_each() abort "{{{$/;"	f	signature:()
s:suite.after_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/toml.vim	/^function! s:suite.after_each() abort$/;"	f	signature:()
s:suite.args2string	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install_base.vim	/^function! s:suite.args2string() abort$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/.dein/test/toml.vim	/^function! s:suite.before_each() abort$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.before_each() abort$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.before_each() abort$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.before_each() abort$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^function! s:suite.before_each() abort$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/toml.vim	/^function! s:suite.before_each() abort$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^function! s:suite.before_each() abort "{{{$/;"	f	signature:()
s:suite.before_each	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/toml.vim	/^function! s:suite.before_each() abort$/;"	f	signature:()
s:suite.begin_invalid	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.begin_invalid() abort "{{{$/;"	f	signature:()
s:suite.begin_invalid	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.begin_invalid() abort$/;"	f	signature:()
s:suite.begin_invalid	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.begin_invalid() abort "{{{$/;"	f	signature:()
s:suite.block_normal	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.block_normal() abort "{{{$/;"	f	signature:()
s:suite.block_normal	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.block_normal() abort$/;"	f	signature:()
s:suite.block_normal	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.block_normal() abort "{{{$/;"	f	signature:()
s:suite.build	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.build() abort "{{{$/;"	f	signature:()
s:suite.build	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.build() abort$/;"	f	signature:()
s:suite.build	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.build() abort "{{{$/;"	f	signature:()
s:suite.check_install	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.check_install() abort "{{{$/;"	f	signature:()
s:suite.check_install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.check_install() abort$/;"	f	signature:()
s:suite.check_install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.check_install() abort "{{{$/;"	f	signature:()
s:suite.clean	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.clean() abort "{{{$/;"	f	signature:()
s:suite.clean	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.clean() abort$/;"	f	signature:()
s:suite.clean	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.clean() abort "{{{$/;"	f	signature:()
s:suite.config	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.config() abort "{{{$/;"	f	signature:()
s:suite.config	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.config() abort$/;"	f	signature:()
s:suite.config	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.config() abort "{{{$/;"	f	signature:()
s:suite.copy_directories	./VIMPROJ/3rd/dein.vim/.dein/test/install_base.vim	/^function! s:suite.copy_directories() abort "{{{$/;"	f	signature:()
s:suite.copy_directories	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install_base.vim	/^function! s:suite.copy_directories() abort$/;"	f	signature:()
s:suite.copy_directories	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install_base.vim	/^function! s:suite.copy_directories() abort "{{{$/;"	f	signature:()
s:suite.depends	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.depends() abort "{{{$/;"	f	signature:()
s:suite.depends	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.depends() abort$/;"	f	signature:()
s:suite.depends	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.depends() abort "{{{$/;"	f	signature:()
s:suite.depends_error_lazy	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.depends_error_lazy() abort "{{{$/;"	f	signature:()
s:suite.depends_error_lazy	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.depends_error_lazy() abort$/;"	f	signature:()
s:suite.depends_error_lazy	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.depends_error_lazy() abort "{{{$/;"	f	signature:()
s:suite.depends_lazy	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.depends_lazy() abort "{{{$/;"	f	signature:()
s:suite.depends_lazy	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.depends_lazy() abort$/;"	f	signature:()
s:suite.depends_lazy	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.depends_lazy() abort "{{{$/;"	f	signature:()
s:suite.direct_install	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.direct_install() abort "{{{$/;"	f	signature:()
s:suite.direct_install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.direct_install() abort$/;"	f	signature:()
s:suite.direct_install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.direct_install() abort "{{{$/;"	f	signature:()
s:suite.disable	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.disable() abort "{{{$/;"	f	signature:()
s:suite.disable	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.disable() abort$/;"	f	signature:()
s:suite.disable	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.disable() abort "{{{$/;"	f	signature:()
s:suite.end_invalid	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.end_invalid() abort "{{{$/;"	f	signature:()
s:suite.end_invalid	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.end_invalid() abort$/;"	f	signature:()
s:suite.end_invalid	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.end_invalid() abort "{{{$/;"	f	signature:()
s:suite.error_toml	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.error_toml() abort "{{{$/;"	f	signature:()
s:suite.error_toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.error_toml() abort$/;"	f	signature:()
s:suite.error_toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.error_toml() abort "{{{$/;"	f	signature:()
s:suite.expand	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.expand() abort "{{{$/;"	f	signature:()
s:suite.expand	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.expand() abort$/;"	f	signature:()
s:suite.expand	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.expand() abort "{{{$/;"	f	signature:()
s:suite.fetch	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.fetch() abort "{{{$/;"	f	signature:()
s:suite.fetch	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.fetch() abort$/;"	f	signature:()
s:suite.fetch	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.fetch() abort "{{{$/;"	f	signature:()
s:suite.ftplugin	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.ftplugin() abort "{{{$/;"	f	signature:()
s:suite.ftplugin	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.ftplugin() abort$/;"	f	signature:()
s:suite.ftplugin	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.ftplugin() abort "{{{$/;"	f	signature:()
s:suite.get	./VIMPROJ/3rd/dein.vim/.dein/test/base.vim	/^function! s:suite.get() abort "{{{$/;"	f	signature:()
s:suite.get	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/base.vim	/^function! s:suite.get() abort$/;"	f	signature:()
s:suite.get	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/base.vim	/^function! s:suite.get() abort "{{{$/;"	f	signature:()
s:suite.hooks	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.hooks() abort "{{{$/;"	f	signature:()
s:suite.hooks	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.hooks() abort$/;"	f	signature:()
s:suite.hooks	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.hooks() abort "{{{$/;"	f	signature:()
s:suite.if	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.if() abort "{{{$/;"	f	signature:()
s:suite.if	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.if() abort$/;"	f	signature:()
s:suite.if	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.if() abort "{{{$/;"	f	signature:()
s:suite.init	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^function! s:suite.init() abort "{{{$/;"	f	signature:()
s:suite.init	./VIMPROJ/3rd/dein.vim/.dein/test/raw.vim	/^function! s:suite.init() abort "{{{$/;"	f	signature:()
s:suite.init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^function! s:suite.init() abort$/;"	f	signature:()
s:suite.init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/raw.vim	/^function! s:suite.init() abort$/;"	f	signature:()
s:suite.init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^function! s:suite.init() abort "{{{$/;"	f	signature:()
s:suite.init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/raw.vim	/^function! s:suite.init() abort "{{{$/;"	f	signature:()
s:suite.install	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.install() abort "{{{$/;"	f	signature:()
s:suite.install	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.install() abort$/;"	f	signature:()
s:suite.install	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.install() abort "{{{$/;"	f	signature:()
s:suite.lazy_manual	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_manual() abort "{{{$/;"	f	signature:()
s:suite.lazy_manual	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_manual() abort$/;"	f	signature:()
s:suite.lazy_manual	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_manual() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_cmd	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_cmd() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_cmd	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_cmd() abort$/;"	f	signature:()
s:suite.lazy_on_cmd	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_cmd() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_ft	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_ft() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_ft	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_ft() abort$/;"	f	signature:()
s:suite.lazy_on_ft	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_ft() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_func	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_func() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_func	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_func() abort$/;"	f	signature:()
s:suite.lazy_on_func	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_func() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_i	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_i() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_i	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_i() abort$/;"	f	signature:()
s:suite.lazy_on_i	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_i() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_idle	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_idle() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_idle	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_idle() abort$/;"	f	signature:()
s:suite.lazy_on_idle	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_idle() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_if	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_if() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_if	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_if() abort$/;"	f	signature:()
s:suite.lazy_on_if	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_if() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_map	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_map() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_map	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_map() abort$/;"	f	signature:()
s:suite.lazy_on_map	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_map() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_path	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_path() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_path	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_path() abort$/;"	f	signature:()
s:suite.lazy_on_path	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_path() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_pre_cmd	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_pre_cmd() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_pre_cmd	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_pre_cmd() abort$/;"	f	signature:()
s:suite.lazy_on_pre_cmd	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_pre_cmd() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_source	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.lazy_on_source() abort "{{{$/;"	f	signature:()
s:suite.lazy_on_source	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.lazy_on_source() abort$/;"	f	signature:()
s:suite.lazy_on_source	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.lazy_on_source() abort "{{{$/;"	f	signature:()
s:suite.load_dict	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.load_dict() abort "{{{$/;"	f	signature:()
s:suite.load_dict	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.load_dict() abort$/;"	f	signature:()
s:suite.load_dict	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.load_dict() abort "{{{$/;"	f	signature:()
s:suite.load_toml	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.load_toml() abort "{{{$/;"	f	signature:()
s:suite.load_toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.load_toml() abort$/;"	f	signature:()
s:suite.load_toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.load_toml() abort "{{{$/;"	f	signature:()
s:suite.local	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.local() abort "{{{$/;"	f	signature:()
s:suite.local	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.local() abort$/;"	f	signature:()
s:suite.local	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.local() abort "{{{$/;"	f	signature:()
s:suite.local_nongit	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.local_nongit() abort "{{{$/;"	f	signature:()
s:suite.local_nongit	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.local_nongit() abort$/;"	f	signature:()
s:suite.local_nongit	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.local_nongit() abort "{{{$/;"	f	signature:()
s:suite.name_conversion	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.name_conversion() abort "{{{$/;"	f	signature:()
s:suite.name_conversion	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.name_conversion() abort$/;"	f	signature:()
s:suite.name_conversion	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.name_conversion() abort "{{{$/;"	f	signature:()
s:suite.no_plugins	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.no_plugins() abort "{{{$/;"	f	signature:()
s:suite.no_plugins	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.no_plugins() abort$/;"	f	signature:()
s:suite.no_plugins	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.no_plugins() abort "{{{$/;"	f	signature:()
s:suite.no_repository	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.no_repository() abort "{{{$/;"	f	signature:()
s:suite.no_repository	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.no_repository() abort$/;"	f	signature:()
s:suite.no_repository	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.no_repository() abort "{{{$/;"	f	signature:()
s:suite.no_toml	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.no_toml() abort "{{{$/;"	f	signature:()
s:suite.no_toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.no_toml() abort$/;"	f	signature:()
s:suite.no_toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.no_toml() abort "{{{$/;"	f	signature:()
s:suite.normal	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.normal() abort "{{{$/;"	f	signature:()
s:suite.normal	./VIMPROJ/3rd/dein.vim/.dein/test/toml.vim	/^function! s:suite.normal() abort "{{{$/;"	f	signature:()
s:suite.normal	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.normal() abort$/;"	f	signature:()
s:suite.normal	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/toml.vim	/^function! s:suite.normal() abort$/;"	f	signature:()
s:suite.normal	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.normal() abort "{{{$/;"	f	signature:()
s:suite.normal	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/toml.vim	/^function! s:suite.normal() abort "{{{$/;"	f	signature:()
s:suite.parse_dict	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.parse_dict() abort "{{{$/;"	f	signature:()
s:suite.parse_dict	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.parse_dict() abort$/;"	f	signature:()
s:suite.parse_dict	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.parse_dict() abort "{{{$/;"	f	signature:()
s:suite.plugins2toml	./VIMPROJ/3rd/dein.vim/.dein/test/parse.vim	/^function! s:suite.plugins2toml() abort "{{{$/;"	f	signature:()
s:suite.plugins2toml	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.plugins2toml() abort$/;"	f	signature:()
s:suite.plugins2toml	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/parse.vim	/^function! s:suite.plugins2toml() abort "{{{$/;"	f	signature:()
s:suite.protocol	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^function! s:suite.protocol() abort "{{{$/;"	f	signature:()
s:suite.protocol	./VIMPROJ/3rd/dein.vim/.dein/test/raw.vim	/^function! s:suite.protocol() abort "{{{$/;"	f	signature:()
s:suite.protocol	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^function! s:suite.protocol() abort$/;"	f	signature:()
s:suite.protocol	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/raw.vim	/^function! s:suite.protocol() abort$/;"	f	signature:()
s:suite.protocol	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^function! s:suite.protocol() abort "{{{$/;"	f	signature:()
s:suite.protocol	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/raw.vim	/^function! s:suite.protocol() abort "{{{$/;"	f	signature:()
s:suite.reinstall	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.reinstall() abort "{{{$/;"	f	signature:()
s:suite.reinstall	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.reinstall() abort$/;"	f	signature:()
s:suite.reinstall	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.reinstall() abort "{{{$/;"	f	signature:()
s:suite.reload	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.reload() abort "{{{$/;"	f	signature:()
s:suite.reload	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.reload() abort$/;"	f	signature:()
s:suite.reload	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.reload() abort "{{{$/;"	f	signature:()
s:suite.rm	./VIMPROJ/3rd/dein.vim/.dein/test/install_base.vim	/^function! s:suite.rm() abort "{{{$/;"	f	signature:()
s:suite.rm	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install_base.vim	/^function! s:suite.rm() abort$/;"	f	signature:()
s:suite.rm	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install_base.vim	/^function! s:suite.rm() abort "{{{$/;"	f	signature:()
s:suite.rollback	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.rollback() abort "{{{$/;"	f	signature:()
s:suite.rollback	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.rollback() abort$/;"	f	signature:()
s:suite.rollback	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.rollback() abort "{{{$/;"	f	signature:()
s:suite.script_type	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.script_type() abort "{{{$/;"	f	signature:()
s:suite.script_type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.script_type() abort$/;"	f	signature:()
s:suite.script_type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.script_type() abort "{{{$/;"	f	signature:()
s:suite.state	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^function! s:suite.state() abort "{{{$/;"	f	signature:()
s:suite.state	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^function! s:suite.state() abort$/;"	f	signature:()
s:suite.state	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^function! s:suite.state() abort "{{{$/;"	f	signature:()
s:suite.state_error	./VIMPROJ/3rd/dein.vim/.dein/test/state.vim	/^function! s:suite.state_error() abort "{{{$/;"	f	signature:()
s:suite.state_error	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/state.vim	/^function! s:suite.state_error() abort$/;"	f	signature:()
s:suite.state_error	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/state.vim	/^function! s:suite.state_error() abort "{{{$/;"	f	signature:()
s:suite.tap	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.tap() abort "{{{$/;"	f	signature:()
s:suite.tap	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.tap() abort$/;"	f	signature:()
s:suite.tap	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.tap() abort "{{{$/;"	f	signature:()
s:suite.trusted	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/parse.vim	/^function! s:suite.trusted() abort$/;"	f	signature:()
s:suite.update	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^function! s:suite.update() abort "{{{$/;"	f	signature:()
s:suite.update	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^function! s:suite.update() abort$/;"	f	signature:()
s:suite.update	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^function! s:suite.update() abort "{{{$/;"	f	signature:()
s:summarize	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function s:summarize(opts, recur, mode_sequence)$/;"	f	signature:(opts,recur,mode_sequence)
s:supported	./vim82/syntax/debchangelog.vim	/^let s:supported = [$/;"	v
s:supported	./vim82/syntax/debsources.vim	/^let s:supported = [$/;"	v
s:supports_buffer_usages	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^let s:supports_buffer_usages = has('nvim') || exists('*prop_add')$/;"	v
s:sw	./vim82/indent/javascript.vim	/^  function s:sw()$/;"	f	signature:()
s:swap	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f	signature:(dict)
s:symbol	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^    let s:symbol = ' '$/;"	v
s:symbol	./vimfiles/bundle/python-mode/autoload/pymode/folding.vim	/^let s:symbol = matchstr(&fillchars, 'fold:\\zs.')  " handles multibyte characters$/;"	v
s:syn	./vim82/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f	signature:(lnum)
s:syn_blocks	./vim82/indent/hog.vim	/^let s:syn_blocks = '\\<SnortRuleTypeBody\\>'$/;"	v
s:syn_id_name	./vim82/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f	signature:()
s:syn_list	./vim82/autoload/sqlcomplete.vim	/^let s:syn_list              = []$/;"	v
s:syn_remove_words	./vim82/autoload/syntaxcomplete.vim	/^let s:syn_remove_words = 'matchgroup=,contains,'.$/;"	v
s:syn_remove_words	./vimfiles/autoload/syntaxcomplete.vim	/^let s:syn_remove_words = 'matchgroup=,contains,'.$/;"	v
s:syn_stack	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! s:syn_stack() abort$/;"	f	signature:()
s:syn_value	./vim82/autoload/sqlcomplete.vim	/^let s:syn_value             = []$/;"	v
s:sync	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:sync(plugin, context) abort "{{{$/;"	f	signature:(plugin,context)
s:sync	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:sync(plugin, context) abort$/;"	f	signature:(plugin,context)
s:sync	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:sync(plugin, context) abort "{{{$/;"	f	signature:(plugin,context)
s:syng_linecom	./vim82/indent/typescript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	./vim82/indent/typescript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	./vim82/indent/falcon.vim	/^let s:syng_strcom = '\\<falcon\\%(String\\|StringEscape\\|Comment\\)\\>'$/;"	v
s:syng_strcom	./vim82/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc + [$/;"	v
s:syng_strcom	./vim82/indent/typescript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	./vim82/indent/falcon.vim	/^let s:syng_string = '\\<falcon\\%(String\\|StringEscape\\)\\>'$/;"	v
s:syng_string	./vim82/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	./vim82/indent/typescript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_stringdoc	./vim82/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:synid	./vim82/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f	signature:()
s:syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:syntax()$/;"	f	signature:()
s:syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:syntax()$/;"	f	signature:()
s:syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/changes.vim	/^fu! s:syntax()$/;"	f	signature:()
s:syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/line.vim	/^fu! s:syntax()$/;"	f	signature:()
s:syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/quickfix.vim	/^fu! s:syntax()$/;"	f	signature:()
s:syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/tag.vim	/^fu! s:syntax()$/;"	f	signature:()
s:syntax	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^fu! s:syntax()$/;"	f	signature:()
s:syntax_keyword	./vim82/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f	signature:(dict)
s:system	./vim82/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f	signature:(pwd,cmd)
s:system	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^fu! s:system(str, ...)$/;"	f	signature:(str,...)
s:system	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^fu! s:system(str, ...)$/;"	f	signature:(str,...)
s:system	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Process.vim	/^function! s:system(str, ...) abort$/;"	f	signature:(str,...)
s:system	./vimfiles/bundle/previm/autoload/previm.vim	/^function! s:system(cmd) abort$/;"	f	signature:(cmd)
s:system_cd	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:system_cd(command, path) abort$/;"	f	signature:(command,path)
s:system_with_default	./vim82/ftplugin/changelog.vim	/^  function! s:system_with_default(command, default)$/;"	f	signature:(command,default)
s:szCurrentWorkingDir	./vimfiles/autoload/omni/cpp/complete.vim	/^let s:szCurrentWorkingDir = getcwd()$/;"	v
s:t	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:t = themis#suite('convert_to_content') "{{{$/;"	v
s:t	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:t = themis#suite('fetch_imgpath_elements') "{{{$/;"	v
s:t	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:t = themis#suite('refresh_css') "{{{$/;"	v
s:t	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^let s:t = themis#suite('relative_to_absolute') "{{{$/;"	v
s:t	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^let s:t = themis#suite('valid filetype for using :PrevimOpen')$/;"	v
s:t.after	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^function! s:t.after()$/;"	f	signature:()
s:t.before	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^function! s:t.before()$/;"	f	signature:()
s:t.custom_content_if_exists_file	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.custom_content_if_exists_file()$/;"	f	signature:()
s:t.default_content_if_invalid_setting	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.default_content_if_invalid_setting()$/;"	f	signature:()
s:t.default_content_if_not_exists_setting	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.default_content_if_not_exists_setting()$/;"	f	signature:()
s:t.empty_if_not_exists_file	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.empty_if_not_exists_file()$/;"	f	signature:()
s:t.empty_lines	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.empty_lines()$/;"	f	signature:()
s:t.exists_backslash	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.exists_backslash()$/;"	f	signature:()
s:t.exists_double_quotes	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.exists_double_quotes()$/;"	f	signature:()
s:t.get_alt_and_path	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.get_alt_and_path()$/;"	f	signature:()
s:t.get_alt_and_path_from_image_in_link	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.get_alt_and_path_from_image_in_link()$/;"	f	signature:()
s:t.get_title_from_double_quote	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.get_title_from_double_quote()$/;"	f	signature:()
s:t.get_title_from_single_quote	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.get_title_from_single_quote()$/;"	f	signature:()
s:t.invalid_filetype	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^function! s:t.invalid_filetype()$/;"	f	signature:()
s:t.not_exists_escaped	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.not_exists_escaped()$/;"	f	signature:()
s:t.not_only_img	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.not_only_img()$/;"	f	signature:()
s:t.nothing_when_absolute_by_file	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.nothing_when_absolute_by_file()$/;"	f	signature:()
s:t.nothing_when_absolute_by_http	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.nothing_when_absolute_by_http()$/;"	f	signature:()
s:t.nothing_when_absolute_by_https	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.nothing_when_absolute_by_https()$/;"	f	signature:()
s:t.nothing_when_empty	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.nothing_when_empty()$/;"	f	signature:()
s:t.nothing_when_not_href	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.nothing_when_not_href()$/;"	f	signature:()
s:t.nothing_when_not_img_statement	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.nothing_when_not_img_statement()$/;"	f	signature:()
s:t.replace_path_when_relative	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.replace_path_when_relative()$/;"	f	signature:()
s:t.setup	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.setup()$/;"	f	signature:()
s:t.teardown	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.teardown()$/;"	f	signature:()
s:t.urlencoded_path	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.urlencoded_path()$/;"	f	signature:()
s:t.valid_filetype	./vimfiles/bundle/previm/test/plugin/previm_test.vim	/^function! s:t.valid_filetype()$/;"	f	signature:()
s:t.with_title_from_double_quote	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.with_title_from_double_quote()$/;"	f	signature:()
s:t.with_title_from_single_quote	./vimfiles/bundle/previm/test/autoload/previm_test.vim	/^function! s:t.with_title_from_single_quote()$/;"	f	signature:()
s:t_funcref	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^let s:t_funcref = type(function('tr'))$/;"	v
s:t_list	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^let s:t_list = type([])$/;"	v
s:t_number	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^let s:t_number = type(0)$/;"	v
s:t_string	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein/System/Job.vim	/^let s:t_string = type('')$/;"	v
s:t_string	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Buffer.vim	/^let s:t_string = type('')$/;"	v
s:tabHelp	./vimfiles/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tabidx	./vim82/syntax/2html.vim	/^		  let s:tabidx = s:tabidx+1$/;"	v
s:tabidx	./vim82/syntax/2html.vim	/^	  let s:tabidx = 0$/;"	v
s:table_key_pattern	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^let s:table_key_pattern = s:table_name_pattern$/;"	v
s:table_key_pattern	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^let s:table_key_pattern = s:table_name_pattern$/;"	v
s:table_key_pattern	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^let s:table_key_pattern = s:table_name_pattern$/;"	v
s:table_name_pattern	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/toml.vim	/^let s:table_name_pattern = '\\%([^ [:tab:]#.[\\]=]\\+\\)'$/;"	v
s:table_name_pattern	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/toml.vim	/^let s:table_name_pattern = '\\%([^ [:tab:]#.[\\]=]\\+\\)'$/;"	v
s:table_name_pattern	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/toml.vim	/^let s:table_name_pattern = '\\%([^ [:tab:]#.[\\]=]\\+\\)'$/;"	v
s:tablist	./vim82/syntax/2html.vim	/^	    let s:tablist = [ &ts ]$/;"	v
s:tablist	./vim82/syntax/2html.vim	/^	  let s:tablist = split(&vts,',')$/;"	v
s:tabwidth	./vim82/syntax/2html.vim	/^		let s:tabwidth += s:tablist[s:tabidx]$/;"	v
s:tabwidth	./vim82/syntax/2html.vim	/^	  let s:tabwidth = 0$/;"	v
s:tag	./vim82/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag_close	./vim82/syntax/2html.vim	/^  let s:tag_close = ' \/>'$/;"	v
s:tag_close	./vim82/syntax/2html.vim	/^  let s:tag_close = '>'$/;"	v
s:tagmap	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^let s:tagmap = []$/;"	v
s:tagname	./vim82/indent/html.vim	/^let s:tagname = '\\w\\+\\(-\\w\\+\\)*'$/;"	v
s:tail	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:tail()$/;"	f	signature:()
s:taintopt	./vim82/compiler/perl.vim	/^	let s:taintopt = ''$/;"	v
s:taintopt	./vim82/compiler/perl.vim	/^	let s:taintopt = 'T'$/;"	v
s:take_while	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f	signature:(f,xs)
s:tbl_alias	./vim82/autoload/sqlcomplete.vim	/^let s:tbl_alias             = []$/;"	v
s:tbl_cols	./vim82/autoload/sqlcomplete.vim	/^let s:tbl_cols              = []$/;"	v
s:tbl_name	./vim82/autoload/sqlcomplete.vim	/^let s:tbl_name              = []$/;"	v
s:tclpath	./vim82/syntax/vim.vim	/^    let s:tclpath= fnameescape(s:tclpath)$/;"	v
s:tclpath	./vim82/syntax/vim.vim	/^ let s:tclpath= fnameescape(expand("<sfile>:p:h")."\/tcl.vim")$/;"	v
s:temp	./vim82/syntax/perl6.vim	/^    let s:temp = split(s:words_space)$/;"	v
s:temp	./vim82/syntax/perl6.vim	/^let s:temp = split(s:words_space)$/;"	v
s:template_extension	./vimfiles/bundle/marvim/autoload/marvim.vim	/^let s:template_extension = '.mvt'$/;"	v
s:tempname	./vim82/autoload/gzip.vim	/^fun s:tempname(name)$/;"	f	signature:(name)
s:terminated	./vim82/indent/php.vim	/^let s:terminated = '\\%(\\%(;\\%(\\s*\\%(?>\\|}\\)\\)\\=\\|<<<\\s*[''"]\\=\\a\\w*[''"]\\=$\\|^\\/;"	v
s:ternary	./vim82/indent/typescript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	./vim82/indent/typescript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:test	./vim82/ftplugin/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	./vim82/indent/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test	./vim82/syntax/fortran.vim	/^      let s:test = strpart(getline(s:ln),0,5)$/;"	v
s:test_regexp	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:test_regexp(regexp)$/;"	f	signature:(regexp)
s:texMathDelimList	./vim82/syntax/tex.vim	/^    let s:texMathDelimList= s:texMathDelimList + [$/;"	v
s:texMathDelimList	./vim82/syntax/tex.vim	/^  let s:texMathDelimList=[$/;"	v
s:texMathList	./vim82/syntax/tex.vim	/^    let s:texMathList= s:texMathList + [$/;"	v
s:texMathList	./vim82/syntax/tex.vim	/^  let s:texMathList=[$/;"	v
s:tex_comment_nospell	./vim82/syntax/tex.vim	/^ let s:tex_comment_nospell= 0$/;"	v
s:tex_comment_nospell	./vim82/syntax/tex.vim	/^ let s:tex_comment_nospell= 1$/;"	v
s:tex_conceal	./vim82/syntax/rhelp.vim	/^  let s:tex_conceal = 'gm'$/;"	v
s:tex_conceal	./vim82/syntax/rhelp.vim	/^  let s:tex_conceal = g:tex_conceal$/;"	v
s:tex_conceal	./vim82/syntax/tex.vim	/^ let s:tex_conceal= 'abdmgsS'$/;"	v
s:tex_conceal	./vim82/syntax/tex.vim	/^ let s:tex_conceal= g:tex_conceal$/;"	v
s:tex_excludematcher	./vim82/syntax/tex.vim	/^ let s:tex_excludematcher= 0$/;"	v
s:tex_excludematcher	./vim82/syntax/tex.vim	/^ let s:tex_excludematcher= g:tex_excludematcher$/;"	v
s:tex_fast	./vim82/syntax/tex.vim	/^  let s:tex_fast= ""$/;"	v
s:tex_fast	./vim82/syntax/tex.vim	/^  let s:tex_fast= g:tex_fast$/;"	v
s:tex_fast	./vim82/syntax/tex.vim	/^let s:tex_fast= "bcmMprsSvV"$/;"	v
s:tex_fold_enabled	./vim82/syntax/tex.vim	/^ let s:tex_fold_enabled= 0$/;"	v
s:tex_fold_enabled	./vim82/syntax/tex.vim	/^ let s:tex_fold_enabled= 1$/;"	v
s:tex_no_error	./vim82/syntax/tex.vim	/^ let s:tex_no_error= 0$/;"	v
s:tex_no_error	./vim82/syntax/tex.vim	/^ let s:tex_no_error= 1$/;"	v
s:tex_nospell	./vim82/syntax/tex.vim	/^ let s:tex_nospell = 0$/;"	v
s:tex_nospell	./vim82/syntax/tex.vim	/^ let s:tex_nospell = 1$/;"	v
s:tex_subscripts	./vim82/syntax/tex.vim	/^ let s:tex_subscripts= '[0-9aehijklmnoprstuvx,+-\/().]'$/;"	v
s:tex_subscripts	./vim82/syntax/tex.vim	/^ let s:tex_subscripts= g:tex_subscripts$/;"	v
s:tex_superscripts	./vim82/syntax/tex.vim	/^ let s:tex_superscripts= '[0-9a-zA-W.,:;+-<>\/()=]'$/;"	v
s:tex_superscripts	./vim82/syntax/tex.vim	/^ let s:tex_superscripts= g:tex_superscripts$/;"	v
s:text	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/undo.vim	/^let s:text = map(['second', 'seconds', 'minutes', 'hours', 'days', 'weeks',$/;"	v
s:text	./vimfiles/bundle/marvim/marvim.vim	/^let s:text = '.mvt' " template extension$/;"	v
s:textdialog	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:textdialog(str)$/;"	f	signature:(str)
s:this_script	./VIMPROJ/3rd/dein.vim/.dein/test/install.vim	/^let s:this_script = fnamemodify(expand('<sfile>'), ':p')$/;"	v
s:this_script	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/install.vim	/^let s:this_script = fnamemodify(expand('<sfile>'), ':p')$/;"	v
s:this_script	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/install.vim	/^let s:this_script = fnamemodify(expand('<sfile>'), ':p')$/;"	v
s:thiswin	./vim82/optwin.vim	/^let s:thiswin = winnr()$/;"	v
s:timerBegin	./vimfiles/plugin/l9.vim	/^  function s:timerBegin(tag)$/;"	f	signature:(tag)
s:timerData	./vimfiles/plugin/l9.vim	/^  let s:timerData = []$/;"	v
s:timerDump	./vimfiles/plugin/l9.vim	/^  function s:timerDump()$/;"	f	signature:()
s:timerStop	./vimfiles/plugin/l9.vim	/^  function s:timerStop()$/;"	f	signature:()
s:timerTagMaxLen	./vimfiles/plugin/l9.vim	/^  let s:timerTagMaxLen = 0$/;"	v
s:timer_handler	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^      function! s:timer_handler(timer) abort "{{{$/;"	f	signature:(timer)
s:timer_handler	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^      function! s:timer_handler(timer) abort "{{{$/;"	f	signature:(timer)
s:tlist_app_name	./vimfiles/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	./vimfiles/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	./vimfiles/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	./vimfiles/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	./vimfiles/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	./vimfiles/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	./vimfiles/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	./vimfiles/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	./vimfiles/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	./vimfiles/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	./vimfiles/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	./vimfiles/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	./vimfiles/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	./vimfiles/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	./vimfiles/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	./vimfiles/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	./vimfiles/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:toLowerForIgnoringCase	./vimfiles/autoload/fuf.vim	/^function s:toLowerForIgnoringCase(str)$/;"	f	signature:(str)
s:to_os_path	./vimfiles/bundle/marvim/autoload/marvim.vim	/^function! s:to_os_path(marvim_path)$/;"	f	signature:(marvim_path)
s:toend	./vim82/ftplugin/cobol.vim	/^function! s:toend(direction)$/;"	f	signature:(direction)
s:toggleIgnoreFilter	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f	signature:()
s:toggleShowBookmarks	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f	signature:()
s:toggleShowFiles	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f	signature:()
s:toggleShowHidden	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f	signature:()
s:toggleZoom	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f	signature:()
s:token_pattern	./vim82/indent/dtd.vim	/^let s:token_pattern = '^[^[:space:]]\\+'$/;"	v
s:topindent	./vim82/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f	signature:(lnum)
s:tp	./vim82/ftplugin/context.vim	/^  fun! s:tp()$/;"	f	signature:()
s:tp_regex	./vim82/ftplugin/context.vim	/^  let s:tp_regex = '?^$\\|^\\s*\\\\\\(item\\|start\\|stop\\|blank\\|\\%(sub\\)*section\\|chapter/;"	v
s:trace	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/autoignore.vim	/^function! s:trace(message) abort$/;"	f	signature:(message)
s:tree_up_dir_line	./vimfiles/bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:treedepthstring	./vim82/autoload/netrw.vim	/^ let s:treedepthstring= "| "$/;"	v
s:treedepthstring	./vim82/autoload/netrw.vim	/^ let s:treedepthstring= "│ "$/;"	v
s:trim	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:trim(str) abort$/;"	f	signature:(str)
s:trim	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:trim(str)$/;"	f	signature:(str)
s:trim_end	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f	signature:(str)
s:trim_start	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f	signature:(str)
s:trimmed_system_with_default	./vim82/ftplugin/changelog.vim	/^  function! s:trimmed_system_with_default(command, default)$/;"	f	signature:(command,default)
s:truncate	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f	signature:(str,width)
s:truncate	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f	signature:(str,width)
s:truncate	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f	signature:(str,width)
s:truncate_skipping	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort "{{{$/;"	f	signature:(str,max,footer_width,separator)
s:truncate_skipping	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f	signature:(str,max,footer_width,separator)
s:truncate_skipping	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort "{{{$/;"	f	signature:(str,max,footer_width,separator)
s:truncate_skipping	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f	signature:(str,max,footer_width,separator)
s:truncate_skipping	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f	signature:(str,max,footer_width,separator)
s:truncate_skipping	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f	signature:(str,max,footer_width,separator)
s:trust_user_indent	./vim82/indent/eiffel.vim	/^let s:trust_user_indent = '\\(+\\)\\(\\s*\\(--\\).*\\)\\=$'$/;"	v
s:try_reading_file	./vim82/ftplugin/changelog.vim	/^  function! s:try_reading_file(path)$/;"	f	signature:(path)
s:trytcl	./vim82/syntax/vim.vim	/^ let s:trytcl= (&shell !~ '\\<\\%(bash\\>\\|4[nN][tT]\\|\\<zsh\\)\\>\\%(\\.exe\\)\\=$')$/;"	v
s:trytcl	./vim82/syntax/vim.vim	/^ let s:trytcl= 1$/;"	v
s:tsort_impl	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/util.vim	/^function! s:tsort_impl(target, mark, sorted) abort "{{{$/;"	f	signature:(target,mark,sorted)
s:tsort_impl	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/util.vim	/^function! s:tsort_impl(target, mark, sorted) abort$/;"	f	signature:(target,mark,sorted)
s:tsort_impl	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/util.vim	/^function! s:tsort_impl(target, mark, sorted) abort "{{{$/;"	f	signature:(target,mark,sorted)
s:tutorfile	./vim82/tutor/tutor.vim	/^let s:tutorfile = "\/tutor\/tutor"$/;"	v
s:tutorxx	./vim82/tutor/tutor.vim	/^let s:tutorxx = $VIMRUNTIME . s:tutorfile . s:ext$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^let s:type = {$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/raw.vim	/^let s:type = {$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/.dein/test/git.vim	/^let s:type = dein#types#git#define()$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/.dein/test/raw.vim	/^let s:type = dein#types#raw#define()$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^let s:type = {$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/raw.vim	/^let s:type = {$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/git.vim	/^let s:type = dein#types#git#define()$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/test/raw.vim	/^let s:type = dein#types#raw#define()$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^let s:type = {$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/raw.vim	/^let s:type = {$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/git.vim	/^let s:type = dein#types#git#define()$/;"	v
s:type	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/test/raw.vim	/^let s:type = dein#types#raw#define()$/;"	v
s:type	./vim82/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:type	./vim82/indent/sml.vim	/^let s:type = '^\\s*\\%(let\\|type\\)\\>.*='$/;"	v
s:type.get_commit_date_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_commit_date_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_commit_date_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_commit_date_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_fetch_remote_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_fetch_remote_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_fetch_remote_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_fetch_remote_command(plugin) abort$/;"	f	signature:(plugin)
s:type.get_fetch_remote_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_fetch_remote_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_log_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_log_command(plugin, new_rev, old_rev) abort "{{{$/;"	f	signature:(plugin,new_rev,old_rev)
s:type.get_log_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_log_command(plugin, new_rev, old_rev) abort$/;"	f	signature:(plugin,new_rev,old_rev)
s:type.get_log_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_log_command(plugin, new_rev, old_rev) abort "{{{$/;"	f	signature:(plugin,new_rev,old_rev)
s:type.get_revision_lock_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_revision_lock_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_revision_lock_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_revision_lock_command(plugin) abort$/;"	f	signature:(plugin)
s:type.get_revision_lock_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_revision_lock_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_revision_number_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_revision_number_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_revision_number_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_revision_number_command(plugin) abort$/;"	f	signature:(plugin)
s:type.get_revision_number_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_revision_number_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_revision_pretty_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_revision_pretty_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_revision_pretty_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_revision_pretty_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_revision_remote_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_revision_remote_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_revision_remote_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_revision_remote_command(plugin) abort$/;"	f	signature:(plugin)
s:type.get_revision_remote_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_revision_remote_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_rollback_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_rollback_command(plugin, rev) abort "{{{$/;"	f	signature:(plugin,rev)
s:type.get_rollback_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_rollback_command(plugin, rev) abort$/;"	f	signature:(plugin,rev)
s:type.get_rollback_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_rollback_command(plugin, rev) abort "{{{$/;"	f	signature:(plugin,rev)
s:type.get_sync_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_sync_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_sync_command	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/raw.vim	/^function! s:type.get_sync_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_sync_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_sync_command(plugin) abort$/;"	f	signature:(plugin)
s:type.get_sync_command	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/raw.vim	/^function! s:type.get_sync_command(plugin) abort$/;"	f	signature:(plugin)
s:type.get_sync_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_sync_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_sync_command	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/raw.vim	/^function! s:type.get_sync_command(plugin) abort "{{{$/;"	f	signature:(plugin)
s:type.get_uri	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.get_uri(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:type.get_uri	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.get_uri(repo, options) abort$/;"	f	signature:(repo,options)
s:type.get_uri	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.get_uri(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:type.init	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/git.vim	/^function! s:type.init(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:type.init	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/types/raw.vim	/^function! s:type.init(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:type.init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/git.vim	/^function! s:type.init(repo, options) abort$/;"	f	signature:(repo,options)
s:type.init	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/types/raw.vim	/^function! s:type.init(repo, options) abort$/;"	f	signature:(repo,options)
s:type.init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/git.vim	/^function! s:type.init(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:type.init	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/types/raw.vim	/^function! s:type.init(repo, options) abort "{{{$/;"	f	signature:(repo,options)
s:typeSpecMatcher	./vim82/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:type_names	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^let s:type_names = {$/;"	v
s:types	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^let s:types = ['fil', 'buf', 'mru']$/;"	v
s:types	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^let s:types = {$/;"	v
s:types	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Type.vim	/^let s:types = {$/;"	v
s:types	./vimfiles/plugin/bufexplorer.vim	/^let s:types = {"fullname": ':p', "path": ':p:h', "relativename": ':~:.', "relativepath": ':~:.:h/;"	v
s:types	./vimfiles/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	./vimfiles/plugin/supertab.vim	/^  let s:types =$/;"	v
s:typeset	./vim82/autoload/context.vim	/^  function! s:typeset(path)$/;"	f	signature:(path)
s:undo_ftplugin	./vim82/ftplugin/ant.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/ant.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/aspvbs.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/aspvbs.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/config.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/config.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/hog.vim	/^let s:undo_ftplugin = "setl fo< com< cms< def< inc<"$/;"	v
s:undo_ftplugin	./vim82/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/jsp.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/jsp.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/php.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/php.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/sgml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/sgml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/svg.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/svg.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/tcsh.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/tcsh.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/xhtml.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/xhtml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	./vim82/ftplugin/xsd.vim	/^    let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	./vim82/ftplugin/xsd.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_spellang	./vim82/menu.vim	/^  let s:undo_spellang = ['aun &Tools.&Spelling.&Find\\ More\\ Languages']$/;"	v
s:unescape	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f	signature:(str,chars)
s:unescape_pattern	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f	signature:(str)
s:unformat_ocaml_type	./vim82/ftplugin/ocaml.vim	/^    function s:unformat_ocaml_type(res)$/;"	f	signature:(res)
s:unify_separator	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:unify_separator(path) abort$/;"	f	signature:(path)
s:uniq	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! s:uniq(list)$/;"	f	signature:(list)
s:uniq	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:uniq(list) abort$/;"	f	signature:(list)
s:uniq_by	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f	signature:(list,f)
s:unite_source	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:unite_source.action_table.expand.func	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate)$/;"	f	signature:(candidate)
s:unite_source.action_table.preview.func	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate)$/;"	f	signature:(candidate)
s:unite_source.gather_candidates	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context)$/;"	f	signature:(args,context)
s:unite_source.get_longest_snippet_len	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list)$/;"	f	signature:(snippet_list)
s:unite_source.hooks.on_syntax	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f	signature:(args,context)
s:unixpath	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:unixpath(path) abort$/;"	f	signature:(path)
s:unload	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:unload() abort dict$/;"	f	signature:()
s:unload	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:unload() abort dict$/;"	f	signature:()
s:unload	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:unload() abort dict$/;"	f	signature:()
s:unmarksigns	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:unmarksigns()$/;"	f	signature:()
s:unselInputType	./vim82/syntax/2html.vim	/^    let s:unselInputType = " type='invalid_input_type'"$/;"	v
s:unselInputType	./vim82/syntax/2html.vim	/^    let s:unselInputType = ""$/;"	v
s:unselectable_styles	./vim82/syntax/2html.vim	/^      let s:unselectable_styles = []$/;"	v
s:unset	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/Optional.vim	/^function! s:unset(o) abort$/;"	f	signature:(o)
s:unshift	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f	signature:(list,val)
s:unstated	./vim82/indent/php.vim	/^let s:unstated = '\\%(^\\s*'.s:blockstart.'.*)\\|\\%(\/\/.*\\)\\@<!\\<e'.'lse\\>\\)'.s:endline$/;"	v
s:unsupported	./vim82/syntax/debchangelog.vim	/^let s:unsupported = [$/;"	v
s:unsupported	./vim82/syntax/debsources.vim	/^let s:unsupported = [$/;"	v
s:upDirCurrentRootClosed	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f	signature:()
s:upDirCurrentRootOpen	./vimfiles/bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f	signature:()
s:updateBufTimes	./vimfiles/autoload/fuf/buffer.vim	/^function s:updateBufTimes()$/;"	f	signature:()
s:updateData	./vimfiles/autoload/fuf/mrufile.vim	/^function s:updateData()$/;"	f	signature:()
s:updateInfo	./vimfiles/autoload/fuf/mrucmd.vim	/^function s:updateInfo(cmd)$/;"	f	signature:(cmd)
s:update_lines	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:update_lines(todo)$/;"	f	signature:(todo)
s:update_loop	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:update_loop(context) abort$/;"	f	signature:(context)
s:updates_log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:updates_log(msg) abort "{{{$/;"	f	signature:(msg)
s:updates_log	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^let s:updates_log = []$/;"	v
s:updates_log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^function! s:updates_log(msg) abort$/;"	f	signature:(msg)
s:updates_log	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/dein/install.vim	/^let s:updates_log = []$/;"	v
s:updates_log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:updates_log(msg) abort "{{{$/;"	f	signature:(msg)
s:updates_log	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^let s:updates_log = []$/;"	v
s:urgency	./vim82/syntax/debchangelog.vim	/^let s:urgency='urgency=\\(low\\|medium\\|high\\|emergency\\|critical\\)\\( [^[:space:],][^,]*\\)/;"	v
s:usages_for_pending_buffers	./vimfiles/bundle/jedi-vim/autoload/jedi.vim	/^function! s:usages_for_pending_buffers() abort$/;"	f	signature:()
s:username	./vim82/ftplugin/changelog.vim	/^  function! s:username()$/;"	f	signature:()
s:uses_script	./vim82/syntax/2html.vim	/^let s:uses_script = s:settings.dynamic_folds || s:settings.line_ids$/;"	v
s:using_python3	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^let s:using_python3 = s:UsingPython3()$/;"	v
s:usrign	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:usrign(item, type)$/;"	f	signature:(item,type)
s:vacantdict	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:vacantdict(dict)$/;"	f	signature:(dict)
s:val	./vim82/indent/sml.vim	/^let s:val = '^\\s*\\(val\\|external\\)\\>.*:'$/;"	v
s:valid_regexp	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:valid_regexp(regexp)$/;"	f	signature:(regexp)
s:validate_options	./vimfiles/bundle/vim-easy-align/autoload/easy_align.vim	/^function! s:validate_options(opts)$/;"	f	signature:(opts)
s:validfile	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/buffertag.vim	/^fu! s:validfile(fname, ftype)$/;"	f	signature:(fname,ftype)
s:values	./vim82/autoload/csscomplete.vim	/^let s:values = split("all additive-symbols align-content align-items align-self animation animat/;"	v
s:var_stmt	./vim82/indent/typescript.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:variable	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:variable.restore	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f	signature:()
s:vcol	./vim82/syntax/2html.vim	/^	      let s:vcol = virtcol([s:lnum, s:startcol + s:idx + s:offset - len(s:prevc)])$/;"	v
s:version_file	./vim82/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:vim_system	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/nvim/autoload/gocomplete.vim	/^let s:vim_system = get(g:, 'gocomplete#system_function', 'system')$/;"	v
s:vim_system	./vimfiles/bundle/YouCompleteMe.vim/third_party/ycmd/third_party/go/src/github.com/mdempsky/gocode/vim/autoload/gocomplete.vim	/^let s:vim_system = get(g:, 'gocomplete#system_function', 'system')$/;"	v
s:vim_ver	./vimfiles/bundle/marvim/marvim.vim	/^let s:vim_ver = strpart(v:version,0,1) " get the major vim version number$/;"	v
s:vimproc_system	./VIMPROJ/3rd/dein.vim/.dein/autoload/dein/install.vim	/^function! s:vimproc_system(cmd) abort "{{{$/;"	f	signature:(cmd)
s:vimproc_system	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/dein/install.vim	/^function! s:vimproc_system(cmd) abort "{{{$/;"	f	signature:(cmd)
s:vimsyn_maxlines	./vim82/syntax/vim.vim	/^ let s:vimsyn_maxlines= 60$/;"	v
s:vimsyn_maxlines	./vim82/syntax/vim.vim	/^ let s:vimsyn_maxlines= g:vim_maxlines$/;"	v
s:vital_base_dir	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_files	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! s:vital_files() abort$/;"	f	signature:()
s:vital_files	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! s:vital_files() abort$/;"	f	signature:()
s:vital_files	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! s:vital_files() abort$/;"	f	signature:()
s:walker	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:walker(m, p, d)$/;"	f	signature:(m,p,d)
s:warn	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f	signature:(msg)
s:warnopt	./vim82/compiler/perl.vim	/^	let s:warnopt = 'W'$/;"	v
s:warnopt	./vim82/compiler/perl.vim	/^	let s:warnopt = 'w'$/;"	v
s:way	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  let s:way = 'prompt'$/;"	v
s:way	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^  let s:way = 'terminal'$/;"	v
s:wcswidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f	signature:(str)
s:wcswidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:wcswidth	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f	signature:(str)
s:wcswidth	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f	signature:(str)
s:whatterm	./vim82/syntax/2html.vim	/^  let s:whatterm = "cterm"$/;"	v
s:whatterm	./vim82/syntax/2html.vim	/^  let s:whatterm = "gui"$/;"	v
s:whatterm	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:whatterm = "cterm"$/;"	v
s:whatterm	./vimfiles/bundle/vimcdoc/devel/www/htdocs/2html.vim	/^  let s:whatterm = "gui"$/;"	v
s:when_no_matched_or_others	./vim82/ftplugin/sql.vim	/^let s:when_no_matched_or_others = '\\%(\\<when\\>\\%(\\s\\+\\%(\\%(\\<not\\>\\s\\+\\)\\?<matched/;"	v
s:which	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^  function! s:which(command, ...) abort$/;"	f	signature:(command,...)
s:which	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^  function! s:which(str) abort$/;"	f	signature:(str)
s:whichwrap	./vim82/syntax/hitest.vim	/^let s:whichwrap   = &whichwrap$/;"	v
s:whitespace	./vim82/syntax/2html.vim	/^  let s:whitespace = ""$/;"	v
s:whitespace	./vim82/syntax/2html.vim	/^  let s:whitespace = "white-space: pre-wrap; "$/;"	v
s:wig_cond	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/utils.vim	/^let s:wig_cond = v:version > 702 || ( v:version == 702 && has('patch051') )$/;"	v
s:win_getid	./vim82/autoload/context.vim	/^  function! s:win_getid()$/;"	f	signature:()
s:win_id2win	./vim82/autoload/context.vim	/^  function! s:win_id2win(winid)$/;"	f	signature:(winid)
s:win_id2win	./vim82/autoload/context.vim	/^  function! s:win_id2win(winnr)$/;"	f	signature:(winnr)
s:winbar_winids	./vim82/pack/dist/opt/termdebug/plugin/termdebug.vim	/^let s:winbar_winids = []$/;"	v
s:winpath	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^function! s:winpath(path) abort$/;"	f	signature:(path)
s:with_index	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f	signature:(list,...)
s:words	./vim82/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-/;"	v
s:words	./vim82/syntax/perl6.vim	/^    let s:words = join(s:temp, "\\\\|")$/;"	v
s:words	./vim82/syntax/perl6.vim	/^let s:words = join(s:temp, "\\\\|")$/;"	v
s:words_space	./vim82/syntax/perl6.vim	/^    let s:words_space = join(words, " ")$/;"	v
s:words_space	./vim82/syntax/perl6.vim	/^let s:words_space = join(s:routines, " ")$/;"	v
s:wrap	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f	signature:(str,...)
s:wrap_a	./vim82/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f	signature:(back,forward)
s:wrap_i	./vim82/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f	signature:(back,forward)
s:wrapscan	./vim82/syntax/hitest.vim	/^let s:wrapscan    = &wrapscan$/;"	v
s:writecache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp.vim	/^fu! s:writecache(cafile)$/;"	f	signature:(cafile)
s:writecache	./vimfiles/bundle/ctrlp.vim/autoload/ctrlp/bookmarkdir.vim	/^fu! s:writecache(lines)$/;"	f	signature:(lines)
s:wsh_cpo_save	./vim82/syntax/wsh.vim	/^let s:wsh_cpo_save = &cpo$/;"	v
s:xml_cpo_save	./vim82/syntax/xml.vim	/^let s:xml_cpo_save = &cpo$/;"	v
s:yankring	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^let s:yankring = []$/;"	v
s:yankring_var	./vimfiles/bundle/ctrlp-extensions.vim/autoload/ctrlp/yankring.vim	/^let s:yankring_var = {$/;"	v
s:z	./vim82/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
s:zflag	./vim82/indent/matlab.vim	/^let s:zflag = has('patch-7.4.984') ? 'z' : ''$/;"	v
s:zip	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:zip(...) abort$/;"	f	signature:(...)
s:zip_fill	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f	signature:(xs,ys,filler)
s:zipfile_escape	./vim82/autoload/zip.vim	/^let s:zipfile_escape = ' ?&;\\'$/;"	v
s\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> s	:call <SID>NetrwSortStyle(0)<cr>$/;"	m
s\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> s	:call <SID>NetrwSortStyle(1)<cr>$/;"	m
scala#ConditionalConfirm	./vim82/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f	signature:(msg)
scala#CountBrackets	./vim82/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f	signature:(line,openBracket,closedBracket)
scala#CountCurlies	./vim82/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f	signature:(line)
scala#CountParens	./vim82/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f	signature:(line)
scala#CurlyMatcher	./vim82/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f	signature:()
scala#GetLine	./vim82/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f	signature:(lnum)
scala#GetLineAndColumnThatMatchesBracket	./vim82/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f	signature:(openBracket,closedBracket)
scala#GetLineAndColumnThatMatchesCurly	./vim82/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f	signature:()
scala#GetLineAndColumnThatMatchesParen	./vim82/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f	signature:()
scala#GetLineThatMatchesBracket	./vim82/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f	signature:(openBracket,closedBracket)
scala#GetLineThatMatchesCurly	./vim82/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f	signature:()
scala#GetLineThatMatchesParen	./vim82/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f	signature:()
scala#GetPrevCodeLine	./vim82/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f	signature:(lnum)
scala#InvertBracketType	./vim82/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f	signature:(openBracket,closedBracket)
scala#IsParentCase	./vim82/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f	signature:()
scala#LineCompletesBrackets	./vim82/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f	signature:(openBracket,closedBracket)
scala#LineCompletesDefValr	./vim82/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f	signature:(lnum,line)
scala#LineCompletesIfElse	./vim82/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f	signature:(lnum,line)
scala#LineCompletesXML	./vim82/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f	signature:(lnum,line)
scala#LineEndsInIncomplete	./vim82/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f	signature:(line)
scala#LineIsAClosingXML	./vim82/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f	signature:(line)
scala#LineIsCompleteIf	./vim82/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f	signature:(line)
scala#MatchesIncompleteDefValr	./vim82/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f	signature:(line)
scala#NumberOfBraceGroups	./vim82/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f	signature:(line)
scala#SpecificLineCompletesBrackets	./vim82/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f	signature:(lnum,openBracket,closedBracket)
scala#Test	./vim82/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f	signature:(lnum,line,openBracket,closedBracket)
scala#Testhelper	./vim82/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f	signature:(lnum,line,openBracket,closedBracket,iteration)
script_dir	./vimfiles/bundle/jedi-vim/test/vimrc	/^let script_dir = fnamemodify(expand('<sfile>'), ':h:h')$/;"	v
sections	./vim82/ftplugin/eiffel.vim	/^  let sections = '^\\%(note\\|indexing\\|' .$/;"	v
sed_delimiter	./vim82/syntax/sed.vim	/^    let __sed_delimiter = escape(nr2char(__sed_i), __sed_metacharacters)$/;"	v
sed_i	./vim82/syntax/sed.vim	/^    let __sed_i = __sed_i + 1$/;"	v
sed_i	./vim82/syntax/sed.vim	/^let __sed_i = __sed_i + 1$/;"	v
sed_i	./vim82/syntax/sed.vim	/^let __sed_i = char2nr(" ") " ASCII: 32, EBCDIC: 64$/;"	v
sed_last	./vim82/syntax/sed.vim	/^    let __sed_last = 126$/;"	v
sed_last	./vim82/syntax/sed.vim	/^    let __sed_last = 255$/;"	v
sed_metacharacters	./vim82/syntax/sed.vim	/^let __sed_metacharacters = '$*.\\^[~'$/;"	v
self.get_completions	./vim82/autoload/rubycomplete.vim	/^  def self.get_completions(base)$/;"	f	signature:(base)
self.preload_rails	./vim82/autoload/rubycomplete.vim	/^  def self.preload_rails$/;"	f
snipMate#expandSnip	./vimfiles/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f	signature:(snip,col)
snipMate#jumpTabStop	./vimfiles/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f	signature:(backwards)
snipMateAutocmds	./vimfiles/autoload/snipMate.vim	/^		aug snipMateAutocmds$/;"	a
snippets_dir	./vimfiles/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
snippets_dir	./vimfiles/plugin/snipMate.vim	/^	let snippets_dir = substitute(snippets_dir, "\\\\", '\/', 'g')$/;"	v
spellfile#GetDirChoices	./vim82/autoload/spellfile.vim	/^function! spellfile#GetDirChoices()$/;"	f	signature:()
spellfile#LoadFile	./vim82/autoload/spellfile.vim	/^function! spellfile#LoadFile(lang)$/;"	f	signature:(lang)
spellfile#Nread	./vim82/autoload/spellfile.vim	/^function! spellfile#Nread(fname)$/;"	f	signature:(fname)
spellfile#WritableSpellDir	./vim82/autoload/spellfile.vim	/^function! spellfile#WritableSpellDir()$/;"	f	signature:()
spellmenu	./vim82/menu.vim	/^    augroup spellmenu$/;"	a
sqlcomplete#Complete	./vim82/autoload/sqlcomplete.vim	/^function! sqlcomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
sqlcomplete#DrillIntoTable	./vim82/autoload/sqlcomplete.vim	/^function! sqlcomplete#DrillIntoTable()$/;"	f	signature:()
sqlcomplete#DrillOutOfColumns	./vim82/autoload/sqlcomplete.vim	/^function! sqlcomplete#DrillOutOfColumns()$/;"	f	signature:()
sqlcomplete#Map	./vim82/autoload/sqlcomplete.vim	/^function! sqlcomplete#Map(type)$/;"	f	signature:(type)
sqlcomplete#PreCacheSyntax	./vim82/autoload/sqlcomplete.vim	/^function! sqlcomplete#PreCacheSyntax(...)$/;"	f	signature:(...)
sqlcomplete#ResetCacheSyntax	./vim82/autoload/sqlcomplete.vim	/^function! sqlcomplete#ResetCacheSyntax(...)$/;"	f	signature:(...)
suflist	./vim82/syntax/netrw.vim	/^  let suflist= escape(substitute(suflist," ",'\\\\|','g'),'.~')$/;"	v
suflist	./vim82/syntax/netrw.vim	/^  let suflist= join(split(&suffixes,','))$/;"	v
supertab_close_preview	./vimfiles/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
supertab_reset	./vimfiles/plugin/supertab.vim	/^  augroup supertab_reset$/;"	a
supertab_retain	./vimfiles/plugin/supertab.vim	/^    augroup supertab_retain$/;"	a
suppress_doxygen	./vim82/syntax/doxygen.vim	/^let suppress_doxygen=1$/;"	v
syntax_manual	./vim82/syntax/manual.vim	/^let syntax_manual = 1$/;"	v
syntax_on	./vim82/syntax/synload.vim	/^let syntax_on = 1$/;"	v
syntaxcomplete#Complete	./vim82/autoload/syntaxcomplete.vim	/^function! syntaxcomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
syntaxcomplete#Complete	./vimfiles/autoload/syntaxcomplete.vim	/^function! syntaxcomplete#Complete(findstart, base)$/;"	f	signature:(findstart,base)
syntaxcomplete#OmniSyntaxList	./vim82/autoload/syntaxcomplete.vim	/^function! syntaxcomplete#OmniSyntaxList(...)$/;"	f	signature:(...)
syntaxcomplete#OmniSyntaxList	./vimfiles/autoload/syntaxcomplete.vim	/^function! syntaxcomplete#OmniSyntaxList(...)$/;"	f	signature:(...)
syntaxset	./vim82/syntax/manual.vim	/^augroup syntaxset$/;"	a
syntaxset	./vim82/syntax/nosyntax.vim	/^augroup syntaxset$/;"	a
syntaxset	./vim82/syntax/syntax.vim	/^augroup syntaxset$/;"	a
t	./vim82/macros/hanoi/hanoi.vim	/^map t 7$/;"	m
t	./vim82/macros/hanoi/hanoi.vim	/^map! t 7$/;"	m
t	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap t y$/;"	m
t	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> t             :call <SID>BESelectBuffer("tab")<cr>$/;"	m
t	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> t$/;"	m
t	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> t$/;"	m
t\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> t	:call <SID>NetrwSplit(1)<cr>$/;"	m
t\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> t	:call <SID>NetrwSplit(4)<cr>$/;"	m
tads_minlines	./vim82/syntax/tads.vim	/^  let tads_minlines = 15$/;"	v
tads_sync_dist	./vim82/syntax/tads.vim	/^  let tads_sync_dist = 100$/;"	v
tar	./vim82/plugin/tarPlugin.vim	/^augroup tar$/;"	a
tar#Browse	./vim82/autoload/tar.vim	/^fun! tar#Browse(tarfile)$/;"	f	signature:(tarfile)
tar#Diff	./vim82/autoload/tar.vim	/^fun! tar#Diff(userfname,fname)$/;"	f	signature:(userfname,fname)
tar#Extract	./vim82/autoload/tar.vim	/^fun! tar#Extract()$/;"	f	signature:()
tar#Read	./vim82/autoload/tar.vim	/^fun! tar#Read(fname,mode)$/;"	f	signature:(fname,mode)
tar#Vimuntar	./vim82/autoload/tar.vim	/^fun! tar#Vimuntar(...)$/;"	f	signature:(...)
tar#Write	./vim82/autoload/tar.vim	/^fun! tar#Write(fname)$/;"	f	signature:(fname)
template	./vimfiles/bundle/vmustache/tests/test004_sections.vim	/^let template = vmustache#Parse(tokens)$/;"	v
template	./vimfiles/bundle/vmustache/tests/test010_parse_negative_section.vim	/^let template = vmustache#Parse(tokens)$/;"	v
template	./vimfiles/bundle/vmustache/tests/test011_render_negative_section.vim	/^let template = vmustache#Parse(tokens)$/;"	v
template	./vimfiles/bundle/vmustache/tests/test012_bug_render_list_empty.vim	/^let template = vmustache#Parse(tokens)$/;"	v
template	./vimfiles/bundle/vmustache/tests/test013_func_tag.vim	/^let template = vmustache#Parse(tokens)$/;"	v
template	./vimfiles/bundle/vmustache/tests/test014_counter.vim	/^let template = vmustache#Parse(tokens)$/;"	v
template	./vimfiles/bundle/vmustache/tests/test015_complex_snipmate.vim	/^let template = vmustache#Parse(tokens)$/;"	v
text	./vimfiles/bundle/vmustache/tests/test001_tokenize.vim	/^let text = join(readfile("test001_tokenize.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test002_parse.vim	/^let text = join(readfile("test002_parse.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test003_render.vim	/^let text = join(readfile("test003_render.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test004_sections.vim	/^let text = join(readfile("test004_sections.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test006_render_string.vim	/^let text = join(readfile("test004_sections.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test007_whitespace_last_token.vim	/^let text = join(readfile("test007_whitespace_last_token.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test008_block_variable_false.vim	/^let text = join(readfile("test008_block_variable_false.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test009_tokenize_negative_section.vim	/^let text = join(readfile("test009_tokenize_negative_section.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test010_parse_negative_section.vim	/^let text = join(readfile("test010_parse_negative_section.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test011_render_negative_section.vim	/^let text = join(readfile("test011_render_negative_section.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test012_bug_render_list_empty.vim	/^let text = join(readfile("test012_bug_render_list_empty.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test013_func_tag.vim	/^let text = join(readfile("test013_func_tag.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test014_counter.vim	/^let text = join(readfile("test014_counter.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test015_complex_snipmate.vim	/^let text = join(readfile("test015_complex_snipmate.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test016_block_variable_empty.vim	/^let text = join(readfile("test016_block_variable_empty.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test017_variable_in_block_condition.vim	/^let text = join(readfile("test017_variable_in_block_condition.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test018_buffer_local_view_model.vim	/^let text = join(readfile("test018_buffer_local_view_model.in"), "\\n")$/;"	v
text	./vimfiles/bundle/vmustache/tests/test019_view_model_overriding.vim	/^let text = join(readfile("test019_view_model_overriding.in"), "\\n")$/;"	v
tohtml#CharsetFromEncoding	./vim82/autoload/tohtml.vim	/^function! tohtml#CharsetFromEncoding(settings) "{{{$/;"	f	signature:(settings)
tohtml#Convert2HTML	./vim82/autoload/tohtml.vim	/^func! tohtml#Convert2HTML(line1, line2) "{{{$/;"	f	signature:(line1,line2)
tohtml#Diff2HTML	./vim82/autoload/tohtml.vim	/^func! tohtml#Diff2HTML(win_list, buf_list) "{{{$/;"	f	signature:(win_list,buf_list)
tohtml#EncodingFromCharset	./vim82/autoload/tohtml.vim	/^function! tohtml#EncodingFromCharset(encoding) "{{{$/;"	f	signature:(encoding)
tohtml#GetOption	./vim82/autoload/tohtml.vim	/^func! tohtml#GetOption(settings, option, default) "{{{$/;"	f	signature:(settings,option,default)
tohtml#GetUserSettings	./vim82/autoload/tohtml.vim	/^func! tohtml#GetUserSettings() "{{{$/;"	f	signature:()
tokens	./vimfiles/bundle/vmustache/tests/test003_render.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test004_sections.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test007_whitespace_last_token.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test008_block_variable_false.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test009_tokenize_negative_section.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test010_parse_negative_section.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test011_render_negative_section.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test012_bug_render_list_empty.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test013_func_tag.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test014_counter.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test015_complex_snipmate.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test016_block_variable_empty.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tokens	./vimfiles/bundle/vmustache/tests/test017_variable_in_block_condition.vim	/^let tokens = vmustache#Tokenize(text)$/;"	v
tp	./vim82/ftplugin/context.vim	/^  onoremap <silent><buffer> tp :<c-u>call <sid>tp()<cr>$/;"	m
tp	./vim82/ftplugin/context.vim	/^  vnoremap <silent><buffer> tp <esc>:<c-u>call <sid>tp()<cr>$/;"	m
ts	./VIMPROJ/vimrc/_vimrc	/^nmap ts :tab split<CR>$/;"	m
typescript_props	./vim82/syntax/typescriptcommon.vim	/^  let typescript_props = 1$/;"	v
u	./vim82/macros/less.vim	/^noremap <script> u <C-U><SID>L$/;"	m
u	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap u g$/;"	m
u	./vimfiles/plugin/bufexplorer.vim	/^  nnoremap <buffer> <silent> u             :call <SID>BEToggleShowUnlisted()<cr>$/;"	m
u	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> u$/;"	m
u	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> u :call <SID>Tlist_Window_Update_File()<CR>$/;"	m
u\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> u	:<c-u>call <SID>NetrwBookHistHandler(4,b:netrw_curdir)</;"	m
u\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> u	:<c-u>call <SID>NetrwBookHistHandler(4,expand("%"))<cr>$/;"	m
uc_minlines	./vim82/syntax/uc.vim	/^  let uc_minlines = 10$/;"	v
ultisnips_snippets	./vimfiles/bundle/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
unite#kinds#dein#define	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/kinds/dein.vim	/^function! unite#kinds#dein#define() abort "{{{$/;"	f	signature:()
unite#kinds#dein#define	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/kinds/dein.vim	/^function! unite#kinds#dein#define() abort$/;"	f	signature:()
unite#kinds#dein#define	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/kinds/dein.vim	/^function! unite#kinds#dein#define() abort "{{{$/;"	f	signature:()
unite#sources#dein#define	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein.vim	/^function! unite#sources#dein#define() abort "{{{$/;"	f	signature:()
unite#sources#dein#define	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein.vim	/^function! unite#sources#dein#define() abort$/;"	f	signature:()
unite#sources#dein#define	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein.vim	/^function! unite#sources#dein#define() abort "{{{$/;"	f	signature:()
unite#sources#dein_log#define	./VIMPROJ/3rd/dein.vim/.dein/autoload/unite/sources/dein_log.vim	/^function! unite#sources#dein_log#define() abort "{{{$/;"	f	signature:()
unite#sources#dein_log#define	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/unite/sources/dein_log.vim	/^function! unite#sources#dein_log#define() abort$/;"	f	signature:()
unite#sources#dein_log#define	./VIMPROJ/3rd/dein.vim/temp/6712/20180510230123/autoload/unite/sources/dein_log.vim	/^function! unite#sources#dein_log#define() abort "{{{$/;"	f	signature:()
unite#sources#ultisnips#define	./vimfiles/bundle/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define()$/;"	f	signature:()
unload	./vim82/optwin.vim	/^fun! <SID>unload()$/;"	f	signature:()
use_mutt_sidebar	./vim82/syntax/muttrc.vim	/^  let use_mutt_sidebar=0$/;"	v
v	./vim82/macros/less.vim	/^map v :silent call <SID>End()<CR>$/;"	m
v	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap v k$/;"	m
v	./vimfiles/autoload/DrawIt.vim	/^  nmap <silent> v          :set lz<CR>:silent! call <SID>DrawSpace('v',4)<CR>:set nolz<CR>$/;"	m
v\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> v	:call <SID>NetrwSplit(2)<cr>$/;"	m
v\t:call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> v	:call <SID>NetrwSplit(5)<cr>$/;"	m
vera_comment_strings	./vim82/syntax/vera.vim	/^let vera_comment_strings = 1$/;"	v
vimStartup	./vim82/defaults.vim	/^  augroup vimStartup$/;"	a
vimball#Decompress	./vim82/autoload/vimball.vim	/^fun! vimball#Decompress(fname,...)$/;"	f	signature:(fname,...)
vimball#MkVimball	./vim82/autoload/vimball.vim	/^fun! vimball#MkVimball(line1,line2,writelevel,...) range$/;"	f	signature:(line1,line2,writelevel,...)
vimball#RestoreSettings	./vim82/autoload/vimball.vim	/^fun! vimball#RestoreSettings()$/;"	f	signature:()
vimball#RmVimball	./vim82/autoload/vimball.vim	/^fun! vimball#RmVimball(...)$/;"	f	signature:(...)
vimball#SaveSettings	./vim82/autoload/vimball.vim	/^fun! vimball#SaveSettings()$/;"	f	signature:()
vimball#ShowMesg	./vim82/autoload/vimball.vim	/^fun! vimball#ShowMesg(level,msg)$/;"	f	signature:(level,msg)
vimball#Vimball	./vim82/autoload/vimball.vim	/^fun! vimball#Vimball(really,...)$/;"	f	signature:(really,...)
vimball#VimballHome	./vim82/autoload/vimball.vim	/^fun! vimball#VimballHome()$/;"	f	signature:()
vimproj#init	./vimfiles/bundle/tinytool.chiyl.vim/autoload/vimproj.vim	/^fu! vimproj#init()$/;"	f	signature:()
vimproj#jump_to_cmd	./vimfiles/bundle/tinytool.chiyl.vim/autoload/vimproj.vim	/^fu! vimproj#jump_to_cmd()$/;"	f	signature:()
vimproj#jump_to_function	./vimfiles/bundle/tinytool.chiyl.vim/autoload/vimproj.vim	/^fu! vimproj#jump_to_function()$/;"	f	signature:()
vimrcEx	./vim82/vimrc_example.vim	/^augroup vimrcEx$/;"	a
visincr#VisBlockIncr	./vimfiles/autoload/visincr.vim	/^fun! visincr#VisBlockIncr(method,...)$/;"	f	signature:(method,...)
vital#	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/_dein.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	./VIMPROJ/3rd/dein.vim/repos/github.com/Shougo/dein.vim/autoload/vital/dein.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	./vimfiles/bundle/open-browser.vim/autoload/vital/_openbrowser.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	./vimfiles/bundle/open-browser.vim/autoload/vital/openbrowser.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	./vimfiles/bundle/previm/autoload/vital/_previm.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	./vimfiles/bundle/previm/autoload/vital/previm.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_previm#Prelude#import	./vimfiles/bundle/previm/autoload/vital/_previm/Prelude.vim	/^  function! vital#_previm#Prelude#import() abort$/;"	f	signature:()
vital#_previm#System#File#import	./vimfiles/bundle/previm/autoload/vital/_previm/System/File.vim	/^  function! vital#_previm#System#File#import() abort$/;"	f	signature:()
vital#_previm#System#Filepath#import	./vimfiles/bundle/previm/autoload/vital/_previm/System/Filepath.vim	/^  function! vital#_previm#System#Filepath#import() abort$/;"	f	signature:()
vital#of	./vimfiles/bundle/previm/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f	signature:(name)
vmustache#DumpTemplate	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#DumpTemplate(template)$/;"	f	signature:(template)
vmustache#DumpTokens	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#DumpTokens(tokens)$/;"	f	signature:(tokens)
vmustache#IncrementCounter	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#IncrementCounter(name)$/;"	f	signature:(name)
vmustache#InitCounter	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#InitCounter(name, ...)$/;"	f	signature:(name,...)
vmustache#MergeData	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#MergeData(data)$/;"	f	signature:(data)
vmustache#Parse	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#Parse(tokens)$/;"	f	signature:(tokens)
vmustache#Render	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#Render(node, data)$/;"	f	signature:(node,data)
vmustache#RenderFile	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#RenderFile(file, data)$/;"	f	signature:(file,data)
vmustache#RenderString	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#RenderString(text, data)$/;"	f	signature:(text,data)
vmustache#Tokenize	./vimfiles/bundle/vmustache/autoload/vmustache.vim	/^func! vmustache#Tokenize(text)$/;"	f	signature:(text)
w	./vim82/macros/less.vim	/^map w b$/;"	m
w	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap w ,$/;"	m
widget_attributes	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let widget_attributes = {$/;"	v
widget_role	./vimfiles/bundle/html5.vim/autoload/xml/aria.vim	/^let widget_role = [$/;"	v
widget_role	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'grid/;"	v
winids	./vim82/optwin.vim	/^  let winids = win_findbuf(buf)$/;"	v
word	./vim82/spell/fixdup.vim	/^  let word = getline(lnum)$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^      let wrapperfunc_lines[-1] .= ' " . "data-" . l:style_name . "-content=\\"".a:text."\\"'$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^      let wrapperfunc_lines[-1] .=$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^    let wrapperfunc_lines += [ '  endif' ]$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^    let wrapperfunc_lines += [$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^    let wrapperfunc_lines = [$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^    let wrapperfunc_lines[-1] .= '<\/span>"'$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^    let wrapperfunc_lines[-1] .= '>'$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^  let wrapperfunc_lines += [$/;"	v
wrapperfunc_lines	./vim82/syntax/2html.vim	/^  let wrapperfunc_lines = [$/;"	v
x	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap x q$/;"	m
x	./vimfiles/plugin/taglist.vim	/^    inoremap <buffer> <silent> x    <C-o>:call <SID>Tlist_Window_Zoom()<CR>$/;"	m
x	./vimfiles/plugin/taglist.vim	/^    nnoremap <buffer> <silent> x :call <SID>Tlist_Window_Zoom()<CR>$/;"	m
x\t	./vim82/autoload/tar.vim	/^  noremap <silent> <buffer>	x	 	:call tar#Extract()<cr>       $/;"	m
x\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> x	:<c-u>call netrw#BrowseX(<SID>NetrwBrowseChgDir(0,<SID>/;"	m
x\t:<c-u>call	./vim82/autoload/netrw.vim	/^   nnoremap <buffer> <silent> <nowait> x	:<c-u>call netrw#BrowseX(<SID>NetrwBrowseChgDir(1,<SID>/;"	m
x\t\t:call	./vim82/autoload/zip.vim	/^  noremap <silent> <buffer>	x		:call zip#Extract()<cr>$/;"	m
xml_attributes	./vimfiles/bundle/html5.vim/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': /;"	v
xmlcomplete#CompleteTags	./vim82/autoload/xmlcomplete.vim	/^function! xmlcomplete#CompleteTags(findstart, base)$/;"	f	signature:(findstart,base)
xmlcomplete#CreateConnection	./vim82/autoload/xmlcomplete.vim	/^function! xmlcomplete#CreateConnection(canonical, ...) " {{{$/;"	f	signature:(canonical,...)
xmlcomplete#CreateEntConnection	./vim82/autoload/xmlcomplete.vim	/^function! xmlcomplete#CreateEntConnection(...) " {{{$/;"	f	signature:(...)
xmlcomplete#GetLastOpenTag	./vim82/autoload/xmlcomplete.vim	/^function! xmlcomplete#GetLastOpenTag(unaryTagsStack)$/;"	f	signature:(unaryTagsStack)
xmlformat#Format	./vim82/autoload/xmlformat.vim	/^func! xmlformat#Format() abort$/;"	f	signature:()
y	./vim82/macros/less.vim	/^map y k$/;"	m
y	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap y f$/;"	m
yankring#collect	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! yankring#collect()$/;"	f	signature:()
yankring#hook#highlight_last_yank	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring/hook.vim	/^function! yankring#hook#highlight_last_yank()$/;"	f	signature:()
yankring#list	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! yankring#list()$/;"	f	signature:()
yankring#scope	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! yankring#scope()  "{{{$/;"	f	signature:()
yankring#sid	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! yankring#sid()  "{{{$/;"	f	signature:()
yankring#store	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring.vim	/^function! yankring#store()$/;"	f	signature:()
yankring_clearmatches	./vimfiles/bundle/ctrlp-extensions.vim/autoload/yankring/hook.vim	/^  augroup yankring_clearmatches$/;"	a
ycmcompletemecursormove	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  augroup ycmcompletemecursormove$/;"	a
youcompleteme	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^  augroup youcompleteme$/;"	a
youcompleteme#CompleteFunc	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#CompleteFunc( findstart, base )$/;"	f	signature:( findstart,base )
youcompleteme#DisableCursorMovedAutocommands	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#DisableCursorMovedAutocommands()$/;"	f	signature:()
youcompleteme#Enable	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#Enable()$/;"	f	signature:()
youcompleteme#EnableCursorMovedAutocommands	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#EnableCursorMovedAutocommands()$/;"	f	signature:()
youcompleteme#GetErrorCount	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#GetErrorCount()$/;"	f	signature:()
youcompleteme#GetWarningCount	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#GetWarningCount()$/;"	f	signature:()
youcompleteme#LogsComplete	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#LogsComplete( arglead, cmdline, cursorpos )$/;"	f	signature:( arglead,cmdline,cursorpos )
youcompleteme#OpenGoToList	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#OpenGoToList()$/;"	f	signature:()
youcompleteme#ServerPid	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#ServerPid()$/;"	f	signature:()
youcompleteme#SubCommandsComplete	./vimfiles/bundle/YouCompleteMe.vim/autoload/youcompleteme.vim	/^function! youcompleteme#SubCommandsComplete( arglead, cmdline, cursorpos )$/;"	f	signature:( arglead,cmdline,cursorpos )
youcompletemeStart	./vimfiles/bundle/YouCompleteMe.vim/plugin/youcompleteme.vim	/^  augroup youcompletemeStart$/;"	a
z	./vim82/macros/less.vim	/^  map z <Space>$/;"	m
z	./vim82/macros/life/life.vim	/^map z ,^,&,*,&<1,*<2$/;"	m
z	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap z ;$/;"	m
zip	./vim82/plugin/zipPlugin.vim	/^augroup zip$/;"	a
zip#Browse	./vim82/autoload/zip.vim	/^fun! zip#Browse(zipfile)$/;"	f	signature:(zipfile)
zip#Extract	./vim82/autoload/zip.vim	/^fun! zip#Extract()$/;"	f	signature:()
zip#Read	./vim82/autoload/zip.vim	/^fun! zip#Read(fname,mode)$/;"	f	signature:(fname,mode)
zip#Write	./vim82/autoload/zip.vim	/^fun! zip#Write(fname)$/;"	f	signature:(fname)
{	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap { ?$/;"	m
}	./vim82/pack/dist/opt/dvorak/dvorak/enable.vim	/^inoremap } +$/;"	m
の	./vim82/keymap/kana.vim	/^no の$/;"	m
